{
    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/comments/352307638",
    "pull_request_review_id": 324911182,
    "id": 352307638,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjMwNzYzOA==",
    "diff_hunk": "@@ -172,6 +172,7 @@ There are three types of ECIP:\n   - **Interface** - improvements around client [API/RPC] specifications and standards, and also certain language-level standards like method names  and contract ABIs.\n   - **ECBP (Ethereum Classic Best Practice)** - application-level standards and conventions, including contract standards such as token standards, name registries, URI schemes, library/package formats, and wallet formats.\n - A **Meta ECIP** describes a **process** surrounding Ethereum Classic or proposes a change to (or an event in) a process. Process ECIPs are like Standard Track ECIPs, but apply to areas other than the Ethereum Classic protocol itself. They may propose an implementation, but not to Ethereum Classic's codebase; they often require community consensus; unlike Informational ECIPs, they are more than recommendations, and users are typically not free to ignore them. Examples include procedures, guidelines, changes to the decision-making process (e.g. this ECIP-1000 process document), and changes to the tools or environment used in Ethereum Classic development. *Any meta-ECIP is also considered a Process ECIP.*\n+- A **Fork ECIP** describes a feature set and a block activation number for those features to become active on one or more blockchains.",
    "path": "_specs/ecip-1000.md",
    "position": null,
    "original_position": 22,
    "commit_id": "a4c7dd1ec7a87705ba9af9ee0153b252c0e89e72",
    "original_commit_id": "93895296e4c969f07f99b304db1569a573268892",
    "user": {
      "login": "sorpaas",
      "id": 6277322,
      "node_id": "MDQ6VXNlcjYyNzczMjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sorpaas",
      "html_url": "https://github.com/sorpaas",
      "followers_url": "https://api.github.com/users/sorpaas/followers",
      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
      "repos_url": "https://api.github.com/users/sorpaas/repos",
      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This should reference a link to ECIP-1077.",
    "created_at": "2019-11-30T22:26:26Z",
    "updated_at": "2019-12-01T13:54:41Z",
    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/224#discussion_r352307638",
    "pull_request_url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/224",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/comments/352307638"
      },
      "html": {
        "href": "https://github.com/ethereumclassic/ECIPs/pull/224#discussion_r352307638"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/224"
      }
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 175,
    "side": "RIGHT"
  }