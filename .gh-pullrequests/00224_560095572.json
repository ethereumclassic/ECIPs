{
    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560095572",
    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/224#issuecomment-560095572",
    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/224",
    "id": 560095572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDA5NTU3Mg==",
    "user": {
      "login": "meowsbits",
      "id": 45600330,
      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meowsbits",
      "html_url": "https://github.com/meowsbits",
      "followers_url": "https://api.github.com/users/meowsbits/followers",
      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
      "repos_url": "https://api.github.com/users/meowsbits/repos",
      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-01T11:29:23Z",
    "updated_at": "2019-12-01T11:29:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "> If, say, a Fork ECIP specification is finalized (having been fully specified with Activation Block Number and Feature Set via a merged change set)... BUT subsequently a bug is found during testing causing a loss of confidence in sucessfully achieving the fork at the specified block number, then the Fork ECIP would want to be Deferred or Withdrawn or Rejected, and then eventually replaced with a new UNIQUE ECIP containing a revised Activation Block Number and possibly also Feature Set parameters.\r\n\r\nThis implies that as discussion and review and popularization of proposed specification change sets show narrowing in apparent probable outcomes (in the minds of developers and protocol-managing project owners) that material implementations should be underway and enduring analysis and testing so that adequate and informed block numbers and any specification parameter details can be shaped and inform the developing proposals. \r\n\r\nIn my mind this is a healthy approach: It encourages active and specification-participating research and design, prototype implementations, team coordination, and stakeholder outreach as a necessary part of the process of developing acceptable Fork ECIPs. This might work to facilitate and foster collaboration between teams and professional contexts and advocates and critics alike, while also hopefully continuing to build and prove rubrics for analysis and evaluation of proposals.\r\n\r\n[Rough consensus (wikipedia)](https://en.wikipedia.org/wiki/Rough_consensus) is [used](https://github.com/ethereumclassic/ECIPs/search?q=rough+consensus&unscoped_q=rough+consensus) in ECIP Meta specifications. From the Wikipedia article:\r\n\r\n> The phrase is often extended into the saying \"rough consensus and running code\"\r\n\r\nIn my mind, this proposal encourages a nudge in this direction, which I think has positive and constructive potential for framing our Fork ECIP processes.  ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560095572/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    }
  }