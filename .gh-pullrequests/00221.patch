From 372086c98e9769ab658d79c1c9b58403d3f2b05d Mon Sep 17 00:00:00 2001
From: Shane <jonas.shane@gmail.com>
Date: Sat, 30 Nov 2019 11:06:25 -0800
Subject: [PATCH 1/4] feat: propose only one meta ecip per hard fork

---
 _specs/ecip-1000.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
index b5b50dd..75e5ee5 100644
--- a/_specs/ecip-1000.md
+++ b/_specs/ecip-1000.md
@@ -171,7 +171,7 @@ There are three types of ECIP:
   - **Networking** - improvements to networking protocol specifications.
   - **Interface** - improvements around client [API/RPC] specifications and standards, and also certain language-level standards like method names  and contract ABIs.
   - **ECBP (Ethereum Classic Best Practice)** - application-level standards and conventions, including contract standards such as token standards, name registries, URI schemes, library/package formats, and wallet formats.
-- A **Meta ECIP** describes a **process** surrounding Ethereum Classic or proposes a change to (or an event in) a process. Process ECIPs are like Standard Track ECIPs, but apply to areas other than the Ethereum Classic protocol itself. They may propose an implementation, but not to Ethereum Classic's codebase; they often require community consensus; unlike Informational ECIPs, they are more than recommendations, and users are typically not free to ignore them. Examples include procedures, guidelines, changes to the decision-making process (e.g. this ECIP-1000 process document), and changes to the tools or environment used in Ethereum Classic development. *Any meta-ECIP is also considered a Process ECIP.*
+- A **Meta ECIP** describes a **process** surrounding Ethereum Classic or proposes a change to a process (or an event like the next hard fork). Process ECIPs are like Standard Track ECIPs, but apply to areas other than the Ethereum Classic protocol itself. They may propose an implementation, but not to Ethereum Classic's codebase; they often require community consensus; unlike Informational ECIPs, they are more than recommendations, and users are typically not free to ignore them. Examples include procedures, guidelines, changes to the decision-making process (e.g. this ECIP-1000 process document), and changes to the tools or environment used in Ethereum Classic development. If a Meta ECIP is for a hard fork, changes are to be updated with PRs to existing Meta ECIPs. *Any meta-ECIP is also considered a Process ECIP.*
 - An **Informational ECIP** describes an Ethereum Classic design issue, or provides general guidelines or information to the Ethereum Classic community, but does not propose a new feature. Informational ECIPs do not necessarily represent Ethereum Classic community consensus or a recommendation, so users and implementors are free to ignore Informational ECIPs or follow their advice.
 
 It is highly recommended that a single ECIP contain a single key proposal or new idea. The more focused the ECIP, the more successful it tends to be. A change to one client doesn't require an ECIP; a change that affects multiple clients, or defines a standard for multiple apps to use, does.

From b582d25fab827af7a49449ef3e734105203bdd73 Mon Sep 17 00:00:00 2001
From: Shane <jonas.shane@gmail.com>
Date: Sat, 30 Nov 2019 11:29:15 -0800
Subject: [PATCH 2/4] fix: add note about checking for existing

---
 _specs/ecip-1000.md | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
index 75e5ee5..c587c81 100644
--- a/_specs/ecip-1000.md
+++ b/_specs/ecip-1000.md
@@ -19,6 +19,7 @@ We intend ECIPs to be the primary mechanism for proposing new features, for coll
 Because the ECIPs are maintained as text files in a versioned repository, their revision history is the historical record of the feature proposal.
 
 # Copyright
+It is highly recommended that a single ECIP contain a single key proposal or new idea
 
 This ECIP is licensed Apache-2, originally by [Luke Dashjr](https://github.com/luke-jr) under BSD 2-clause license.
 
@@ -48,7 +49,7 @@ It also helps to make sure the idea is applicable to the entire community and no
 
 ECIP authors **are responsible for collecting community feedback** on both the initial idea and the ECIP before submitting it for review. However, wherever possible, long open-ended discussions on public groups or mailing lists should be avoided. Strategies to keep the discussions efficient include: setting up a separate SIG mailing list for the topic, having the ECIP author accept private comments in the early design phases, setting up a wiki page or git repository, etc. ECIP authors should use their discretion here.
 
-It is highly recommended that **a single ECIP contain a single key proposal or new idea**. The more focused the ECIP, the more successful it tends to be. If in doubt, split your ECIP into several well-focused ones.
+It is highly recommended that **a single ECIP contain a single key proposal or new idea**. The more focused the ECIP, the more successful it tends to be. If in doubt, split your ECIP into several well-focused ones. Please check out the ECIPsin this repository and search for similar ones that have already been created.
 
 **3:** When the ECIP draft is complete, an ECIP editor will assign the ECIP a number, label it as Standards Track, Informational, or Process, and merge the pull request to the ECIPs git repository.
 

From 9ef747a8e5fc4f9b0f0a5ab3cad202cfb06a37f6 Mon Sep 17 00:00:00 2001
From: Shane <jonas.shane@gmail.com>
Date: Sat, 30 Nov 2019 11:29:38 -0800
Subject: [PATCH 3/4] Update _specs/ecip-1000.md

---
 _specs/ecip-1000.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
index c587c81..7535c71 100644
--- a/_specs/ecip-1000.md
+++ b/_specs/ecip-1000.md
@@ -49,7 +49,7 @@ It also helps to make sure the idea is applicable to the entire community and no
 
 ECIP authors **are responsible for collecting community feedback** on both the initial idea and the ECIP before submitting it for review. However, wherever possible, long open-ended discussions on public groups or mailing lists should be avoided. Strategies to keep the discussions efficient include: setting up a separate SIG mailing list for the topic, having the ECIP author accept private comments in the early design phases, setting up a wiki page or git repository, etc. ECIP authors should use their discretion here.
 
-It is highly recommended that **a single ECIP contain a single key proposal or new idea**. The more focused the ECIP, the more successful it tends to be. If in doubt, split your ECIP into several well-focused ones. Please check out the ECIPsin this repository and search for similar ones that have already been created.
+It is highly recommended that **a single ECIP contain a single key proposal or new idea**. The more focused the ECIP, the more successful it tends to be. If in doubt, split your ECIP into several well-focused ones. Please check out the ECIPs in this repository and search for similar ones that have already been created.
 
 **3:** When the ECIP draft is complete, an ECIP editor will assign the ECIP a number, label it as Standards Track, Informational, or Process, and merge the pull request to the ECIPs git repository.
 

From 550cec7e8dd0bb27b53bf3f9b0daf7cdc3633a3a Mon Sep 17 00:00:00 2001
From: Shane <jonas.shane@gmail.com>
Date: Sat, 30 Nov 2019 12:38:42 -0800
Subject: [PATCH 4/4] Update _specs/ecip-1000.md

---
 _specs/ecip-1000.md | 1 -
 1 file changed, 1 deletion(-)

diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
index 7535c71..2287b2a 100644
--- a/_specs/ecip-1000.md
+++ b/_specs/ecip-1000.md
@@ -19,7 +19,6 @@ We intend ECIPs to be the primary mechanism for proposing new features, for coll
 Because the ECIPs are maintained as text files in a versioned repository, their revision history is the historical record of the feature proposal.
 
 # Copyright
-It is highly recommended that a single ECIP contain a single key proposal or new idea
 
 This ECIP is licensed Apache-2, originally by [Luke Dashjr](https://github.com/luke-jr) under BSD 2-clause license.
 
