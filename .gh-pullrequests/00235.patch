From a93253b7ba7db1cd990176f3da2843eedb965765 Mon Sep 17 00:00:00 2001
From: ia <b5c6@protonmail.com>
Date: Fri, 22 Nov 2019 07:23:19 -0500
Subject: [PATCH 1/5] clone issues + prs

---
 .gh-issues/.state                     |     1 +
 .gh-issues/00001.json                 |    60 +
 .gh-issues/00001_447987167.json       |    43 +
 .gh-issues/00003.json                 |    60 +
 .gh-issues/00003_453850461.json       |    43 +
 .gh-issues/00004.json                 |    68 +
 .gh-issues/00004_450667718.json       |    43 +
 .gh-issues/00004_450738985.json       |    43 +
 .gh-issues/00004_451345641.json       |    43 +
 .gh-issues/00004_451483684.json       |    43 +
 .gh-issues/00004_451587379.json       |    43 +
 .gh-issues/00004_451589876.json       |    43 +
 .gh-issues/00004_452030290.json       |    43 +
 .gh-issues/00005.json                 |    68 +
 .gh-issues/00010.json                 |    68 +
 .gh-issues/00010_454417555.json       |    43 +
 .gh-issues/00010_545477119.json       |    43 +
 .gh-issues/00010_545523060.json       |    43 +
 .gh-issues/00010_546160936.json       |    43 +
 .gh-issues/00010_546360493.json       |    43 +
 .gh-issues/00010_546361995.json       |    43 +
 .gh-issues/00011.json                 |    77 +
 .gh-issues/00011_470109924.json       |    43 +
 .gh-issues/00011_470122199.json       |    43 +
 .gh-issues/00011_552099532.json       |    43 +
 .gh-issues/00013.json                 |    77 +
 .gh-issues/00013_457966310.json       |    43 +
 .gh-issues/00013_461387800.json       |    43 +
 .gh-issues/00013_479955986.json       |    43 +
 .gh-issues/00013_479963992.json       |    43 +
 .gh-issues/00013_480357413.json       |    43 +
 .gh-issues/00013_480358431.json       |    43 +
 .gh-issues/00013_482986737.json       |    43 +
 .gh-issues/00013_541970704.json       |    43 +
 .gh-issues/00013_546987100.json       |    43 +
 .gh-issues/00013_547021681.json       |    43 +
 .gh-issues/00013_547079918.json       |    43 +
 .gh-issues/00013_547085811.json       |    43 +
 .gh-issues/00013_547223402.json       |    43 +
 .gh-issues/00013_547299775.json       |    43 +
 .gh-issues/00013_547433053.json       |    43 +
 .gh-issues/00013_550970904.json       |    43 +
 .gh-issues/00013_550975231.json       |    43 +
 .gh-issues/00013_551256069.json       |    43 +
 .gh-issues/00013_551309467.json       |    43 +
 .gh-issues/00013_552100904.json       |    43 +
 .gh-issues/00013_552188915.json       |    43 +
 .gh-issues/00013_552199968.json       |    43 +
 .gh-issues/00013_552202988.json       |    43 +
 .gh-issues/00013_552208754.json       |    43 +
 .gh-issues/00013_552220455.json       |    43 +
 .gh-issues/00013_552680753.json       |    43 +
 .gh-issues/00013_552681182.json       |    43 +
 .gh-issues/00013_553046507.json       |    43 +
 .gh-issues/00013_553061307.json       |    43 +
 .gh-issues/00013_553069359.json       |    43 +
 .gh-issues/00013_553171120.json       |    43 +
 .gh-issues/00013_553171330.json       |    43 +
 .gh-issues/00013_553173000.json       |    43 +
 .gh-issues/00013_553518818.json       |    43 +
 .gh-issues/00013_553540440.json       |    43 +
 .gh-issues/00013_553546826.json       |    43 +
 .gh-issues/00013_553556651.json       |    43 +
 .gh-issues/00013_553561683.json       |    43 +
 .gh-issues/00013_553562731.json       |    43 +
 .gh-issues/00013_553573665.json       |    43 +
 .gh-issues/00013_553804283.json       |    43 +
 .gh-issues/00013_553941518.json       |    43 +
 .gh-issues/00013_554099114.json       |    43 +
 .gh-issues/00013_554518371.json       |    43 +
 .gh-issues/00013_554607063.json       |    43 +
 .gh-issues/00013_554614687.json       |    43 +
 .gh-issues/00013_554616056.json       |    43 +
 .gh-issues/00013_554621943.json       |    43 +
 .gh-issues/00013_554624545.json       |    43 +
 .gh-issues/00013_554651883.json       |    43 +
 .gh-issues/00013_554653283.json       |    43 +
 .gh-issues/00013_554673460.json       |    43 +
 .gh-issues/00013_554674998.json       |    43 +
 .gh-issues/00013_554687986.json       |    43 +
 .gh-issues/00013_554769555.json       |    43 +
 .gh-issues/00013_554934893.json       |    43 +
 .gh-issues/00013_554937072.json       |    43 +
 .gh-issues/00013_554990848.json       |    43 +
 .gh-issues/00013_555400794.json       |    43 +
 .gh-issues/00013_555567882.json       |    43 +
 .gh-issues/00013_555946386.json       |    43 +
 .gh-issues/00013_556534134.json       |    43 +
 .gh-issues/00014.json                 |    77 +
 .gh-issues/00014_498567897.json       |    43 +
 .gh-issues/00014_498691816.json       |    43 +
 .gh-issues/00014_542159128.json       |    43 +
 .gh-issues/00014_542165307.json       |    43 +
 .gh-issues/00014_542166128.json       |    43 +
 .gh-issues/00014_547105060.json       |    43 +
 .gh-issues/00014_552099743.json       |    43 +
 .gh-issues/00014_552157798.json       |    43 +
 .gh-issues/00014_552176812.json       |    43 +
 .gh-issues/00014_552188678.json       |    43 +
 .gh-issues/00057.json                 |    60 +
 .gh-issues/00058.json                 |    68 +
 .gh-issues/00058_468015680.json       |    43 +
 .gh-issues/00058_468019282.json       |    43 +
 .gh-issues/00058_468028062.json       |    43 +
 .gh-issues/00058_468043718.json       |    43 +
 .gh-issues/00058_468107920.json       |    43 +
 .gh-issues/00058_468877643.json       |    43 +
 .gh-issues/00058_506510057.json       |    43 +
 .gh-issues/00058_506511221.json       |    43 +
 .gh-issues/00058_506511880.json       |    43 +
 .gh-issues/00058_506513825.json       |    43 +
 .gh-issues/00058_506514079.json       |    43 +
 .gh-issues/00058_506514191.json       |    43 +
 .gh-issues/00058_506547366.json       |    43 +
 .gh-issues/00058_506563373.json       |    43 +
 .gh-issues/00058_506585419.json       |    43 +
 .gh-issues/00063.json                 |    60 +
 .gh-issues/00063_478322655.json       |    43 +
 .gh-issues/00064.json                 |    60 +
 .gh-issues/00064_478322595.json       |    43 +
 .gh-issues/00064_501232247.json       |    43 +
 .gh-issues/00065.json                 |    60 +
 .gh-issues/00065_478298217.json       |    43 +
 .gh-issues/00065_478304847.json       |    43 +
 .gh-issues/00065_478318849.json       |    43 +
 .gh-issues/00065_478331595.json       |    43 +
 .gh-issues/00065_478333052.json       |    43 +
 .gh-issues/00065_478334154.json       |    43 +
 .gh-issues/00065_478340492.json       |    43 +
 .gh-issues/00065_478343876.json       |    43 +
 .gh-issues/00065_478345480.json       |    43 +
 .gh-issues/00065_478353061.json       |    43 +
 .gh-issues/00065_478357168.json       |    43 +
 .gh-issues/00065_478363926.json       |    43 +
 .gh-issues/00065_478368643.json       |    43 +
 .gh-issues/00067.json                 |    60 +
 .gh-issues/00067_478707443.json       |    43 +
 .gh-issues/00067_479447618.json       |    43 +
 .gh-issues/00067_490231004.json       |    43 +
 .gh-issues/00067_495187312.json       |    43 +
 .gh-issues/00068.json                 |    60 +
 .gh-issues/00077.json                 |    60 +
 .gh-issues/00078.json                 |    60 +
 .gh-issues/00078_496693823.json       |    43 +
 .gh-issues/00078_496723650.json       |    43 +
 .gh-issues/00078_496725924.json       |    43 +
 .gh-issues/00078_496932666.json       |    43 +
 .gh-issues/00078_496978994.json       |    43 +
 .gh-issues/00078_497037284.json       |    43 +
 .gh-issues/00078_497354676.json       |    43 +
 .gh-issues/00078_497360799.json       |    43 +
 .gh-issues/00078_497386051.json       |    43 +
 .gh-issues/00078_497388694.json       |    43 +
 .gh-issues/00078_497391245.json       |    43 +
 .gh-issues/00078_497391370.json       |    43 +
 .gh-issues/00078_497393690.json       |    43 +
 .gh-issues/00078_497431639.json       |    43 +
 .gh-issues/00078_497664297.json       |    43 +
 .gh-issues/00078_497670050.json       |    43 +
 .gh-issues/00079.json                 |    60 +
 .gh-issues/00079_497923053.json       |    43 +
 .gh-issues/00079_498304166.json       |    43 +
 .gh-issues/00079_498397801.json       |    43 +
 .gh-issues/00079_498406886.json       |    43 +
 .gh-issues/00079_498815227.json       |    43 +
 .gh-issues/00079_500910226.json       |    43 +
 .gh-issues/00079_501734141.json       |    43 +
 .gh-issues/00079_501829867.json       |    43 +
 .gh-issues/00079_501829904.json       |    43 +
 .gh-issues/00080.json                 |    60 +
 .gh-issues/00080_499126658.json       |    43 +
 .gh-issues/00080_499165887.json       |    43 +
 .gh-issues/00080_499284977.json       |    43 +
 .gh-issues/00080_499293533.json       |    43 +
 .gh-issues/00080_499310927.json       |    43 +
 .gh-issues/00080_499312038.json       |    43 +
 .gh-issues/00080_499347882.json       |    43 +
 .gh-issues/00080_499378058.json       |    43 +
 .gh-issues/00080_499592498.json       |    43 +
 .gh-issues/00080_499847317.json       |    43 +
 .gh-issues/00080_499887259.json       |    43 +
 .gh-issues/00080_499935145.json       |    43 +
 .gh-issues/00080_499938359.json       |    43 +
 .gh-issues/00080_499943006.json       |    43 +
 .gh-issues/00080_500372684.json       |    43 +
 .gh-issues/00080_500882171.json       |    43 +
 .gh-issues/00080_501883418.json       |    43 +
 .gh-issues/00080_502073002.json       |    43 +
 .gh-issues/00083.json                 |    60 +
 .gh-issues/00083_502405077.json       |    43 +
 .gh-issues/00083_502412123.json       |    43 +
 .gh-issues/00083_502431049.json       |    43 +
 .gh-issues/00083_502435249.json       |    43 +
 .gh-issues/00083_502648849.json       |    43 +
 .gh-issues/00083_503158600.json       |    43 +
 .gh-issues/00083_503685354.json       |    43 +
 .gh-issues/00083_503689145.json       |    43 +
 .gh-issues/00083_504067370.json       |    43 +
 .gh-issues/00084.json                 |    60 +
 .gh-issues/00084_503685057.json       |    43 +
 .gh-issues/00084_503762401.json       |    43 +
 .gh-issues/00091.json                 |    60 +
 .gh-issues/00091_506396592.json       |    43 +
 .gh-issues/00098.json                 |   118 +
 .gh-issues/00098_506822967.json       |    43 +
 .gh-issues/00098_542156547.json       |    43 +
 .gh-issues/00109.json                 |    60 +
 .gh-issues/00109_545476299.json       |    43 +
 .gh-issues/00109_545522317.json       |    43 +
 .gh-issues/00130.json                 |    77 +
 .gh-issues/00130_521612901.json       |    43 +
 .gh-issues/00130_522249929.json       |    43 +
 .gh-issues/00130_522301713.json       |    43 +
 .gh-issues/00130_523974194.json       |    43 +
 .gh-issues/00130_524318819.json       |    43 +
 .gh-issues/00130_527336109.json       |    43 +
 .gh-issues/00130_529475692.json       |    43 +
 .gh-issues/00130_530048547.json       |    43 +
 .gh-issues/00130_530090038.json       |    43 +
 .gh-issues/00130_530300631.json       |    43 +
 .gh-issues/00130_530413922.json       |    43 +
 .gh-issues/00130_530505642.json       |    43 +
 .gh-issues/00130_531147233.json       |    43 +
 .gh-issues/00130_538779821.json       |    43 +
 .gh-issues/00131.json                 |    96 +
 .gh-issues/00131_529164498.json       |    43 +
 .gh-issues/00131_529398677.json       |    43 +
 .gh-issues/00131_545929671.json       |    43 +
 .gh-issues/00131_546063923.json       |    43 +
 .gh-issues/00131_546200510.json       |    43 +
 .gh-issues/00131_546456254.json       |    43 +
 .gh-issues/00131_551282334.json       |    43 +
 .gh-issues/00133.json                 |    68 +
 .gh-issues/00133_528286602.json       |    43 +
 .gh-issues/00133_528287832.json       |    43 +
 .gh-issues/00133_528294862.json       |    43 +
 .gh-issues/00133_528417996.json       |    43 +
 .gh-issues/00133_529147513.json       |    43 +
 .gh-issues/00133_529399474.json       |    43 +
 .gh-issues/00133_530680302.json       |    43 +
 .gh-issues/00135.json                 |    96 +
 .gh-issues/00135_533198102.json       |    43 +
 .gh-issues/00135_544389955.json       |    43 +
 .gh-issues/00135_544434604.json       |    43 +
 .gh-issues/00135_544435714.json       |    43 +
 .gh-issues/00135_544437320.json       |    43 +
 .gh-issues/00135_544438577.json       |    43 +
 .gh-issues/00135_544440405.json       |    43 +
 .gh-issues/00135_544455151.json       |    43 +
 .gh-issues/00135_544614307.json       |    43 +
 .gh-issues/00135_544614559.json       |    43 +
 .gh-issues/00135_544618759.json       |    43 +
 .gh-issues/00135_544618924.json       |    43 +
 .gh-issues/00135_544958895.json       |    43 +
 .gh-issues/00135_545929697.json       |    43 +
 .gh-issues/00135_545942498.json       |    43 +
 .gh-issues/00135_545973588.json       |    43 +
 .gh-issues/00138.json                 |    60 +
 .gh-issues/00138_551165496.json       |    43 +
 .gh-issues/00140.json                 |    60 +
 .gh-issues/00140_552095978.json       |    43 +
 .gh-issues/00140_552189104.json       |    43 +
 .gh-issues/00143.json                 |   242 +
 .gh-issues/00143_543809233.json       |    43 +
 .gh-issues/00143_543813173.json       |    43 +
 .gh-issues/00143_543826639.json       |    43 +
 .gh-issues/00143_543850251.json       |    43 +
 .gh-issues/00143_544006547.json       |    43 +
 .gh-issues/00144.json                 |    60 +
 .gh-issues/00146.json                 |    60 +
 .gh-issues/00146_546161401.json       |    43 +
 .gh-issues/00147.json                 |    60 +
 .gh-issues/00147_546044952.json       |    43 +
 .gh-issues/00147_546048265.json       |    43 +
 .gh-issues/00147_546063546.json       |    43 +
 .gh-issues/00148.json                 |    60 +
 .gh-issues/00164.json                 |    68 +
 .gh-issues/00164_550079519.json       |    43 +
 .gh-issues/00164_551234315.json       |    43 +
 .gh-issues/00164_551235502.json       |    43 +
 .gh-issues/00164_551270459.json       |    43 +
 .gh-issues/00165.json                 |    60 +
 .gh-issues/00165_549712240.json       |    43 +
 .gh-issues/00165_549762634.json       |    43 +
 .gh-issues/00165_549830074.json       |    43 +
 .gh-issues/00165_549945386.json       |    43 +
 .gh-issues/00165_549953503.json       |    43 +
 .gh-issues/00165_549954201.json       |    43 +
 .gh-issues/00165_549957719.json       |    43 +
 .gh-issues/00165_549964961.json       |    43 +
 .gh-issues/00165_549968110.json       |    43 +
 .gh-issues/00165_550166964.json       |    43 +
 .gh-issues/00165_550167270.json       |    43 +
 .gh-issues/00165_550233349.json       |    43 +
 .gh-issues/00165_550337662.json       |    43 +
 .gh-issues/00165_550395264.json       |    43 +
 .gh-issues/00165_550416455.json       |    43 +
 .gh-issues/00165_550420695.json       |    43 +
 .gh-issues/00165_550421948.json       |    43 +
 .gh-issues/00165_550445884.json       |    43 +
 .gh-issues/00165_550477706.json       |    43 +
 .gh-issues/00165_550493899.json       |    43 +
 .gh-issues/00165_550494245.json       |    43 +
 .gh-issues/00165_550497827.json       |    43 +
 .gh-issues/00165_550503103.json       |    43 +
 .gh-issues/00165_550503263.json       |    43 +
 .gh-issues/00165_550512034.json       |    43 +
 .gh-issues/00165_550514394.json       |    43 +
 .gh-issues/00165_550525921.json       |    43 +
 .gh-issues/00165_550536197.json       |    43 +
 .gh-issues/00165_550560138.json       |    43 +
 .gh-issues/00165_550566925.json       |    43 +
 .gh-issues/00165_550569920.json       |    43 +
 .gh-issues/00165_550975359.json       |    43 +
 .gh-issues/00165_550985428.json       |    43 +
 .gh-issues/00165_551108185.json       |    43 +
 .gh-issues/00165_551113571.json       |    43 +
 .gh-issues/00165_551115076.json       |    43 +
 .gh-issues/00165_551202945.json       |    43 +
 .gh-issues/00165_551204630.json       |    43 +
 .gh-issues/00165_551221674.json       |    43 +
 .gh-issues/00165_551221887.json       |    43 +
 .gh-issues/00165_551225101.json       |    43 +
 .gh-issues/00165_551227970.json       |    43 +
 .gh-issues/00165_551231468.json       |    43 +
 .gh-issues/00165_551231538.json       |    43 +
 .gh-issues/00165_551231596.json       |    43 +
 .gh-issues/00165_551232945.json       |    43 +
 .gh-issues/00165_551234140.json       |    43 +
 .gh-issues/00165_551234278.json       |    43 +
 .gh-issues/00165_551235287.json       |    43 +
 .gh-issues/00165_551239088.json       |    43 +
 .gh-issues/00165_551239483.json       |    43 +
 .gh-issues/00165_551243927.json       |    43 +
 .gh-issues/00165_551248154.json       |    43 +
 .gh-issues/00165_551250029.json       |    43 +
 .gh-issues/00165_551250255.json       |    43 +
 .gh-issues/00165_551324511.json       |    43 +
 .gh-issues/00165_551327888.json       |    43 +
 .gh-issues/00165_551332344.json       |    43 +
 .gh-issues/00165_551340974.json       |    43 +
 .gh-issues/00165_551344143.json       |    43 +
 .gh-issues/00165_551794125.json       |    43 +
 .gh-issues/00165_551822854.json       |    43 +
 .gh-issues/00165_551841775.json       |    43 +
 .gh-issues/00165_551851451.json       |    43 +
 .gh-issues/00165_551875772.json       |    43 +
 .gh-issues/00165_551889563.json       |    43 +
 .gh-issues/00165_551936744.json       |    43 +
 .gh-issues/00165_551948963.json       |    43 +
 .gh-issues/00165_551949483.json       |    43 +
 .gh-issues/00165_551952025.json       |    43 +
 .gh-issues/00165_551954165.json       |    43 +
 .gh-issues/00165_551954543.json       |    43 +
 .gh-issues/00165_551954653.json       |    43 +
 .gh-issues/00165_551989761.json       |    43 +
 .gh-issues/00165_552197925.json       |    43 +
 .gh-issues/00165_552224292.json       |    43 +
 .gh-issues/00169.json                 |    60 +
 .gh-issues/00172.json                 |    68 +
 .gh-issues/00172_550956635.json       |    43 +
 .gh-issues/00172_550958236.json       |    43 +
 .gh-issues/00172_551099002.json       |    43 +
 .gh-issues/00172_551374490.json       |    43 +
 .gh-issues/00172_551868772.json       |    43 +
 .gh-issues/00172_551991972.json       |    43 +
 .gh-issues/00174.json                 |    68 +
 .gh-issues/00174_551172615.json       |    43 +
 .gh-issues/00174_551177759.json       |    43 +
 .gh-issues/00174_551179805.json       |    43 +
 .gh-issues/00174_551224286.json       |    43 +
 .gh-issues/00174_551225415.json       |    43 +
 .gh-issues/00174_551226123.json       |    43 +
 .gh-issues/00174_551227943.json       |    43 +
 .gh-issues/00174_551374583.json       |    43 +
 .gh-issues/00174_552330153.json       |    43 +
 .gh-issues/00174_552345774.json       |    43 +
 .gh-issues/00174_552681101.json       |    43 +
 .gh-issues/00174_553184368.json       |    43 +
 .gh-issues/00174_554650134.json       |    43 +
 .gh-issues/00174_557064663.json       |    43 +
 .gh-issues/00174_557106181.json       |    43 +
 .gh-issues/00174_557152805.json       |    43 +
 .gh-issues/00174_557178417.json       |    43 +
 .gh-issues/00174_557179731.json       |    43 +
 .gh-issues/00174_557180213.json       |    43 +
 .gh-issues/00174_557182004.json       |    43 +
 .gh-issues/00174_557183152.json       |    43 +
 .gh-issues/00174_557256428.json       |    43 +
 .gh-issues/00174_557264592.json       |    43 +
 .gh-issues/00174_557340088.json       |    43 +
 .gh-issues/00174_557347596.json       |    43 +
 .gh-issues/00175.json                 |    60 +
 .gh-issues/00175_551315327.json       |    43 +
 .gh-issues/00175_552188293.json       |    43 +
 .gh-issues/00175_552192373.json       |    43 +
 .gh-issues/00177.json                 |    60 +
 .gh-issues/00177_551315383.json       |    43 +
 .gh-issues/00177_551317526.json       |    43 +
 .gh-issues/00177_551323452.json       |    43 +
 .gh-issues/00177_552188433.json       |    43 +
 .gh-issues/00182.json                 |    98 +
 .gh-issues/00182_553198972.json       |    43 +
 .gh-issues/00188.json                 |    60 +
 .gh-issues/00190.json                 |    60 +
 .gh-issues/00195.json                 |    60 +
 .gh-issues/00195_557189510.json       |    43 +
 .gh-issues/00195_557193614.json       |    43 +
 .gh-issues/00195_557195252.json       |    43 +
 .gh-issues/00195_557205129.json       |    43 +
 .gh-pullrequests/.state               |     1 +
 .gh-pullrequests/00008.json           |    66 +
 .gh-pullrequests/00008.patch          |   294 +
 .gh-pullrequests/00008_452259834.json |    43 +
 .gh-pullrequests/00008_452283600.json |    43 +
 .gh-pullrequests/00008_452305311.json |    43 +
 .gh-pullrequests/00008_452306778.json |    43 +
 .gh-pullrequests/00008_452420847.json |    43 +
 .gh-pullrequests/00008_452421390.json |    43 +
 .gh-pullrequests/00008_452432584.json |    43 +
 .gh-pullrequests/00008_452443302.json |    43 +
 .gh-pullrequests/00008_452447368.json |    43 +
 .gh-pullrequests/00008_452459302.json |    43 +
 .gh-pullrequests/00008_453086727.json |    43 +
 .gh-pullrequests/00008_453095320.json |    43 +
 .gh-pullrequests/00008_453134244.json |    43 +
 .gh-pullrequests/00008_453714749.json |    43 +
 .gh-pullrequests/00008_453716507.json |    43 +
 .gh-pullrequests/00008_461321539.json |    43 +
 .gh-pullrequests/00008_509382935.json |    43 +
 .gh-pullrequests/00008_547107733.json |    43 +
 .gh-pullrequests/00081.json           |    74 +
 .gh-pullrequests/00081.patch          |   138 +
 .gh-pullrequests/00081_499916493.json |    43 +
 .gh-pullrequests/00081_500184764.json |    43 +
 .gh-pullrequests/00081_500742531.json |    43 +
 .gh-pullrequests/00081_506971077.json |    43 +
 .gh-pullrequests/00086.json           |    83 +
 .gh-pullrequests/00086.patch          |    64 +
 .gh-pullrequests/00103.json           |    74 +
 .gh-pullrequests/00103.patch          |   179 +
 .gh-pullrequests/00108.json           |    74 +
 .gh-pullrequests/00108.patch          |   106 +
 .gh-pullrequests/00110.json           |    74 +
 .gh-pullrequests/00110.patch          |    23 +
 .gh-pullrequests/00111.json           |    66 +
 .gh-pullrequests/00111.patch          |   145 +
 .gh-pullrequests/00112.json           |    66 +
 .gh-pullrequests/00112.patch          | 11254 ++++++++++++++++++++++++
 .gh-pullrequests/00112_513608398.json |    43 +
 .gh-pullrequests/00112_519483906.json |    43 +
 .gh-pullrequests/00113.json           |    74 +
 .gh-pullrequests/00113.patch          |    19 +
 .gh-pullrequests/00114.json           |    66 +
 .gh-pullrequests/00114.patch          |    23 +
 .gh-pullrequests/00115.json           |    66 +
 .gh-pullrequests/00115.patch          |    23 +
 .gh-pullrequests/00116.json           |    66 +
 .gh-pullrequests/00116.patch          |    23 +
 .gh-pullrequests/00117.json           |    66 +
 .gh-pullrequests/00117.patch          |    35 +
 .gh-pullrequests/00118.json           |    74 +
 .gh-pullrequests/00118.patch          |   208 +
 .gh-pullrequests/00118_515313926.json |    43 +
 .gh-pullrequests/00118_515641078.json |    43 +
 .gh-pullrequests/00118_515641213.json |    43 +
 .gh-pullrequests/00119.json           |    66 +
 .gh-pullrequests/00119.patch          |    42 +
 .gh-pullrequests/00120.json           |    66 +
 .gh-pullrequests/00120.patch          |    42 +
 .gh-pullrequests/00121.json           |    66 +
 .gh-pullrequests/00121.patch          |    35 +
 .gh-pullrequests/00122.json           |    66 +
 .gh-pullrequests/00122.patch          |    23 +
 .gh-pullrequests/00123.json           |    66 +
 .gh-pullrequests/00123.patch          |    23 +
 .gh-pullrequests/00124.json           |    66 +
 .gh-pullrequests/00124.patch          |    23 +
 .gh-pullrequests/00125.json           |    66 +
 .gh-pullrequests/00125.patch          |    24 +
 .gh-pullrequests/00126.json           |    66 +
 .gh-pullrequests/00126.patch          |   200 +
 .gh-pullrequests/00126_518596232.json |    43 +
 .gh-pullrequests/00127.json           |    74 +
 .gh-pullrequests/00127.patch          |   358 +
 .gh-pullrequests/00127_518961000.json |    43 +
 .gh-pullrequests/00127_520447584.json |    43 +
 .gh-pullrequests/00128.json           |    66 +
 .gh-pullrequests/00128.patch          |    50 +
 .gh-pullrequests/00129.json           |    74 +
 .gh-pullrequests/00129.patch          |    23 +
 .gh-pullrequests/00132.json           |    66 +
 .gh-pullrequests/00132.patch          |    21 +
 .gh-pullrequests/00134.json           |    66 +
 .gh-pullrequests/00134.patch          |    52 +
 .gh-pullrequests/00134_536342773.json |    43 +
 .gh-pullrequests/00134_538822293.json |    43 +
 .gh-pullrequests/00134_538843790.json |    43 +
 .gh-pullrequests/00134_538847421.json |    43 +
 .gh-pullrequests/00134_538853176.json |    43 +
 .gh-pullrequests/00136.json           |    66 +
 .gh-pullrequests/00136.patch          |    23 +
 .gh-pullrequests/00137.json           |    66 +
 .gh-pullrequests/00137.patch          |    47 +
 .gh-pullrequests/00137_531786392.json |    43 +
 .gh-pullrequests/00137_532824144.json |    43 +
 .gh-pullrequests/00139.json           |    66 +
 .gh-pullrequests/00139.patch          |    22 +
 .gh-pullrequests/00141.json           |    83 +
 .gh-pullrequests/00141.patch          |   205 +
 .gh-pullrequests/00141_539057711.json |    43 +
 .gh-pullrequests/00141_539520136.json |    43 +
 .gh-pullrequests/00141_539711590.json |    43 +
 .gh-pullrequests/00141_539809072.json |    43 +
 .gh-pullrequests/00141_545528648.json |    43 +
 .gh-pullrequests/00142.json           |    66 +
 .gh-pullrequests/00142.patch          |   106 +
 .gh-pullrequests/00142_538861862.json |    43 +
 .gh-pullrequests/00142_538863266.json |    43 +
 .gh-pullrequests/00142_538866464.json |    43 +
 .gh-pullrequests/00142_539788921.json |    43 +
 .gh-pullrequests/00145.json           |    92 +
 .gh-pullrequests/00145.patch          |   230 +
 .gh-pullrequests/00149.json           |    83 +
 .gh-pullrequests/00149.patch          |   151 +
 .gh-pullrequests/00150.json           |    74 +
 .gh-pullrequests/00150.patch          |    28 +
 .gh-pullrequests/00151.json           |    74 +
 .gh-pullrequests/00151.patch          |    28 +
 .gh-pullrequests/00152.json           |    74 +
 .gh-pullrequests/00152.patch          |    28 +
 .gh-pullrequests/00153.json           |    66 +
 .gh-pullrequests/00153.patch          |    22 +
 .gh-pullrequests/00154.json           |    83 +
 .gh-pullrequests/00154.patch          |   214 +
 .gh-pullrequests/00154_546026299.json |    43 +
 .gh-pullrequests/00155.json           |   110 +
 .gh-pullrequests/00155.patch          |    98 +
 .gh-pullrequests/00155_546224302.json |    43 +
 .gh-pullrequests/00155_546331115.json |    43 +
 .gh-pullrequests/00156.json           |   110 +
 .gh-pullrequests/00156.patch          |    22 +
 .gh-pullrequests/00157.json           |   119 +
 .gh-pullrequests/00157.patch          |    38 +
 .gh-pullrequests/00158.json           |    66 +
 .gh-pullrequests/00158.patch          |    14 +
 .gh-pullrequests/00159.json           |    66 +
 .gh-pullrequests/00159.patch          |    21 +
 .gh-pullrequests/00160.json           |    66 +
 .gh-pullrequests/00160.patch          |    26 +
 .gh-pullrequests/00161.json           |    66 +
 .gh-pullrequests/00161.patch          |    43 +
 .gh-pullrequests/00161_549030022.json |    43 +
 .gh-pullrequests/00161_549030915.json |    43 +
 .gh-pullrequests/00161_549142972.json |    43 +
 .gh-pullrequests/00161_549153989.json |    43 +
 .gh-pullrequests/00161_549842935.json |    43 +
 .gh-pullrequests/00161_550063173.json |    43 +
 .gh-pullrequests/00161_550064742.json |    43 +
 .gh-pullrequests/00162.json           |    66 +
 .gh-pullrequests/00162.patch          |   191 +
 .gh-pullrequests/00162_549470048.json |    43 +
 .gh-pullrequests/00162_549511849.json |    43 +
 .gh-pullrequests/00162_549619457.json |    43 +
 .gh-pullrequests/00163.json           |   112 +
 .gh-pullrequests/00163.patch          |   183 +
 .gh-pullrequests/00163_549614602.json |    43 +
 .gh-pullrequests/00163_549617969.json |    43 +
 .gh-pullrequests/00163_549664670.json |    43 +
 .gh-pullrequests/00163_549681896.json |    43 +
 .gh-pullrequests/00163_549704201.json |    43 +
 .gh-pullrequests/00163_549874465.json |    43 +
 .gh-pullrequests/00163_549954085.json |    43 +
 .gh-pullrequests/00163_550028785.json |    43 +
 .gh-pullrequests/00163_550029736.json |    43 +
 .gh-pullrequests/00163_550034839.json |    43 +
 .gh-pullrequests/00163_550052609.json |    43 +
 .gh-pullrequests/00163_550054720.json |    43 +
 .gh-pullrequests/00163_550220341.json |    43 +
 .gh-pullrequests/00163_550230694.json |    43 +
 .gh-pullrequests/00163_550231091.json |    43 +
 .gh-pullrequests/00163_550352729.json |    43 +
 .gh-pullrequests/00163_550354406.json |    43 +
 .gh-pullrequests/00163_550391849.json |    43 +
 .gh-pullrequests/00163_550399974.json |    43 +
 .gh-pullrequests/00163_550401511.json |    43 +
 .gh-pullrequests/00163_550403291.json |    43 +
 .gh-pullrequests/00163_550403649.json |    43 +
 .gh-pullrequests/00163_550406142.json |    43 +
 .gh-pullrequests/00163_550415954.json |    43 +
 .gh-pullrequests/00163_550446098.json |    43 +
 .gh-pullrequests/00163_550553396.json |    43 +
 .gh-pullrequests/00163_550558039.json |    43 +
 .gh-pullrequests/00163_550558963.json |    43 +
 .gh-pullrequests/00163_550559689.json |    43 +
 .gh-pullrequests/00163_550561128.json |    43 +
 .gh-pullrequests/00163_550564417.json |    43 +
 .gh-pullrequests/00163_550592946.json |    43 +
 .gh-pullrequests/00163_551057781.json |    43 +
 .gh-pullrequests/00163_551092099.json |    43 +
 .gh-pullrequests/00163_551098432.json |    43 +
 .gh-pullrequests/00163_551107027.json |    43 +
 .gh-pullrequests/00163_551237464.json |    43 +
 .gh-pullrequests/00163_551244560.json |    43 +
 .gh-pullrequests/00163_551273501.json |    43 +
 .gh-pullrequests/00163_551293674.json |    43 +
 .gh-pullrequests/00163_551344366.json |    43 +
 .gh-pullrequests/00163_551355071.json |    43 +
 .gh-pullrequests/00163_551372349.json |    43 +
 .gh-pullrequests/00163_552037491.json |    43 +
 .gh-pullrequests/00163_552067393.json |    43 +
 .gh-pullrequests/00166.json           |    83 +
 .gh-pullrequests/00166.patch          |    23 +
 .gh-pullrequests/00167.json           |    74 +
 .gh-pullrequests/00167.patch          |    64 +
 .gh-pullrequests/00168.json           |    74 +
 .gh-pullrequests/00168.patch          |    51 +
 .gh-pullrequests/00170.json           |    83 +
 .gh-pullrequests/00170.patch          |   466 +
 .gh-pullrequests/00170_550490371.json |    43 +
 .gh-pullrequests/00170_550496434.json |    43 +
 .gh-pullrequests/00171.json           |    92 +
 .gh-pullrequests/00171.patch          |   567 ++
 .gh-pullrequests/00171_550591771.json |    43 +
 .gh-pullrequests/00171_550776335.json |    43 +
 .gh-pullrequests/00171_550843550.json |    43 +
 .gh-pullrequests/00173.json           |    66 +
 .gh-pullrequests/00173.patch          |    68 +
 .gh-pullrequests/00176.json           |    66 +
 .gh-pullrequests/00176.patch          |    81 +
 .gh-pullrequests/00178.json           |    66 +
 .gh-pullrequests/00178.patch          |    69 +
 .gh-pullrequests/00179.json           |    83 +
 .gh-pullrequests/00179.patch          |   149 +
 .gh-pullrequests/00179_552929250.json |    43 +
 .gh-pullrequests/00179_553068137.json |    43 +
 .gh-pullrequests/00180.json           |    66 +
 .gh-pullrequests/00180.patch          |   117 +
 .gh-pullrequests/00180_552150448.json |    43 +
 .gh-pullrequests/00180_552152293.json |    43 +
 .gh-pullrequests/00180_552188503.json |    43 +
 .gh-pullrequests/00180_552209023.json |    43 +
 .gh-pullrequests/00180_552574962.json |    43 +
 .gh-pullrequests/00180_552586684.json |    43 +
 .gh-pullrequests/00180_552835159.json |    43 +
 .gh-pullrequests/00180_553491170.json |    43 +
 .gh-pullrequests/00181.json           |    83 +
 .gh-pullrequests/00181.patch          |   292 +
 .gh-pullrequests/00183.json           |    66 +
 .gh-pullrequests/00183.patch          |   146 +
 .gh-pullrequests/00183_553203245.json |    43 +
 .gh-pullrequests/00184.json           |    74 +
 .gh-pullrequests/00184.patch          |   382 +
 .gh-pullrequests/00185.json           |    74 +
 .gh-pullrequests/00185.patch          |    84 +
 .gh-pullrequests/00185_554483688.json |    43 +
 .gh-pullrequests/00185_554484264.json |    43 +
 .gh-pullrequests/00185_554498810.json |    43 +
 .gh-pullrequests/00185_554560687.json |    43 +
 .gh-pullrequests/00185_554561154.json |    43 +
 .gh-pullrequests/00185_554584222.json |    43 +
 .gh-pullrequests/00185_554636117.json |    43 +
 .gh-pullrequests/00185_554637201.json |    43 +
 .gh-pullrequests/00186.json           |    66 +
 .gh-pullrequests/00186.patch          |   495 ++
 .gh-pullrequests/00186_554649755.json |    43 +
 .gh-pullrequests/00187.json           |    66 +
 .gh-pullrequests/00187.patch          |   204 +
 .gh-pullrequests/00187_554651063.json |    43 +
 .gh-pullrequests/00187_554651516.json |    43 +
 .gh-pullrequests/00187_554651628.json |    43 +
 .gh-pullrequests/00187_554651902.json |    43 +
 .gh-pullrequests/00187_554652947.json |    43 +
 .gh-pullrequests/00187_554653336.json |    43 +
 .gh-pullrequests/00187_557183433.json |    43 +
 .gh-pullrequests/00189.json           |    66 +
 .gh-pullrequests/00189.patch          |  1782 ++++
 .gh-pullrequests/00191.json           |    66 +
 .gh-pullrequests/00191.patch          |    58 +
 .gh-pullrequests/00192.json           |    66 +
 .gh-pullrequests/00192.patch          |    43 +
 .gh-pullrequests/00192_557323172.json |    43 +
 .gh-pullrequests/00192_557326356.json |    43 +
 .gh-pullrequests/00193.json           |    66 +
 .gh-pullrequests/00193.patch          |    22 +
 .gh-pullrequests/00193_557183310.json |    43 +
 .gh-pullrequests/00194.json           |    66 +
 .gh-pullrequests/00194.patch          |   119 +
 .gh-pullrequests/00194_557194760.json |    43 +
 .gh-pullrequests/00194_557268112.json |    43 +
 .gh-pullrequests/00196.json           |    66 +
 .gh-pullrequests/00196.patch          |    21 +
 692 files changed, 50524 insertions(+)
 create mode 100644 .gh-issues/.state
 create mode 100644 .gh-issues/00001.json
 create mode 100644 .gh-issues/00001_447987167.json
 create mode 100644 .gh-issues/00003.json
 create mode 100644 .gh-issues/00003_453850461.json
 create mode 100644 .gh-issues/00004.json
 create mode 100644 .gh-issues/00004_450667718.json
 create mode 100644 .gh-issues/00004_450738985.json
 create mode 100644 .gh-issues/00004_451345641.json
 create mode 100644 .gh-issues/00004_451483684.json
 create mode 100644 .gh-issues/00004_451587379.json
 create mode 100644 .gh-issues/00004_451589876.json
 create mode 100644 .gh-issues/00004_452030290.json
 create mode 100644 .gh-issues/00005.json
 create mode 100644 .gh-issues/00010.json
 create mode 100644 .gh-issues/00010_454417555.json
 create mode 100644 .gh-issues/00010_545477119.json
 create mode 100644 .gh-issues/00010_545523060.json
 create mode 100644 .gh-issues/00010_546160936.json
 create mode 100644 .gh-issues/00010_546360493.json
 create mode 100644 .gh-issues/00010_546361995.json
 create mode 100644 .gh-issues/00011.json
 create mode 100644 .gh-issues/00011_470109924.json
 create mode 100644 .gh-issues/00011_470122199.json
 create mode 100644 .gh-issues/00011_552099532.json
 create mode 100644 .gh-issues/00013.json
 create mode 100644 .gh-issues/00013_457966310.json
 create mode 100644 .gh-issues/00013_461387800.json
 create mode 100644 .gh-issues/00013_479955986.json
 create mode 100644 .gh-issues/00013_479963992.json
 create mode 100644 .gh-issues/00013_480357413.json
 create mode 100644 .gh-issues/00013_480358431.json
 create mode 100644 .gh-issues/00013_482986737.json
 create mode 100644 .gh-issues/00013_541970704.json
 create mode 100644 .gh-issues/00013_546987100.json
 create mode 100644 .gh-issues/00013_547021681.json
 create mode 100644 .gh-issues/00013_547079918.json
 create mode 100644 .gh-issues/00013_547085811.json
 create mode 100644 .gh-issues/00013_547223402.json
 create mode 100644 .gh-issues/00013_547299775.json
 create mode 100644 .gh-issues/00013_547433053.json
 create mode 100644 .gh-issues/00013_550970904.json
 create mode 100644 .gh-issues/00013_550975231.json
 create mode 100644 .gh-issues/00013_551256069.json
 create mode 100644 .gh-issues/00013_551309467.json
 create mode 100644 .gh-issues/00013_552100904.json
 create mode 100644 .gh-issues/00013_552188915.json
 create mode 100644 .gh-issues/00013_552199968.json
 create mode 100644 .gh-issues/00013_552202988.json
 create mode 100644 .gh-issues/00013_552208754.json
 create mode 100644 .gh-issues/00013_552220455.json
 create mode 100644 .gh-issues/00013_552680753.json
 create mode 100644 .gh-issues/00013_552681182.json
 create mode 100644 .gh-issues/00013_553046507.json
 create mode 100644 .gh-issues/00013_553061307.json
 create mode 100644 .gh-issues/00013_553069359.json
 create mode 100644 .gh-issues/00013_553171120.json
 create mode 100644 .gh-issues/00013_553171330.json
 create mode 100644 .gh-issues/00013_553173000.json
 create mode 100644 .gh-issues/00013_553518818.json
 create mode 100644 .gh-issues/00013_553540440.json
 create mode 100644 .gh-issues/00013_553546826.json
 create mode 100644 .gh-issues/00013_553556651.json
 create mode 100644 .gh-issues/00013_553561683.json
 create mode 100644 .gh-issues/00013_553562731.json
 create mode 100644 .gh-issues/00013_553573665.json
 create mode 100644 .gh-issues/00013_553804283.json
 create mode 100644 .gh-issues/00013_553941518.json
 create mode 100644 .gh-issues/00013_554099114.json
 create mode 100644 .gh-issues/00013_554518371.json
 create mode 100644 .gh-issues/00013_554607063.json
 create mode 100644 .gh-issues/00013_554614687.json
 create mode 100644 .gh-issues/00013_554616056.json
 create mode 100644 .gh-issues/00013_554621943.json
 create mode 100644 .gh-issues/00013_554624545.json
 create mode 100644 .gh-issues/00013_554651883.json
 create mode 100644 .gh-issues/00013_554653283.json
 create mode 100644 .gh-issues/00013_554673460.json
 create mode 100644 .gh-issues/00013_554674998.json
 create mode 100644 .gh-issues/00013_554687986.json
 create mode 100644 .gh-issues/00013_554769555.json
 create mode 100644 .gh-issues/00013_554934893.json
 create mode 100644 .gh-issues/00013_554937072.json
 create mode 100644 .gh-issues/00013_554990848.json
 create mode 100644 .gh-issues/00013_555400794.json
 create mode 100644 .gh-issues/00013_555567882.json
 create mode 100644 .gh-issues/00013_555946386.json
 create mode 100644 .gh-issues/00013_556534134.json
 create mode 100644 .gh-issues/00014.json
 create mode 100644 .gh-issues/00014_498567897.json
 create mode 100644 .gh-issues/00014_498691816.json
 create mode 100644 .gh-issues/00014_542159128.json
 create mode 100644 .gh-issues/00014_542165307.json
 create mode 100644 .gh-issues/00014_542166128.json
 create mode 100644 .gh-issues/00014_547105060.json
 create mode 100644 .gh-issues/00014_552099743.json
 create mode 100644 .gh-issues/00014_552157798.json
 create mode 100644 .gh-issues/00014_552176812.json
 create mode 100644 .gh-issues/00014_552188678.json
 create mode 100644 .gh-issues/00057.json
 create mode 100644 .gh-issues/00058.json
 create mode 100644 .gh-issues/00058_468015680.json
 create mode 100644 .gh-issues/00058_468019282.json
 create mode 100644 .gh-issues/00058_468028062.json
 create mode 100644 .gh-issues/00058_468043718.json
 create mode 100644 .gh-issues/00058_468107920.json
 create mode 100644 .gh-issues/00058_468877643.json
 create mode 100644 .gh-issues/00058_506510057.json
 create mode 100644 .gh-issues/00058_506511221.json
 create mode 100644 .gh-issues/00058_506511880.json
 create mode 100644 .gh-issues/00058_506513825.json
 create mode 100644 .gh-issues/00058_506514079.json
 create mode 100644 .gh-issues/00058_506514191.json
 create mode 100644 .gh-issues/00058_506547366.json
 create mode 100644 .gh-issues/00058_506563373.json
 create mode 100644 .gh-issues/00058_506585419.json
 create mode 100644 .gh-issues/00063.json
 create mode 100644 .gh-issues/00063_478322655.json
 create mode 100644 .gh-issues/00064.json
 create mode 100644 .gh-issues/00064_478322595.json
 create mode 100644 .gh-issues/00064_501232247.json
 create mode 100644 .gh-issues/00065.json
 create mode 100644 .gh-issues/00065_478298217.json
 create mode 100644 .gh-issues/00065_478304847.json
 create mode 100644 .gh-issues/00065_478318849.json
 create mode 100644 .gh-issues/00065_478331595.json
 create mode 100644 .gh-issues/00065_478333052.json
 create mode 100644 .gh-issues/00065_478334154.json
 create mode 100644 .gh-issues/00065_478340492.json
 create mode 100644 .gh-issues/00065_478343876.json
 create mode 100644 .gh-issues/00065_478345480.json
 create mode 100644 .gh-issues/00065_478353061.json
 create mode 100644 .gh-issues/00065_478357168.json
 create mode 100644 .gh-issues/00065_478363926.json
 create mode 100644 .gh-issues/00065_478368643.json
 create mode 100644 .gh-issues/00067.json
 create mode 100644 .gh-issues/00067_478707443.json
 create mode 100644 .gh-issues/00067_479447618.json
 create mode 100644 .gh-issues/00067_490231004.json
 create mode 100644 .gh-issues/00067_495187312.json
 create mode 100644 .gh-issues/00068.json
 create mode 100644 .gh-issues/00077.json
 create mode 100644 .gh-issues/00078.json
 create mode 100644 .gh-issues/00078_496693823.json
 create mode 100644 .gh-issues/00078_496723650.json
 create mode 100644 .gh-issues/00078_496725924.json
 create mode 100644 .gh-issues/00078_496932666.json
 create mode 100644 .gh-issues/00078_496978994.json
 create mode 100644 .gh-issues/00078_497037284.json
 create mode 100644 .gh-issues/00078_497354676.json
 create mode 100644 .gh-issues/00078_497360799.json
 create mode 100644 .gh-issues/00078_497386051.json
 create mode 100644 .gh-issues/00078_497388694.json
 create mode 100644 .gh-issues/00078_497391245.json
 create mode 100644 .gh-issues/00078_497391370.json
 create mode 100644 .gh-issues/00078_497393690.json
 create mode 100644 .gh-issues/00078_497431639.json
 create mode 100644 .gh-issues/00078_497664297.json
 create mode 100644 .gh-issues/00078_497670050.json
 create mode 100644 .gh-issues/00079.json
 create mode 100644 .gh-issues/00079_497923053.json
 create mode 100644 .gh-issues/00079_498304166.json
 create mode 100644 .gh-issues/00079_498397801.json
 create mode 100644 .gh-issues/00079_498406886.json
 create mode 100644 .gh-issues/00079_498815227.json
 create mode 100644 .gh-issues/00079_500910226.json
 create mode 100644 .gh-issues/00079_501734141.json
 create mode 100644 .gh-issues/00079_501829867.json
 create mode 100644 .gh-issues/00079_501829904.json
 create mode 100644 .gh-issues/00080.json
 create mode 100644 .gh-issues/00080_499126658.json
 create mode 100644 .gh-issues/00080_499165887.json
 create mode 100644 .gh-issues/00080_499284977.json
 create mode 100644 .gh-issues/00080_499293533.json
 create mode 100644 .gh-issues/00080_499310927.json
 create mode 100644 .gh-issues/00080_499312038.json
 create mode 100644 .gh-issues/00080_499347882.json
 create mode 100644 .gh-issues/00080_499378058.json
 create mode 100644 .gh-issues/00080_499592498.json
 create mode 100644 .gh-issues/00080_499847317.json
 create mode 100644 .gh-issues/00080_499887259.json
 create mode 100644 .gh-issues/00080_499935145.json
 create mode 100644 .gh-issues/00080_499938359.json
 create mode 100644 .gh-issues/00080_499943006.json
 create mode 100644 .gh-issues/00080_500372684.json
 create mode 100644 .gh-issues/00080_500882171.json
 create mode 100644 .gh-issues/00080_501883418.json
 create mode 100644 .gh-issues/00080_502073002.json
 create mode 100644 .gh-issues/00083.json
 create mode 100644 .gh-issues/00083_502405077.json
 create mode 100644 .gh-issues/00083_502412123.json
 create mode 100644 .gh-issues/00083_502431049.json
 create mode 100644 .gh-issues/00083_502435249.json
 create mode 100644 .gh-issues/00083_502648849.json
 create mode 100644 .gh-issues/00083_503158600.json
 create mode 100644 .gh-issues/00083_503685354.json
 create mode 100644 .gh-issues/00083_503689145.json
 create mode 100644 .gh-issues/00083_504067370.json
 create mode 100644 .gh-issues/00084.json
 create mode 100644 .gh-issues/00084_503685057.json
 create mode 100644 .gh-issues/00084_503762401.json
 create mode 100644 .gh-issues/00091.json
 create mode 100644 .gh-issues/00091_506396592.json
 create mode 100644 .gh-issues/00098.json
 create mode 100644 .gh-issues/00098_506822967.json
 create mode 100644 .gh-issues/00098_542156547.json
 create mode 100644 .gh-issues/00109.json
 create mode 100644 .gh-issues/00109_545476299.json
 create mode 100644 .gh-issues/00109_545522317.json
 create mode 100644 .gh-issues/00130.json
 create mode 100644 .gh-issues/00130_521612901.json
 create mode 100644 .gh-issues/00130_522249929.json
 create mode 100644 .gh-issues/00130_522301713.json
 create mode 100644 .gh-issues/00130_523974194.json
 create mode 100644 .gh-issues/00130_524318819.json
 create mode 100644 .gh-issues/00130_527336109.json
 create mode 100644 .gh-issues/00130_529475692.json
 create mode 100644 .gh-issues/00130_530048547.json
 create mode 100644 .gh-issues/00130_530090038.json
 create mode 100644 .gh-issues/00130_530300631.json
 create mode 100644 .gh-issues/00130_530413922.json
 create mode 100644 .gh-issues/00130_530505642.json
 create mode 100644 .gh-issues/00130_531147233.json
 create mode 100644 .gh-issues/00130_538779821.json
 create mode 100644 .gh-issues/00131.json
 create mode 100644 .gh-issues/00131_529164498.json
 create mode 100644 .gh-issues/00131_529398677.json
 create mode 100644 .gh-issues/00131_545929671.json
 create mode 100644 .gh-issues/00131_546063923.json
 create mode 100644 .gh-issues/00131_546200510.json
 create mode 100644 .gh-issues/00131_546456254.json
 create mode 100644 .gh-issues/00131_551282334.json
 create mode 100644 .gh-issues/00133.json
 create mode 100644 .gh-issues/00133_528286602.json
 create mode 100644 .gh-issues/00133_528287832.json
 create mode 100644 .gh-issues/00133_528294862.json
 create mode 100644 .gh-issues/00133_528417996.json
 create mode 100644 .gh-issues/00133_529147513.json
 create mode 100644 .gh-issues/00133_529399474.json
 create mode 100644 .gh-issues/00133_530680302.json
 create mode 100644 .gh-issues/00135.json
 create mode 100644 .gh-issues/00135_533198102.json
 create mode 100644 .gh-issues/00135_544389955.json
 create mode 100644 .gh-issues/00135_544434604.json
 create mode 100644 .gh-issues/00135_544435714.json
 create mode 100644 .gh-issues/00135_544437320.json
 create mode 100644 .gh-issues/00135_544438577.json
 create mode 100644 .gh-issues/00135_544440405.json
 create mode 100644 .gh-issues/00135_544455151.json
 create mode 100644 .gh-issues/00135_544614307.json
 create mode 100644 .gh-issues/00135_544614559.json
 create mode 100644 .gh-issues/00135_544618759.json
 create mode 100644 .gh-issues/00135_544618924.json
 create mode 100644 .gh-issues/00135_544958895.json
 create mode 100644 .gh-issues/00135_545929697.json
 create mode 100644 .gh-issues/00135_545942498.json
 create mode 100644 .gh-issues/00135_545973588.json
 create mode 100644 .gh-issues/00138.json
 create mode 100644 .gh-issues/00138_551165496.json
 create mode 100644 .gh-issues/00140.json
 create mode 100644 .gh-issues/00140_552095978.json
 create mode 100644 .gh-issues/00140_552189104.json
 create mode 100644 .gh-issues/00143.json
 create mode 100644 .gh-issues/00143_543809233.json
 create mode 100644 .gh-issues/00143_543813173.json
 create mode 100644 .gh-issues/00143_543826639.json
 create mode 100644 .gh-issues/00143_543850251.json
 create mode 100644 .gh-issues/00143_544006547.json
 create mode 100644 .gh-issues/00144.json
 create mode 100644 .gh-issues/00146.json
 create mode 100644 .gh-issues/00146_546161401.json
 create mode 100644 .gh-issues/00147.json
 create mode 100644 .gh-issues/00147_546044952.json
 create mode 100644 .gh-issues/00147_546048265.json
 create mode 100644 .gh-issues/00147_546063546.json
 create mode 100644 .gh-issues/00148.json
 create mode 100644 .gh-issues/00164.json
 create mode 100644 .gh-issues/00164_550079519.json
 create mode 100644 .gh-issues/00164_551234315.json
 create mode 100644 .gh-issues/00164_551235502.json
 create mode 100644 .gh-issues/00164_551270459.json
 create mode 100644 .gh-issues/00165.json
 create mode 100644 .gh-issues/00165_549712240.json
 create mode 100644 .gh-issues/00165_549762634.json
 create mode 100644 .gh-issues/00165_549830074.json
 create mode 100644 .gh-issues/00165_549945386.json
 create mode 100644 .gh-issues/00165_549953503.json
 create mode 100644 .gh-issues/00165_549954201.json
 create mode 100644 .gh-issues/00165_549957719.json
 create mode 100644 .gh-issues/00165_549964961.json
 create mode 100644 .gh-issues/00165_549968110.json
 create mode 100644 .gh-issues/00165_550166964.json
 create mode 100644 .gh-issues/00165_550167270.json
 create mode 100644 .gh-issues/00165_550233349.json
 create mode 100644 .gh-issues/00165_550337662.json
 create mode 100644 .gh-issues/00165_550395264.json
 create mode 100644 .gh-issues/00165_550416455.json
 create mode 100644 .gh-issues/00165_550420695.json
 create mode 100644 .gh-issues/00165_550421948.json
 create mode 100644 .gh-issues/00165_550445884.json
 create mode 100644 .gh-issues/00165_550477706.json
 create mode 100644 .gh-issues/00165_550493899.json
 create mode 100644 .gh-issues/00165_550494245.json
 create mode 100644 .gh-issues/00165_550497827.json
 create mode 100644 .gh-issues/00165_550503103.json
 create mode 100644 .gh-issues/00165_550503263.json
 create mode 100644 .gh-issues/00165_550512034.json
 create mode 100644 .gh-issues/00165_550514394.json
 create mode 100644 .gh-issues/00165_550525921.json
 create mode 100644 .gh-issues/00165_550536197.json
 create mode 100644 .gh-issues/00165_550560138.json
 create mode 100644 .gh-issues/00165_550566925.json
 create mode 100644 .gh-issues/00165_550569920.json
 create mode 100644 .gh-issues/00165_550975359.json
 create mode 100644 .gh-issues/00165_550985428.json
 create mode 100644 .gh-issues/00165_551108185.json
 create mode 100644 .gh-issues/00165_551113571.json
 create mode 100644 .gh-issues/00165_551115076.json
 create mode 100644 .gh-issues/00165_551202945.json
 create mode 100644 .gh-issues/00165_551204630.json
 create mode 100644 .gh-issues/00165_551221674.json
 create mode 100644 .gh-issues/00165_551221887.json
 create mode 100644 .gh-issues/00165_551225101.json
 create mode 100644 .gh-issues/00165_551227970.json
 create mode 100644 .gh-issues/00165_551231468.json
 create mode 100644 .gh-issues/00165_551231538.json
 create mode 100644 .gh-issues/00165_551231596.json
 create mode 100644 .gh-issues/00165_551232945.json
 create mode 100644 .gh-issues/00165_551234140.json
 create mode 100644 .gh-issues/00165_551234278.json
 create mode 100644 .gh-issues/00165_551235287.json
 create mode 100644 .gh-issues/00165_551239088.json
 create mode 100644 .gh-issues/00165_551239483.json
 create mode 100644 .gh-issues/00165_551243927.json
 create mode 100644 .gh-issues/00165_551248154.json
 create mode 100644 .gh-issues/00165_551250029.json
 create mode 100644 .gh-issues/00165_551250255.json
 create mode 100644 .gh-issues/00165_551324511.json
 create mode 100644 .gh-issues/00165_551327888.json
 create mode 100644 .gh-issues/00165_551332344.json
 create mode 100644 .gh-issues/00165_551340974.json
 create mode 100644 .gh-issues/00165_551344143.json
 create mode 100644 .gh-issues/00165_551794125.json
 create mode 100644 .gh-issues/00165_551822854.json
 create mode 100644 .gh-issues/00165_551841775.json
 create mode 100644 .gh-issues/00165_551851451.json
 create mode 100644 .gh-issues/00165_551875772.json
 create mode 100644 .gh-issues/00165_551889563.json
 create mode 100644 .gh-issues/00165_551936744.json
 create mode 100644 .gh-issues/00165_551948963.json
 create mode 100644 .gh-issues/00165_551949483.json
 create mode 100644 .gh-issues/00165_551952025.json
 create mode 100644 .gh-issues/00165_551954165.json
 create mode 100644 .gh-issues/00165_551954543.json
 create mode 100644 .gh-issues/00165_551954653.json
 create mode 100644 .gh-issues/00165_551989761.json
 create mode 100644 .gh-issues/00165_552197925.json
 create mode 100644 .gh-issues/00165_552224292.json
 create mode 100644 .gh-issues/00169.json
 create mode 100644 .gh-issues/00172.json
 create mode 100644 .gh-issues/00172_550956635.json
 create mode 100644 .gh-issues/00172_550958236.json
 create mode 100644 .gh-issues/00172_551099002.json
 create mode 100644 .gh-issues/00172_551374490.json
 create mode 100644 .gh-issues/00172_551868772.json
 create mode 100644 .gh-issues/00172_551991972.json
 create mode 100644 .gh-issues/00174.json
 create mode 100644 .gh-issues/00174_551172615.json
 create mode 100644 .gh-issues/00174_551177759.json
 create mode 100644 .gh-issues/00174_551179805.json
 create mode 100644 .gh-issues/00174_551224286.json
 create mode 100644 .gh-issues/00174_551225415.json
 create mode 100644 .gh-issues/00174_551226123.json
 create mode 100644 .gh-issues/00174_551227943.json
 create mode 100644 .gh-issues/00174_551374583.json
 create mode 100644 .gh-issues/00174_552330153.json
 create mode 100644 .gh-issues/00174_552345774.json
 create mode 100644 .gh-issues/00174_552681101.json
 create mode 100644 .gh-issues/00174_553184368.json
 create mode 100644 .gh-issues/00174_554650134.json
 create mode 100644 .gh-issues/00174_557064663.json
 create mode 100644 .gh-issues/00174_557106181.json
 create mode 100644 .gh-issues/00174_557152805.json
 create mode 100644 .gh-issues/00174_557178417.json
 create mode 100644 .gh-issues/00174_557179731.json
 create mode 100644 .gh-issues/00174_557180213.json
 create mode 100644 .gh-issues/00174_557182004.json
 create mode 100644 .gh-issues/00174_557183152.json
 create mode 100644 .gh-issues/00174_557256428.json
 create mode 100644 .gh-issues/00174_557264592.json
 create mode 100644 .gh-issues/00174_557340088.json
 create mode 100644 .gh-issues/00174_557347596.json
 create mode 100644 .gh-issues/00175.json
 create mode 100644 .gh-issues/00175_551315327.json
 create mode 100644 .gh-issues/00175_552188293.json
 create mode 100644 .gh-issues/00175_552192373.json
 create mode 100644 .gh-issues/00177.json
 create mode 100644 .gh-issues/00177_551315383.json
 create mode 100644 .gh-issues/00177_551317526.json
 create mode 100644 .gh-issues/00177_551323452.json
 create mode 100644 .gh-issues/00177_552188433.json
 create mode 100644 .gh-issues/00182.json
 create mode 100644 .gh-issues/00182_553198972.json
 create mode 100644 .gh-issues/00188.json
 create mode 100644 .gh-issues/00190.json
 create mode 100644 .gh-issues/00195.json
 create mode 100644 .gh-issues/00195_557189510.json
 create mode 100644 .gh-issues/00195_557193614.json
 create mode 100644 .gh-issues/00195_557195252.json
 create mode 100644 .gh-issues/00195_557205129.json
 create mode 100644 .gh-pullrequests/.state
 create mode 100644 .gh-pullrequests/00008.json
 create mode 100644 .gh-pullrequests/00008.patch
 create mode 100644 .gh-pullrequests/00008_452259834.json
 create mode 100644 .gh-pullrequests/00008_452283600.json
 create mode 100644 .gh-pullrequests/00008_452305311.json
 create mode 100644 .gh-pullrequests/00008_452306778.json
 create mode 100644 .gh-pullrequests/00008_452420847.json
 create mode 100644 .gh-pullrequests/00008_452421390.json
 create mode 100644 .gh-pullrequests/00008_452432584.json
 create mode 100644 .gh-pullrequests/00008_452443302.json
 create mode 100644 .gh-pullrequests/00008_452447368.json
 create mode 100644 .gh-pullrequests/00008_452459302.json
 create mode 100644 .gh-pullrequests/00008_453086727.json
 create mode 100644 .gh-pullrequests/00008_453095320.json
 create mode 100644 .gh-pullrequests/00008_453134244.json
 create mode 100644 .gh-pullrequests/00008_453714749.json
 create mode 100644 .gh-pullrequests/00008_453716507.json
 create mode 100644 .gh-pullrequests/00008_461321539.json
 create mode 100644 .gh-pullrequests/00008_509382935.json
 create mode 100644 .gh-pullrequests/00008_547107733.json
 create mode 100644 .gh-pullrequests/00081.json
 create mode 100644 .gh-pullrequests/00081.patch
 create mode 100644 .gh-pullrequests/00081_499916493.json
 create mode 100644 .gh-pullrequests/00081_500184764.json
 create mode 100644 .gh-pullrequests/00081_500742531.json
 create mode 100644 .gh-pullrequests/00081_506971077.json
 create mode 100644 .gh-pullrequests/00086.json
 create mode 100644 .gh-pullrequests/00086.patch
 create mode 100644 .gh-pullrequests/00103.json
 create mode 100644 .gh-pullrequests/00103.patch
 create mode 100644 .gh-pullrequests/00108.json
 create mode 100644 .gh-pullrequests/00108.patch
 create mode 100644 .gh-pullrequests/00110.json
 create mode 100644 .gh-pullrequests/00110.patch
 create mode 100644 .gh-pullrequests/00111.json
 create mode 100644 .gh-pullrequests/00111.patch
 create mode 100644 .gh-pullrequests/00112.json
 create mode 100644 .gh-pullrequests/00112.patch
 create mode 100644 .gh-pullrequests/00112_513608398.json
 create mode 100644 .gh-pullrequests/00112_519483906.json
 create mode 100644 .gh-pullrequests/00113.json
 create mode 100644 .gh-pullrequests/00113.patch
 create mode 100644 .gh-pullrequests/00114.json
 create mode 100644 .gh-pullrequests/00114.patch
 create mode 100644 .gh-pullrequests/00115.json
 create mode 100644 .gh-pullrequests/00115.patch
 create mode 100644 .gh-pullrequests/00116.json
 create mode 100644 .gh-pullrequests/00116.patch
 create mode 100644 .gh-pullrequests/00117.json
 create mode 100644 .gh-pullrequests/00117.patch
 create mode 100644 .gh-pullrequests/00118.json
 create mode 100644 .gh-pullrequests/00118.patch
 create mode 100644 .gh-pullrequests/00118_515313926.json
 create mode 100644 .gh-pullrequests/00118_515641078.json
 create mode 100644 .gh-pullrequests/00118_515641213.json
 create mode 100644 .gh-pullrequests/00119.json
 create mode 100644 .gh-pullrequests/00119.patch
 create mode 100644 .gh-pullrequests/00120.json
 create mode 100644 .gh-pullrequests/00120.patch
 create mode 100644 .gh-pullrequests/00121.json
 create mode 100644 .gh-pullrequests/00121.patch
 create mode 100644 .gh-pullrequests/00122.json
 create mode 100644 .gh-pullrequests/00122.patch
 create mode 100644 .gh-pullrequests/00123.json
 create mode 100644 .gh-pullrequests/00123.patch
 create mode 100644 .gh-pullrequests/00124.json
 create mode 100644 .gh-pullrequests/00124.patch
 create mode 100644 .gh-pullrequests/00125.json
 create mode 100644 .gh-pullrequests/00125.patch
 create mode 100644 .gh-pullrequests/00126.json
 create mode 100644 .gh-pullrequests/00126.patch
 create mode 100644 .gh-pullrequests/00126_518596232.json
 create mode 100644 .gh-pullrequests/00127.json
 create mode 100644 .gh-pullrequests/00127.patch
 create mode 100644 .gh-pullrequests/00127_518961000.json
 create mode 100644 .gh-pullrequests/00127_520447584.json
 create mode 100644 .gh-pullrequests/00128.json
 create mode 100644 .gh-pullrequests/00128.patch
 create mode 100644 .gh-pullrequests/00129.json
 create mode 100644 .gh-pullrequests/00129.patch
 create mode 100644 .gh-pullrequests/00132.json
 create mode 100644 .gh-pullrequests/00132.patch
 create mode 100644 .gh-pullrequests/00134.json
 create mode 100644 .gh-pullrequests/00134.patch
 create mode 100644 .gh-pullrequests/00134_536342773.json
 create mode 100644 .gh-pullrequests/00134_538822293.json
 create mode 100644 .gh-pullrequests/00134_538843790.json
 create mode 100644 .gh-pullrequests/00134_538847421.json
 create mode 100644 .gh-pullrequests/00134_538853176.json
 create mode 100644 .gh-pullrequests/00136.json
 create mode 100644 .gh-pullrequests/00136.patch
 create mode 100644 .gh-pullrequests/00137.json
 create mode 100644 .gh-pullrequests/00137.patch
 create mode 100644 .gh-pullrequests/00137_531786392.json
 create mode 100644 .gh-pullrequests/00137_532824144.json
 create mode 100644 .gh-pullrequests/00139.json
 create mode 100644 .gh-pullrequests/00139.patch
 create mode 100644 .gh-pullrequests/00141.json
 create mode 100644 .gh-pullrequests/00141.patch
 create mode 100644 .gh-pullrequests/00141_539057711.json
 create mode 100644 .gh-pullrequests/00141_539520136.json
 create mode 100644 .gh-pullrequests/00141_539711590.json
 create mode 100644 .gh-pullrequests/00141_539809072.json
 create mode 100644 .gh-pullrequests/00141_545528648.json
 create mode 100644 .gh-pullrequests/00142.json
 create mode 100644 .gh-pullrequests/00142.patch
 create mode 100644 .gh-pullrequests/00142_538861862.json
 create mode 100644 .gh-pullrequests/00142_538863266.json
 create mode 100644 .gh-pullrequests/00142_538866464.json
 create mode 100644 .gh-pullrequests/00142_539788921.json
 create mode 100644 .gh-pullrequests/00145.json
 create mode 100644 .gh-pullrequests/00145.patch
 create mode 100644 .gh-pullrequests/00149.json
 create mode 100644 .gh-pullrequests/00149.patch
 create mode 100644 .gh-pullrequests/00150.json
 create mode 100644 .gh-pullrequests/00150.patch
 create mode 100644 .gh-pullrequests/00151.json
 create mode 100644 .gh-pullrequests/00151.patch
 create mode 100644 .gh-pullrequests/00152.json
 create mode 100644 .gh-pullrequests/00152.patch
 create mode 100644 .gh-pullrequests/00153.json
 create mode 100644 .gh-pullrequests/00153.patch
 create mode 100644 .gh-pullrequests/00154.json
 create mode 100644 .gh-pullrequests/00154.patch
 create mode 100644 .gh-pullrequests/00154_546026299.json
 create mode 100644 .gh-pullrequests/00155.json
 create mode 100644 .gh-pullrequests/00155.patch
 create mode 100644 .gh-pullrequests/00155_546224302.json
 create mode 100644 .gh-pullrequests/00155_546331115.json
 create mode 100644 .gh-pullrequests/00156.json
 create mode 100644 .gh-pullrequests/00156.patch
 create mode 100644 .gh-pullrequests/00157.json
 create mode 100644 .gh-pullrequests/00157.patch
 create mode 100644 .gh-pullrequests/00158.json
 create mode 100644 .gh-pullrequests/00158.patch
 create mode 100644 .gh-pullrequests/00159.json
 create mode 100644 .gh-pullrequests/00159.patch
 create mode 100644 .gh-pullrequests/00160.json
 create mode 100644 .gh-pullrequests/00160.patch
 create mode 100644 .gh-pullrequests/00161.json
 create mode 100644 .gh-pullrequests/00161.patch
 create mode 100644 .gh-pullrequests/00161_549030022.json
 create mode 100644 .gh-pullrequests/00161_549030915.json
 create mode 100644 .gh-pullrequests/00161_549142972.json
 create mode 100644 .gh-pullrequests/00161_549153989.json
 create mode 100644 .gh-pullrequests/00161_549842935.json
 create mode 100644 .gh-pullrequests/00161_550063173.json
 create mode 100644 .gh-pullrequests/00161_550064742.json
 create mode 100644 .gh-pullrequests/00162.json
 create mode 100644 .gh-pullrequests/00162.patch
 create mode 100644 .gh-pullrequests/00162_549470048.json
 create mode 100644 .gh-pullrequests/00162_549511849.json
 create mode 100644 .gh-pullrequests/00162_549619457.json
 create mode 100644 .gh-pullrequests/00163.json
 create mode 100644 .gh-pullrequests/00163.patch
 create mode 100644 .gh-pullrequests/00163_549614602.json
 create mode 100644 .gh-pullrequests/00163_549617969.json
 create mode 100644 .gh-pullrequests/00163_549664670.json
 create mode 100644 .gh-pullrequests/00163_549681896.json
 create mode 100644 .gh-pullrequests/00163_549704201.json
 create mode 100644 .gh-pullrequests/00163_549874465.json
 create mode 100644 .gh-pullrequests/00163_549954085.json
 create mode 100644 .gh-pullrequests/00163_550028785.json
 create mode 100644 .gh-pullrequests/00163_550029736.json
 create mode 100644 .gh-pullrequests/00163_550034839.json
 create mode 100644 .gh-pullrequests/00163_550052609.json
 create mode 100644 .gh-pullrequests/00163_550054720.json
 create mode 100644 .gh-pullrequests/00163_550220341.json
 create mode 100644 .gh-pullrequests/00163_550230694.json
 create mode 100644 .gh-pullrequests/00163_550231091.json
 create mode 100644 .gh-pullrequests/00163_550352729.json
 create mode 100644 .gh-pullrequests/00163_550354406.json
 create mode 100644 .gh-pullrequests/00163_550391849.json
 create mode 100644 .gh-pullrequests/00163_550399974.json
 create mode 100644 .gh-pullrequests/00163_550401511.json
 create mode 100644 .gh-pullrequests/00163_550403291.json
 create mode 100644 .gh-pullrequests/00163_550403649.json
 create mode 100644 .gh-pullrequests/00163_550406142.json
 create mode 100644 .gh-pullrequests/00163_550415954.json
 create mode 100644 .gh-pullrequests/00163_550446098.json
 create mode 100644 .gh-pullrequests/00163_550553396.json
 create mode 100644 .gh-pullrequests/00163_550558039.json
 create mode 100644 .gh-pullrequests/00163_550558963.json
 create mode 100644 .gh-pullrequests/00163_550559689.json
 create mode 100644 .gh-pullrequests/00163_550561128.json
 create mode 100644 .gh-pullrequests/00163_550564417.json
 create mode 100644 .gh-pullrequests/00163_550592946.json
 create mode 100644 .gh-pullrequests/00163_551057781.json
 create mode 100644 .gh-pullrequests/00163_551092099.json
 create mode 100644 .gh-pullrequests/00163_551098432.json
 create mode 100644 .gh-pullrequests/00163_551107027.json
 create mode 100644 .gh-pullrequests/00163_551237464.json
 create mode 100644 .gh-pullrequests/00163_551244560.json
 create mode 100644 .gh-pullrequests/00163_551273501.json
 create mode 100644 .gh-pullrequests/00163_551293674.json
 create mode 100644 .gh-pullrequests/00163_551344366.json
 create mode 100644 .gh-pullrequests/00163_551355071.json
 create mode 100644 .gh-pullrequests/00163_551372349.json
 create mode 100644 .gh-pullrequests/00163_552037491.json
 create mode 100644 .gh-pullrequests/00163_552067393.json
 create mode 100644 .gh-pullrequests/00166.json
 create mode 100644 .gh-pullrequests/00166.patch
 create mode 100644 .gh-pullrequests/00167.json
 create mode 100644 .gh-pullrequests/00167.patch
 create mode 100644 .gh-pullrequests/00168.json
 create mode 100644 .gh-pullrequests/00168.patch
 create mode 100644 .gh-pullrequests/00170.json
 create mode 100644 .gh-pullrequests/00170.patch
 create mode 100644 .gh-pullrequests/00170_550490371.json
 create mode 100644 .gh-pullrequests/00170_550496434.json
 create mode 100644 .gh-pullrequests/00171.json
 create mode 100644 .gh-pullrequests/00171.patch
 create mode 100644 .gh-pullrequests/00171_550591771.json
 create mode 100644 .gh-pullrequests/00171_550776335.json
 create mode 100644 .gh-pullrequests/00171_550843550.json
 create mode 100644 .gh-pullrequests/00173.json
 create mode 100644 .gh-pullrequests/00173.patch
 create mode 100644 .gh-pullrequests/00176.json
 create mode 100644 .gh-pullrequests/00176.patch
 create mode 100644 .gh-pullrequests/00178.json
 create mode 100644 .gh-pullrequests/00178.patch
 create mode 100644 .gh-pullrequests/00179.json
 create mode 100644 .gh-pullrequests/00179.patch
 create mode 100644 .gh-pullrequests/00179_552929250.json
 create mode 100644 .gh-pullrequests/00179_553068137.json
 create mode 100644 .gh-pullrequests/00180.json
 create mode 100644 .gh-pullrequests/00180.patch
 create mode 100644 .gh-pullrequests/00180_552150448.json
 create mode 100644 .gh-pullrequests/00180_552152293.json
 create mode 100644 .gh-pullrequests/00180_552188503.json
 create mode 100644 .gh-pullrequests/00180_552209023.json
 create mode 100644 .gh-pullrequests/00180_552574962.json
 create mode 100644 .gh-pullrequests/00180_552586684.json
 create mode 100644 .gh-pullrequests/00180_552835159.json
 create mode 100644 .gh-pullrequests/00180_553491170.json
 create mode 100644 .gh-pullrequests/00181.json
 create mode 100644 .gh-pullrequests/00181.patch
 create mode 100644 .gh-pullrequests/00183.json
 create mode 100644 .gh-pullrequests/00183.patch
 create mode 100644 .gh-pullrequests/00183_553203245.json
 create mode 100644 .gh-pullrequests/00184.json
 create mode 100644 .gh-pullrequests/00184.patch
 create mode 100644 .gh-pullrequests/00185.json
 create mode 100644 .gh-pullrequests/00185.patch
 create mode 100644 .gh-pullrequests/00185_554483688.json
 create mode 100644 .gh-pullrequests/00185_554484264.json
 create mode 100644 .gh-pullrequests/00185_554498810.json
 create mode 100644 .gh-pullrequests/00185_554560687.json
 create mode 100644 .gh-pullrequests/00185_554561154.json
 create mode 100644 .gh-pullrequests/00185_554584222.json
 create mode 100644 .gh-pullrequests/00185_554636117.json
 create mode 100644 .gh-pullrequests/00185_554637201.json
 create mode 100644 .gh-pullrequests/00186.json
 create mode 100644 .gh-pullrequests/00186.patch
 create mode 100644 .gh-pullrequests/00186_554649755.json
 create mode 100644 .gh-pullrequests/00187.json
 create mode 100644 .gh-pullrequests/00187.patch
 create mode 100644 .gh-pullrequests/00187_554651063.json
 create mode 100644 .gh-pullrequests/00187_554651516.json
 create mode 100644 .gh-pullrequests/00187_554651628.json
 create mode 100644 .gh-pullrequests/00187_554651902.json
 create mode 100644 .gh-pullrequests/00187_554652947.json
 create mode 100644 .gh-pullrequests/00187_554653336.json
 create mode 100644 .gh-pullrequests/00187_557183433.json
 create mode 100644 .gh-pullrequests/00189.json
 create mode 100644 .gh-pullrequests/00189.patch
 create mode 100644 .gh-pullrequests/00191.json
 create mode 100644 .gh-pullrequests/00191.patch
 create mode 100644 .gh-pullrequests/00192.json
 create mode 100644 .gh-pullrequests/00192.patch
 create mode 100644 .gh-pullrequests/00192_557323172.json
 create mode 100644 .gh-pullrequests/00192_557326356.json
 create mode 100644 .gh-pullrequests/00193.json
 create mode 100644 .gh-pullrequests/00193.patch
 create mode 100644 .gh-pullrequests/00193_557183310.json
 create mode 100644 .gh-pullrequests/00194.json
 create mode 100644 .gh-pullrequests/00194.patch
 create mode 100644 .gh-pullrequests/00194_557194760.json
 create mode 100644 .gh-pullrequests/00194_557268112.json
 create mode 100644 .gh-pullrequests/00196.json
 create mode 100644 .gh-pullrequests/00196.patch

diff --git a/.gh-issues/.state b/.gh-issues/.state
new file mode 100644
index 0000000..882f88d
--- /dev/null
+++ b/.gh-issues/.state
@@ -0,0 +1 @@
+2019-11-22T12:21:07Z
diff --git a/.gh-issues/00001.json b/.gh-issues/00001.json
new file mode 100644
index 0000000..d085c75
--- /dev/null
+++ b/.gh-issues/00001.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/1",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/1/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/1/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/1/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/1",
+    "id": 391388242,
+    "node_id": "MDU6SXNzdWUzOTEzODgyNDI=",
+    "number": 1,
+    "title": "s/ethereumproject/ethereumclassic/",
+    "user": {
+      "login": "mikeyb",
+      "id": 36461,
+      "node_id": "MDQ6VXNlcjM2NDYx",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/36461?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/mikeyb",
+      "html_url": "https://github.com/mikeyb",
+      "followers_url": "https://api.github.com/users/mikeyb/followers",
+      "following_url": "https://api.github.com/users/mikeyb/following{/other_user}",
+      "gists_url": "https://api.github.com/users/mikeyb/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/mikeyb/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/mikeyb/subscriptions",
+      "organizations_url": "https://api.github.com/users/mikeyb/orgs",
+      "repos_url": "https://api.github.com/users/mikeyb/repos",
+      "events_url": "https://api.github.com/users/mikeyb/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/mikeyb/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2018-12-15T15:38:28Z",
+    "updated_at": "2019-06-29T18:31:44Z",
+    "closed_at": "2019-06-29T18:31:44Z",
+    "author_association": "MEMBER",
+    "body": "https://github.com/ethereumclassic/ECIPs/search?q=ethereumproject&unscoped_q=ethereumproject",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/1/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00001_447987167.json b/.gh-issues/00001_447987167.json
new file mode 100644
index 0000000..19646ab
--- /dev/null
+++ b/.gh-issues/00001_447987167.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/447987167",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/1#issuecomment-447987167",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/1",
+    "id": 447987167,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzk4NzE2Nw==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2018-12-17T20:27:46Z",
+    "updated_at": "2018-12-17T20:27:46Z",
+    "author_association": "MEMBER",
+    "body": "I'll take it",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/447987167/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00003.json b/.gh-issues/00003.json
new file mode 100644
index 0000000..cbc2d1d
--- /dev/null
+++ b/.gh-issues/00003.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/3",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/3/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/3/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/3/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/3",
+    "id": 392701132,
+    "node_id": "MDU6SXNzdWUzOTI3MDExMzI=",
+    "number": 3,
+    "title": "ECIP migration",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2018-12-19T17:18:59Z",
+    "updated_at": "2019-01-13T17:46:04Z",
+    "closed_at": "2019-01-13T17:46:04Z",
+    "author_association": "MEMBER",
+    "body": "The former repository (https://github.com/ethereumproject/ECIPs) was compromised and generally inefficient.\r\n\r\nPlease transfer from captured repo if you wish your improvement to be recorded in this repo:\r\n\r\n## @sorpaas \r\n#### PR:\r\n- [x] ECIP-1000: Proposed ECIP Process\r\n- [x] ECIP-1022: Generalized Version Bits Voting for Consensus Soft and Hard Fork\r\n- [x] ECIP-1023: Combined CarbonVote and MinerVote for Consensus Soft and Hard Forks\r\n- [x] ECIP-1024: A CarbonVote and MinerVote Contract for Consensus Soft and Hard Forks\r\n- [x] ECIP-1025: Precompiled Contracts for zkSNARK Verification\r\n- [x] ECIP-1026: Modexp Precompiled Contract \r\n- [x] ECIP-1029: Include Uncles in Total Difficulty Calculation \r\n- [x] ECIP-1032: Readable Address and Transaction Hash\r\n- [x] ECIP-1033: Mnemonic code for public address\r\n- [x] ECIP-1034: Message Signing and Verification in JSON RPC \r\n- [x] ECIP-1040: Generalized Account Versioning Scheme for Hard Fork\r\n\r\n## @Dexaran \r\n\r\n#### PR:\r\n- [x] Current implementation of ECIP1021 doesn't match ERC223 token standard.\r\n\r\n#### Issues: \r\n- [ ] ECIP-?- Ethereum Classic Naming Service (ECNS)\r\n- [ ] EVM 2.0 Wasm\r\n- [ ] Integrated Random Number Generator\r\n- [ ] Voting mechanism\r\n- [ ] ERC223 Token standard\r\n- [ ] ERC: Address-to-Address messaging system protocol\r\n- [ ] On-chain registry of official media resources.\r\n\r\n## Dontpanic\r\n#### PR:\r\n- [x]  ECIP1043 Fixed DAG  \r\n\r\n#### Issues:\r\n- [x] Evaluate first round of metro hard fork \r\n- [x] ECIP-?: Extension of ecip 1010 timeline\r\n\r\n## @splix \r\n#### PR:\r\n- [x] ECIP-1027/28: Scaling ETC with Sidechains [WIP] \r\n- [x] ECIP-1042: GASPAY\r\n\r\n#### Issues:\r\n- [x] ECIP-? Atomic Transactions\r\n\r\n## @gagarin55\r\n- [x] ECIP-1019\r\n\r\n## @arvicco \r\n- [ ] ECIP-? Limit DAG growth\r\n- [ ] ECIP-? Protection from transaction replays\r\n- [x] ECIP-1017 ETC monetary policy and emission schedule\r\n\r\n## @pyskell \r\n#### issues:\r\n- [ ] Utilizing a second authentication method to prove ownership and facilitate fund recovery in the event of a theft\r\n- [ ] Adopt EIP-658\r\n\r\n\r\n## @bmann \r\n- [x] FISSION Status Codes\r\n\r\n## other\r\n- [ ] We didn't have accepted ECIP process user:ghost\r\n- [x] ECIP1011 for Replay Attack Fix Using Change in the Signing Process\r\n- [x] ECIP-1044: Formalize IPFS hash into ECNS resolver\r\n- [x] ECIP-1045: Support for ETH Byzantium & Constantinople EVM and Protocol Upgrades \r\n- [x] ECIP-1046: Precompiled contract for verification of Merkle Inclusion Proofs\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/3/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00003_453850461.json b/.gh-issues/00003_453850461.json
new file mode 100644
index 0000000..b5ad89e
--- /dev/null
+++ b/.gh-issues/00003_453850461.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/453850461",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/3#issuecomment-453850461",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/3",
+    "id": 453850461,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mzg1MDQ2MQ==",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-13T17:46:04Z",
+    "updated_at": "2019-01-13T17:46:04Z",
+    "author_association": "MEMBER",
+    "body": "updated",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/453850461/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00004.json b/.gh-issues/00004.json
new file mode 100644
index 0000000..e73b6e5
--- /dev/null
+++ b/.gh-issues/00004.json
@@ -0,0 +1,68 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/4",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/4/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/4/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/4/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/4",
+    "id": 395005806,
+    "node_id": "MDU6SXNzdWUzOTUwMDU4MDY=",
+    "number": 4,
+    "title": "ECIP-1051 Ethereum Classic Treasury system [EthereumCommonwealth]",
+    "user": {
+      "login": "Dexaran",
+      "id": 26142412,
+      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/26142412?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/Dexaran",
+      "html_url": "https://github.com/Dexaran",
+      "followers_url": "https://api.github.com/users/Dexaran/followers",
+      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
+      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
+      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
+      "repos_url": "https://api.github.com/users/Dexaran/repos",
+      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785127,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20core",
+        "name": "type: core",
+        "color": "d73a4a",
+        "default": false,
+        "description": "Requires consensus consideration"
+      }
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 7,
+    "created_at": "2018-12-31T16:49:40Z",
+    "updated_at": "2019-01-29T09:41:32Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "```\r\nECIP: ?\r\nTitle: Ethereum Classic Treasury system\r\nStatus: Draft\r\nType: Standard Track - Consensus\r\nAuthor: Dexaran, dexaran@ethereumclassic.org\r\nCreated: 2018-12-31\r\n```\r\n\r\n## Abstract\r\n\r\nThe following describes the possible implementation of a development funding mechanism.\r\n\r\n## Motivation\r\n\r\nThe crypto industry is actively developing. This also applies to Ethereum Classic. In order for the development of the project to continue it is necessary to incentivize developers to take part in it. Having a professional development team also requires a permanent source of funding.\r\n\r\nWe have a [precedent of one of the main ETC development teams being shutdown due to lack of funding](https://ethereumworldnews.com/ethereum-classic-etc-development-team-shuts-down-operations-due-to-funding/). ([announcement reference](https://twitter.com/etcdev/status/1069625401515872256?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1069625401515872256&ref_url=https%3A%2F%2Fwww.cryptoglobe.com%2Flatest%2F2018%2F12%2Fleading-ethereum-classic-dev-team-quits-due-to-lack-of-funds%2F))\r\n\r\n[Ethereum Commonwealth](https://github.com/EthereumCommonwealth), the other ETC development team, adheres to the [policy of financial transparency](https://github.com/EthereumCommonwealth/Roadmap/issues/27). According to our public financial report, you can see that we did not receive any funding since July 2017 to the end of 2018.\r\n\r\nSummarizing the above, I can conclude that a permanent source of development funding is essential for further growth and maintenance of the project and ecosystem. This source of funding should be implemented at the protocol level.\r\n\r\nThe source of funding must ensure: \r\n- *financial transparency* - this is ensured by the ability to track transactions.\r\n- *constant cash flow* which must be used to incentivize contributors to develop Ethereum Classic core OR ecosystem.\r\n- *agnosticism* - third party contributors must have access to the source of funding even if they never contributed to ETC development before.\r\n\r\n## Specification\r\n\r\n#### General\r\n\r\nThe proposed solution is based on [Callisto Network Treasury](https://whitepaper.io/document/345/callisto-network-whitepaper).\r\n\r\nCallisto Network Treasury advantages:\r\n\r\n1. Has a working implementation ([geth](https://github.com/EthereumCommonwealth/go-callisto) / [parity](https://github.com/EthereumCommonwealth/rust-callisto)) \r\n2. [Already tested](https://callisto.network/financial-report/) in real market environment.\r\n3. Simple and secure to implement/rollback.\r\n4. Compatible with ECIP-1017: ETC monetary policy.\r\n\r\n#### Technical\r\n\r\nThe proposed treasury system relies on two system addresses that receive funding at the protocol level. The protocol-level funding is a split of a base block reward. When a new block is mined, the reward is represented by three values: miner's block reward, `X` and `Y` where:\r\n\r\n- `X` goes to the first Treasury address.\r\n- `Y` goes to the second Treasury address.\r\n- `(base block reward - (X + Y))` goes to miner's address.\r\n\r\nThis is possible to implement the described scheme without changing the `base block reward`, thus keeping the original 5M20 Ethereum Classic monetary policy unaffected.\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/4/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 1,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00004_450667718.json b/.gh-issues/00004_450667718.json
new file mode 100644
index 0000000..b36d3c9
--- /dev/null
+++ b/.gh-issues/00004_450667718.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/450667718",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/4#issuecomment-450667718",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/4",
+    "id": 450667718,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDY2NzcxOA==",
+    "user": {
+      "login": "Dexaran",
+      "id": 26142412,
+      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/26142412?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/Dexaran",
+      "html_url": "https://github.com/Dexaran",
+      "followers_url": "https://api.github.com/users/Dexaran/followers",
+      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
+      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
+      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
+      "repos_url": "https://api.github.com/users/Dexaran/repos",
+      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2018-12-31T16:50:10Z",
+    "updated_at": "2018-12-31T16:50:33Z",
+    "author_association": "MEMBER",
+    "body": "## The first Treasury address.\r\n\r\n\r\n\r\nThere is an [\"official\" Community Fund](https://www.reddit.com/r/EthereumClassic/comments/87jfcf/community_fund_announcement/) in Ethereum Classic.\r\nThe community fund multisig is an [open source software](https://github.com/EthereumCommonwealth/ethereum-classic-multisig/tree/ab77dc77b69ee5d39971d908d3cd01c5a02fea8b). Smart contract passed a [security audit](https://gist.github.com/Dexaran/2389d5e7290ab69709d33abfe0485bec). \r\n\r\nThus, I propose that the **first Treasury address** should be the official ETC fund multisig: [0x48dbda9443746a99ef1b26ab01dd94ac50d7014b](http://gastracker.io/addr/0x48dbda9443746a99ef1b26ab01dd94ac50d7014b)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/450667718/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00004_450738985.json b/.gh-issues/00004_450738985.json
new file mode 100644
index 0000000..caedbe8
--- /dev/null
+++ b/.gh-issues/00004_450738985.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/450738985",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/4#issuecomment-450738985",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/4",
+    "id": 450738985,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDczODk4NQ==",
+    "user": {
+      "login": "OmniEdge",
+      "id": 7707354,
+      "node_id": "MDQ6VXNlcjc3MDczNTQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/7707354?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/OmniEdge",
+      "html_url": "https://github.com/OmniEdge",
+      "followers_url": "https://api.github.com/users/OmniEdge/followers",
+      "following_url": "https://api.github.com/users/OmniEdge/following{/other_user}",
+      "gists_url": "https://api.github.com/users/OmniEdge/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/OmniEdge/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/OmniEdge/subscriptions",
+      "organizations_url": "https://api.github.com/users/OmniEdge/orgs",
+      "repos_url": "https://api.github.com/users/OmniEdge/repos",
+      "events_url": "https://api.github.com/users/OmniEdge/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/OmniEdge/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-01T15:47:13Z",
+    "updated_at": "2019-01-01T15:47:13Z",
+    "author_association": "NONE",
+    "body": "This source of funding should not be implemented on protocol level. Contested HF will cause a split in the network. Even if HF's feel democratic a contested HF needs to be avoided. IMHO, dealing with this tragedy of commons is more acceptable then adding a treasury/gov system on L1 and L2. But L2 treasury is permissionless...",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/450738985/reactions",
+      "total_count": 4,
+      "+1": 4,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00004_451345641.json b/.gh-issues/00004_451345641.json
new file mode 100644
index 0000000..b26ac0b
--- /dev/null
+++ b/.gh-issues/00004_451345641.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/451345641",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/4#issuecomment-451345641",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/4",
+    "id": 451345641,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTM0NTY0MQ==",
+    "user": {
+      "login": "stevanlohja",
+      "id": 10556209,
+      "node_id": "MDQ6VXNlcjEwNTU2MjA5",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/10556209?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/stevanlohja",
+      "html_url": "https://github.com/stevanlohja",
+      "followers_url": "https://api.github.com/users/stevanlohja/followers",
+      "following_url": "https://api.github.com/users/stevanlohja/following{/other_user}",
+      "gists_url": "https://api.github.com/users/stevanlohja/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/stevanlohja/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/stevanlohja/subscriptions",
+      "organizations_url": "https://api.github.com/users/stevanlohja/orgs",
+      "repos_url": "https://api.github.com/users/stevanlohja/repos",
+      "events_url": "https://api.github.com/users/stevanlohja/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/stevanlohja/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-04T03:31:58Z",
+    "updated_at": "2019-01-04T03:31:58Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "A sum levied on users to fund a collective of developers would be a **Developer Tax**. This type of tax is centralized implementation on a protocol level and not for Ethereum Classic, Bitcoin, or any other \"decentralized\" network for that matter. A _Developers Tax_ is not equal to a _Consumption Tax_ on public decentralized networks. A treasury associated with ETC development not on the protocol level is a much better way to improve the ETC development community.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/451345641/reactions",
+      "total_count": 3,
+      "+1": 3,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00004_451483684.json b/.gh-issues/00004_451483684.json
new file mode 100644
index 0000000..8e4633a
--- /dev/null
+++ b/.gh-issues/00004_451483684.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/451483684",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/4#issuecomment-451483684",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/4",
+    "id": 451483684,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTQ4MzY4NA==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-04T15:55:39Z",
+    "updated_at": "2019-01-04T15:55:39Z",
+    "author_association": "MEMBER",
+    "body": "Agree with @OmniEdge and @stevanlohja. We should keep the L1 clean and as simple as possible. These problems are outside of what the protocol should care about.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/451483684/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00004_451587379.json b/.gh-issues/00004_451587379.json
new file mode 100644
index 0000000..ad0fab1
--- /dev/null
+++ b/.gh-issues/00004_451587379.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/451587379",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/4#issuecomment-451587379",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/4",
+    "id": 451587379,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTU4NzM3OQ==",
+    "user": {
+      "login": "stevanlohja",
+      "id": 10556209,
+      "node_id": "MDQ6VXNlcjEwNTU2MjA5",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/10556209?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/stevanlohja",
+      "html_url": "https://github.com/stevanlohja",
+      "followers_url": "https://api.github.com/users/stevanlohja/followers",
+      "following_url": "https://api.github.com/users/stevanlohja/following{/other_user}",
+      "gists_url": "https://api.github.com/users/stevanlohja/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/stevanlohja/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/stevanlohja/subscriptions",
+      "organizations_url": "https://api.github.com/users/stevanlohja/orgs",
+      "repos_url": "https://api.github.com/users/stevanlohja/repos",
+      "events_url": "https://api.github.com/users/stevanlohja/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/stevanlohja/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-04T22:27:49Z",
+    "updated_at": "2019-01-04T22:27:49Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Meant to comment not close issue lol.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/451587379/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00004_451589876.json b/.gh-issues/00004_451589876.json
new file mode 100644
index 0000000..70f20a9
--- /dev/null
+++ b/.gh-issues/00004_451589876.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/451589876",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/4#issuecomment-451589876",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/4",
+    "id": 451589876,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTU4OTg3Ng==",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-04T22:38:26Z",
+    "updated_at": "2019-01-04T22:38:26Z",
+    "author_association": "MEMBER",
+    "body": "@Dexaran can you please submit this as a PR can it can get a number and get recorded",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/451589876/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00004_452030290.json b/.gh-issues/00004_452030290.json
new file mode 100644
index 0000000..2ad3d4e
--- /dev/null
+++ b/.gh-issues/00004_452030290.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452030290",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/4#issuecomment-452030290",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/4",
+    "id": 452030290,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjAzMDI5MA==",
+    "user": {
+      "login": "drd34d",
+      "id": 30156189,
+      "node_id": "MDQ6VXNlcjMwMTU2MTg5",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/30156189?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/drd34d",
+      "html_url": "https://github.com/drd34d",
+      "followers_url": "https://api.github.com/users/drd34d/followers",
+      "following_url": "https://api.github.com/users/drd34d/following{/other_user}",
+      "gists_url": "https://api.github.com/users/drd34d/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/drd34d/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/drd34d/subscriptions",
+      "organizations_url": "https://api.github.com/users/drd34d/orgs",
+      "repos_url": "https://api.github.com/users/drd34d/repos",
+      "events_url": "https://api.github.com/users/drd34d/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/drd34d/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-07T18:19:04Z",
+    "updated_at": "2019-01-07T18:19:04Z",
+    "author_association": "NONE",
+    "body": "A treasury proposal without a governance proposal feels incomplete to start.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452030290/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00005.json b/.gh-issues/00005.json
new file mode 100644
index 0000000..7b1bf17
--- /dev/null
+++ b/.gh-issues/00005.json
@@ -0,0 +1,68 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/5",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/5/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/5/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/5/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/5",
+    "id": 395024014,
+    "node_id": "MDU6SXNzdWUzOTUwMjQwMTQ=",
+    "number": 5,
+    "title": "ECIP-1052 Smart-contract Security Auditing core [EthereumCommonwealth]",
+    "user": {
+      "login": "Dexaran",
+      "id": 26142412,
+      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/26142412?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/Dexaran",
+      "html_url": "https://github.com/Dexaran",
+      "followers_url": "https://api.github.com/users/Dexaran/followers",
+      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
+      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
+      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
+      "repos_url": "https://api.github.com/users/Dexaran/repos",
+      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785129,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20meta",
+        "name": "type: meta",
+        "color": "cfd3d7",
+        "default": false,
+        "description": "Accepted best practices"
+      }
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2018-12-31T19:42:40Z",
+    "updated_at": "2019-01-29T09:41:13Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "```\r\nECIP: ?\r\nTitle: Smart-contract Security Auditing core\r\nStatus: Draft\r\nType: Meta\r\nAuthor: Dexaran, dexaran@ethereumclassic.org\r\nCreated: 2018-12-31\r\n```\r\n\r\n## Abstract\r\n\r\nThe following describes a smart-contract development security enhancement method, its implementation and the underlying funding mechanism as well as a possible unique feature and use case of Ethereum CLassic project.\r\n\r\n## Motivation\r\n\r\n[Smart-contract development security](https://en.wikipedia.org/wiki/Software_development_security) is critical for the whole crypto industry and for Ethereum Classic in particular. We know the precedents of large contract hacks, which led to the loss of large amounts of funds as well as undermining confidence in the industry as a whole. For example [TheDAO hack](https://en.wikipedia.org/wiki/The_DAO_(organization)), [Parity Multisig hack 1](https://blog.zeppelin.solutions/on-the-parity-wallet-multisig-hack-405a8c12e8f7), [Parity Multisig hack 2](https://medium.com/chain-cloud-company-blog/parity-multisig-hack-again-b46771eaa838), [ERC20 vulnerability led to the loss of millions of dollars](https://medium.com/@dexaran820/previously-described-at-erc20-critical-problems-medium-article-db616c84acc1).\r\n\r\nAs an information security engineer, I can say that formal verification, better coding standards, new programming languages, and other automated tools cannot significantly improve the fault-tolerance of smart contract systems.\r\n\r\nOn the other hand, the smart contracting industry still needs security improvements and decentralized, immutable, chain-agnostic environment which will ensure and preserve contract development/auditing history. I propose to establish a team of professional security auditors that will work to enhance the security of smart-contracts (for ETC or for the whole industry).\r\n\r\nAdvantages:\r\n\r\n- ETC is definitely a proper immutable, decentralized, chain-agnostic environment which can serve the above goal.\r\n- ETC benefits from smart-contract security enhancement too, as ETC is a smart-contract development platform.\r\n- The total value of the entire cryptoindustry rises, which is also benefitial for ETC.\r\n- Unique use case for Ethereum CLassic blockchain, which can increase the network effect and boost the growth of the project and ecosystem.\r\n\r\n## Specification\r\n\r\nWe must not rely on blockchain technology to verify smart-contracts. We can only use it to provide a registry of audited contracts, publish and manage results of smart-contract audits.\r\n\r\n#### Security auditing team\r\n\r\n![alt text](https://github.com/Dexaran/Security-DAO-registry/blob/master/Audit_Reg_Flow.png)\r\n\r\nThe detailed description of Security Auditing organization can be found here: https://github.com/EthereumCommonwealth/Auditing\r\n\r\nThere are two types of participants in the described organization: [managers](https://github.com/Dexaran/Security-DAO/blob/master/SecurityDAO.sol#L17) and [auditors](https://github.com/Dexaran/Security-DAO/blob/master/SecurityDAO.sol#L11-L18).\r\n\r\nThe main task of a manager is to control and verify the work of the auditors.\r\n\r\nThe main task of an auditor is to review a code of smart-contracts and submit [reports](https://github.com/Dexaran/Security-DAO/blob/master/SecurityDAO.sol#L29-L40). Auditors receive [karma](https://github.com/Dexaran/Security-DAO/blob/master/SecurityDAO.sol#L15) for reviewing contracts. They also receive [penalties](https://github.com/Dexaran/Security-DAO-registry/blob/master/SecurityDAO.sol#L17) for making mistakes. The statistic reflects each auditors results and determines their reward.\r\n\r\nThe audit process will be managed through github so that it will be transparently available for everyone. A smart-contract developer should open an [issue](https://github.com/Dexaran/Security-DAO/issues) to submit his smart-contract for auditors review. Then the manager will verify security audit request details and mark the issue as *approved*. The manager should not mark dummy requests, requests that aim to spam the security audit queue or any requests that does not met coding standard requirements. After that, **every** auditor can start reviewing the code. \r\n\r\nAn auditor with a willingness to participate in the code review of a certain contract must create a [private gist](https://gist.github.com/) and send gist URL to the corresponding issue manager by [email](https://github.com/Dexaran/Security-DAO/blob/master/SecurityDAO.sol#L14). E-mail address of each manager or auditor is transparently available at the smart-contract of this organization.\r\n\r\n#### Security Auditing organization governance.\r\n\r\nCurrently, the security auditing organization relies on [Treasury proposal](https://github.com/ethereumclassic/ECIPs/issues/4) and rights delegation mechanism.\r\n\r\n1. Treasury voters owners establish the payment schedule for security auditing department, thus delegate the governance rights to the security auditing manager.\r\n\r\n2. Security auditing manager distributes the received payment between the auditing team members.\r\n\r\n3. If Treasury voters are not satisfied by the workflow of security department then they must fire the security auditing manager.\r\n\r\nIt is planned to automate the security auditing team workflow with a [SecurityDAO smart-contract](https://github.com/Dexaran/Security-DAO-registry) in 2019 however the contract is still in development. Security DAO smart-contract is not a critically important detail of this proposal.\r\n\r\n#### Outcome\r\n\r\nAs the result of the functioning system we receive a well-defined process of smart-contract security auditing. Each smart-contract is reviewed by at least 3 professional security auditors.\r\nSecurity audits are completely free-of-charge for smart-contract developers, thus every smart-contract developer is capable of ordering a security audit before deploying his/her smart-contract.\r\n\r\n- Security Auditing organization structure has a working implementation in Callisto Network.\r\n\r\n- [113 succesful security audits](https://github.com/EthereumCommonwealth/Auditing/issues?q=is%3Aissue+is%3Aclosed) were performed during 2018.\r\n\r\n- According to Callisto Network statistics for 2018, this costs the ecosystem approx. $4000/month. I think that this is a reasonable price which should be paid to prevent such accidents as TheDAO hack and other hacks which caused much more losses.\r\n\r\n#### Requirements\r\n\r\nThis requires [Treasury Proposal](https://github.com/ethereumclassic/ECIPs/issues/4) implementation.\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/5/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00010.json b/.gh-issues/00010.json
new file mode 100644
index 0000000..4a3896d
--- /dev/null
+++ b/.gh-issues/00010.json
@@ -0,0 +1,68 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/10",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/10/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/10/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/10/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/10",
+    "id": 399047210,
+    "node_id": "MDU6SXNzdWUzOTkwNDcyMTA=",
+    "number": 10,
+    "title": "Make this repo a Jekyll site that generates a GH Pages site",
+    "user": {
+      "login": "bmann",
+      "id": 280420,
+      "node_id": "MDQ6VXNlcjI4MDQyMA==",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/280420?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bmann",
+      "html_url": "https://github.com/bmann",
+      "followers_url": "https://api.github.com/users/bmann/followers",
+      "following_url": "https://api.github.com/users/bmann/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bmann/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bmann/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bmann/subscriptions",
+      "organizations_url": "https://api.github.com/users/bmann/orgs",
+      "repos_url": "https://api.github.com/users/bmann/repos",
+      "events_url": "https://api.github.com/users/bmann/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bmann/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785129,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20meta",
+        "name": "type: meta",
+        "color": "cfd3d7",
+        "default": false,
+        "description": "Accepted best practices"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 6,
+    "created_at": "2019-01-14T19:51:17Z",
+    "updated_at": "2019-10-25T13:50:13Z",
+    "closed_at": "2019-10-25T13:50:13Z",
+    "author_association": "NONE",
+    "body": "Hey all. The Ethereum main-net repo is formatted as a Jekyll site, so it can be hosted on Github Pages or elsewhere and be browsed as a website. This means making some formatting changes and a few other config files.\r\n\r\nI know Jekyll and if this is of interest, I can put a bit of time into it.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/10/reactions",
+      "total_count": 3,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 1,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00010_454417555.json b/.gh-issues/00010_454417555.json
new file mode 100644
index 0000000..daa0b2f
--- /dev/null
+++ b/.gh-issues/00010_454417555.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/454417555",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/10#issuecomment-454417555",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/10",
+    "id": 454417555,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDQxNzU1NQ==",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-15T14:48:42Z",
+    "updated_at": "2019-01-15T14:48:42Z",
+    "author_association": "MEMBER",
+    "body": "Yes i think this would make the process much more approachable ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/454417555/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00010_545477119.json b/.gh-issues/00010_545477119.json
new file mode 100644
index 0000000..ee185db
--- /dev/null
+++ b/.gh-issues/00010_545477119.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/545477119",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/10#issuecomment-545477119",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/10",
+    "id": 545477119,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTQ3NzExOQ==",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-23T14:41:10Z",
+    "updated_at": "2019-10-23T14:41:10Z",
+    "author_association": "MEMBER",
+    "body": "Can this issue be closed?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/545477119/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00010_545523060.json b/.gh-issues/00010_545523060.json
new file mode 100644
index 0000000..0c66ebc
--- /dev/null
+++ b/.gh-issues/00010_545523060.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/545523060",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/10#issuecomment-545523060",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/10",
+    "id": 545523060,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTUyMzA2MA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-23T16:18:43Z",
+    "updated_at": "2019-10-23T16:18:43Z",
+    "author_association": "MEMBER",
+    "body": "https://ecips.ethereumclassic.org/ ?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/545523060/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00010_546160936.json b/.gh-issues/00010_546160936.json
new file mode 100644
index 0000000..3327a98
--- /dev/null
+++ b/.gh-issues/00010_546160936.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546160936",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/10#issuecomment-546160936",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/10",
+    "id": 546160936,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjE2MDkzNg==",
+    "user": {
+      "login": "bmann",
+      "id": 280420,
+      "node_id": "MDQ6VXNlcjI4MDQyMA==",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/280420?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bmann",
+      "html_url": "https://github.com/bmann",
+      "followers_url": "https://api.github.com/users/bmann/followers",
+      "following_url": "https://api.github.com/users/bmann/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bmann/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bmann/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bmann/subscriptions",
+      "organizations_url": "https://api.github.com/users/bmann/orgs",
+      "repos_url": "https://api.github.com/users/bmann/repos",
+      "events_url": "https://api.github.com/users/bmann/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bmann/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-25T01:16:24Z",
+    "updated_at": "2019-10-25T01:16:24Z",
+    "author_association": "NONE",
+    "body": "@realcodywburns there was @sorpaas who over wrote a bunch of changes in #12 so it’s no longer valid. \n\nYou can close it if you don’t want a web view, otherwise I still recommend you do this.  ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546160936/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00010_546360493.json b/.gh-issues/00010_546360493.json
new file mode 100644
index 0000000..1671a3e
--- /dev/null
+++ b/.gh-issues/00010_546360493.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546360493",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/10#issuecomment-546360493",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/10",
+    "id": 546360493,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjM2MDQ5Mw==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-25T13:46:12Z",
+    "updated_at": "2019-10-25T13:46:12Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "i would like a web view. minimal though. I think you can literally just have a folder of all `.md` files plus a config pointing to that folder and it will work.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546360493/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00010_546361995.json b/.gh-issues/00010_546361995.json
new file mode 100644
index 0000000..2a36a9e
--- /dev/null
+++ b/.gh-issues/00010_546361995.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546361995",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/10#issuecomment-546361995",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/10",
+    "id": 546361995,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjM2MTk5NQ==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-25T13:50:12Z",
+    "updated_at": "2019-10-25T13:50:12Z",
+    "author_association": "MEMBER",
+    "body": "@bmann @zmitton I believe this issue can be closed! https://ecips.ethereumclassic.org/",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546361995/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00011.json b/.gh-issues/00011.json
new file mode 100644
index 0000000..8072f55
--- /dev/null
+++ b/.gh-issues/00011.json
@@ -0,0 +1,77 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/11",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/11/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/11/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/11/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/11",
+    "id": 399074310,
+    "node_id": "MDU6SXNzdWUzOTkwNzQzMTA=",
+    "number": 11,
+    "title": "ECIP-1043: Fixed DAG limit restriction",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785139,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTM5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/status:%20draft",
+        "name": "status: draft",
+        "color": "ffffff",
+        "default": false,
+        "description": "draft stage - can be assigned ecip number and merged, but requires new PR to be Accepted"
+      },
+      {
+        "id": 1154785127,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20core",
+        "name": "type: core",
+        "color": "d73a4a",
+        "default": false,
+        "description": "Requires consensus consideration"
+      }
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 3,
+    "created_at": "2019-01-14T21:09:14Z",
+    "updated_at": "2019-11-09T13:16:33Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "[ECIP-1043: Fixed DAG limit restriction](https://ecips.ethereumclassic.org/ECIPs/ecip-1043)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/11/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00011_470109924.json b/.gh-issues/00011_470109924.json
new file mode 100644
index 0000000..51b1a9c
--- /dev/null
+++ b/.gh-issues/00011_470109924.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/470109924",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/11#issuecomment-470109924",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/11",
+    "id": 470109924,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDEwOTkyNA==",
+    "user": {
+      "login": "xazax310",
+      "id": 38053848,
+      "node_id": "MDQ6VXNlcjM4MDUzODQ4",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/38053848?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/xazax310",
+      "html_url": "https://github.com/xazax310",
+      "followers_url": "https://api.github.com/users/xazax310/followers",
+      "following_url": "https://api.github.com/users/xazax310/following{/other_user}",
+      "gists_url": "https://api.github.com/users/xazax310/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/xazax310/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/xazax310/subscriptions",
+      "organizations_url": "https://api.github.com/users/xazax310/orgs",
+      "repos_url": "https://api.github.com/users/xazax310/repos",
+      "events_url": "https://api.github.com/users/xazax310/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/xazax310/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-03-06T13:38:15Z",
+    "updated_at": "2019-03-06T13:41:37Z",
+    "author_association": "NONE",
+    "body": "I don't think changing the DAG realizes what you're envisioning. Your only argument is that ASICs are on the network then the DAG is pointless. Why keep Ethhash at all? Move to another Algorithm. Keeping Ethhash and resetting the DAG to allow GPUs with smaller GB limits doesn't accomplish much as most of the network is more than likely AMDs with 4GB + or ASICs. Small percentage makes up 3GB or less GPUs\r\nAccording to EthOS 5000 1060 3GBs are running, and AMDs with 2GB and lower are in the 100's. Acccording to HiveOS 1060 3GB are about 18%. Of course there are none AMDs with 3GB or less.\r\n\r\nIt doesn't pull in any more security from smaller GPU miners and unless you ditch the DAG entirely you're still facing the same problem every few years. ETC needs to decide. Are they GPU friendly or ASIC friendly? Choose the appropriate move to an algorithm from there. The DAG will just keep throwing off investments anyone wants to make in ASIC or GPUs if ETC is to stay on PoW for it's lifespan.\r\n\r\nSources\r\nhttp://ethosdistro.com/versions/\r\nhttps://hiveos.farm/statistics/\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/470109924/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00011_470122199.json b/.gh-issues/00011_470122199.json
new file mode 100644
index 0000000..9f0bd80
--- /dev/null
+++ b/.gh-issues/00011_470122199.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/470122199",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/11#issuecomment-470122199",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/11",
+    "id": 470122199,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDEyMjE5OQ==",
+    "user": {
+      "login": "mikeyb",
+      "id": 36461,
+      "node_id": "MDQ6VXNlcjM2NDYx",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/36461?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/mikeyb",
+      "html_url": "https://github.com/mikeyb",
+      "followers_url": "https://api.github.com/users/mikeyb/followers",
+      "following_url": "https://api.github.com/users/mikeyb/following{/other_user}",
+      "gists_url": "https://api.github.com/users/mikeyb/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/mikeyb/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/mikeyb/subscriptions",
+      "organizations_url": "https://api.github.com/users/mikeyb/orgs",
+      "repos_url": "https://api.github.com/users/mikeyb/repos",
+      "events_url": "https://api.github.com/users/mikeyb/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/mikeyb/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-03-06T14:14:37Z",
+    "updated_at": "2019-03-06T14:14:37Z",
+    "author_association": "MEMBER",
+    "body": "> I don't think changing the DAG realizes what you're envisioning. Your only argument is that ASICs are on the network then the DAG is pointless. Why keep Ethhash at all? Move to another Algorithm. Keeping Ethhash and resetting the DAG to allow GPUs with smaller GB limits doesn't accomplish much as most of the network is more than likely AMDs with 4GB + or ASICs. Small percentage makes up 3GB or less GPUs\r\n> According to EthOS 5000 1060 3GBs are running, and AMDs with 2GB and lower are in the 100's. Acccording to HiveOS 1060 3GB are about 18%. Of course there are none AMDs with 3GB or less.\r\n> \r\n> It doesn't pull in any more security from smaller GPU miners and unless you ditch the DAG entirely you're still facing the same problem every few years. ETC needs to decide. Are they GPU friendly or ASIC friendly? Choose the appropriate move to an algorithm from there. The DAG will just keep throwing off investments anyone wants to make in ASIC or GPUs if ETC is to stay on PoW for it's lifespan.\r\n> \r\n> Sources\r\n> http://ethosdistro.com/versions/\r\n> https://hiveos.farm/statistics/\r\n\r\nPreach on.  I have been saying this since 2016\r\n\r\nhttps://github.com/ethereumproject/ECIPs/issues/6#issuecomment-250349532\r\nhttps://github.com/ethereumproject/ECIPs/issues/6#issuecomment-250445495\r\nhttps://github.com/ethereumproject/ECIPs/issues/6#issuecomment-250454321\r\nhttps://github.com/ethereumproject/ECIPs/issues/6#issuecomment-343998329",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/470122199/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00011_552099532.json b/.gh-issues/00011_552099532.json
new file mode 100644
index 0000000..e3292e7
--- /dev/null
+++ b/.gh-issues/00011_552099532.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552099532",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/11#issuecomment-552099532",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/11",
+    "id": 552099532,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjA5OTUzMg==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-09T13:16:32Z",
+    "updated_at": "2019-11-09T13:16:32Z",
+    "author_association": "MEMBER",
+    "body": "do we know how this proposal differs from a DAG that would be of constant size? Specifically, how does a DAG reset impact possible ASIC implementations compared to a DAG where you always keep it at say 3GB but you are swapping the old data with the new one?\r\nI don't know how this exactly works, I'm just wondering if it's possible that ASICs could take advantage of the reset until the DAG grows to a size that is much harder to manage which would be after `N` epochs.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552099532/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013.json b/.gh-issues/00013.json
new file mode 100644
index 0000000..e0da85c
--- /dev/null
+++ b/.gh-issues/00013.json
@@ -0,0 +1,77 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13",
+    "id": 399916230,
+    "node_id": "MDU6SXNzdWUzOTk5MTYyMzA=",
+    "number": 13,
+    "title": "ECIP-1049: Change the ETC Proof of Work Algorithm to Keccak256",
+    "user": {
+      "login": "p3c-bot",
+      "id": 40745785,
+      "node_id": "MDQ6VXNlcjQwNzQ1Nzg1",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/40745785?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/p3c-bot",
+      "html_url": "https://github.com/p3c-bot",
+      "followers_url": "https://api.github.com/users/p3c-bot/followers",
+      "following_url": "https://api.github.com/users/p3c-bot/following{/other_user}",
+      "gists_url": "https://api.github.com/users/p3c-bot/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/p3c-bot/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/p3c-bot/subscriptions",
+      "organizations_url": "https://api.github.com/users/p3c-bot/orgs",
+      "repos_url": "https://api.github.com/users/p3c-bot/repos",
+      "events_url": "https://api.github.com/users/p3c-bot/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/p3c-bot/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785139,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTM5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/status:%20draft",
+        "name": "status: draft",
+        "color": "ffffff",
+        "default": false,
+        "description": "draft stage - can be assigned ecip number and merged, but requires new PR to be Accepted"
+      },
+      {
+        "id": 1154785127,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20core",
+        "name": "type: core",
+        "color": "d73a4a",
+        "default": false,
+        "description": "Requires consensus consideration"
+      }
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 62,
+    "created_at": "2019-01-16T17:27:19Z",
+    "updated_at": "2019-11-21T02:12:07Z",
+    "closed_at": null,
+    "author_association": "CONTRIBUTOR",
+    "body": "## 🚨 WARNING: Because of the controversial nature of this ECIP, it has been targeted by bots and users with financial incentives to attack developers. 🚨 \r\n\r\n#### All references to SHA3 refer to Keccak256, the algorithm used throughout the Ethereum ecosystem.\r\n\r\n### Change the ETC Proof of Work Algorithm to SHA3 (Keccak256)\r\n\r\n    ECIP: 1049\r\n    Title: Change the ETC Proof of Work Algorithm to SHA3 (Keccak256)\r\n    Status: Draft\r\n    Type: Network\r\n    Discussion: https://github.com/ethereumclassic/ECIPs/issues/13\r\n    Author: Alexander Tsankov (alexander.tsankov@colorado.edu)\r\n    License: Apache-2.0\r\n    Created: 2019-01-08\r\n\r\n### Abstract\r\nA proposal to replace the current Ethereum Classic proof of work algorithm with Keccak-256.\r\n\r\n### Motivation\r\n* A response to the recent double-spend attacks against Ethereum Classic. Most of this hashpower was rented or came from other chains, specfically Ethereum (ETH). A seperate proof of work algorithm would encourage the development of a specialized Ethereum Classic mining community, and blunt the ability for attackers to purchase mercenary hash power on the open-market. \r\n\r\n* As a secondary benefit, deployed smart contracts and dapps running on chain are currently able to use `keccak256()` in their code. This ECIP could open the possibility of smart contracts being able to evaluate chain state, and simplify second layer (L2) development.\r\n\r\n### Rationale\r\n\r\n### Reason 1: Similarity to Bitcoin\r\nThe Bitcoin network currently uses the CPU-intensive SHA256 Algorithm to evaluate blocks. When Ethereum was deployed it used a different algorithm, Dagger-Hashimoto, which eventually became Ethash on 1.0 launch. Dagger-Hashimoto was explicitly designed to be memory-intensive with the goal of ASIC resistance [1]. It has been provably unsuccessful at this goal, with Ethash ASICs currently easily availalble on the market.\r\n\r\nKeccak256 (aka SHA3) is the product of decades of research and the winner of a multi-year contest held by NIST that has rigorously verified its robustness and quality as a hashing algorithm. It is one of the only hashing algorithms besides SHA256 that is allowed for military and scientific-grade applications, and can provide sufficient hashing entropy for a proof of work system. This algorithm would position Ethereum Classic at an advantage in mission-critical blockchain applications that are required to use provably high-strength algorithms. [2]\r\n\r\nA CPU-intensive algorithm like Keccak256 would allow both the uniqueness of a fresh PoW algorithm that has not had ASICs developed against it, while at the same time allowing for organic optimization of a dedicated and financially commited miner base, much the way Bitcoin did with its own SHA256 algorithm.\r\n\r\nIf Ethereum Classic is to succeed as a project, we need to take what we have learned from Bitcoin and move towards CPU-hard PoW algorithms.\r\n\r\n> At first, most users would run network nodes, but as the network grows beyond a certain point, it would be left more and more to specialists with server farms of specialized hardware. - Satoshi Nakamoto (2008-11-03) [3]\r\n\r\n*Note: Please consider this is from 2008, and the Bitcoin community at that time did not differentiate between node operators and miners. I interpret \"network nodes\" in this quote to refer to miners, and \"server farms of specialized hardware\" to refer to mining farms.*\r\n\r\n\r\n### Reason 2: Value to Smart Contract Developers\r\nIn Solidity, developers have access to the `keccak256()` function, which allows a smart contract to efficiently calculate the hash of a given input. This has been used in a number of interesting projects launched on both Ethereum and Ethereum-Classic. Most Specifcally a project called 0xBitcoin [4] - which the ERC-918 spec was based on.\r\n\r\n0xBitcoin is a security-audited [5] dapp that allows users to submit a proof of work hash directly to a smart contract running on the Ethereum blockchain. If the sent hash matches the given requirements, a token reward is trustlessly dispensed to the sender, along with the contract reevaluating difficulty parameters. This project has run successfully for over 10 months, and has minted over 3 million tokens [6].\r\n\r\nWith the direction that Ethereum Classic is taking: a focus on Layer-2 solutions and cross-chain compatibility; being able to evaluate proof of work on chain, will be tremendously valuable to developers of both smart-contracts and node software writers. This could greatly simplify interoperability. \r\n\r\n### Implementation\r\n\r\nExample of a Smart contract hashing being able to trustlessly Keccak hash a hypothetical block header.\r\n![example](https://i.imgur.com/xh3WgCF.png)\r\n\r\nHere is an analysis of Monero's nonce-distribution for \"cryptonight\", an algorithm similar to Ethash, which also attempts to be \"ASIC-Resistant\" it is very clear in the picture that before the hashing algorithm is changed there is a clear nonce-pattern. This is indicative of a major failure in a hashing algorithm, and should illustrate the dangers of disregarding proper cryptographic security. Finding a hashing pattern would be far harder using a proven system like Keccak:\r\n\r\n![example](https://i.imgur.com/vVdmzm9.jpg)\r\n\r\nBased on analysis of the EVM architecture [here](https://cdn.discordapp.com/attachments/223675625334898688/534597157693685760/eth.jpg) there are two main pieces that need to be changed:\r\n\r\n1. The Proof of work function needs to be replaced with Keccak256\r\n1. The Function that checks the nonce-header  in the block needs to know to accept Keccak256 hashes as valid for a block.\r\n\r\n![example](https://i.imgur.com/2hobqOL.png)\r\n\r\n#### Note on `mixHash` + `nonceHeader` \r\n\r\nIn the current Ethash system, the mixHash is a 256-bit string constructed based on the state of the blockchain. This is concatenated with the nonceHeader, 64-bit, and the entirety (320-bits) of it is hashed to verify proof of work.\r\n\r\nFor this proposal we recommend miners being able to fill the `mixHash` field with whatever data they desire. This will allow for a total of 320-bits for miners to use for both submitting proof of work, but also to signal mining pools and voting on certain ECIP proposals.\r\n\r\n### Implementation\r\n\r\n**PROPOSED ACTIVATION BLOCK: 11,000,000** contingent on acceptance of ECIP. \r\n\r\n![roadmap](https://user-images.githubusercontent.com/40745785/66788717-a919a700-eeb6-11e9-9773-c6a8d188a7dd.png)\r\n\r\n\r\n![spec](https://user-images.githubusercontent.com/40745785/66788715-a28b2f80-eeb6-11e9-8add-c3606a91a32d.png)\r\n\r\n\r\nA testnet implementing this ECIP, is currently live, with more information available at [Astor.host](https://astor.host)\r\n\r\n* Node Implementation (based on Parity). Located [here](https://github.com/antsankov/parity-ethereum/tree/sha3)\r\n* SHA3 CPU Miner. Located [here](https://github.com/antsankov/ethereum-cpu-miner)\r\n* Block Explorer. Located [here](https://explore.astor.host/)\r\n* Live Network Stats. Located [here](https://stats.astor.host/)\r\n\r\n### References: \r\n\r\n1. https://github.com/ethereum/wiki/wiki/Dagger-Hashimoto#introduction\r\n1. https://en.wikipedia.org/wiki/SHA-3\r\n1. https://satoshi.nakamotoinstitute.org/emails/cryptography/2/\r\n1. https://github.com/0xbitcoin/white-paper\r\n1. https://github.com/EthereumCommonwealth/Auditing/issues/102\r\n1. https://etherscan.io/address/0xb6ed7644c69416d67b522e20bc294a9a9b405b31\r\n\r\n### Previous discussion from [Pull request](https://github.com/ethereumclassic/ECIPs/pull/8)\r\n![example](https://i.imgur.com/09Rtv0V.png)\r\n![example](https://i.imgur.com/1TJtgO7.png)\r\n![example](https://i.imgur.com/TTLZunn.png)\r\n![example](https://i.imgur.com/uOoBFF9.png)\r\n![example](https://i.imgur.com/irYFhRy.png)\r\n![example](https://i.imgur.com/AoChMCy.png)\r\n\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13/reactions",
+      "total_count": 6,
+      "+1": 0,
+      "-1": 4,
+      "laugh": 0,
+      "hooray": 2,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_457966310.json b/.gh-issues/00013_457966310.json
new file mode 100644
index 0000000..1650647
--- /dev/null
+++ b/.gh-issues/00013_457966310.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/457966310",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-457966310",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 457966310,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Nzk2NjMxMA==",
+    "user": {
+      "login": "p3c-bot",
+      "id": 40745785,
+      "node_id": "MDQ6VXNlcjQwNzQ1Nzg1",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/40745785?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/p3c-bot",
+      "html_url": "https://github.com/p3c-bot",
+      "followers_url": "https://api.github.com/users/p3c-bot/followers",
+      "following_url": "https://api.github.com/users/p3c-bot/following{/other_user}",
+      "gists_url": "https://api.github.com/users/p3c-bot/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/p3c-bot/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/p3c-bot/subscriptions",
+      "organizations_url": "https://api.github.com/users/p3c-bot/orgs",
+      "repos_url": "https://api.github.com/users/p3c-bot/repos",
+      "events_url": "https://api.github.com/users/p3c-bot/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/p3c-bot/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-27T23:57:40Z",
+    "updated_at": "2019-01-27T23:57:40Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Work has officially begun on Astor testnet - a reference implementation of an Ethereum Classic Keccak256 testnet. Any help is appreciated.\r\n\r\nAstor Place Station in New York is one of the first subway stations in the city, and we plan the testnet to be resiliant, while also delivering far increased performance by changing out the overly complicated Ethash proof of work algorithm.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/457966310/reactions",
+      "total_count": 9,
+      "+1": 2,
+      "-1": 1,
+      "laugh": 0,
+      "hooray": 3,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 3,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_461387800.json b/.gh-issues/00013_461387800.json
new file mode 100644
index 0000000..2564e8a
--- /dev/null
+++ b/.gh-issues/00013_461387800.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/461387800",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-461387800",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 461387800,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTM4NzgwMA==",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-02-07T11:49:15Z",
+    "updated_at": "2019-02-07T11:49:15Z",
+    "author_association": "MEMBER",
+    "body": "\"I think the intent of this ECIP is to just respond with an ECIP because the ECIP knowingly isn't trying to solve the problems of the claimed catalyst (51 attack). ETC can change it's underwear in some way but it has to have some type of super power than 'just cause'. I reject.\" - @stevanlohja  https://github.com/ethereumclassic/ECIPs/pull/8#issuecomment-461321539",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/461387800/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_479955986.json b/.gh-issues/00013_479955986.json
new file mode 100644
index 0000000..98d1881
--- /dev/null
+++ b/.gh-issues/00013_479955986.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/479955986",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-479955986",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 479955986,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTk1NTk4Ng==",
+    "user": {
+      "login": "Harriklaw",
+      "id": 47303582,
+      "node_id": "MDQ6VXNlcjQ3MzAzNTgy",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47303582?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/Harriklaw",
+      "html_url": "https://github.com/Harriklaw",
+      "followers_url": "https://api.github.com/users/Harriklaw/followers",
+      "following_url": "https://api.github.com/users/Harriklaw/following{/other_user}",
+      "gists_url": "https://api.github.com/users/Harriklaw/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/Harriklaw/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/Harriklaw/subscriptions",
+      "organizations_url": "https://api.github.com/users/Harriklaw/orgs",
+      "repos_url": "https://api.github.com/users/Harriklaw/repos",
+      "events_url": "https://api.github.com/users/Harriklaw/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/Harriklaw/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-04-04T15:53:36Z",
+    "updated_at": "2019-04-04T15:53:36Z",
+    "author_association": "NONE",
+    "body": "First and most crucial question : Do we need an algo change? How an algo change could help us?For me there are two aspects that should be examined at the same time.  The first one, is how much secure is the new POW vs the old one. As you nicely wrote,any well examined algo as keccak256 is both scientifically reviewed and as the successor of SHA2 has high propability to succeed as SHA2 did with bitcoin. This can be controversial tho, so this article can strengthen the pros of keccac it is considered that may be quantum resistant: https://eprint.iacr.org/2016/992.pdf \r\n\"Our estimates are by no means a lower bound, as they are based on a series\r\nof assumptions. First, we optimized our T-count by optimizing each component\r\nof the SHA oracle individually, which of course is not optimal. Dedicated opti-\r\nmization schemes may achieve better results. Second, we considered a surface\r\ncode fault-tolerant implementation, as such a scheme looks the most promising\r\nat present. However it may be the case that other quantum error correcting\r\nschemes perform better. Finally, we considered an optimistic per-gate error rate of about 10^−5\r\n, which is the limit of current quantum hardware. This number will\r\nprobably be improved in the future. Improving any of the issues listed above will\r\ncertainly result in a better estimate and a lower number of operations, however\r\nthe decrease in the number of bits of security will likely be limited\"\r\nThe second aspect we should examine is how the algo change will influence decentralization and this topic is more controversial. As economics are the most decesive factor for ASIC development ,(assuming that ETC will be valuable ),that will lead to new asics very soon. For me the real question is : how soon? And the answer is clearly hypothetical. Why this is a crucial question? First of all if already asics exist that would be unfair and centralized for the interval that new companies find and evolve their own heardware. If this is not the case, companies that already produce sha2 and other CPU intensive algos asics will eventually produce sha3 very fast as they already have the \"know how \" and have learnt how to adapt in this hardware/algo chase game very well. But do we want that? Do we want big asic companies to have the upper hand on ETC mining hardware production?If we accept decentralization is already well established among the crypto hardware industry( meaning asic companies)and many companies already joined the space ,then decentralization for sha3 will be achieved soon. But if we accept that gpu industry is a better space for our community (for  decentralization purposes) then we should consider that any kind of algo change to cpu intensive algo will provoke massive change to our miners and mining ecosystem. Ethash compared to keccak is memory intensive ,and gpus are pretty much compatitive to asics right now: 1)efficiency: rx 580 =3.33 w/mh and  a10= 1,75, 2) 2)price : rx 580 =150$ ( 5$/mh) and a10= 5600$ ( 11$/ mh)\r\nSo the real question is pretty much equal to this: cpu intensive vs memory intensive?gpus+ asics or asics? btc or etc is more decentrilized ? I think as for now gpus+ asics in ethash ecosystem make a helaty environement for decentralization hash power. Although btc seems to be well decentralized too.\r\nConclusion: for me an algo change will be profitable long term as keccak256 seems to be superior than Ethash in terms of security. Nevertheless, ethash seems to be superior in terms of decentralization. Short term we should consider other ways to reduce the risk for a future \"51% attack\" and allow the crypto mining industry to mature more. That would lead to a more decentralized mining hardware industry and consort with our optimal mining vision of a better decentralized eco.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/479955986/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_479963992.json b/.gh-issues/00013_479963992.json
new file mode 100644
index 0000000..b6c45e4
--- /dev/null
+++ b/.gh-issues/00013_479963992.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/479963992",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-479963992",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 479963992,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTk2Mzk5Mg==",
+    "user": {
+      "login": "p3c-bot",
+      "id": 40745785,
+      "node_id": "MDQ6VXNlcjQwNzQ1Nzg1",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/40745785?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/p3c-bot",
+      "html_url": "https://github.com/p3c-bot",
+      "followers_url": "https://api.github.com/users/p3c-bot/followers",
+      "following_url": "https://api.github.com/users/p3c-bot/following{/other_user}",
+      "gists_url": "https://api.github.com/users/p3c-bot/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/p3c-bot/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/p3c-bot/subscriptions",
+      "organizations_url": "https://api.github.com/users/p3c-bot/orgs",
+      "repos_url": "https://api.github.com/users/p3c-bot/repos",
+      "events_url": "https://api.github.com/users/p3c-bot/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/p3c-bot/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-04-04T16:13:31Z",
+    "updated_at": "2019-04-04T16:18:45Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Thank you for your post @Harriklaw. The plan for this switch is to create a SHA3 testnet first, for miners and hardware manufacturers to use, become comfortable with, and collect data on. Once we start seeing Flyclients, increased block performance, and on-chain smart contracts that verify the chain's proof of work, the mining community will see the tremendous value of this new algorithm and support a change. \r\n\r\nRE: decentralization. I consider Ethash to already be ASIC'd, and as ETC becomes more valuable it will be less possible to mine it from a GPU anyway. The concern is that right now, Ethash is so poorly documented, only 1 or 2 companies knows how to build a profitable ASIC for it. However, with SHA3, it is conceivable that new startups, and old players (like Intel, Cisco, etc.) would feel comfortable participating in the mining hardware market since they know the SHA3 standard is transparent, widely used, and has other uses beyond just cryptocurrency. \r\n\r\nSHA3 has been determined to be 4x faster in hardware than SHA2, so it is conceivable an entirely new economy can be created around SHA3 that is different than SHA2, similar to how the trucking market has different companies than the consumer car market.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/479963992/reactions",
+      "total_count": 4,
+      "+1": 2,
+      "-1": 1,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 1
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_480357413.json b/.gh-issues/00013_480357413.json
new file mode 100644
index 0000000..241511e
--- /dev/null
+++ b/.gh-issues/00013_480357413.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/480357413",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-480357413",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 480357413,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDM1NzQxMw==",
+    "user": {
+      "login": "saturn-network",
+      "id": 44673408,
+      "node_id": "MDQ6VXNlcjQ0NjczNDA4",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/44673408?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/saturn-network",
+      "html_url": "https://github.com/saturn-network",
+      "followers_url": "https://api.github.com/users/saturn-network/followers",
+      "following_url": "https://api.github.com/users/saturn-network/following{/other_user}",
+      "gists_url": "https://api.github.com/users/saturn-network/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/saturn-network/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/saturn-network/subscriptions",
+      "organizations_url": "https://api.github.com/users/saturn-network/orgs",
+      "repos_url": "https://api.github.com/users/saturn-network/repos",
+      "events_url": "https://api.github.com/users/saturn-network/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/saturn-network/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-04-05T17:28:36Z",
+    "updated_at": "2019-04-05T17:28:36Z",
+    "author_association": "NONE",
+    "body": "Re: Quantum resistance of hash functions\r\n\r\n1. By the time it is possible to build a quantum computer that can crack keccak256 (sha3) there will be another generation or two of hash functions (think sha4 and sha5).\r\n2. Elliptic curve cryptography in Ethereum's private/public keys (for the vast majority of cryptocurrencies, really, including ETH BTC ETC TRX...) will be cracked much sooner than that. Who cares about mining crypto when you can literally steal other people's money (i.e. steal Satoshi's bitcoin).\r\n\r\nI do not think we should worry about quantum resistance in this ECIP.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/480357413/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_480358431.json b/.gh-issues/00013_480358431.json
new file mode 100644
index 0000000..f739a06
--- /dev/null
+++ b/.gh-issues/00013_480358431.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/480358431",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-480358431",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 480358431,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDM1ODQzMQ==",
+    "user": {
+      "login": "saturn-network",
+      "id": 44673408,
+      "node_id": "MDQ6VXNlcjQ0NjczNDA4",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/44673408?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/saturn-network",
+      "html_url": "https://github.com/saturn-network",
+      "followers_url": "https://api.github.com/users/saturn-network/followers",
+      "following_url": "https://api.github.com/users/saturn-network/following{/other_user}",
+      "gists_url": "https://api.github.com/users/saturn-network/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/saturn-network/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/saturn-network/subscriptions",
+      "organizations_url": "https://api.github.com/users/saturn-network/orgs",
+      "repos_url": "https://api.github.com/users/saturn-network/repos",
+      "events_url": "https://api.github.com/users/saturn-network/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/saturn-network/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-04-05T17:31:47Z",
+    "updated_at": "2019-04-05T17:31:47Z",
+    "author_association": "NONE",
+    "body": "@p3c-bot frankly, we might even see sha3 ASICs embedded in desktop and mobile processors. In fact, SHA256 already has optimized instructions on [ARM](http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.ddi0514g/way1395175472464.html) and [Intel](https://software.intel.com/en-us/articles/intel-sha-extensions). Chances of Ethash instructions in ARM and Intel are slim to none at this point.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/480358431/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_482986737.json b/.gh-issues/00013_482986737.json
new file mode 100644
index 0000000..fe08db5
--- /dev/null
+++ b/.gh-issues/00013_482986737.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/482986737",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-482986737",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 482986737,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mjk4NjczNw==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-04-14T14:23:16Z",
+    "updated_at": "2019-04-14T14:23:16Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "In the process of creating an ETC FlyClient, I have run into major blockers that can be eliminated if 1049 (this ECIP) is adopted.\r\n\r\nBasically verification right now, cannot be done without some serious computation. The main issue is Ethash requiring the generation of a *16mb pseudorandom cache*. This cache changes about once a week, so verifying the full work requires doing it many times. I have touched many creative solutions to this, but I believe we are stuck at light-client verification taking *at least* 10 minutes on a phone.\r\n\r\nBy contrast, with this ECIP, plus FlyClient (ECIP-1055), Im confident full PoW can be done in less than 5 seconds. This would open the door to new UX design patterns.\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/482986737/reactions",
+      "total_count": 4,
+      "+1": 3,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 1,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_541970704.json b/.gh-issues/00013_541970704.json
new file mode 100644
index 0000000..da3371c
--- /dev/null
+++ b/.gh-issues/00013_541970704.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/541970704",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-541970704",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 541970704,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTk3MDcwNA==",
+    "user": {
+      "login": "p3c-bot",
+      "id": 40745785,
+      "node_id": "MDQ6VXNlcjQwNzQ1Nzg1",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/40745785?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/p3c-bot",
+      "html_url": "https://github.com/p3c-bot",
+      "followers_url": "https://api.github.com/users/p3c-bot/followers",
+      "following_url": "https://api.github.com/users/p3c-bot/following{/other_user}",
+      "gists_url": "https://api.github.com/users/p3c-bot/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/p3c-bot/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/p3c-bot/subscriptions",
+      "organizations_url": "https://api.github.com/users/p3c-bot/orgs",
+      "repos_url": "https://api.github.com/users/p3c-bot/repos",
+      "events_url": "https://api.github.com/users/p3c-bot/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/p3c-bot/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-14T23:19:22Z",
+    "updated_at": "2019-10-14T23:25:49Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "This standard uses the following Keccak256 control hash - if a device can produce this hash it will work for ECIP1049: \r\n\r\n`keccak256(\"ETC\")= 49b019f3320b92b2244c14d064de7e7b09dbc4c649e8650e7aa17e5ce7253294\"`\r\n\r\n<img width=\"903\" alt=\"control\" src=\"https://user-images.githubusercontent.com/40745785/66789158-6c4eaf80-eeb8-11e9-8b63-0f2ed0401be7.png\">\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/541970704/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_546987100.json b/.gh-issues/00013_546987100.json
new file mode 100644
index 0000000..0b71823
--- /dev/null
+++ b/.gh-issues/00013_546987100.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546987100",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-546987100",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 546987100,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Njk4NzEwMA==",
+    "user": {
+      "login": "AndreaLanfranchi",
+      "id": 15280851,
+      "node_id": "MDQ6VXNlcjE1MjgwODUx",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/15280851?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/AndreaLanfranchi",
+      "html_url": "https://github.com/AndreaLanfranchi",
+      "followers_url": "https://api.github.com/users/AndreaLanfranchi/followers",
+      "following_url": "https://api.github.com/users/AndreaLanfranchi/following{/other_user}",
+      "gists_url": "https://api.github.com/users/AndreaLanfranchi/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/AndreaLanfranchi/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/AndreaLanfranchi/subscriptions",
+      "organizations_url": "https://api.github.com/users/AndreaLanfranchi/orgs",
+      "repos_url": "https://api.github.com/users/AndreaLanfranchi/repos",
+      "events_url": "https://api.github.com/users/AndreaLanfranchi/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/AndreaLanfranchi/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-28T15:00:07Z",
+    "updated_at": "2019-10-28T15:07:11Z",
+    "author_association": "NONE",
+    "body": "> In the current Ethash system, the mixHash is a 256-bit string constructed based on the state of the blockchain. This is concatenated with the nonceHeader, 64-bit, and the entirety (320-bits) of it is hashed to verify proof of work.\r\n\r\nNot completely accurate :\r\n\r\n1. Miners receive the header hash which is a hash of **candidate** block state (not the state of the chain)\r\n2. Header hash is combined with nonce to fill the initial state of keccak function\r\n3. Initial state goes through a first round of Keccak\r\n4. Generated (from point 3) mix is FNV'ed against 64 pseudo random accesses to DAG\r\n5. Output is then copied into state and processed through an additional round of Keccak\r\n7. Resulting dwords[0-3] are checked against target\r\n\r\n> For this proposal we recommend miners being able to fill the mixHash field with whatever data they desire. This will allow for a total of 320-bits for miners to use for both submitting proof of work, but also to signal mining pools and voting on certain ECIP proposals.\r\n\r\nUnless I miss something how the proof of work is supposed to be verified ?\r\nThis should imply sending the work provider (the node or pool) full initial mix (as composed by miner) **plus** both the final target and the final state of keccak: by consequence network traffic among work-consumers (miners) and work-providers (node/pools) is more than quadrupled with non trivial problems especially on pool's sides.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546987100/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 1
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_547021681.json b/.gh-issues/00013_547021681.json
new file mode 100644
index 0000000..38d88e9
--- /dev/null
+++ b/.gh-issues/00013_547021681.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/547021681",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-547021681",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 547021681,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzAyMTY4MQ==",
+    "user": {
+      "login": "AndreaLanfranchi",
+      "id": 15280851,
+      "node_id": "MDQ6VXNlcjE1MjgwODUx",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/15280851?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/AndreaLanfranchi",
+      "html_url": "https://github.com/AndreaLanfranchi",
+      "followers_url": "https://api.github.com/users/AndreaLanfranchi/followers",
+      "following_url": "https://api.github.com/users/AndreaLanfranchi/following{/other_user}",
+      "gists_url": "https://api.github.com/users/AndreaLanfranchi/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/AndreaLanfranchi/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/AndreaLanfranchi/subscriptions",
+      "organizations_url": "https://api.github.com/users/AndreaLanfranchi/orgs",
+      "repos_url": "https://api.github.com/users/AndreaLanfranchi/repos",
+      "events_url": "https://api.github.com/users/AndreaLanfranchi/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/AndreaLanfranchi/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-28T16:11:23Z",
+    "updated_at": "2019-10-28T16:39:30Z",
+    "author_association": "NONE",
+    "body": "@p3c-bot \r\n\r\n> The concern is that right now, Ethash is so poorly documented, only 1 or 2 companies knows how to build a profitable ASIC for it.\r\n\r\nThe \"lack\" of documentation for ethash is pure fallacy.\r\nThe algorithm is as well documented as it relies on the same SHA3: thus if enough documentation on SHA3 then enough documentation on ethash where the \"only\" addition is DAG (generated also using SHA3) and DAG accesses.\r\nIts all described here https://github.com/ethereum/wiki/wiki/Ethash\r\n\r\nAnyone with basic programming skills can build a running implementation in the language they prefer.\r\n\r\nASIC makers never had problems in \"understanding\" the algo (which also has a widely used open-source implementation here https://github.com/ethereum-mining/ethminer) and there is no \"secret\" behind. The problem of ASICs has always been how to overcome the memory hardness barrier: but this has nothing to do with the algo itself rather with how ASICs are built.\r\n\r\nP.s. Before anyone argues about SHA3 != Keccak256 please recall that Keccak allows different paddings which do not interfere with cryptographic strength of the **function**. SAH3 and Keccak246 (in ethash) are same keccak with different paddings.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/547021681/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 1
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_547079918.json b/.gh-issues/00013_547079918.json
new file mode 100644
index 0000000..2d503ff
--- /dev/null
+++ b/.gh-issues/00013_547079918.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/547079918",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-547079918",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 547079918,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzA3OTkxOA==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-28T18:17:56Z",
+    "updated_at": "2019-10-28T18:17:56Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Agree that ethash being undocumented is not the best argument. It is however, significantly more complex (being a layer atop keccak256). \r\n\r\nA bigger problem is that it doesn't achieve its intended goal of ASIC resistance or won't for much longer (as predicted [here](https://github.com/LeastAuthority/ethereum-analyses/blob/master/PoW.md))\r\n\r\nAlso it is incredibly easy to attack since there is so much \"dormant\" hash power.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/547079918/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_547085811.json b/.gh-issues/00013_547085811.json
new file mode 100644
index 0000000..714a092
--- /dev/null
+++ b/.gh-issues/00013_547085811.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/547085811",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-547085811",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 547085811,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzA4NTgxMQ==",
+    "user": {
+      "login": "AndreaLanfranchi",
+      "id": 15280851,
+      "node_id": "MDQ6VXNlcjE1MjgwODUx",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/15280851?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/AndreaLanfranchi",
+      "html_url": "https://github.com/AndreaLanfranchi",
+      "followers_url": "https://api.github.com/users/AndreaLanfranchi/followers",
+      "following_url": "https://api.github.com/users/AndreaLanfranchi/following{/other_user}",
+      "gists_url": "https://api.github.com/users/AndreaLanfranchi/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/AndreaLanfranchi/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/AndreaLanfranchi/subscriptions",
+      "organizations_url": "https://api.github.com/users/AndreaLanfranchi/orgs",
+      "repos_url": "https://api.github.com/users/AndreaLanfranchi/repos",
+      "events_url": "https://api.github.com/users/AndreaLanfranchi/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/AndreaLanfranchi/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-28T18:32:26Z",
+    "updated_at": "2019-10-28T18:32:26Z",
+    "author_association": "NONE",
+    "body": "@zmitton \r\nI think the DAG layer is really simple instead, but is my opinion.\r\n\r\nI think we may agree that \"ASIC resistance\" is not equal to \"ASIC proof\".\r\nGiving the latter is utopia (provided there are enough incentives) I think ethash is still the best \"ASIC resistant\" algo out there: efficiency increases (nowadays) are stil in the range of less than two digits. Its resistance is inversely proportional to on-die memory cost for ASICs. That's it.\r\nThat's why for ethereum has been proposed an alterative (which I won't mention) to further increase memory hardness.\r\n\r\n\"Dormant\" hashpower is not an issue imho and don't think is enough to vector an attack given the fact is still predominantly GPU (yet not for long).\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/547085811/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_547223402.json b/.gh-issues/00013_547223402.json
new file mode 100644
index 0000000..ecf59c8
--- /dev/null
+++ b/.gh-issues/00013_547223402.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/547223402",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-547223402",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 547223402,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzIyMzQwMg==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-29T02:06:32Z",
+    "updated_at": "2019-10-29T14:00:49Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "(cross posting as i see discussion section has changed):\r\n\r\nI have a low-level optimization for the ECIP. It would be preferable to use the specific format (mentioned to Alex at the summit)\r\n\r\n```\r\n// unsealedBlockheader is the blockheader with a null nonce\r\ndigest = keccak256(concat(keccak256(unsealedBlockheader),32ByteNonce))\r\n// a \"winning\" digest is of course the thing that must start with lots of leading zeros\r\n// the \"sealed\" header is then made by inserting the nonce and re-RLP-encoding\r\n```\r\n - This optimizes the size of a PoW to be 64 bytes instead of the current 400+ bytes (because the PoW verification only requires the 2 items that were concatenated above)\r\n - It also ensures that the dedicated hardware/software is optimizing specifically keccak, because creating each new \"guess\" requires the minimal number of \"non-keccak\" steps (swapping the 32 byte nonce of a 64 byte bytearray). If the nonce was instead just 1 of the rlp items in the header, then creating another guess would entail a new RLP encoding step (of 400+ bytes) for each additional guess. ASICS would have to design RLP into the hardware to compete. Also selfish mining could become an advantage strategy since block headers can vary in size and larger headers would then take longer to mine on.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/547223402/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_547299775.json b/.gh-issues/00013_547299775.json
new file mode 100644
index 0000000..eaeceb2
--- /dev/null
+++ b/.gh-issues/00013_547299775.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/547299775",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-547299775",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 547299775,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzI5OTc3NQ==",
+    "user": {
+      "login": "AndreaLanfranchi",
+      "id": 15280851,
+      "node_id": "MDQ6VXNlcjE1MjgwODUx",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/15280851?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/AndreaLanfranchi",
+      "html_url": "https://github.com/AndreaLanfranchi",
+      "followers_url": "https://api.github.com/users/AndreaLanfranchi/followers",
+      "following_url": "https://api.github.com/users/AndreaLanfranchi/following{/other_user}",
+      "gists_url": "https://api.github.com/users/AndreaLanfranchi/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/AndreaLanfranchi/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/AndreaLanfranchi/subscriptions",
+      "organizations_url": "https://api.github.com/users/AndreaLanfranchi/orgs",
+      "repos_url": "https://api.github.com/users/AndreaLanfranchi/repos",
+      "events_url": "https://api.github.com/users/AndreaLanfranchi/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/AndreaLanfranchi/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-29T07:58:17Z",
+    "updated_at": "2019-10-29T07:58:17Z",
+    "author_association": "NONE",
+    "body": "> Also selfish mining could become an advantage strategy since block headers can vary in size and larger headers would then take longer to mine on.\r\n\r\nNot sure what you mean here: block header is a hash with fixed width.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/547299775/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_547433053.json b/.gh-issues/00013_547433053.json
new file mode 100644
index 0000000..e5e0b4f
--- /dev/null
+++ b/.gh-issues/00013_547433053.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/547433053",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-547433053",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 547433053,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzQzMzA1Mw==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-29T13:58:38Z",
+    "updated_at": "2019-10-29T13:58:38Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "larger input size, not output",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/547433053/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_550970904.json b/.gh-issues/00013_550970904.json
new file mode 100644
index 0000000..0a0f11e
--- /dev/null
+++ b/.gh-issues/00013_550970904.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550970904",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-550970904",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 550970904,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDk3MDkwNA==",
+    "user": {
+      "login": "DiverterBTC",
+      "id": 56491191,
+      "node_id": "MDQ6VXNlcjU2NDkxMTkx",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/56491191?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/DiverterBTC",
+      "html_url": "https://github.com/DiverterBTC",
+      "followers_url": "https://api.github.com/users/DiverterBTC/followers",
+      "following_url": "https://api.github.com/users/DiverterBTC/following{/other_user}",
+      "gists_url": "https://api.github.com/users/DiverterBTC/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/DiverterBTC/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/DiverterBTC/subscriptions",
+      "organizations_url": "https://api.github.com/users/DiverterBTC/orgs",
+      "repos_url": "https://api.github.com/users/DiverterBTC/repos",
+      "events_url": "https://api.github.com/users/DiverterBTC/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/DiverterBTC/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T08:12:48Z",
+    "updated_at": "2019-11-07T08:12:48Z",
+    "author_association": "NONE",
+    "body": "Can't code, so I am forced to rely on the trusted third party devs and documentation as to the security of SHA3. However if the documentation and devs are to be believed, I believe SHA3 to be a better choice than ProgPoW. On the matter of ASIC resistance; Though Ethash may not be totally \"ASIC resistant\", it has seemed to this point to be fairly retardant, for various (arguable) reasons. Perhaps in an ideal world ETC would not need to change algos, ETH 2.0 would be implemented tomorrow, and everything is fine. Unfortunately in the real world danger lurks daily for ETC holders, and the holders of any coin not \"dominant\" on their respective chain. Securing the funds of all holders must be top priority, well above any debate about whether or not ASIC resistance is preferable or even achievable. It seems to me to be an exercise in futility for any coin that has any measurable value. The alternative of hard-forking periodically (i.e Monero) to me is absolutely not an option. Security and trust-minimization are paramount. Each time a hard-fork takes place, holders such as myself must further trust that devs haven't altered some rule that we are unaware of or disagree with otherwise. I don't want to have to trust hard-forks every 6 months, and I don't want to have to trust current ETH miners to not rewrite ETC daily. One only has to look at BCH/BSV debacle in Bitcoin to see the dangers of frequent hard forks and devs implementing (or re-implementing previously removed) protocols if political priorites and followings find their way into ETC. I have begun seeing this very thing seemingly starting seeping in from the ETH parity side of ETC already. It seems to me that I am thus left with supporting ProgPoW or SHA3--in which case the preferable option (for various debatable reasons) is SHA3. If SHA3 is secure as documented, can be implemented with a single hard-fork, allows for easy smart contract deployment, and relieves 51% attack vector, it receives my confirmation. Again, as someone unable to contribute technically, I can only speak to the social trust minimization and security aspects as they appear. ASICs will be developed and mining will inevitably find its way toward lower cost electricity; this we already know. Bitcoin has not experienced a double spend/successful \"attack\" to date, and if ETC price rises and attracts more holders and devs, the hashrate will increase and take the cost of attacking ETC upwards with it. All the \"centralized mining\" arguments against PoW and Bitcoin--for all their merits--have seemingly remained only theoretical problems from a network security standpoint. If ASIC manufacturing for SHA3 can in fact be entered by some new (old) players such as Intel due to its other uses, I agree with the stance that this at least contributes to mining decentralization in the theoretical sense that more manufacturers creates more competition for customers creates a \"price war\" which creates a lower barrier to entry for \"everyday\" miners to join the network. If I've made some technical errors in my novel I'm sure some will correct me, which I can/will accept and offer apologies for. However I stand by my opinion that the fight for ASIC resistance is futile and/or unfavorable for larger appeal, and staying on Ethash any more than absolutely necessary is a daily security risk which could cripple ETC as we try to carve out our own space. It's a yes from me. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550970904/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_550975231.json b/.gh-issues/00013_550975231.json
new file mode 100644
index 0000000..11912f6
--- /dev/null
+++ b/.gh-issues/00013_550975231.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550975231",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-550975231",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 550975231,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDk3NTIzMQ==",
+    "user": {
+      "login": "AndreaLanfranchi",
+      "id": 15280851,
+      "node_id": "MDQ6VXNlcjE1MjgwODUx",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/15280851?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/AndreaLanfranchi",
+      "html_url": "https://github.com/AndreaLanfranchi",
+      "followers_url": "https://api.github.com/users/AndreaLanfranchi/followers",
+      "following_url": "https://api.github.com/users/AndreaLanfranchi/following{/other_user}",
+      "gists_url": "https://api.github.com/users/AndreaLanfranchi/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/AndreaLanfranchi/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/AndreaLanfranchi/subscriptions",
+      "organizations_url": "https://api.github.com/users/AndreaLanfranchi/orgs",
+      "repos_url": "https://api.github.com/users/AndreaLanfranchi/repos",
+      "events_url": "https://api.github.com/users/AndreaLanfranchi/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/AndreaLanfranchi/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T08:26:47Z",
+    "updated_at": "2019-11-07T08:26:47Z",
+    "author_association": "NONE",
+    "body": "> Can't code, so I am forced to rely on the trusted third party devs and documentation as to the security of SHA3.\r\n\r\nTo be extremely clear SHA3 has been in ethash algorithm since its birth.\r\nSha3 in ethash is called Keccak but the two terms are synonims. There is a slight difference SHA3 vs Keccak due to padding of output but the two functions are the same and rely on the same cryptographical strength.\r\n\r\nEthash algorithm is : Keccak256 -> 64 rounds of access to DAG area -> Keccak256.\r\n\r\nThis proposal introduces nothing new unless (but is not clearly stated) is meant to remove the DAG accesses and eventually reduce Keccak rounds from 2 to 1. I have to assume this as the proponent says Ethash (Dagger Hashimoto) is memory intensive while SHA3 would not be,\r\n\r\nUnder those circumnstances the new proposed SHA3 algo (which is wrong definition as SHA3 is simply an hash function accepting any arbitrary data as input - to define an algo you need to define how that input is obtained) the result would be;\r\n\r\n- A new PoW algo which differentiates ETC fom ETH\r\n- An algo easily and quickly implementable in ASICs definitely tombstoning GPU mining on ETC\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550975231/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_551256069.json b/.gh-issues/00013_551256069.json
new file mode 100644
index 0000000..913bdf5
--- /dev/null
+++ b/.gh-issues/00013_551256069.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551256069",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-551256069",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 551256069,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTI1NjA2OQ==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T20:45:48Z",
+    "updated_at": "2019-11-07T21:19:32Z",
+    "author_association": "MEMBER",
+    "body": "**I will never support a mining algorithm change, regardless of technical merits.**\r\n\r\nI also refuse to spend more time above writing this comment on the matter. I have read all of the above discussion, reviewed each stated benefit and weakness, and thought long and hard about as many of the ramifications of this as possible. While each benefit on its own can be nitpicked over, having it's 'value added' objectively disseminated, there is 1.5 reasons that trump all benefit. It's an unfortunate reality of the world and humanity.\r\n\r\nThe main point is that **ruling out collusion being a driving force behind *any* contribution is impossible**. This is especially true the closer the project gets to being connected with financial rewards. Every contribution has some level of Collusive Reward Potential. A change that adds a new opcode has a much higher CRP than fixing a documentation typo. Ranking changes with the highest CRP, my top 3 would be:\r\n\r\n1. Mining algorithm changes ('fair launch' being the oxymoron that we would be, for the 2nd time, subjected to)\r\n1. Consensus changes (blacklisting addresses, dependence on anything even remotely centralized for block validation)\r\n1. Protocol defined Peering rules (ie drop a peer if they support protests in HK type of rules)\r\n\r\nSo, going back to the 1.5 reasons that trump all... \r\n\r\n1 - To explain by counterposition, let's assume I was a large supporter of a mining algo change. What's to say I've not been paid by ASIC maker xyz to champion this change, giving them the jump on all other hardware providers? \r\n\r\nSpoiler: nothing.\r\n\r\n0.5 - How can something which is designed to be inefficient be changed in the name of efficiency WITHOUT raising suspicion? \r\n\r\nSpoiler: it can't.\r\n\r\n\r\nTo conclude, this might be a great proposal... for a new blockchain... And I urge you to reconsider this PR, as I believe there are more useful ways of spending development efforts. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551256069/reactions",
+      "total_count": 3,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 1
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_551309467.json b/.gh-issues/00013_551309467.json
new file mode 100644
index 0000000..c6babb3
--- /dev/null
+++ b/.gh-issues/00013_551309467.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551309467",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-551309467",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 551309467,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTMwOTQ2Nw==",
+    "user": {
+      "login": "drd34d",
+      "id": 30156189,
+      "node_id": "MDQ6VXNlcjMwMTU2MTg5",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/30156189?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/drd34d",
+      "html_url": "https://github.com/drd34d",
+      "followers_url": "https://api.github.com/users/drd34d/followers",
+      "following_url": "https://api.github.com/users/drd34d/following{/other_user}",
+      "gists_url": "https://api.github.com/users/drd34d/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/drd34d/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/drd34d/subscriptions",
+      "organizations_url": "https://api.github.com/users/drd34d/orgs",
+      "repos_url": "https://api.github.com/users/drd34d/repos",
+      "events_url": "https://api.github.com/users/drd34d/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/drd34d/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T23:13:34Z",
+    "updated_at": "2019-11-07T23:13:34Z",
+    "author_association": "NONE",
+    "body": "I share a similar opinion as @BelfordZ on this subject.\r\n\r\n\r\n> Motivation\r\n> A response to the recent double-spend attacks against Ethereum Classic. **Most of this hashpower was rented or came from other chains** specfically Ethereum (ETH). A seperate proof of work algorithm **would encourage the development of a specialized Ethereum Classic mining community**, and blunt the ability for attackers to purchase mercenary hash power on the open-market.\r\n\r\n\"most of this hashpower was rented..\" - what's the source of this assessment?\r\n\r\n\"would encourage the development of a specialized Ethereum Classic mining community\" - a new and specialized mining community sounds like we could be talking about a newer and smaller community and probably less security?\r\n\r\nThe risk is too high and the threat isn't exactly there. \r\nA double spend attack as you know is not exactly direct attack to the network but to the participants who do not take the necessary precautions (confirmation time). I have to admit, though, that the current recommended confirmations for bigger transactions are nerve-racking.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551309467/reactions",
+      "total_count": 2,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 1
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_552100904.json b/.gh-issues/00013_552100904.json
new file mode 100644
index 0000000..85d661f
--- /dev/null
+++ b/.gh-issues/00013_552100904.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552100904",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-552100904",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 552100904,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjEwMDkwNA==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-09T13:33:58Z",
+    "updated_at": "2019-11-10T09:36:19Z",
+    "author_association": "MEMBER",
+    "body": "Here's my current view on this proposal. This won't solve 51% attacks because they can't really be solved. I do agree that having a simpler/minimalistic and more standard implementation of hashing algorithm decreases the chances of a bug being found (yes, ethash working for the last 5 years tells nothing, we've seen critical vulnerabilities discovered in OpenSSL after more than 10 years). On the other hand, we have no guarantee ETC will end up as the network with the most sha3 hash rate. Even if we did in the beginning, it doesn't mean we can sustain the first place. If we fail to do that, it's no different than ethash from this perspective.\r\nThe second advantage that sha3 has over ethash is faster verification which enables things like FlyClient implementation (light clients for mobile that can verify the chain is connected without downloading all the block headers). I was talking to @Wolf-Linzhi about this and maybe there could be ways to make verification easier by modifying the epoch lengths or whatever to make the verification faster. At the time we did not know and I still don't, just saying that maybe there are modifications that make verification faster on ethash.\r\n\r\nThe last thing I want to mention is that making an instant switch actually opens up an attack vector. Nobody knows what hash rate to expect at the block that switches to sha3. This means that exchanges should not set the confirmation times to 5000 but closer to 50000. This makes ETC unusable and we should avoid such cases if possible. In case the community agrees to switch to sha3, we should consider having a gradual move to sha3 where we set difficulties accordingly so that 10% of blocks are mined with sha3 proof and 90% with ethash. Over time the percentage goes in favor of sha3 for example after half a year it is as 20% for sha3 etc. This makes the hash rate much more predictable compared to the instant switch and the exchanges would not need to increase the confirmation times to protect themselves because of the unknown hash rate. I don't know whether this is easy to implement, I imagine we could have 2 difficulties (each hashing algorithm having its own) but I'm not that familiar with the actual implementation and possible bad things this could bring.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552100904/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_552188915.json b/.gh-issues/00013_552188915.json
new file mode 100644
index 0000000..d8864a2
--- /dev/null
+++ b/.gh-issues/00013_552188915.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552188915",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-552188915",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 552188915,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjE4ODkxNQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-10T12:10:53Z",
+    "updated_at": "2019-11-10T12:10:53Z",
+    "author_association": "MEMBER",
+    "body": "sha3 is more efficient to implement in asics. also, sha3 is faster than blake2b.\r\n\r\n>  ASIC implementations of BLAKE can process about 12.5 GB/s, compared to Keccak, which can process about 44 GB/s. An ASIC implementation of BLAKE2 would be probably about 40% faster than a similar implementation of BLAKE, i.e. around 17.5 GB/s.\r\n\r\nSee also https://crypto.stackexchange.com/a/31677",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552188915/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_552199968.json b/.gh-issues/00013_552199968.json
new file mode 100644
index 0000000..9d28dcb
--- /dev/null
+++ b/.gh-issues/00013_552199968.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552199968",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-552199968",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 552199968,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjE5OTk2OA==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-10T14:31:48Z",
+    "updated_at": "2019-11-10T14:31:48Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Also @iamjustarandomguy keccak works natively in the EVM, which would be good for interoperability/L2, and using 1 algo vs 2 is more secure due to weaker assumption (that keccak works as intended, rather than that both keccak and blake2b work as intended)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552199968/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_552202988.json b/.gh-issues/00013_552202988.json
new file mode 100644
index 0000000..27c2762
--- /dev/null
+++ b/.gh-issues/00013_552202988.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552202988",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-552202988",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 552202988,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjIwMjk4OA==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-10T15:07:59Z",
+    "updated_at": "2019-11-10T15:13:59Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "I agree with a lot of belfords sentiments above, and Donald's earlier calling it \"the nuclear option\", but **I still support 1049 because we have a real dire security concern**. It is currently so easy for more 51% attacks to occur, and such attacks (if repeated a couple more times), will likely kill the chain nearly completely as Alex has pointed out at the summit.\r\n\r\nStatistical finality is difficult enough to engineer around, but \"adversarial finality\" is untenable. Exchanges will begin to drop ETC for risk of what we have already seen. Individuals would not be wise to accept more than very small amounts of ETC as payment.\r\n\r\n1049 would not completely solve 51% attacks, _however_, it would allow cleaver software to be able to predict them: The specific attack we saw is something I'll call a \"surprise fork\", that is a new chain fork that is longer. There was no evidence of the surprise fork until the moment it was published. If this attack is attempted under 1049, there will likely be evidence beforehand. why?\r\n\r\nAs soon as ASICs exist for keccak256, they are incentivised to be turned on ASAP, and to continue mining around the clock with little downtime. Because of this dynamic, it is likely that the majority of all keccak ASICs that exist, will be mining ETC at all times. This is true currently for Bitcoin. At this very moment, likely greater than 90% of all sha256 ASICs hardware in exisntence are currently mining Bitcoin. \r\n\r\nNote that there is no easy way to _suddenly_ attain more hashpower without building more chips. Also note that the total hashpower in existence can conveniently be calculated (as `difficulty/blocktime`) since it is _all_ being directed at, and published to, its respective chain.\r\n\r\nSo in order to create a surprise fork, hashpower would have to be *borrowed* from the main chain, where it can be noticed as an unhealthy sudden (~50%) drop in hashpower. A simple light client would have this information readily available (including superlight flyclients), and could warn users that there is likely an attack underway. Exchanges could automatically halt ETC trading/withdraws in this scenario.\r\n\r\nLikely the attack won't even be attempted once this mitigation strategy is implemented, as it is very costly, and accomplishes nothing.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552202988/reactions",
+      "total_count": 5,
+      "+1": 5,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_552208754.json b/.gh-issues/00013_552208754.json
new file mode 100644
index 0000000..31e6e8b
--- /dev/null
+++ b/.gh-issues/00013_552208754.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552208754",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-552208754",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 552208754,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjIwODc1NA==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-10T16:09:13Z",
+    "updated_at": "2019-11-10T16:09:13Z",
+    "author_association": "MEMBER",
+    "body": "good point @zmitton . I have two questions around this:\r\n1. you can't really know what the full hash rate of ASICs is at the beginning, what do exchanges do?\r\n2. you're assuming ASICs production will be linear when in reality it could be that we get first `N` ASICs produced and then `5*N` in a single batch which eliminates the guarantee you gave above. What happens in this case? (this becomes less of a threat over time of course)\r\n\r\nAlso, this strategy assumes you are the dominant chain for the sha3 algorithm. I don't believe you get dominance by being the first one because the main incentive miners have is making money, most of them prioritize this over which chain they mine (of course not all of them, but the majority of miners needs to do this to survive). In the long run, I think utility brings the real value and with the value comes the price and hence hash rate. I believe our hash rate dominance depends more on the utility than on the hashing algorithm.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552208754/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_552220455.json b/.gh-issues/00013_552220455.json
new file mode 100644
index 0000000..14b47da
--- /dev/null
+++ b/.gh-issues/00013_552220455.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552220455",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-552220455",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 552220455,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjIyMDQ1NQ==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-10T18:30:55Z",
+    "updated_at": "2019-11-10T18:30:55Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Even if it rises quickly, that's ok. It is a *drop* in hashpower that should be perceived as unhealthy. To get around this, the attacker would have to control the majority of new ASICs before they come online (not impossible but much more economic out-of-band commitment than the previous 51% attack).\r\n\r\nIn reality ASIC production does not come online all at once. Especially as hashrates stabilize this gets hard and harder because the supply of new unused ASICs is unlikely to dwarf current live hashpower.\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552220455/reactions",
+      "total_count": 3,
+      "+1": 3,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_552680753.json b/.gh-issues/00013_552680753.json
new file mode 100644
index 0000000..ff0dd0c
--- /dev/null
+++ b/.gh-issues/00013_552680753.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552680753",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-552680753",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 552680753,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjY4MDc1Mw==",
+    "user": {
+      "login": "stevanlohja",
+      "id": 10556209,
+      "node_id": "MDQ6VXNlcjEwNTU2MjA5",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/10556209?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/stevanlohja",
+      "html_url": "https://github.com/stevanlohja",
+      "followers_url": "https://api.github.com/users/stevanlohja/followers",
+      "following_url": "https://api.github.com/users/stevanlohja/following{/other_user}",
+      "gists_url": "https://api.github.com/users/stevanlohja/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/stevanlohja/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/stevanlohja/subscriptions",
+      "organizations_url": "https://api.github.com/users/stevanlohja/orgs",
+      "repos_url": "https://api.github.com/users/stevanlohja/repos",
+      "events_url": "https://api.github.com/users/stevanlohja/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/stevanlohja/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-12T00:36:40Z",
+    "updated_at": "2019-11-12T00:36:40Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "### REJECT\r\n\r\nReasoning:\r\n\r\n### The motivations are not probable arguments that Sha3 is needed.\r\n\r\n> A response to the recent double-spend attacks against Ethereum Classic. Most of this hashpower was rented or came from other chains, specfically Ethereum (ETH). A seperate proof of work algorithm would encourage the development of a specialized Ethereum Classic mining community, and blunt the ability for attackers to purchase mercenary hash power on the open-market.]\r\n\r\nProof of Work consensus is based on the 51% consensus rule. Therefore, this reaction offers no solution and the authors and champions of this proposal have a footprint of not believing this motivation.\r\n\r\n> As a secondary benefit, deployed smart contracts and dapps running on chain are currently able to use keccak256() in their code. This ECIP could open the possibility of smart contracts being able to evaluate chain state, and simplify second layer (L2) development.\r\n\r\nIt sounds expensive and largely not an in-demand feature. You can evaluate an EVM-based blockchain with traditional analytic libraries and software.\r\n\r\n### The rationales are not probable arguments that Sha3 is needed.\r\n\r\n> A CPU-intensive algorithm like Keccak256 would allow both the uniqueness of a fresh PoW algorithm that has not had ASICs developed against it, while at the same time allowing for organic optimization of a dedicated and financially commited miner base, much the way Bitcoin did with its own SHA256 algorithm.\r\n\r\nThis is equity and security theatre similar to my ProgPoW arguments https://medium.com/@stevan.blog/progpow-is-not-only-shady-its-baloney-opinion-60b2a6570b1c. The author has stated concern for cheap hardware being rented for malicious intentions. This totally contradicts their concerns by putting us back to cheap hardware. Forks to bully ASICs is not sustainable - we're not Monero.\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552680753/reactions",
+      "total_count": 5,
+      "+1": 4,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 1,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_552681182.json b/.gh-issues/00013_552681182.json
new file mode 100644
index 0000000..2005b9b
--- /dev/null
+++ b/.gh-issues/00013_552681182.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552681182",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-552681182",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 552681182,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjY4MTE4Mg==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-12T00:38:49Z",
+    "updated_at": "2019-11-12T00:38:49Z",
+    "author_association": "MEMBER",
+    "body": "> we're not Monero\r\n\r\nI wish ...",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552681182/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 1,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_553046507.json b/.gh-issues/00013_553046507.json
new file mode 100644
index 0000000..264df13
--- /dev/null
+++ b/.gh-issues/00013_553046507.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553046507",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-553046507",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 553046507,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzA0NjUwNw==",
+    "user": {
+      "login": "prestwich",
+      "id": 10149425,
+      "node_id": "MDQ6VXNlcjEwMTQ5NDI1",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/10149425?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/prestwich",
+      "html_url": "https://github.com/prestwich",
+      "followers_url": "https://api.github.com/users/prestwich/followers",
+      "following_url": "https://api.github.com/users/prestwich/following{/other_user}",
+      "gists_url": "https://api.github.com/users/prestwich/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/prestwich/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/prestwich/subscriptions",
+      "organizations_url": "https://api.github.com/users/prestwich/orgs",
+      "repos_url": "https://api.github.com/users/prestwich/repos",
+      "events_url": "https://api.github.com/users/prestwich/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/prestwich/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-12T18:39:04Z",
+    "updated_at": "2019-11-12T18:39:04Z",
+    "author_association": "NONE",
+    "body": "Hi friends, coming into this as a bit of an outsider. Had a conversation in person with Liz the other day and she pointed me here.\r\n\r\nETC seems to be relying on proof of work to create consensus without fulfilling Nakamoto Consensus's security assumptions. An inherent requirement of PoW consensus is that the heaviest valid chain is expensive to produce. This is not currently true for ETC. \r\n\r\nThis means that we're missing out on all the benefits of PoW, and getting nothing in return. Our consensus is brittle to outside actors, light client verification is expensive, and interoperability is expensive. \r\n\r\n### The current situation is untenable\r\n- ETH hashrate is about 20x larger than ETC.\r\n    - [source](https://coinmetrics.io/charts/#assets=eth,etc_log=false_roll=30_left=DiffMean_zoom=1279411200000,1573430400000)\r\n    - This means that ~5% of ETH hashrate can reorg ETC.\r\n- There are 4 Ethereum pools with >6% hashrate\r\n    - [source](https://etherscan.io/stat/miner?range=7&blocktype=blocks)\r\n    - Any one of these pools could 51% attack ETC at will.\r\n- The Ethereum block reward is about $400.\r\n    - So 5% of the hashrate earns about $80 / minute\r\n- The ETC block reward is about $20\r\n    - So 100% of block rewards is about $80 / minute\r\n    - This means that a miner would be about breakeven on reorging ETC, just from block rewards\r\n  \r\nInterestingly, the market will converge to this result as long as ETC and ETH compete for the same hardware. Market equlibrium makes the less-valuable chain insecure whenever 2 or more chains compete for the same hardware. This implies that it is critical not to compete with Ethereum.\r\n\r\nThe cost of attack on ETC for existing ETH mining pools is measured in the thousands of dollars. I could probably personally afford a deep reorg. The current situation is untenable. \r\n\r\n### ASIC-resistance considered harmful\r\n\r\nAll \"ASIC-resistant\" coins end either with ASICs (ethereum, litecoin, decred, dash, grin, etc.etc.etc.) or with regular hard forks (monero). As @stevanlohja points out, ETC is not Monero, and doesn't want to give devs ongoing control over the PoW algorithm.\r\n\r\nThe one lasting effect of ASIC-resistance is that light client verification of these chains is inordinately expensive. As @phyro and @zmitton point out, light client verification of ETH and ETC is bizarrely impractical. Beyond the bandwidth costs, the verification cost of ethash is literally millions of times more expensive than verification of SHA2 or keccak256. \r\n\r\nThis has much wider impact than off-chain verifiers. The other thing it prevents (and why I popped into this thread) is cross-chain communication. Direct communication relies on light client verification of the remote consensus process Verification of keccak256 in EVM costs tens of gas. Verification of ethash costs millions. Cross-chain communication is not currently possible because the PoW is too expensive to verify.\r\n\r\nSo if the main goal is impossible to achieve, there are negative side-effects, and the pursuit results in either failure or developer capture or the chain, why should we pursue ASIC-resistance?\r\n\r\n### What does an algorithm change do?\r\n\r\n- Prevent immediate attack by outside actors\r\n- Temporary drop in hashrate, but not necessarily network security\r\n- Longterm increase in resistance to outside attacks as ASICs come online\r\n- Cheaper light clients\r\n- Practical interoperability solutions\r\n- Direct chain introspection my smart contracts\r\n    - inspecting blocks outside of the most recent 256\r\n    - inspecting private state in remote contracts\r\n\r\n### Is keccak256 suitable?\r\n\r\nYes. It is well-known and widely implemented. No major chain uses it. ETC will be the most valuable keccak256 chain. Semi-optimized GPU implementations exist. It is available on most chains we will want to interoperate with. It is extremely unlikely to be broken or backdoored.\r\n\r\nOther suitable options might include\r\n- double or triple keccak256\r\n    - Bitcoin use double-sha2 so that final hash preimages are always short\r\n- any combination of 2-5 well-known hash functions\r\n    - e.g. keccak256(sha2(blake2b(header)))\r\n    - avoid sha3, as it is not deployed on ETC or most other chains\r\n\r\n### Summary\r\n\r\nChange algorithms. Keccak256 is one of the better choices available.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553046507/reactions",
+      "total_count": 22,
+      "+1": 10,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 6,
+      "rocket": 5,
+      "eyes": 1
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_553061307.json b/.gh-issues/00013_553061307.json
new file mode 100644
index 0000000..d7591fa
--- /dev/null
+++ b/.gh-issues/00013_553061307.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553061307",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-553061307",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 553061307,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzA2MTMwNw==",
+    "user": {
+      "login": "pyskell",
+      "id": 9665963,
+      "node_id": "MDQ6VXNlcjk2NjU5NjM=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/9665963?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/pyskell",
+      "html_url": "https://github.com/pyskell",
+      "followers_url": "https://api.github.com/users/pyskell/followers",
+      "following_url": "https://api.github.com/users/pyskell/following{/other_user}",
+      "gists_url": "https://api.github.com/users/pyskell/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/pyskell/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/pyskell/subscriptions",
+      "organizations_url": "https://api.github.com/users/pyskell/orgs",
+      "repos_url": "https://api.github.com/users/pyskell/repos",
+      "events_url": "https://api.github.com/users/pyskell/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/pyskell/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-12T19:03:27Z",
+    "updated_at": "2019-11-12T19:03:27Z",
+    "author_association": "MEMBER",
+    "body": "Just want to clarify a few thoughts:\r\n\r\n> An inherent requirement of PoW consensus is that the heaviest valid chain is expensive to produce. This is not currently true for ETC.\r\n\r\nThis is true for ETC, nodes follow the heaviest valid chain with its rule set. Though @prestwich's other comments regarding vulnerability to other Ethash pools remains valid regardless.\r\n\r\n> ETC and ETH compete for the same hardware\r\n\r\nETC, ETH, and all other non-ASIC mined chains compete for the same hardware (GPUs). Excepting for present day market conditions (most purchasable hashrate sticks to one algorithm), and some potential performance advantages for specific GPUs there is materially little that makes various GPU-mined algorithms distinct.\r\n\r\nNote: I'm not commenting on the above proposal or any other comments provided.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553061307/reactions",
+      "total_count": 4,
+      "+1": 4,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_553069359.json b/.gh-issues/00013_553069359.json
new file mode 100644
index 0000000..4f4cd8f
--- /dev/null
+++ b/.gh-issues/00013_553069359.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553069359",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-553069359",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 553069359,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzA2OTM1OQ==",
+    "user": {
+      "login": "prestwich",
+      "id": 10149425,
+      "node_id": "MDQ6VXNlcjEwMTQ5NDI1",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/10149425?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/prestwich",
+      "html_url": "https://github.com/prestwich",
+      "followers_url": "https://api.github.com/users/prestwich/followers",
+      "following_url": "https://api.github.com/users/prestwich/following{/other_user}",
+      "gists_url": "https://api.github.com/users/prestwich/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/prestwich/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/prestwich/subscriptions",
+      "organizations_url": "https://api.github.com/users/prestwich/orgs",
+      "repos_url": "https://api.github.com/users/prestwich/repos",
+      "events_url": "https://api.github.com/users/prestwich/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/prestwich/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-12T19:12:46Z",
+    "updated_at": "2019-11-12T19:12:46Z",
+    "author_association": "NONE",
+    "body": "> > An inherent requirement of PoW consensus is that the heaviest valid chain is expensive to produce. This is not currently true for ETC.\r\n> \r\n> This is true for ETC, nodes follow the heaviest valid chain with its rule set. Though @prestwich's other comments regarding vulnerability to other Ethash pools remains valid regardless.\r\n\r\nOh, I mean that PoW assumes that, and only works if, the heaviest chain is expensive to make. And that assumption is not valid for ETC at the moment. So following the heaviest valid chain does not create a reliable consensus in ETC",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553069359/reactions",
+      "total_count": 5,
+      "+1": 5,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_553171120.json b/.gh-issues/00013_553171120.json
new file mode 100644
index 0000000..56c7e8f
--- /dev/null
+++ b/.gh-issues/00013_553171120.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553171120",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-553171120",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 553171120,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzE3MTEyMA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-12T23:51:21Z",
+    "updated_at": "2019-11-12T23:51:21Z",
+    "author_association": "MEMBER",
+    "body": "I have just learnt that ZCash Foundation held a ballet very similar to what we are talking about now on ETC in June 2018, with the results announced in July 2018:\r\n\r\nhttps://github.com/ZcashFoundation/Elections/blob/master/2018-Q2/General-Measures/embrace_simple_asics.md\r\n\r\nTheirs was in June 2018:\r\n\r\nhttps://www.zfnd.org/blog/governance-voting/\r\n\r\nResults from July 2018 in favor of that ballot - Votes: Agree 38, Disagree 26\r\n\r\nhttps://www.zfnd.org/blog/governance-results/\r\n\r\n\"The Foundation should commit to a plan for migrating the Zcash protocol to a new proof of work algorithm with a hard-fork planned between September 30, 2020 and December 31, 2020, with the following tasks: 1) Selecting a thermodynamically efficient (not ASIC-resistant!), currently unused proof-of-work algorithm 2) Hosting and building an open hardware specification for the selected PoW algorithm 3) Assembling a consortium of hardware companies to build hardware against this open specification, while encouraging upstream contributions 4) Building an open source, cross-platform, user-friendly, p2pool-esque piece of mining software for use with this hardware 5) Manage the hard fork upgrade process across users, wallets, exchanges\"",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553171120/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_553171330.json b/.gh-issues/00013_553171330.json
new file mode 100644
index 0000000..0e7ee03
--- /dev/null
+++ b/.gh-issues/00013_553171330.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553171330",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-553171330",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 553171330,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzE3MTMzMA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-12T23:52:13Z",
+    "updated_at": "2019-11-12T23:52:13Z",
+    "author_association": "MEMBER",
+    "body": "Has anybody seen recent updates on their plans?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553171330/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_553173000.json b/.gh-issues/00013_553173000.json
new file mode 100644
index 0000000..97970df
--- /dev/null
+++ b/.gh-issues/00013_553173000.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553173000",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-553173000",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 553173000,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzE3MzAwMA==",
+    "user": {
+      "login": "prestwich",
+      "id": 10149425,
+      "node_id": "MDQ6VXNlcjEwMTQ5NDI1",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/10149425?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/prestwich",
+      "html_url": "https://github.com/prestwich",
+      "followers_url": "https://api.github.com/users/prestwich/followers",
+      "following_url": "https://api.github.com/users/prestwich/following{/other_user}",
+      "gists_url": "https://api.github.com/users/prestwich/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/prestwich/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/prestwich/subscriptions",
+      "organizations_url": "https://api.github.com/users/prestwich/orgs",
+      "repos_url": "https://api.github.com/users/prestwich/repos",
+      "events_url": "https://api.github.com/users/prestwich/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/prestwich/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-12T23:58:37Z",
+    "updated_at": "2019-11-12T23:58:37Z",
+    "author_association": "NONE",
+    "body": "> Has anybody seen recent updates on their plans?\r\n\r\nAlmost everything except the Dev Fund debate is on hold in the Zcash community right now. I asked Josh about this a while back and afaik there's no official plan.\r\n\r\nWorth mentioning I'm an author of [ZIP-221](https://github.com/zcash/zips/pull/220), which is aimed at making light-client verification of Zcash cheaper via FlyClient-style history commitments",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553173000/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_553518818.json b/.gh-issues/00013_553518818.json
new file mode 100644
index 0000000..76d9ef1
--- /dev/null
+++ b/.gh-issues/00013_553518818.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553518818",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-553518818",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 553518818,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzUxODgxOA==",
+    "user": {
+      "login": "saturn-network",
+      "id": 44673408,
+      "node_id": "MDQ6VXNlcjQ0NjczNDA4",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/44673408?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/saturn-network",
+      "html_url": "https://github.com/saturn-network",
+      "followers_url": "https://api.github.com/users/saturn-network/followers",
+      "following_url": "https://api.github.com/users/saturn-network/following{/other_user}",
+      "gists_url": "https://api.github.com/users/saturn-network/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/saturn-network/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/saturn-network/subscriptions",
+      "organizations_url": "https://api.github.com/users/saturn-network/orgs",
+      "repos_url": "https://api.github.com/users/saturn-network/repos",
+      "events_url": "https://api.github.com/users/saturn-network/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/saturn-network/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-13T17:39:26Z",
+    "updated_at": "2019-11-13T17:39:26Z",
+    "author_association": "NONE",
+    "body": "Just want to point out that **the longer we debate** the move to thermodynamically efficient and cryptographically secure SHA3, **the less ETC's chances** to get the first mover advantage and be the dominant hashpower consumer chain.\r\n\r\nhttps://www.saturn.network/blog/discussing-sha3-for-ethereum-classic/\r\n\r\nThe best path towards migration is to move once a critical mass of hashrate (potentially with first generation of SHA3 ASICs operating) is available. This can either be bootstrapped via an incentivized testnet (e.g. monitor hashrate and issue bounty for Astor.host miners upon transition), or follow @phyro's gradual EthHash sunset schedule, with both algos running in parallel and slowly shifting block proportions (and thus rewards) from EthHash to SHA3 miners.\r\n\r\nLet's just make sure we avoid [Verge-like fuckups](https://www.ccn.com/privacy-coin-verge-succumbs-to-51-attack-again/).\r\n\r\nHappy chatting!",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553518818/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_553540440.json b/.gh-issues/00013_553540440.json
new file mode 100644
index 0000000..a33f135
--- /dev/null
+++ b/.gh-issues/00013_553540440.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553540440",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-553540440",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 553540440,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzU0MDQ0MA==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-13T18:34:17Z",
+    "updated_at": "2019-11-13T18:34:17Z",
+    "author_association": "MEMBER",
+    "body": "Not sure how bounty would work without touching the monetary policy. Perhaps legit transactions/donations? I don't think this would work either tbh as we wouldn't be able to gather enough for it to be relevant.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553540440/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_553546826.json b/.gh-issues/00013_553546826.json
new file mode 100644
index 0000000..3f4ff78
--- /dev/null
+++ b/.gh-issues/00013_553546826.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553546826",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-553546826",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 553546826,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzU0NjgyNg==",
+    "user": {
+      "login": "saturn-network",
+      "id": 44673408,
+      "node_id": "MDQ6VXNlcjQ0NjczNDA4",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/44673408?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/saturn-network",
+      "html_url": "https://github.com/saturn-network",
+      "followers_url": "https://api.github.com/users/saturn-network/followers",
+      "following_url": "https://api.github.com/users/saturn-network/following{/other_user}",
+      "gists_url": "https://api.github.com/users/saturn-network/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/saturn-network/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/saturn-network/subscriptions",
+      "organizations_url": "https://api.github.com/users/saturn-network/orgs",
+      "repos_url": "https://api.github.com/users/saturn-network/repos",
+      "events_url": "https://api.github.com/users/saturn-network/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/saturn-network/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-13T18:50:52Z",
+    "updated_at": "2019-11-13T18:50:52Z",
+    "author_association": "NONE",
+    "body": "Well, chances are if ETC is to live forever we'll have to change POW hashing function every 50 years or so. Might as well figure out the migration process now, so that when ETC stores billions of dollars and SHA3 gets considered insecure, there is an established path towards SHA4 migration that preserves monetary policy. Bitcoin will have to adapt too in time.\r\n\r\nYour gradual dual-hashing proposal is clever. The trick here is to balance different hashrates and difficulty adjustments without introducing unfortunate bugs. Need to learn from multi-algo coins' (e.g. XVG) mistakes.\r\n\r\nBut before we proceed we must come to terms with the fact that changing hashing algos is a necessary procedure, and migrating to SHA3 soon might be the best choice we have for the next 50 years.\r\n\r\nIf we miss this window and another coin adopts SHA3 faster we might have to wait until SHA4, and watch other chains enjoy security and flyclients.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553546826/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_553556651.json b/.gh-issues/00013_553556651.json
new file mode 100644
index 0000000..6806233
--- /dev/null
+++ b/.gh-issues/00013_553556651.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553556651",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-553556651",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 553556651,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzU1NjY1MQ==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-13T19:16:23Z",
+    "updated_at": "2019-11-13T19:17:54Z",
+    "author_association": "MEMBER",
+    "body": "Yes, the dual hashing would need to be well thought out, I have not invested time to actually think of the consequences and the actual implementation.\r\n\r\nI'm still not convinced that being the first one matters. If we are the first one sure we are leading at the beginning, but as soon as another chain with SHA3 appears, the miners will mine whatever is the most profitable. And I guarantee you that there won't be a single SHA3 chain out there. The fewer chains that share the same algorithm, the less likely a more profitable one exists. If we judge by that, perhaps we should choose something that is proven secure for some time but also less known.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553556651/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_553561683.json b/.gh-issues/00013_553561683.json
new file mode 100644
index 0000000..83bb5e3
--- /dev/null
+++ b/.gh-issues/00013_553561683.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553561683",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-553561683",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 553561683,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzU2MTY4Mw==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-13T19:29:34Z",
+    "updated_at": "2019-11-13T19:29:34Z",
+    "author_association": "MEMBER",
+    "body": "> If we judge by that, perhaps we should choose something that is proven secure for some time but also less known.\r\n\r\nSHA3 imo fits the bill. It's well known and secure. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553561683/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_553562731.json b/.gh-issues/00013_553562731.json
new file mode 100644
index 0000000..d4656d5
--- /dev/null
+++ b/.gh-issues/00013_553562731.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553562731",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-553562731",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 553562731,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzU2MjczMQ==",
+    "user": {
+      "login": "prestwich",
+      "id": 10149425,
+      "node_id": "MDQ6VXNlcjEwMTQ5NDI1",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/10149425?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/prestwich",
+      "html_url": "https://github.com/prestwich",
+      "followers_url": "https://api.github.com/users/prestwich/followers",
+      "following_url": "https://api.github.com/users/prestwich/following{/other_user}",
+      "gists_url": "https://api.github.com/users/prestwich/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/prestwich/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/prestwich/subscriptions",
+      "organizations_url": "https://api.github.com/users/prestwich/orgs",
+      "repos_url": "https://api.github.com/users/prestwich/repos",
+      "events_url": "https://api.github.com/users/prestwich/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/prestwich/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-13T19:32:00Z",
+    "updated_at": "2019-11-13T19:32:00Z",
+    "author_association": "NONE",
+    "body": "> SHA3 imo fits the bill. It's well known and secure.\r\n\r\nprefer keccak256 over sha3, because the EVM has keccak256 but not sha3",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553562731/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_553573665.json b/.gh-issues/00013_553573665.json
new file mode 100644
index 0000000..a8d24bc
--- /dev/null
+++ b/.gh-issues/00013_553573665.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553573665",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-553573665",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 553573665,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzU3MzY2NQ==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-13T19:53:05Z",
+    "updated_at": "2019-11-13T19:53:05Z",
+    "author_association": "MEMBER",
+    "body": "Thanks for correcting me @prestwich I meant to say Keccak256. I went ahead and modified the title of the discussions here to Keccak256.\r\n\r\nI also created a little poll to gather feedback from miners on Twitter over their thoughts on this https://twitter.com/Yazanator/status/1194704021065535491",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553573665/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_553804283.json b/.gh-issues/00013_553804283.json
new file mode 100644
index 0000000..2d85901
--- /dev/null
+++ b/.gh-issues/00013_553804283.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553804283",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-553804283",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 553804283,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzgwNDI4Mw==",
+    "user": {
+      "login": "stevanlohja",
+      "id": 10556209,
+      "node_id": "MDQ6VXNlcjEwNTU2MjA5",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/10556209?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/stevanlohja",
+      "html_url": "https://github.com/stevanlohja",
+      "followers_url": "https://api.github.com/users/stevanlohja/followers",
+      "following_url": "https://api.github.com/users/stevanlohja/following{/other_user}",
+      "gists_url": "https://api.github.com/users/stevanlohja/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/stevanlohja/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/stevanlohja/subscriptions",
+      "organizations_url": "https://api.github.com/users/stevanlohja/orgs",
+      "repos_url": "https://api.github.com/users/stevanlohja/repos",
+      "events_url": "https://api.github.com/users/stevanlohja/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/stevanlohja/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-14T09:33:36Z",
+    "updated_at": "2019-11-14T10:00:31Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "@saturn-network What's the data behind this hasty \"window\" you are selling? It just sounds like marketing noise to me.\r\n\r\nChanging hastily to just be the first doesn't seem like a probable reason to interrupt our current users either.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553804283/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_553941518.json b/.gh-issues/00013_553941518.json
new file mode 100644
index 0000000..e153c79
--- /dev/null
+++ b/.gh-issues/00013_553941518.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553941518",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-553941518",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 553941518,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1Mzk0MTUxOA==",
+    "user": {
+      "login": "Wolf-Linzhi",
+      "id": 56785535,
+      "node_id": "MDQ6VXNlcjU2Nzg1NTM1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/56785535?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/Wolf-Linzhi",
+      "html_url": "https://github.com/Wolf-Linzhi",
+      "followers_url": "https://api.github.com/users/Wolf-Linzhi/followers",
+      "following_url": "https://api.github.com/users/Wolf-Linzhi/following{/other_user}",
+      "gists_url": "https://api.github.com/users/Wolf-Linzhi/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/Wolf-Linzhi/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/Wolf-Linzhi/subscriptions",
+      "organizations_url": "https://api.github.com/users/Wolf-Linzhi/orgs",
+      "repos_url": "https://api.github.com/users/Wolf-Linzhi/repos",
+      "events_url": "https://api.github.com/users/Wolf-Linzhi/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/Wolf-Linzhi/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-14T15:35:24Z",
+    "updated_at": "2019-11-14T15:35:24Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "The costs for making (from scratch) a competitive logic-only PoW miner (sha3/keccak256) in 2019 are far higher than for making a competitive Ethash/ProgPoW/RandomX miner.\r\nWe put together a nice piece around this\r\nhttps://medium.com/@Linzhi/history-of-bitcoin-mining-hardware-60be773e5f5d",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553941518/reactions",
+      "total_count": 3,
+      "+1": 1,
+      "-1": 1,
+      "laugh": 0,
+      "hooray": 1,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_554099114.json b/.gh-issues/00013_554099114.json
new file mode 100644
index 0000000..7597997
--- /dev/null
+++ b/.gh-issues/00013_554099114.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554099114",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-554099114",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 554099114,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDA5OTExNA==",
+    "user": {
+      "login": "stevanlohja",
+      "id": 10556209,
+      "node_id": "MDQ6VXNlcjEwNTU2MjA5",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/10556209?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/stevanlohja",
+      "html_url": "https://github.com/stevanlohja",
+      "followers_url": "https://api.github.com/users/stevanlohja/followers",
+      "following_url": "https://api.github.com/users/stevanlohja/following{/other_user}",
+      "gists_url": "https://api.github.com/users/stevanlohja/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/stevanlohja/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/stevanlohja/subscriptions",
+      "organizations_url": "https://api.github.com/users/stevanlohja/orgs",
+      "repos_url": "https://api.github.com/users/stevanlohja/repos",
+      "events_url": "https://api.github.com/users/stevanlohja/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/stevanlohja/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-14T21:57:37Z",
+    "updated_at": "2019-11-14T21:57:37Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Sha256 and Ethash (Sha3 + Dag) have been working stable for years now. While the Dag was an inherited flaw, it's been adopted in the market and technical merits do not justify the means in this case. \r\n\r\nProgPoW, Keccak256, and Dag limit will be short-lived extensions to older hardware. If you thought ProgPoW was a bailout then certainly you can apply that argument to Keccak256 and a Dag limit. \r\n\r\nI'd like to know how involved the Saturn/P3C team is involved with manufacturers or other miners to ensure there would even be dedicated hardware to such a change as the rebuilding a new miner market at this stage is very difficult and such a change will leave the network hash much less distributed and profitable to a few.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554099114/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_554518371.json b/.gh-issues/00013_554518371.json
new file mode 100644
index 0000000..d49040b
--- /dev/null
+++ b/.gh-issues/00013_554518371.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554518371",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-554518371",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 554518371,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDUxODM3MQ==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-15T20:35:11Z",
+    "updated_at": "2019-11-15T20:35:11Z",
+    "author_association": "MEMBER",
+    "body": "I am in favor of this proposal to move to Keccak256",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554518371/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_554607063.json b/.gh-issues/00013_554607063.json
new file mode 100644
index 0000000..fc5dd15
--- /dev/null
+++ b/.gh-issues/00013_554607063.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554607063",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-554607063",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 554607063,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDYwNzA2Mw==",
+    "user": {
+      "login": "Wolf-Linzhi",
+      "id": 56785535,
+      "node_id": "MDQ6VXNlcjU2Nzg1NTM1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/56785535?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/Wolf-Linzhi",
+      "html_url": "https://github.com/Wolf-Linzhi",
+      "followers_url": "https://api.github.com/users/Wolf-Linzhi/followers",
+      "following_url": "https://api.github.com/users/Wolf-Linzhi/following{/other_user}",
+      "gists_url": "https://api.github.com/users/Wolf-Linzhi/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/Wolf-Linzhi/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/Wolf-Linzhi/subscriptions",
+      "organizations_url": "https://api.github.com/users/Wolf-Linzhi/orgs",
+      "repos_url": "https://api.github.com/users/Wolf-Linzhi/repos",
+      "events_url": "https://api.github.com/users/Wolf-Linzhi/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/Wolf-Linzhi/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-16T05:41:00Z",
+    "updated_at": "2019-11-16T05:41:00Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "I am against ECIP-1049 (sha3/keccak256) for the following reasons:\r\n\r\n- It devalues our upcoming Ethash ASIC.\r\n\r\n- PoW sets a price for newly issued coins. Changing PoW is price manipulation.\r\n\r\n- Trying to find a \"better\" PoW algo in a live blockchain is pretense of knowledge.\r\nModifying Hayek: \"Overconfidence in the use of science to control a blockchain will lead to the destruction of a blockchain which no brain has designed, but which has instead grown from the free efforts of thousands of individuals.\"\r\n\r\n- ECIP 1049, unless agreed to by 100% of the discussion participants, would go against the Crypto-Decentralist Manifesto https://ethereumclassic.org/blog/2016-07-11-manifesto/\r\n\"The rules governing the blockchain network are known in advance. They’re exactly the same for everyone and not subject to change other than with 100% consensus. Yes, it must be 100%. Because any change to the system’s rules that not all participants freely agree to creates a network split, diminishing network value for everyone.\"\r\n\r\n- If you want to protect user funds, you also want to protect miner capital and PoW integrity, unless those miners turn against users or other miners.\r\n- PoW change introduces a discontinuity in security.\r\n- PoW change devalues current Ethash security investment of at least 20 mio USD.\r\n- PoW change impairs trust minimization and objectivity.\r\n- PoW change turns a blockchain into a distributed ledger.\r\n- PoW change sends the message that ETC has a security problem.\r\n\r\n- Minority argument doesn't hold (why should majority miners reject additional revenue?).\r\n- First to market argument doesn't hold (is ETC an experimental sandbox? size of security budget drives PoW investments).\r\n- Fundamental principle follow-the-longest-chain is thrown overboard for no good reason other than subjective judgment over which algo is \"better\".\r\n\r\n- Ethash will always be part of Ethereum, if you verify from genesis. If you want a new blockchain, why destroy an old one first?\r\n- Adopting ECIP 1049 will lead to months of discussions - when and how to switch over (gradually? dual Ethash/Keccak256 algo?), if or how to fund \"open\" asics (even though it will be harder to be more \"open\" than Linzhi's Ethash ASIC).\r\n\r\n- Keccak256 PoW ASIC is harder and more exclusive/expensive to make than Ethash ASIC.\r\n- Keccak256 PoW in 2020 is boring, not usable in other industry applications, forces backend innovation only.\r\n- Consider re-verifying the entire state from genesis using Keccak256, at least you then only have one verification algo.\r\n- If cannot decide between multiple subjectively \"best\" PoW algos, consider A) rolling a dice or B) multi-algo mining.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554607063/reactions",
+      "total_count": 4,
+      "+1": 2,
+      "-1": 1,
+      "laugh": 0,
+      "hooray": 1,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_554614687.json b/.gh-issues/00013_554614687.json
new file mode 100644
index 0000000..27cb4bf
--- /dev/null
+++ b/.gh-issues/00013_554614687.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554614687",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-554614687",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 554614687,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDYxNDY4Nw==",
+    "user": {
+      "login": "serialp",
+      "id": 1479761,
+      "node_id": "MDQ6VXNlcjE0Nzk3NjE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1479761?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/serialp",
+      "html_url": "https://github.com/serialp",
+      "followers_url": "https://api.github.com/users/serialp/followers",
+      "following_url": "https://api.github.com/users/serialp/following{/other_user}",
+      "gists_url": "https://api.github.com/users/serialp/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/serialp/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/serialp/subscriptions",
+      "organizations_url": "https://api.github.com/users/serialp/orgs",
+      "repos_url": "https://api.github.com/users/serialp/repos",
+      "events_url": "https://api.github.com/users/serialp/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/serialp/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-16T07:57:16Z",
+    "updated_at": "2019-11-16T08:03:46Z",
+    "author_association": "NONE",
+    "body": "> ### Is keccak256 suitable?\r\n> Yes. It is well-known and widely implemented. No major chain uses it. ETC will be the most valuable keccak256 chain. Semi-optimized GPU implementations exist. It is available on most chains we will want to interoperate with. It is extremely unlikely to be broken or backdoored.\r\n> ### Summary\r\n> Change algorithms. Keccak256 is one of the better choices available.\r\n\r\nTotally agree with that proposal.\r\n\r\nAnother one would be about implementing a solution of multiple algorithms with a limitation of each to a certain percentage like 20% whereas the 51% attack would be nearly impossible to realize like digibyte implemented on their network ?\r\n\r\nhttps://digibyte.io/about-digibyte-blockchain\r\n\r\nThey even put recently in place a new algo adocrypt (based on SHA3) that change itself every 10days. How about that...\r\n\r\nThe wiser way would be to go not only with Keccak256, but to have multi-mining algorithms in a more decentralized & secured way\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554614687/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_554616056.json b/.gh-issues/00013_554616056.json
new file mode 100644
index 0000000..2f8c28e
--- /dev/null
+++ b/.gh-issues/00013_554616056.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554616056",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-554616056",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 554616056,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDYxNjA1Ng==",
+    "user": {
+      "login": "serialp",
+      "id": 1479761,
+      "node_id": "MDQ6VXNlcjE0Nzk3NjE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1479761?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/serialp",
+      "html_url": "https://github.com/serialp",
+      "followers_url": "https://api.github.com/users/serialp/followers",
+      "following_url": "https://api.github.com/users/serialp/following{/other_user}",
+      "gists_url": "https://api.github.com/users/serialp/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/serialp/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/serialp/subscriptions",
+      "organizations_url": "https://api.github.com/users/serialp/orgs",
+      "repos_url": "https://api.github.com/users/serialp/repos",
+      "events_url": "https://api.github.com/users/serialp/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/serialp/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-16T08:18:55Z",
+    "updated_at": "2019-11-16T08:18:55Z",
+    "author_association": "NONE",
+    "body": "Also if we consider that we are in an emergency situation, There’s a good work around that could also be considered as a permanent solution which is pirl guard implementation https://medium.com/pirl/pirlguard-innovative-solution-against-51-attacks-87dd45aa1109\r\n\r\nI have whitenessed callisto.network emergency HF during its 51% attack implementing Pirl guard solution with the assistance of pirl guard team, and I was a success, the attack has stopped right away after the HF until now.\r\n\r\nhttps://amp.reddit.com/r/CallistoCrypto/comments/av8xeg/emergency_hard_fork_callisto_will_implement/",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554616056/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_554621943.json b/.gh-issues/00013_554621943.json
new file mode 100644
index 0000000..8d5af7b
--- /dev/null
+++ b/.gh-issues/00013_554621943.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554621943",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-554621943",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 554621943,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDYyMTk0Mw==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-16T09:46:48Z",
+    "updated_at": "2019-11-16T09:46:48Z",
+    "author_association": "MEMBER",
+    "body": "Pirl guard is subjective because it introduces reasoning based on the local state. This breaks the objectivity of node judgment because now nodes can have a different opinion about a specific chain. If we decide to break the objectivity of the consensus algorithm, we might as well put a max reorg cap because it is simpler and achieves the same (it's actually better because you get finality for a chain that is blind about the chains that differ for more than `K` blocks where `K` is the max reorg cap. Both can lead to forks though, that's the issue).\r\n\r\nHaving multiple mining algorithms is an interesting approach but we have never considered the implications of going this way.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554621943/reactions",
+      "total_count": 4,
+      "+1": 4,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_554624545.json b/.gh-issues/00013_554624545.json
new file mode 100644
index 0000000..56cd808
--- /dev/null
+++ b/.gh-issues/00013_554624545.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554624545",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-554624545",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 554624545,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDYyNDU0NQ==",
+    "user": {
+      "login": "serialp",
+      "id": 1479761,
+      "node_id": "MDQ6VXNlcjE0Nzk3NjE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1479761?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/serialp",
+      "html_url": "https://github.com/serialp",
+      "followers_url": "https://api.github.com/users/serialp/followers",
+      "following_url": "https://api.github.com/users/serialp/following{/other_user}",
+      "gists_url": "https://api.github.com/users/serialp/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/serialp/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/serialp/subscriptions",
+      "organizations_url": "https://api.github.com/users/serialp/orgs",
+      "repos_url": "https://api.github.com/users/serialp/repos",
+      "events_url": "https://api.github.com/users/serialp/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/serialp/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-16T10:26:06Z",
+    "updated_at": "2019-11-16T10:26:06Z",
+    "author_association": "NONE",
+    "body": "> Having multiple mining algorithms is an interesting approach but we have never considered the implications of going this way.\r\n\r\n\r\nYou can mine DigiByte on one of five separate mining algorithms. Each algo averages out to mine 20% of new blocks. This allows for much greater decentralization than other blockchains. An attacker with 99% of of any individual algorithm would still be unable to hardfork the blockchain, making DigiByte much more secure against PoW attacks than other blockchains.\r\n\r\nMore info:  https://github.com/digibyte/digibyte/blob/master/README.md\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554624545/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_554651883.json b/.gh-issues/00013_554651883.json
new file mode 100644
index 0000000..e3bccb9
--- /dev/null
+++ b/.gh-issues/00013_554651883.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554651883",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-554651883",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 554651883,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDY1MTg4Mw==",
+    "user": {
+      "login": "lookfirst",
+      "id": 85355,
+      "node_id": "MDQ6VXNlcjg1MzU1",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/85355?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/lookfirst",
+      "html_url": "https://github.com/lookfirst",
+      "followers_url": "https://api.github.com/users/lookfirst/followers",
+      "following_url": "https://api.github.com/users/lookfirst/following{/other_user}",
+      "gists_url": "https://api.github.com/users/lookfirst/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/lookfirst/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/lookfirst/subscriptions",
+      "organizations_url": "https://api.github.com/users/lookfirst/orgs",
+      "repos_url": "https://api.github.com/users/lookfirst/repos",
+      "events_url": "https://api.github.com/users/lookfirst/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/lookfirst/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-16T16:25:36Z",
+    "updated_at": "2019-11-16T16:25:36Z",
+    "author_association": "NONE",
+    "body": "@serialp Yea, just don't make the same mistake as [Verge](https://news.bitcoin.com/verge-is-forced-to-fork-after-suffering-a-51-attack/) did awhile back.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554651883/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_554653283.json b/.gh-issues/00013_554653283.json
new file mode 100644
index 0000000..52cbd05
--- /dev/null
+++ b/.gh-issues/00013_554653283.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554653283",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-554653283",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 554653283,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDY1MzI4Mw==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-16T16:41:58Z",
+    "updated_at": "2019-11-16T16:41:58Z",
+    "author_association": "MEMBER",
+    "body": "OK, maybe then etc should have 50% ethash & 50% keccak algo? ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554653283/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_554673460.json b/.gh-issues/00013_554673460.json
new file mode 100644
index 0000000..d78db5a
--- /dev/null
+++ b/.gh-issues/00013_554673460.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554673460",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-554673460",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 554673460,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDY3MzQ2MA==",
+    "user": {
+      "login": "serialp",
+      "id": 1479761,
+      "node_id": "MDQ6VXNlcjE0Nzk3NjE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1479761?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/serialp",
+      "html_url": "https://github.com/serialp",
+      "followers_url": "https://api.github.com/users/serialp/followers",
+      "following_url": "https://api.github.com/users/serialp/following{/other_user}",
+      "gists_url": "https://api.github.com/users/serialp/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/serialp/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/serialp/subscriptions",
+      "organizations_url": "https://api.github.com/users/serialp/orgs",
+      "repos_url": "https://api.github.com/users/serialp/repos",
+      "events_url": "https://api.github.com/users/serialp/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/serialp/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-16T20:54:50Z",
+    "updated_at": "2019-11-16T20:54:50Z",
+    "author_association": "NONE",
+    "body": "> @serialp Yea, just don't make the same mistake as [Verge](https://news.bitcoin.com/verge-is-forced-to-fork-after-suffering-a-51-attack/) did awhile back.\r\n\r\n\r\nHello @lookfirst  I was not talking about Verge but Callisto instead. Plus we learn from mistakes right ?\r\n\r\nAnyway [apparently i am not helping,](https://twitter.com/Yazanator/status/1195591840390627333) i thought it was a free and open instructive discussion. But look like my suggestions are not welcomed by some people and i have been [blocked ](https://twitter.com/Yazanator/status/1195591840390627333) from a twitter account to avoid posting.\r\n\r\nSo i will step out and let the \"right people\" discuss about it.\r\n\r\nAll the best for ETC.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554673460/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_554674998.json b/.gh-issues/00013_554674998.json
new file mode 100644
index 0000000..5017461
--- /dev/null
+++ b/.gh-issues/00013_554674998.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554674998",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-554674998",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 554674998,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDY3NDk5OA==",
+    "user": {
+      "login": "prestwich",
+      "id": 10149425,
+      "node_id": "MDQ6VXNlcjEwMTQ5NDI1",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/10149425?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/prestwich",
+      "html_url": "https://github.com/prestwich",
+      "followers_url": "https://api.github.com/users/prestwich/followers",
+      "following_url": "https://api.github.com/users/prestwich/following{/other_user}",
+      "gists_url": "https://api.github.com/users/prestwich/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/prestwich/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/prestwich/subscriptions",
+      "organizations_url": "https://api.github.com/users/prestwich/orgs",
+      "repos_url": "https://api.github.com/users/prestwich/repos",
+      "events_url": "https://api.github.com/users/prestwich/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/prestwich/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-16T21:14:43Z",
+    "updated_at": "2019-11-16T21:14:43Z",
+    "author_association": "NONE",
+    "body": "Changing the hash function has temporary impact on the chain's security, but negligible impact on its security model. The properties of the hash function are relatively unimportant to analysis of PoW security, so long as they fit a few prerequisites (memoryless, cheap to verify, etc).\r\n\r\nOn the other hand, using a finalization mechanism or changing to multi-algorithm PoW would have dramatic effects on the security model that have not been rigorously analyzed. We could open up a much broader conversation about changing the security model, e.g. introducing subjectivity, but it's entirely orthogonal to the ethash/keccak256 conversation",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554674998/reactions",
+      "total_count": 6,
+      "+1": 6,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_554687986.json b/.gh-issues/00013_554687986.json
new file mode 100644
index 0000000..87310fd
--- /dev/null
+++ b/.gh-issues/00013_554687986.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554687986",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-554687986",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 554687986,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDY4Nzk4Ng==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-17T00:25:26Z",
+    "updated_at": "2019-11-17T00:25:26Z",
+    "author_association": "MEMBER",
+    "body": "@prestwich good points, I would add that the argument of having a hash function where specialized hardware dominates as opposed to a general GPU is valid IMO. If you allow GPUs to mine and they create a large portion of your hash rate, you can't really give a good estimate as to what the maximum hash rate could be. Sure, you can never estimate this correctly, but given that GPUs are used for gaming, there's a lot of power that could go to mining that is currently 'offline'. The same is not true if specialized hardware dominates.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554687986/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_554769555.json b/.gh-issues/00013_554769555.json
new file mode 100644
index 0000000..e0c9b14
--- /dev/null
+++ b/.gh-issues/00013_554769555.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554769555",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-554769555",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 554769555,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDc2OTU1NQ==",
+    "user": {
+      "login": "saturn-network",
+      "id": 44673408,
+      "node_id": "MDQ6VXNlcjQ0NjczNDA4",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/44673408?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/saturn-network",
+      "html_url": "https://github.com/saturn-network",
+      "followers_url": "https://api.github.com/users/saturn-network/followers",
+      "following_url": "https://api.github.com/users/saturn-network/following{/other_user}",
+      "gists_url": "https://api.github.com/users/saturn-network/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/saturn-network/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/saturn-network/subscriptions",
+      "organizations_url": "https://api.github.com/users/saturn-network/orgs",
+      "repos_url": "https://api.github.com/users/saturn-network/repos",
+      "events_url": "https://api.github.com/users/saturn-network/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/saturn-network/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-17T17:52:28Z",
+    "updated_at": "2019-11-17T17:52:28Z",
+    "author_association": "NONE",
+    "body": "@Wolf-Linzhi could you elaborate on\r\n\r\n> Keccak256 PoW ASIC is harder and more exclusive/expensive to make than Ethash ASIC.\r\n\r\nFind this claim hard to believe, considering that sha3 is part of ethash. Then again, not a hardware expert. Are you saying that linzhi and others now prefer to make asics for memory-bound algorithms instead of compute-bound, as fast memory is more accessible than access to 5nm TSMC fabs?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554769555/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_554934893.json b/.gh-issues/00013_554934893.json
new file mode 100644
index 0000000..1bfa564
--- /dev/null
+++ b/.gh-issues/00013_554934893.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554934893",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-554934893",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 554934893,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDkzNDg5Mw==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-18T09:38:19Z",
+    "updated_at": "2019-11-18T09:38:19Z",
+    "author_association": "MEMBER",
+    "body": "> Find this claim hard to believe\r\n\r\nIt's harder for Linzhi because they already have a design for Ethash as they showed at ETC Summit.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554934893/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_554937072.json b/.gh-issues/00013_554937072.json
new file mode 100644
index 0000000..3bba900
--- /dev/null
+++ b/.gh-issues/00013_554937072.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554937072",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-554937072",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 554937072,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDkzNzA3Mg==",
+    "user": {
+      "login": "lookfirst",
+      "id": 85355,
+      "node_id": "MDQ6VXNlcjg1MzU1",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/85355?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/lookfirst",
+      "html_url": "https://github.com/lookfirst",
+      "followers_url": "https://api.github.com/users/lookfirst/followers",
+      "following_url": "https://api.github.com/users/lookfirst/following{/other_user}",
+      "gists_url": "https://api.github.com/users/lookfirst/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/lookfirst/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/lookfirst/subscriptions",
+      "organizations_url": "https://api.github.com/users/lookfirst/orgs",
+      "repos_url": "https://api.github.com/users/lookfirst/repos",
+      "events_url": "https://api.github.com/users/lookfirst/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/lookfirst/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-18T09:44:12Z",
+    "updated_at": "2019-11-18T09:44:12Z",
+    "author_association": "NONE",
+    "body": "You can read it like this:\r\n\r\n\"Kekka256 only is more complex **for us** to design than what **we have already done** on ethash\".\r\n\r\nHelpful words provided by @AndreaLanfranchi in another forum. =)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554937072/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_554990848.json b/.gh-issues/00013_554990848.json
new file mode 100644
index 0000000..d566de8
--- /dev/null
+++ b/.gh-issues/00013_554990848.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554990848",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-554990848",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 554990848,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDk5MDg0OA==",
+    "user": {
+      "login": "tzdybal",
+      "id": 1138893,
+      "node_id": "MDQ6VXNlcjExMzg4OTM=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/1138893?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/tzdybal",
+      "html_url": "https://github.com/tzdybal",
+      "followers_url": "https://api.github.com/users/tzdybal/followers",
+      "following_url": "https://api.github.com/users/tzdybal/following{/other_user}",
+      "gists_url": "https://api.github.com/users/tzdybal/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/tzdybal/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/tzdybal/subscriptions",
+      "organizations_url": "https://api.github.com/users/tzdybal/orgs",
+      "repos_url": "https://api.github.com/users/tzdybal/repos",
+      "events_url": "https://api.github.com/users/tzdybal/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/tzdybal/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-18T12:15:41Z",
+    "updated_at": "2019-11-18T12:15:41Z",
+    "author_association": "MEMBER",
+    "body": "I would love to see ETC FlyClient. And I'm not a big fan of ethash. I like keccak256.\r\n\r\nBut in my opinion:\r\n - the change is not necessary (as ethash is not broken)\r\n - there are to many variables; we can only guess:\r\n   - hashrate after a change\r\n   - hashpower centralization/decentralization\r\n   - involvement of the miners\r\n   - algo switches of other chains\r\n   - mining profitability\r\n   - ASICs availability \r\n\r\nI really don't get the point in being the first to adopt, or being one of the biggest chains possibly switching to keccak256. It doesn't mean that ETC will be \"dominant\" chain for this algo mining (except it's the only keccak chain) - most profitable chain will most probably be dominant. This can also be affected by some sentiment (for some ETC is a scam, or it's just an unnecessary fork).\r\nAnd even dominant chain is not 100% safe. It's just more expensive to attack / more secure.  \r\n\r\nI really don't like the argument about 51% attacks. It's the feature of the PoW. It's not human decision which chain is valid - if reorg happens, it just happens - it's the law of PoW. Trying to \"manually\" decide which chain is \"the right one\" is IMHO against ETC principles.\r\nThe only \"51% attack\" that is really dangerous is a prolonged DoS (continuous reorg / censorship) intended to kill ETC (unusable chain for days/weeks -> price drop -> mining not profitable). Other cases are just a matter of confirmation time. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554990848/reactions",
+      "total_count": 5,
+      "+1": 5,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_555400794.json b/.gh-issues/00013_555400794.json
new file mode 100644
index 0000000..1a4b5f6
--- /dev/null
+++ b/.gh-issues/00013_555400794.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/555400794",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-555400794",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 555400794,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTQwMDc5NA==",
+    "user": {
+      "login": "Wolf-Linzhi",
+      "id": 56785535,
+      "node_id": "MDQ6VXNlcjU2Nzg1NTM1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/56785535?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/Wolf-Linzhi",
+      "html_url": "https://github.com/Wolf-Linzhi",
+      "followers_url": "https://api.github.com/users/Wolf-Linzhi/followers",
+      "following_url": "https://api.github.com/users/Wolf-Linzhi/following{/other_user}",
+      "gists_url": "https://api.github.com/users/Wolf-Linzhi/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/Wolf-Linzhi/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/Wolf-Linzhi/subscriptions",
+      "organizations_url": "https://api.github.com/users/Wolf-Linzhi/orgs",
+      "repos_url": "https://api.github.com/users/Wolf-Linzhi/repos",
+      "events_url": "https://api.github.com/users/Wolf-Linzhi/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/Wolf-Linzhi/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-19T08:57:13Z",
+    "updated_at": "2019-11-19T08:57:36Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "@saturn-network \r\n\r\n> Find this claim hard to believe, considering that sha3 is part of ethash.\r\n\r\nHere's an article about memory-hardness\r\nhttps://medium.com/@Linzhi/what-is-memory-hard-45a363b59dfe\r\nProof-of-Work is a distinct class of algorithms, documentation is only emerging.\r\n\r\n> Then again, not a hardware expert.\r\n\r\nWe are all beginners.\r\n\r\n> prefer to make asics for memory-bound algorithms instead of compute-bound\r\n\r\nCompute-bound PoW is done, dominated by a few well known Chinese chipmakers after years of hard and successful work. Memory opens up new and interesting opportunities.\r\n\r\n> as fast memory is more accessible than access to 5nm TSMC fabs?\r\n\r\nYes. 5nm license alone costs 30 mio USD, invite-only.\r\n\r\nKeep asking, I try to answer your questions if I can. Thanks!",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/555400794/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_555567882.json b/.gh-issues/00013_555567882.json
new file mode 100644
index 0000000..18e28a1
--- /dev/null
+++ b/.gh-issues/00013_555567882.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/555567882",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-555567882",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 555567882,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTU2Nzg4Mg==",
+    "user": {
+      "login": "saturn-network",
+      "id": 44673408,
+      "node_id": "MDQ6VXNlcjQ0NjczNDA4",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/44673408?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/saturn-network",
+      "html_url": "https://github.com/saturn-network",
+      "followers_url": "https://api.github.com/users/saturn-network/followers",
+      "following_url": "https://api.github.com/users/saturn-network/following{/other_user}",
+      "gists_url": "https://api.github.com/users/saturn-network/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/saturn-network/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/saturn-network/subscriptions",
+      "organizations_url": "https://api.github.com/users/saturn-network/orgs",
+      "repos_url": "https://api.github.com/users/saturn-network/repos",
+      "events_url": "https://api.github.com/users/saturn-network/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/saturn-network/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-19T15:46:31Z",
+    "updated_at": "2019-11-19T15:46:31Z",
+    "author_association": "NONE",
+    "body": "@Wolf-Linzhi thanks for response, very interesting. So you're saying that memory-hard POW makes ASIC marketplace more competitive, as the source of the biggest efficiency gain (fast memory) is much more commoditized compared to the source of the biggest efficiency gain (5nm fabs) for compute-bound POW like sha256/sha3.\r\n\r\nIs this correct interpretation of your message? If that is indeed the case, then Ethash with DAG size limit starts to look more attractive.\r\n\r\nWould still like flyclients tho.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/555567882/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_555946386.json b/.gh-issues/00013_555946386.json
new file mode 100644
index 0000000..f4a347b
--- /dev/null
+++ b/.gh-issues/00013_555946386.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/555946386",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-555946386",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 555946386,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTk0NjM4Ng==",
+    "user": {
+      "login": "Wolf-Linzhi",
+      "id": 56785535,
+      "node_id": "MDQ6VXNlcjU2Nzg1NTM1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/56785535?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/Wolf-Linzhi",
+      "html_url": "https://github.com/Wolf-Linzhi",
+      "followers_url": "https://api.github.com/users/Wolf-Linzhi/followers",
+      "following_url": "https://api.github.com/users/Wolf-Linzhi/following{/other_user}",
+      "gists_url": "https://api.github.com/users/Wolf-Linzhi/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/Wolf-Linzhi/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/Wolf-Linzhi/subscriptions",
+      "organizations_url": "https://api.github.com/users/Wolf-Linzhi/orgs",
+      "repos_url": "https://api.github.com/users/Wolf-Linzhi/repos",
+      "events_url": "https://api.github.com/users/Wolf-Linzhi/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/Wolf-Linzhi/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-20T10:41:42Z",
+    "updated_at": "2019-11-20T10:41:42Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "@saturn-network \r\n\r\n> So you're saying that memory-hard POW makes ASIC marketplace more competitive\r\n\r\nYes. Bitmain is much smaller than Nvidia, came out with the Bitmain E3, had some success but wasn't able to displace Nvidia. Now Linzhi is trying, even smaller than Bitmain, and we'll see how that goes. A compute-bound PoW is nothing like this.\r\n\r\n> as the source of the biggest efficiency gain (fast memory) is much more commoditized compared to the source of the biggest efficiency gain (5nm fabs) for compute-bound POW like sha256/sha3.\r\n\r\nYes, but let's try to make it even more real. I think a potential future ETC SHA3 market is too small for 5nm, even 7nm, due to cost and also cycle time. For a 12/16nm double-SHA3 miner, estimate half the performance of a double-SHA256 miner, so let's say 20 TH. Who can make a 20 TH sha3 miner?\r\nWhen market size grows, the effect will be more pronounced. In a sha3 market the size of today's Ethash market, the concentration would be extreme. You would never see a 10 person company like Linzhi be able to (we will see about the result) compete with a company the size of Bitmain, let alone Nvidia. That is only possible due to memory.\r\n\r\nThere is also the size of the efficiency gain:\r\n\r\nA Bitmain E3 is 5x a GPU (in Ethash), but a Bitmain S17 is 10,000x a GPU (in sha-256) - (numbers simplified)\r\nHow can that be? Also: How can someone not have an idea why that is so, and still talk about security?\r\n\r\n> Ethash with DAG size limit starts to look more attractive.\r\n\r\nI made a case earlier of problems associated with any PoW change. From the options being discussed, the DAG size limit is the most careful modification and even an ASIC (immutability) maximalist will eventually soften. But you are still harming people who chose a 6 GB or 8 GB GPU over a 4 GB GPU, in addition to breaking more conceptual/principled things that go along with any PoW change. It is an irregular verification transition in the end.\r\nNakamoto said \"nodes can leave and rejoin the network at will, accepting the longest proof-of-work chain as proof of what happened while they were gone\".\r\nIs this still true after limiting the DAG size? (I'm not sure, gotta run...)\r\n\r\n> Would still like flyclients tho.\r\n\r\nEveryone wants real innovation. Are flyclient and Ethash actually antagonists? Has implementation started?\r\nThe Ethash DAG and cache are deterministic, and can be precomputed for - let's say, 10 years. Merkle roots and proofs can do the rest?\r\nI don't think it's sustainable to start over every time you hit an unintended consequence of a decision made in the past, because today's decisions will also have unintended consequences in the future. That's what backward compatibility is for.\r\n\r\nThe real innovation coming out of the memory in Ethash (without breaking anything), is to put fast risc-v cores into that memory so that the miner can double-duty zk-proofs and other useful blockchain tasks.\r\n\r\nHappy chatting! Thanks for your questions and attention!",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/555946386/reactions",
+      "total_count": 3,
+      "+1": 3,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_556534134.json b/.gh-issues/00013_556534134.json
new file mode 100644
index 0000000..877d861
--- /dev/null
+++ b/.gh-issues/00013_556534134.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/556534134",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-556534134",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 556534134,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjUzNDEzNA==",
+    "user": {
+      "login": "developerkevin",
+      "id": 29807183,
+      "node_id": "MDQ6VXNlcjI5ODA3MTgz",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/29807183?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/developerkevin",
+      "html_url": "https://github.com/developerkevin",
+      "followers_url": "https://api.github.com/users/developerkevin/followers",
+      "following_url": "https://api.github.com/users/developerkevin/following{/other_user}",
+      "gists_url": "https://api.github.com/users/developerkevin/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/developerkevin/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/developerkevin/subscriptions",
+      "organizations_url": "https://api.github.com/users/developerkevin/orgs",
+      "repos_url": "https://api.github.com/users/developerkevin/repos",
+      "events_url": "https://api.github.com/users/developerkevin/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/developerkevin/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-20T23:14:37Z",
+    "updated_at": "2019-11-21T02:12:07Z",
+    "author_association": "MEMBER",
+    "body": "My opinion is to reconsider and prioritize the essential changes before considering major, non-essential changes. If I were to design ETC from scratch I would use Ketchup256, but I am not. [SHA3](https://github.com/ethereumclassic/ECIPs/issues/13) performs better than Ethash, yes. Maybe a mining algorithm change like this has a place in ETC's future, but for now I don't believe so.\r\n\r\nBelow are some reasons:\r\n\r\n- Doesn't solve the 51% attack as many seem to expect\r\n- Introduces avoidable risk: hash wars, potential split, other attack vectors\r\n- Ethereum miners can continue to mine the \"ethash\" chain! That's 290+ Th/s! ETC has just 8!\r\n- Hashrate will be volatile; longer block times; possible reorgs\r\n- Implementation by node operators will be a major challenge\r\n\r\nI think ETC people should hold off on making any commitments on timelines, development, or allocation of resources to this proposal. It is not in the best interest of the network to remove and replace the current functional mining algorithm, unbroken and used since the start, for a shiny new one with all the bells and whistles. This proposal seems to be creating unreal expectations, is more risk than reward, and cost than benefit. Though ethash has its limits, I don't believe it should be replaced. \r\n\r\nI feel this [comment](https://github.com/ethereumproject/ECIPs/issues/4#issuecomment-247102152) made by @arvicco back in the \"difficulty bomb delay\" discussions is quite relevant to this one.\r\n\r\n>_So, the strategy is: fix the most critical (and non-contentious) stuff like diff bomb (and possibly replay attacks) first, then provide a long-term solution to other issues based on solid data and rational discussion after a year._\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/556534134/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00014.json b/.gh-issues/00014.json
new file mode 100644
index 0000000..8f38ee3
--- /dev/null
+++ b/.gh-issues/00014.json
@@ -0,0 +1,77 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/14",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/14/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/14/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/14/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/14",
+    "id": 400386553,
+    "node_id": "MDU6SXNzdWU0MDAzODY1NTM=",
+    "number": 14,
+    "title": "ECIP-1047: Reduce Gas Limit to 1 Million",
+    "user": {
+      "login": "pyskell",
+      "id": 9665963,
+      "node_id": "MDQ6VXNlcjk2NjU5NjM=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/9665963?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/pyskell",
+      "html_url": "https://github.com/pyskell",
+      "followers_url": "https://api.github.com/users/pyskell/followers",
+      "following_url": "https://api.github.com/users/pyskell/following{/other_user}",
+      "gists_url": "https://api.github.com/users/pyskell/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/pyskell/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/pyskell/subscriptions",
+      "organizations_url": "https://api.github.com/users/pyskell/orgs",
+      "repos_url": "https://api.github.com/users/pyskell/repos",
+      "events_url": "https://api.github.com/users/pyskell/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/pyskell/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785139,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTM5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/status:%20draft",
+        "name": "status: draft",
+        "color": "ffffff",
+        "default": false,
+        "description": "draft stage - can be assigned ecip number and merged, but requires new PR to be Accepted"
+      },
+      {
+        "id": 1154785129,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20meta",
+        "name": "type: meta",
+        "color": "cfd3d7",
+        "default": false,
+        "description": "Accepted best practices"
+      }
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 11,
+    "created_at": "2019-01-17T17:34:43Z",
+    "updated_at": "2019-11-10T12:07:24Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "Discussion regarding ECIP-1047(#6). Please discuss here and refer to #6 for the latest version of this ECIP. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/14/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00014_498567897.json b/.gh-issues/00014_498567897.json
new file mode 100644
index 0000000..439746e
--- /dev/null
+++ b/.gh-issues/00014_498567897.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/498567897",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/14#issuecomment-498567897",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/14",
+    "id": 498567897,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODU2Nzg5Nw==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-04T08:08:11Z",
+    "updated_at": "2019-06-04T08:08:11Z",
+    "author_association": "MEMBER",
+    "body": "ECIPs are meant to help protocol discussions. block gas limit is completely up to the miners.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/498567897/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00014_498691816.json b/.gh-issues/00014_498691816.json
new file mode 100644
index 0000000..d4117d1
--- /dev/null
+++ b/.gh-issues/00014_498691816.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/498691816",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/14#issuecomment-498691816",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/14",
+    "id": 498691816,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODY5MTgxNg==",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-04T14:18:18Z",
+    "updated_at": "2019-06-04T14:18:18Z",
+    "author_association": "MEMBER",
+    "body": "# ECIP types\r\nThere are three kinds of ECIP:\r\n\r\nA **Standards Track ECIP** describes any change that affects most or all Ethereum Classic implementations, such as a change to the network protocol, a change in block or transaction validity rules, or any change or addition that affects the interoperability of applications using Ethereum Classic. Standards Track ECIPs consist of two parts, a design document and a reference implementation.\r\n\r\nAn **Informational ECIP** describes a Ethereum Classic design issue, or provides general guidelines or information to the Ethereum Classic community, but does not propose a new feature. Informational ECIPs do not necessarily represent a Ethereum Classic community consensus or recommendation, so users and implementors are free to ignore Informational ECIPs or follow their advice.\r\n\r\nA **Process ECIP** describes a process surrounding Ethereum Classic, or proposes a change to (or an event in) a process. Process ECIPs are like Standards Track ECIPs but apply to areas other than the Ethereum Classic protocol itself. They may propose an implementation, but not to Ethereum Classic's codebase; they often require community consensus; unlike Informational ECIPs, they are more than recommendations, and users are typically not free to ignore them. Examples include procedures, guidelines, changes to the decision-making process, and changes to the tools or environment used in Ethereum Classic development. Any meta-ECIP is also considered a Process ECIP.\r\n\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/498691816/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00014_542159128.json b/.gh-issues/00014_542159128.json
new file mode 100644
index 0000000..37bd228
--- /dev/null
+++ b/.gh-issues/00014_542159128.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/542159128",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/14#issuecomment-542159128",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/14",
+    "id": 542159128,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjE1OTEyOA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-15T11:04:29Z",
+    "updated_at": "2019-10-15T11:04:29Z",
+    "author_association": "MEMBER",
+    "body": "I am supportive of this ECIP.\r\nWe need to get the gas limit under control PRIOR to potential mass migration from ETH or ETC when we catch up on protocol.\r\n1MB might be too low.\r\n\r\nI think we also need to look at adding UASF/UAHF as the means of implementing this limit, rather than just having this as something \"informational\".   So really looking at BTC-style limiting, to avoid compromising decentralization and avoiding pushing scaling beyond what our POW L1 can currently cope with.\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/542159128/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00014_542165307.json b/.gh-issues/00014_542165307.json
new file mode 100644
index 0000000..d5dfdb3
--- /dev/null
+++ b/.gh-issues/00014_542165307.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/542165307",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/14#issuecomment-542165307",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/14",
+    "id": 542165307,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjE2NTMwNw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-15T11:24:18Z",
+    "updated_at": "2019-10-15T11:24:18Z",
+    "author_association": "MEMBER",
+    "body": "Also, outside of the ECIP process, we can just create PRs for the clients themselves which lower the default settings.   That does not even require this ECIP.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/542165307/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00014_542166128.json b/.gh-issues/00014_542166128.json
new file mode 100644
index 0000000..6eb054f
--- /dev/null
+++ b/.gh-issues/00014_542166128.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/542166128",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/14#issuecomment-542166128",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/14",
+    "id": 542166128,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjE2NjEyOA==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-15T11:26:42Z",
+    "updated_at": "2019-10-15T11:26:42Z",
+    "author_association": "MEMBER",
+    "body": "I support it too.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/542166128/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00014_547105060.json b/.gh-issues/00014_547105060.json
new file mode 100644
index 0000000..a8de2e7
--- /dev/null
+++ b/.gh-issues/00014_547105060.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/547105060",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/14#issuecomment-547105060",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/14",
+    "id": 547105060,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzEwNTA2MA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-28T19:19:27Z",
+    "updated_at": "2019-10-28T19:19:27Z",
+    "author_association": "MEMBER",
+    "body": "@streetcrypto7 I agree that 1 million gas is likely too low.   We can debate what the actual figures should be, but the key point of this proposal is that 8M is too high.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/547105060/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00014_552099743.json b/.gh-issues/00014_552099743.json
new file mode 100644
index 0000000..84eda85
--- /dev/null
+++ b/.gh-issues/00014_552099743.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552099743",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/14#issuecomment-552099743",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/14",
+    "id": 552099743,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjA5OTc0Mw==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-09T13:19:19Z",
+    "updated_at": "2019-11-09T13:19:19Z",
+    "author_association": "MEMBER",
+    "body": "@streetcrypto7 you could argue that some contracts will need more than 100 million gas limit for deployment. It's about what is good for the network long term and having it set so high is definitely not and we can see this in practice with what is happening to the ETH chain.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552099743/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00014_552157798.json b/.gh-issues/00014_552157798.json
new file mode 100644
index 0000000..b3f7747
--- /dev/null
+++ b/.gh-issues/00014_552157798.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552157798",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/14#issuecomment-552157798",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/14",
+    "id": 552157798,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjE1Nzc5OA==",
+    "user": {
+      "login": "hitchcott",
+      "id": 1696942,
+      "node_id": "MDQ6VXNlcjE2OTY5NDI=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/1696942?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/hitchcott",
+      "html_url": "https://github.com/hitchcott",
+      "followers_url": "https://api.github.com/users/hitchcott/followers",
+      "following_url": "https://api.github.com/users/hitchcott/following{/other_user}",
+      "gists_url": "https://api.github.com/users/hitchcott/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/hitchcott/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/hitchcott/subscriptions",
+      "organizations_url": "https://api.github.com/users/hitchcott/orgs",
+      "repos_url": "https://api.github.com/users/hitchcott/repos",
+      "events_url": "https://api.github.com/users/hitchcott/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/hitchcott/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-10T03:04:30Z",
+    "updated_at": "2019-11-10T03:04:30Z",
+    "author_association": "MEMBER",
+    "body": "I support having a more refined block gas limit. \r\n\r\nFiguring out the limit itself is the hard part, as there are several tradeoffs to consider. I think we should be methodical about finding the right number.\r\n\r\nI was originally in support of having 1 million as a target (in theory); if developers need to deploy with +1 million gas, they can do so by code splitting into multiple contracts. However, deployments of existing popular contracts frequently breach this limit.\r\n\r\nSome random examples:\r\n\r\nWrapped Ether: 966,549 https://etherscan.io/tx/0xb95343413e459a0f97461812111254163ae53467855c0d73e0f1e7c5b8442fa3\r\n\r\nGnosis Multisig: 2,674,708 https://etherscan.io/tx/0x55befd6ad29c13eb16be00e888cf7a676ad4c02b8a942099c278a2efa4bade08\r\n\r\nUniswap Exchange Template: 3,340,999\r\nhttps://etherscan.io/tx/0x9d30e48fb33a7b760d0b5c33253eb5a774c9dc8e9ee2768ad3425249a3319e09\r\n\r\nI think that it would be best strike a balance between enabling reasonable sync times (what is reasonable?) on various future hardware requirements (mobile, commodity laptop, EC2?), and not making it too annoying to migrate popular contracts from ETH to ETC (some contracts are easier to code split than others).\r\n\r\nI support targeting a gas emission curve (chain bloat curve) to fit future hardware requirements.\r\n\r\nI think a soft fork is probably best avoided if can't be done with defaults and/or information campaign.\r\n\r\nTo follow up I'll attempt to do some more data gathering:\r\n\r\n- Compile stats on *all* popular contracts and their deploy costs\r\n- Estimate future hardware requirement categories (mobile, commodity, EC2$$)\r\n- Model a gas limit emission curve to fit expected hardware development\r\n\r\nAnother option here (@phyro suggested) is to have longer block times (without changing the gas limit), which would achieve the reduced chain bloat, whilst still enabling larger contracts to be deployed in a single block. Obviously many other implications.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552157798/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00014_552176812.json b/.gh-issues/00014_552176812.json
new file mode 100644
index 0000000..cf85aba
--- /dev/null
+++ b/.gh-issues/00014_552176812.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552176812",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/14#issuecomment-552176812",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/14",
+    "id": 552176812,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjE3NjgxMg==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-10T09:12:31Z",
+    "updated_at": "2019-11-10T09:12:31Z",
+    "author_association": "MEMBER",
+    "body": "nice research @hitchcott !\r\n\r\n**Regarding the longer block times**. I'd like to hear arguments as to why fast blocks would be a good idea (I did very poorly when I tried to think of these reasons). My main reason for considering longer block times was because given a time interval (say 10 minutes), you have the same security regardless if your block time is 15 seconds or 2 minutes because it's the number of hashes you've tried in that interval that is the important part. Blocks can be thought of as snapshots or packaging of these hash tries (a pack of energy?) and because you don't want to store all the hashes you tried, you store a proof that shows you tried approximately this many hashes. Notice here that the way you package these things is completely irrelevant to the security. The time passed and the number of hashes that were tried during that time period is what brings security. Higher block times also bring less frequent block propagation over the network and fewer block headers (the block header issue is already solved with the flyclient but still saves some space). So far, the only use I've found for fast block times was when I was researching ways to make 51% attacks more expensive and having blocks come really fast makes it easier/faster to gather 'statistics' around who is mining the blocks. I'd love to hear other pros (and cons) of having fast blocks. The con of changing it to longer block times:\r\n1. it is changing a core part of the system\r\n2. it would likely change other things as well, possibly the monetary policy due to the uncle rewards being less frequent\r\n3. possibly other stuff\r\n\r\nWhile my current view is that longer block times are superior, I really don't like that it might be touching the monetary policy. I don't know the exact definition of what defines the policy. I'm sure we could mathematically prove that the expected emission of coins over time stays the same (looking at time ticks in 2 minutes instead of 15 seconds of course). How bad of a change we consider this is unclear to me.\r\n\r\n\r\n**Another thing I'd like us to consider is**:\r\nDeploying a contract is a constant (it happens exactly once per contract), so perhaps a deploy could be allowed a higher gas limit. I'd pair this up with a higher contract deploy cost to avoid spamming. Rationale: it makes no sense to have cheap deploys since everyone in the world will have to drag this data along. Serious projects will have no problem paying a few $ to deploy a contract. Testnets can have cheap deploy prices, but deploying on ETC is worth way more imo. I'd also argue that deploying a dapp for 10$ is still unbelievably cheap considering it will run forever.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552176812/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00014_552188678.json b/.gh-issues/00014_552188678.json
new file mode 100644
index 0000000..3e893a0
--- /dev/null
+++ b/.gh-issues/00014_552188678.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552188678",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/14#issuecomment-552188678",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/14",
+    "id": 552188678,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjE4ODY3OA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-10T12:07:24Z",
+    "updated_at": "2019-11-10T12:07:24Z",
+    "author_association": "MEMBER",
+    "body": "Following problems should be fixed with ECIP-1047:\r\n\r\n- This should not be an ECIP but an ECBP\r\n- Specification should include instructions for Geth Classic, Multi-Geth, Parity-Ethereum, and Hyperledger Besu\r\n- Link to Geth Classic should be updated\r\n\r\nPersonal opinion: This should not be part of the ECIP process.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552188678/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00057.json b/.gh-issues/00057.json
new file mode 100644
index 0000000..dec9fb8
--- /dev/null
+++ b/.gh-issues/00057.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/57",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/57/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/57/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/57/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/57",
+    "id": 403642447,
+    "node_id": "MDU6SXNzdWU0MDM2NDI0NDc=",
+    "number": 57,
+    "title": "# ⛔️ WARNING ⛔️ : http://github.com/ethereumclassic/ECIPS IS UNOFFICIAL AND SHOULD NOT BE USED.",
+    "user": {
+      "login": "whatisgravity",
+      "id": 13527542,
+      "node_id": "MDQ6VXNlcjEzNTI3NTQy",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/13527542?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/whatisgravity",
+      "html_url": "https://github.com/whatisgravity",
+      "followers_url": "https://api.github.com/users/whatisgravity/followers",
+      "following_url": "https://api.github.com/users/whatisgravity/following{/other_user}",
+      "gists_url": "https://api.github.com/users/whatisgravity/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/whatisgravity/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/whatisgravity/subscriptions",
+      "organizations_url": "https://api.github.com/users/whatisgravity/orgs",
+      "repos_url": "https://api.github.com/users/whatisgravity/repos",
+      "events_url": "https://api.github.com/users/whatisgravity/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/whatisgravity/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-01-28T04:01:20Z",
+    "updated_at": "2019-01-28T12:50:59Z",
+    "closed_at": "2019-01-28T12:50:59Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "# ⛔️ WARNING ⛔️ : http://github.com/ethereumclassic/ECIPS IS UNOFFICIAL AND SHOULD NOT BE USED.\r\n\r\nUse https://github.com/openether/ecips to participate in decentralized ETC development. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/57/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00058.json b/.gh-issues/00058.json
new file mode 100644
index 0000000..0739e20
--- /dev/null
+++ b/.gh-issues/00058.json
@@ -0,0 +1,68 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/58",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/58/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/58/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/58/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/58",
+    "id": 415303422,
+    "node_id": "MDU6SXNzdWU0MTUzMDM0MjI=",
+    "number": 58,
+    "title": "ECIP-1000: ECIP Process",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785129,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20meta",
+        "name": "type: meta",
+        "color": "cfd3d7",
+        "default": false,
+        "description": "Accepted best practices"
+      }
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 15,
+    "created_at": "2019-02-27T20:05:40Z",
+    "updated_at": "2019-10-23T14:41:57Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "[Rendered](https://github.com/ethereumclassic/ECIPs/blob/master/ECIPs/ECIP-1000.mediawiki)\r\n\r\nAn Ethereum Classic Improvement Proposal (ECIP) is a design document providing information to the Ethereum Classic community, or describing a new feature for Ethereum Classic or its processes or environment. The ECIP should provide a concise technical specification of the feature and a rationale for the feature.\r\n\r\nWe intend ECIPs to be the primary mechanisms for proposing new features, for collecting community input on an issue, and for documenting the design decisions that have gone into Ethereum Classic. The ECIP author is responsible for building consensus within the community and documenting dissenting opinions.\r\n\r\nBecause the ECIPs are maintained as text files in a versioned repository, their revision history is the historical record of the feature proposal. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/58/reactions",
+      "total_count": 6,
+      "+1": 6,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00058_468015680.json b/.gh-issues/00058_468015680.json
new file mode 100644
index 0000000..fc8818a
--- /dev/null
+++ b/.gh-issues/00058_468015680.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/468015680",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/58#issuecomment-468015680",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/58",
+    "id": 468015680,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODAxNTY4MA==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-02-27T20:22:13Z",
+    "updated_at": "2019-02-27T20:22:13Z",
+    "author_association": "MEMBER",
+    "body": "@sorpaas I'm also thinking it might prove useful to adopt other improvement proposals and rebrand them as ECIPs with proper references to original authors and the original URLS.\r\n\r\nFor example, if we adopt an EIP, we can just label it as an ECIP-E. If we adopt an ECLIP, we can just label it as an ECIP-L. Naturally, then ECIPs are original community written proposals and the lettering applies to external improvement proposals.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/468015680/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00058_468019282.json b/.gh-issues/00058_468019282.json
new file mode 100644
index 0000000..e63825b
--- /dev/null
+++ b/.gh-issues/00058_468019282.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/468019282",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/58#issuecomment-468019282",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/58",
+    "id": 468019282,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODAxOTI4Mg==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-02-27T20:33:20Z",
+    "updated_at": "2019-02-27T20:33:20Z",
+    "author_association": "MEMBER",
+    "body": "So, now I am in here too. The general idea from @YazzyYaz is good. A one thing to this: The chosen acronym should be clear, to exclude the double interpretation.\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/468019282/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00058_468028062.json b/.gh-issues/00058_468028062.json
new file mode 100644
index 0000000..4d65e84
--- /dev/null
+++ b/.gh-issues/00058_468028062.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/468028062",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/58#issuecomment-468028062",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/58",
+    "id": 468028062,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODAyODA2Mg==",
+    "user": {
+      "login": "kimisan",
+      "id": 8416967,
+      "node_id": "MDQ6VXNlcjg0MTY5Njc=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/8416967?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/kimisan",
+      "html_url": "https://github.com/kimisan",
+      "followers_url": "https://api.github.com/users/kimisan/followers",
+      "following_url": "https://api.github.com/users/kimisan/following{/other_user}",
+      "gists_url": "https://api.github.com/users/kimisan/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/kimisan/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/kimisan/subscriptions",
+      "organizations_url": "https://api.github.com/users/kimisan/orgs",
+      "repos_url": "https://api.github.com/users/kimisan/repos",
+      "events_url": "https://api.github.com/users/kimisan/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/kimisan/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-02-27T20:59:19Z",
+    "updated_at": "2019-02-27T20:59:19Z",
+    "author_association": "MEMBER",
+    "body": "I will contribute some d3.js viz code based on it , wait me ^^",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/468028062/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00058_468043718.json b/.gh-issues/00058_468043718.json
new file mode 100644
index 0000000..ef3f8db
--- /dev/null
+++ b/.gh-issues/00058_468043718.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/468043718",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/58#issuecomment-468043718",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/58",
+    "id": 468043718,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODA0MzcxOA==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-02-27T21:47:03Z",
+    "updated_at": "2019-02-27T21:54:16Z",
+    "author_association": "MEMBER",
+    "body": "Thanks for starting the discussion @sorpaas . I'm not familiar with the assigning a number part. Do we mean that when a PR is ready we tell the author to change the filename of the ECIP and the auxiliary files to include the number and then merge?\r\n\r\n> Software authors are encouraged to publish summaries of what ECIPs their software supports to aid in verification of status changes\r\n\r\nThe links for these examples are dead (so are some other things like the process image but this can be fixed later). What I wanted to mention here is that if openrpc becomes a thing perhaps we should encourage the node clients to add the the ECIPs implemented as some sort of metadata (if anyone is interested in what i'm talking about here is the ECLIP https://github.com/etclabscore/ECLIPs/pull/3). I'm guessing this would be another update to the process later ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/468043718/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00058_468107920.json b/.gh-issues/00058_468107920.json
new file mode 100644
index 0000000..5515815
--- /dev/null
+++ b/.gh-issues/00058_468107920.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/468107920",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/58#issuecomment-468107920",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/58",
+    "id": 468107920,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODEwNzkyMA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-02-28T02:09:55Z",
+    "updated_at": "2019-02-28T02:09:55Z",
+    "author_association": "MEMBER",
+    "body": "@phyro \r\n\r\n> Do we mean that when a PR is ready we tell the author to change the filename of the ECIP and the auxiliary files to include the number and then merge?\r\n\r\nYes. If we follow the process strictly, the author will first name the spec `ECIP-description-of-functionality.md`. The editors will then assign a number to the ECIP, and change the filename.\r\n\r\nIn practice it's mostly alright if we just let the author of the ECIP to assign the number by him/herself -- EIP uses the number same as the Github PR number, and for ECIP we previously use the next available one. I will update this ECIP to reflect this.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/468107920/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00058_468877643.json b/.gh-issues/00058_468877643.json
new file mode 100644
index 0000000..8c83963
--- /dev/null
+++ b/.gh-issues/00058_468877643.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/468877643",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/58#issuecomment-468877643",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/58",
+    "id": 468877643,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODg3NzY0Mw==",
+    "user": {
+      "login": "zoulaihui",
+      "id": 15258122,
+      "node_id": "MDQ6VXNlcjE1MjU4MTIy",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/15258122?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zoulaihui",
+      "html_url": "https://github.com/zoulaihui",
+      "followers_url": "https://api.github.com/users/zoulaihui/followers",
+      "following_url": "https://api.github.com/users/zoulaihui/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zoulaihui/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zoulaihui/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zoulaihui/subscriptions",
+      "organizations_url": "https://api.github.com/users/zoulaihui/orgs",
+      "repos_url": "https://api.github.com/users/zoulaihui/repos",
+      "events_url": "https://api.github.com/users/zoulaihui/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zoulaihui/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-03-02T03:16:41Z",
+    "updated_at": "2019-03-02T03:17:37Z",
+    "author_association": "MEMBER",
+    "body": "Thank you Wei for creating this issue. I don't understand why there is ECLIP? What is the necessity to create a new protocol improvement standard for ETC?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/468877643/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00058_506510057.json b/.gh-issues/00058_506510057.json
new file mode 100644
index 0000000..75fc1f4
--- /dev/null
+++ b/.gh-issues/00058_506510057.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506510057",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/58#issuecomment-506510057",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/58",
+    "id": 506510057,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjUxMDA1Nw==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-27T21:02:00Z",
+    "updated_at": "2019-06-27T21:02:26Z",
+    "author_association": "MEMBER",
+    "body": "I agree to move this ECIP to `Final Call`.\r\n\r\nI also agree to add  @sorpaas, @isaac, @realcodywburns , and @soc1c as editors.\r\n\r\nI recommend to add:\r\n\r\n@phyro @kimisan @YazzyYaz @BelfordZ @shanejonas",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506510057/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00058_506511221.json b/.gh-issues/00058_506511221.json
new file mode 100644
index 0000000..4c03957
--- /dev/null
+++ b/.gh-issues/00058_506511221.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506511221",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/58#issuecomment-506511221",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/58",
+    "id": 506511221,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjUxMTIyMQ==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-27T21:05:26Z",
+    "updated_at": "2019-06-27T21:05:26Z",
+    "author_association": "MEMBER",
+    "body": "@TokenHash I think we'd better look for developers to be on the editors list. I agree @phyro and @kimisan have contributed a lot, but they may not be able to help a lot in the case of technically reviewing ECIPs.\r\n\r\nMy only objections for adding @BelfordZ and @shanejonas is that we may then have too many representatives from ETCLabs (we already have two -- @isaac and @soc1c). But that's just my opinion and it's up to everyone.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506511221/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00058_506511880.json b/.gh-issues/00058_506511880.json
new file mode 100644
index 0000000..6514786
--- /dev/null
+++ b/.gh-issues/00058_506511880.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506511880",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/58#issuecomment-506511880",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/58",
+    "id": 506511880,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjUxMTg4MA==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-27T21:07:24Z",
+    "updated_at": "2019-06-27T21:07:24Z",
+    "author_association": "MEMBER",
+    "body": "Agreed, if they are not devs, but I thought they were.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506511880/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00058_506513825.json b/.gh-issues/00058_506513825.json
new file mode 100644
index 0000000..8d3b4a7
--- /dev/null
+++ b/.gh-issues/00058_506513825.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506513825",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/58#issuecomment-506513825",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/58",
+    "id": 506513825,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjUxMzgyNQ==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-27T21:13:20Z",
+    "updated_at": "2019-06-27T21:13:20Z",
+    "author_association": "MEMBER",
+    "body": "Agreed, with balancing the devs from ETC Labs to other teams.\r\n\r\nMaybe @elaineo and @mikeyb want to join.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506513825/reactions",
+      "total_count": 3,
+      "+1": 3,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00058_506514079.json b/.gh-issues/00058_506514079.json
new file mode 100644
index 0000000..db27a2f
--- /dev/null
+++ b/.gh-issues/00058_506514079.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506514079",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/58#issuecomment-506514079",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/58",
+    "id": 506514079,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjUxNDA3OQ==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-27T21:14:03Z",
+    "updated_at": "2019-06-27T21:14:03Z",
+    "author_association": "MEMBER",
+    "body": "Both me and Kimi are devs, but to actually give a meaningful comment, you need to have the background of how Ethereum protocol exactly works. I don't really have the background needed to give a reasonable comment for many of the ECIPs. I'll still comment on the ECIPs that I do understand so that's fine from my side :+1:",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506514079/reactions",
+      "total_count": 4,
+      "+1": 4,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00058_506514191.json b/.gh-issues/00058_506514191.json
new file mode 100644
index 0000000..9de954f
--- /dev/null
+++ b/.gh-issues/00058_506514191.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506514191",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/58#issuecomment-506514191",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/58",
+    "id": 506514191,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjUxNDE5MQ==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-27T21:14:23Z",
+    "updated_at": "2019-06-27T21:14:23Z",
+    "author_association": "MEMBER",
+    "body": "(If they're okay with editor responsibilities and self-identify as devs.)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506514191/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00058_506547366.json b/.gh-issues/00058_506547366.json
new file mode 100644
index 0000000..9ca9a8e
--- /dev/null
+++ b/.gh-issues/00058_506547366.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506547366",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/58#issuecomment-506547366",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/58",
+    "id": 506547366,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjU0NzM2Ng==",
+    "user": {
+      "login": "stevanlohja",
+      "id": 10556209,
+      "node_id": "MDQ6VXNlcjEwNTU2MjA5",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/10556209?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/stevanlohja",
+      "html_url": "https://github.com/stevanlohja",
+      "followers_url": "https://api.github.com/users/stevanlohja/followers",
+      "following_url": "https://api.github.com/users/stevanlohja/following{/other_user}",
+      "gists_url": "https://api.github.com/users/stevanlohja/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/stevanlohja/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/stevanlohja/subscriptions",
+      "organizations_url": "https://api.github.com/users/stevanlohja/orgs",
+      "repos_url": "https://api.github.com/users/stevanlohja/repos",
+      "events_url": "https://api.github.com/users/stevanlohja/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/stevanlohja/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-27T23:32:55Z",
+    "updated_at": "2019-06-27T23:32:55Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "The ECIP editor simply needs to make sure the ECIP is properly formatted and curate the ECIP through the process with the author. Even if the Editor feels the context is technically unsound or likely to be rejected, they're commited is to curate the ECIP not be technical gateways. E.g.: Existing cold-staking and treasury ECIPs in the repo here.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506547366/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00058_506563373.json b/.gh-issues/00058_506563373.json
new file mode 100644
index 0000000..4403922
--- /dev/null
+++ b/.gh-issues/00058_506563373.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506563373",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/58#issuecomment-506563373",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/58",
+    "id": 506563373,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjU2MzM3Mw==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-28T01:07:59Z",
+    "updated_at": "2019-06-28T01:07:59Z",
+    "author_association": "MEMBER",
+    "body": "Taking the comment here from discord; RE: I'd like to be added as editor.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506563373/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00058_506585419.json b/.gh-issues/00058_506585419.json
new file mode 100644
index 0000000..e5eadd5
--- /dev/null
+++ b/.gh-issues/00058_506585419.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506585419",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/58#issuecomment-506585419",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/58",
+    "id": 506585419,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjU4NTQxOQ==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-28T03:22:07Z",
+    "updated_at": "2019-06-28T03:22:07Z",
+    "author_association": "MEMBER",
+    "body": "FYI, I merged the draft initial list https://github.com/ethereumclassic/ECIPs/pull/94. If you want to add yourself or add others as editors, please just open a new PR against master branch!",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506585419/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00063.json b/.gh-issues/00063.json
new file mode 100644
index 0000000..577b365
--- /dev/null
+++ b/.gh-issues/00063.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/63",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/63/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/63/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/63/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/63",
+    "id": 427333639,
+    "node_id": "MDU6SXNzdWU0MjczMzM2Mzk=",
+    "number": 63,
+    "title": "ECIP-1059: Address-to-Address message system",
+    "user": {
+      "login": "Dexaran",
+      "id": 26142412,
+      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/26142412?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/Dexaran",
+      "html_url": "https://github.com/Dexaran",
+      "followers_url": "https://api.github.com/users/Dexaran/followers",
+      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
+      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
+      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
+      "repos_url": "https://api.github.com/users/Dexaran/repos",
+      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2019-03-30T22:14:22Z",
+    "updated_at": "2019-04-02T10:03:40Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "< Placeholder >",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/63/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00063_478322655.json b/.gh-issues/00063_478322655.json
new file mode 100644
index 0000000..f5ff4b0
--- /dev/null
+++ b/.gh-issues/00063_478322655.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478322655",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/63#issuecomment-478322655",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/63",
+    "id": 478322655,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODMyMjY1NQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-03-31T08:33:58Z",
+    "updated_at": "2019-03-31T08:33:58Z",
+    "author_association": "MEMBER",
+    "body": "Hi, 1055 is flyclient, what about 1059?\r\n\r\nref https://github.com/etclabscore/ECIPs/pull/11\r\n\r\nref https://github.com/ethereumclassic/ECIPs/pull/61",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478322655/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00064.json b/.gh-issues/00064.json
new file mode 100644
index 0000000..f0ae423
--- /dev/null
+++ b/.gh-issues/00064.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/64",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/64/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/64/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/64/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/64",
+    "id": 427333763,
+    "node_id": "MDU6SXNzdWU0MjczMzM3NjM=",
+    "number": 64,
+    "title": "ECIP-1058: On-chain registry of official media resources",
+    "user": {
+      "login": "Dexaran",
+      "id": 26142412,
+      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/26142412?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/Dexaran",
+      "html_url": "https://github.com/Dexaran",
+      "followers_url": "https://api.github.com/users/Dexaran/followers",
+      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
+      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
+      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
+      "repos_url": "https://api.github.com/users/Dexaran/repos",
+      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 2,
+    "created_at": "2019-03-30T22:15:50Z",
+    "updated_at": "2019-06-12T11:27:52Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "< Placeholder >",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/64/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00064_478322595.json b/.gh-issues/00064_478322595.json
new file mode 100644
index 0000000..8a95987
--- /dev/null
+++ b/.gh-issues/00064_478322595.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478322595",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/64#issuecomment-478322595",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/64",
+    "id": 478322595,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODMyMjU5NQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-03-31T08:33:01Z",
+    "updated_at": "2019-03-31T08:33:01Z",
+    "author_association": "MEMBER",
+    "body": "Hi, 1056 is Agharta. What about 1058?\r\n\r\nref https://github.com/etclabscore/ECIPs/pull/13\r\n\r\nref https://github.com/ethereumclassic/ECIPs/pull/61",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478322595/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00064_501232247.json b/.gh-issues/00064_501232247.json
new file mode 100644
index 0000000..b24a38e
--- /dev/null
+++ b/.gh-issues/00064_501232247.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/501232247",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/64#issuecomment-501232247",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/64",
+    "id": 501232247,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTIzMjI0Nw==",
+    "user": {
+      "login": "saturn-network",
+      "id": 44673408,
+      "node_id": "MDQ6VXNlcjQ0NjczNDA4",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/44673408?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/saturn-network",
+      "html_url": "https://github.com/saturn-network",
+      "followers_url": "https://api.github.com/users/saturn-network/followers",
+      "following_url": "https://api.github.com/users/saturn-network/following{/other_user}",
+      "gists_url": "https://api.github.com/users/saturn-network/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/saturn-network/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/saturn-network/subscriptions",
+      "organizations_url": "https://api.github.com/users/saturn-network/orgs",
+      "repos_url": "https://api.github.com/users/saturn-network/repos",
+      "events_url": "https://api.github.com/users/saturn-network/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/saturn-network/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-12T11:27:52Z",
+    "updated_at": "2019-06-12T11:27:52Z",
+    "author_association": "NONE",
+    "body": "A [TCR](https://blog.saturn.network/what-is-a-token-curated-registry-tcr/) for official media and social resources would be a great idea.\r\n\r\nPros:\r\n\r\n* Motivated stakeholders can curate the list, instead of a single party who owns reddit / website\r\n* Ability to coordinate and vote out toxic channels (like CowOperate's eth_classic telegram)\r\n* Drives more dapp usage and encourages people to learn how to install wallets & use ETC and tokens, instead of holding ETC on binance and using it for speculation only\r\n\r\nCons:\r\n\r\n* Requires a token (which isn't a bad thing) that is _fairly distributed among motivated participants_ (which is a hard thing to solve). Airdropping the token to everyone who holds ETC is not a good idea, but how do you select whom to airdrop? If there are good proposals on how to solve this issue then it's not worth even trying.\r\n\r\nPerhaps distributing an equal amount of tokens among ECIP participants could be a good start + some mechanism to distribute tokens to individuals who want to join (e.g. a faucet, bounty campaigns that encourage contributions to ETC code and ETC community work).\r\n\r\nSuccessful TCR examples:\r\n\r\n* [TCRParty](https://www.tcr.party/)\r\n* [DIRT protocol / openmarketcap](https://dev.dirtprotocol.com/)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/501232247/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 1
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00065.json b/.gh-issues/00065.json
new file mode 100644
index 0000000..7db482a
--- /dev/null
+++ b/.gh-issues/00065.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/65",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/65/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/65/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/65/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/65",
+    "id": 427333895,
+    "node_id": "MDU6SXNzdWU0MjczMzM4OTU=",
+    "number": 65,
+    "title": "ECIP-1057: Cold Staking",
+    "user": {
+      "login": "Dexaran",
+      "id": 26142412,
+      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/26142412?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/Dexaran",
+      "html_url": "https://github.com/Dexaran",
+      "followers_url": "https://api.github.com/users/Dexaran/followers",
+      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
+      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
+      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
+      "repos_url": "https://api.github.com/users/Dexaran/repos",
+      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 13,
+    "created_at": "2019-03-30T22:17:03Z",
+    "updated_at": "2019-03-31T20:42:30Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "### Title\r\n\r\n```\r\n    ECIP: 1057\r\n    Title: Cold Staking\r\n    Author: Dexaran, dexaran@ethereumclassic.org\r\n    Discussions-To: dexaran@ethereumclassic.org\r\n    Status: Draft\r\n    Type: Standard Track - Consensus\r\n    Created: 2019-3-31\r\n```\r\n\r\n### Abstract\r\n\r\nThe following describes the implementation of the protocol, which is designed to reward ETC holders for the long term holding of their coins, thereby creating a scarcity and reducing the actual “circulating supply”. We already have a working prototype and a live version in Callisto Network as well as we have UI and all the necessary descriptions and guidelines.\r\n\r\nThis proposal is fully compatible with ECIP-1017 since it does not affect the actual monetary policy, but only the distribution of emitted coins. \r\n\r\n### Motivation\r\n\r\n**Cold Staking is not a consensus protocol!**\r\n\r\n#### 1. Rebalance the influence of miners and stakeholders\r\n\r\nThere are many participants in crypto networks: miners, investors and stakeholders, developers and media resource owners. Miners control the network hashrate, developers and media resource owners participate in hardforks directly, while stakeholders often have not so much power. In addition, the wealth, the hashrate share and the influence of miners increase with time as they receive payments so that they can acquire new mining equipment in order to have more hashpower. In ETC, the share of long term stakeholders do not increase with time.\r\n\r\nFrom a fundamental point of view, it is better if the situation is opposite because:\r\n\r\n1. The miners are not interested in the project they are mining. In general, miners are only interested in their income. They can switch at any time regardless of anything, so they have no long-term interest in the network to which they contribute. In most cases, miners have absolutely no incentives to hold assets they are mining. **The more power miners have, the greater the dumping potential of the mineable crypto asset.**\r\n\r\n2. Long term investors and stake holders are interested in project they invest in. In most cases, large investors conduct significant research before making their long-term investments. The more they invest, the more tied to the project they are because they can't just \"switch\" at any point of time like miners. **The more power long-term investors have, the greater the upside potential of the asset.**\r\n\r\n3. Long term investors are interested in the ecosystem and they have incentives to contribute their resources for the sake of long-term results.\r\n\r\nI believe that it is important to implement a protocol that will balance the distribution of influence between miners and stakeholders in order to form a healthy ecosystem for the Ethereum Classic project.\r\n\r\n#### 2. Financial incentives\r\n\r\nCold Staking can push the price of a crypto asset higher and increase its upside potential.\r\n\r\nThe Cold Staking protocol is based on the \"gym market theory\". You can find a description [here](https://docs.google.com/document/d/1LpRHzW7gGV1JfiXUQOmW-UEVF9TCNNWrYiItDuLgiGA/edit). Cold Staking reduces the actual circulating supply by incentivizing long-term stakeholders to lock their funds in a special contract. The more funds are blocked, the scarcer the crypto asset is, the higher the price can become during the bullish phase of the market. The higher the price of a crypto asset is, the greater the incentives for long-term investors (cold stakers) and so on.\r\n\r\n### Specification\r\n\r\nThe proposal is to implement a protocol that will reward long-term holders for holding their coins:\r\n\r\n- Allocate `<X>` % of mined block reward for Cold Stakers (cold staking fee).\r\n\r\n- Allow any stakeholder to become a Cold Staker by locking his (her) funds in a special smart-contract for 27 days.\r\n\r\n- Distribute a total sum of cold staking fees between cold stakers in proportion to their locked stake.\r\n\r\nIt is proposed to set the Cold Staking fee to 40% at the moment of the implementation and increase the Cold Staking fee share by 5% at block 15,000,000 and block 20,000,000 (these are blocks of mining reward reduction according to ECIP1017).\r\n\r\n| Block interval | Block Reward | Mining, % | Cold Staking, % | Monthly return (assuming that 1/2 of total ETC supply is locked in staking) |\r\n| ---: | ---: | ---: | ---: | ---: |\r\n| 1 - 10,000,000 | 5 ETC | 100% | 0% | - |\r\n| 10,000,000 - 15,000,000 | 4 ETC | 60% | 40% | 0.36% |\r\n| 15,000,000 - 20,000,000 | 3.2 ETC | 55% | 45% | 0.28% |\r\n| 20,000,000 - 25,000,000 | 2.56 ETC | 50% | 50% | 0.23% |\r\n| 25,000,000 - ... | 2.05 ETC | 50% | 50% | 0.17% |\r\n\r\nMore detailed calculations are described in [this google spreadsheet](https://docs.google.com/spreadsheets/d/1aKCvHoodbyNU-TGcJIwcvucXHJI_HwwOcbNtJGB8ES8/edit?usp=sharing).\r\n\r\nThe described system is self-balancing, which means that with the decrease of the staking reward the stakers will pull out, decreasin the total \"Cold Staking pool\", thus increasing the share of the rest of the stakers, therefore their reward will increase until it will settle at the level where the system is balanced.\r\n\r\nHowever, we should consider the viability of the system assuming that 50% of the total circulating supply will go into Cold Staking. This numbers are empirically proven to be essential.\r\n\r\nMost of the stakeable crypto assets such as [Dash](https://stakingrewards.com/asset/dash) or [PIVX](https://stakingrewards.com/asset/pivx) have 4 to 8 % of annual return rate. DASH or PIVX masternode requires a hardware that will participate in the generation of blocks, while Cold Staking do not require cold stakers to perform any actions apart from pressing \"start staking\" and \"claim reward\" buttons. The minimal Cold Staking return at 50% of total supply at stake should be comparable to the return of DASH or PIVX masternodes. With that being said I can conclude that 4% of the annual yield from Cold Staking is affordable for the viability of the system at the launch stage.\r\n\r\n#### Staking round length should be equal to 27 days\r\n\r\nTraders often make their decisions based on charts and candle closures. Therefore, it is better for them to have their coins available when the time to make a decision will come. That's why I'm proposing 27 days interval. \r\n\r\nIf you deposit your funds at the beginning of a month then you will have the opportunity to claim it back right before the closure of the (1) week candle and (2) month candle at the same time.\r\n\r\n![candle_close](https://user-images.githubusercontent.com/26142412/46502950-7ae0a080-c83a-11e8-8d21-60f9e9a95391.png)\r\n\r\n### References\r\n\r\n- [Staking Formula](https://docs.google.com/document/d/1uckDVbgAj6N6Nx6Sm8-CnL_kRJTT8MZRQfVEkT01ltM/edit)\r\n\r\n- [Everything you need to know about Callisto Cold Staking](https://www.reddit.com/r/CallistoCrypto/comments/9qe5bm/everything_you_need_to_know_about_cold_staking/)\r\n\r\n- [Cold Staking contract development discussion](https://github.com/EthereumCommonwealth/Roadmap/issues/51)\r\n\r\n- [What is Cold Staking? (Callisto)](https://callisto.network/cold-staking/)\r\n\r\n- [Step-By-Step tutorial: Staking with ClassicEtherWallet](https://callisto.network/ru/blog/post/cold-staking-a-step-by-step-tutorial/)\r\n\r\n- [Cold Staking at Testnet](https://callisto.network/blog/post/callisto-cold-staking-testnet-implementation)\r\n\r\n### Implementation\r\n\r\nThis protocol consists of two parts: (1) protocol-level implementation and (2) smart-contract.\r\n\r\n1. Protocol-level implementation requires a hardfork. Starting from the hardfork block number, a certain amount of ETC should be allocated for the Cold Staking contract address with each mined block. Protocol-level implementation is only required to enable the Cold Staking.\r\n\r\n2. The smart-contract implements the logic of the Cold Staking protocol. The source code of the Cold Staking contract can be found [here](https://github.com/EthereumCommonwealth/Cold-staking). Cold Staking contract was [audited](https://github.com/EthereumCommonwealth/Auditing/issues/77). [Bug bounty](https://github.com/EthereumCommonwealth/Roadmap/issues/52) was held. The contract has a working implementation at Callisto Network.\r\n\r\n#### Live implementation at Callisto Network\r\n\r\nThis is the live Cold Staking contract at Callisto Network: [0xd813419749b3c2cDc94A2F9Cfcf154113264a9d6](https://explorer2.callisto.network/addr/0xd813419749b3c2cDc94A2F9Cfcf154113264a9d6)\r\n\r\nCold Staking UI is already implemented in [ClassicEtherWallet](http://classicetherwallet.com) (only visible when unlocking wallet with CLO network nodes selected).\r\n\r\nCold Staking is supported by [Guarda wallet](https://www.reddit.com/r/CallistoCrypto/comments/9z2tmt/callisto_cold_staking_is_now_active_on_guarda/), [Trust wallet](https://trustwallet.com/assets/callisto) and some other wallets.\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/65/reactions",
+      "total_count": 14,
+      "+1": 5,
+      "-1": 9,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00065_478298217.json b/.gh-issues/00065_478298217.json
new file mode 100644
index 0000000..1a9d099
--- /dev/null
+++ b/.gh-issues/00065_478298217.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478298217",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/65#issuecomment-478298217",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/65",
+    "id": 478298217,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODI5ODIxNw==",
+    "user": {
+      "login": "shanejonas",
+      "id": 364566,
+      "node_id": "MDQ6VXNlcjM2NDU2Ng==",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/364566?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/shanejonas",
+      "html_url": "https://github.com/shanejonas",
+      "followers_url": "https://api.github.com/users/shanejonas/followers",
+      "following_url": "https://api.github.com/users/shanejonas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/shanejonas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/shanejonas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/shanejonas/subscriptions",
+      "organizations_url": "https://api.github.com/users/shanejonas/orgs",
+      "repos_url": "https://api.github.com/users/shanejonas/repos",
+      "events_url": "https://api.github.com/users/shanejonas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/shanejonas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-03-30T23:27:46Z",
+    "updated_at": "2019-03-31T15:25:59Z",
+    "author_association": "MEMBER",
+    "body": "My initial thoughts are that the PoW is what secures the network and should be rewarded as such.\r\n\r\nBut I can understand how other networks might use a scheme like this to attract a certain type of investor.\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478298217/reactions",
+      "total_count": 3,
+      "+1": 3,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00065_478304847.json b/.gh-issues/00065_478304847.json
new file mode 100644
index 0000000..48aa538
--- /dev/null
+++ b/.gh-issues/00065_478304847.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478304847",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/65#issuecomment-478304847",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/65",
+    "id": 478304847,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODMwNDg0Nw==",
+    "user": {
+      "login": "pyskell",
+      "id": 9665963,
+      "node_id": "MDQ6VXNlcjk2NjU5NjM=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/9665963?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/pyskell",
+      "html_url": "https://github.com/pyskell",
+      "followers_url": "https://api.github.com/users/pyskell/followers",
+      "following_url": "https://api.github.com/users/pyskell/following{/other_user}",
+      "gists_url": "https://api.github.com/users/pyskell/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/pyskell/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/pyskell/subscriptions",
+      "organizations_url": "https://api.github.com/users/pyskell/orgs",
+      "repos_url": "https://api.github.com/users/pyskell/repos",
+      "events_url": "https://api.github.com/users/pyskell/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/pyskell/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-03-31T01:59:48Z",
+    "updated_at": "2019-03-31T01:59:48Z",
+    "author_association": "MEMBER",
+    "body": "Agree with Shane. Weakens security and changes a monetary policy that is permanent. May not change emission, certainly changes the policy in material ways by changing where block rewards go.\r\n\r\nPoW is predicated on incentivizing miners to secure the network. Full stop.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478304847/reactions",
+      "total_count": 4,
+      "+1": 4,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00065_478318849.json b/.gh-issues/00065_478318849.json
new file mode 100644
index 0000000..521846c
--- /dev/null
+++ b/.gh-issues/00065_478318849.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478318849",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/65#issuecomment-478318849",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/65",
+    "id": 478318849,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODMxODg0OQ==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-03-31T07:28:51Z",
+    "updated_at": "2019-03-31T08:08:10Z",
+    "author_association": "MEMBER",
+    "body": "Thanks for the proposal! Personally, I believe the reward should fully go to miners. I *might* support some change in how the reward is distributed between them if it made sense, but as Shane and pyskell mentioned, if you reduce the miners reward, you reduce the security.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478318849/reactions",
+      "total_count": 3,
+      "+1": 3,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00065_478331595.json b/.gh-issues/00065_478331595.json
new file mode 100644
index 0000000..b18c001
--- /dev/null
+++ b/.gh-issues/00065_478331595.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478331595",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/65#issuecomment-478331595",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/65",
+    "id": 478331595,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODMzMTU5NQ==",
+    "user": {
+      "login": "kimisan",
+      "id": 8416967,
+      "node_id": "MDQ6VXNlcjg0MTY5Njc=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/8416967?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/kimisan",
+      "html_url": "https://github.com/kimisan",
+      "followers_url": "https://api.github.com/users/kimisan/followers",
+      "following_url": "https://api.github.com/users/kimisan/following{/other_user}",
+      "gists_url": "https://api.github.com/users/kimisan/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/kimisan/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/kimisan/subscriptions",
+      "organizations_url": "https://api.github.com/users/kimisan/orgs",
+      "repos_url": "https://api.github.com/users/kimisan/repos",
+      "events_url": "https://api.github.com/users/kimisan/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/kimisan/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-03-31T11:01:56Z",
+    "updated_at": "2019-03-31T11:01:56Z",
+    "author_association": "MEMBER",
+    "body": "Thanks for the proposal.\r\nBut I think this kind of Cold Staking would make our system more complicate.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478331595/reactions",
+      "total_count": 4,
+      "+1": 4,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00065_478333052.json b/.gh-issues/00065_478333052.json
new file mode 100644
index 0000000..320fb26
--- /dev/null
+++ b/.gh-issues/00065_478333052.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478333052",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/65#issuecomment-478333052",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/65",
+    "id": 478333052,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODMzMzA1Mg==",
+    "user": {
+      "login": "feqifei",
+      "id": 42180581,
+      "node_id": "MDQ6VXNlcjQyMTgwNTgx",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/42180581?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/feqifei",
+      "html_url": "https://github.com/feqifei",
+      "followers_url": "https://api.github.com/users/feqifei/followers",
+      "following_url": "https://api.github.com/users/feqifei/following{/other_user}",
+      "gists_url": "https://api.github.com/users/feqifei/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/feqifei/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/feqifei/subscriptions",
+      "organizations_url": "https://api.github.com/users/feqifei/orgs",
+      "repos_url": "https://api.github.com/users/feqifei/repos",
+      "events_url": "https://api.github.com/users/feqifei/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/feqifei/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-03-31T11:24:53Z",
+    "updated_at": "2019-03-31T14:34:50Z",
+    "author_association": "NONE",
+    "body": "I voted thumbup because I hope dexaran's proposal could be discussed without prejudice.\r\nI'm following recent discussions on Discord about the possibility ETC will become a security layer for ETH and other cryptos. I understand that the risk of a reward system for holders can can reduce the security as consequence of a decreased reward for miners.\r\nOn the other hand if ETC will be a L1 for other PoS cryptos it will become a kind of commodity and I don't see the advantage for holders.\r\n\r\nDisclaimer: I'm a long-term holder",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478333052/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00065_478334154.json b/.gh-issues/00065_478334154.json
new file mode 100644
index 0000000..d13fad3
--- /dev/null
+++ b/.gh-issues/00065_478334154.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478334154",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/65#issuecomment-478334154",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/65",
+    "id": 478334154,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODMzNDE1NA==",
+    "user": {
+      "login": "frankbuse",
+      "id": 41022308,
+      "node_id": "MDQ6VXNlcjQxMDIyMzA4",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/41022308?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/frankbuse",
+      "html_url": "https://github.com/frankbuse",
+      "followers_url": "https://api.github.com/users/frankbuse/followers",
+      "following_url": "https://api.github.com/users/frankbuse/following{/other_user}",
+      "gists_url": "https://api.github.com/users/frankbuse/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/frankbuse/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/frankbuse/subscriptions",
+      "organizations_url": "https://api.github.com/users/frankbuse/orgs",
+      "repos_url": "https://api.github.com/users/frankbuse/repos",
+      "events_url": "https://api.github.com/users/frankbuse/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/frankbuse/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-03-31T11:41:44Z",
+    "updated_at": "2019-03-31T11:41:44Z",
+    "author_association": "NONE",
+    "body": "Thumbs up from me.\r\nThis should be implemented asap. \r\n\r\nI don't understand the comment “if you reduce the miners reward, you reduce the security“\r\n\r\nOld etc  keepers/miners and new miners/buyers will get an extra reason to keep their mining rewards or their bought etc because they can now stake their etc and get rewarded for holding.\r\n\r\nSo this would attract new miners, get some buying volume because staking is getting more and more accepted. \r\nAnd also as the total staking balance grows, the ones staking would all benefit from a higher ETC price so their 27 days rewards will go up dollar wise \r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478334154/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00065_478340492.json b/.gh-issues/00065_478340492.json
new file mode 100644
index 0000000..7989b6f
--- /dev/null
+++ b/.gh-issues/00065_478340492.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478340492",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/65#issuecomment-478340492",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/65",
+    "id": 478340492,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODM0MDQ5Mg==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-03-31T13:10:35Z",
+    "updated_at": "2019-03-31T13:11:36Z",
+    "author_association": "MEMBER",
+    "body": "@feqifei I think everyones opinion so far was based on reasoning. ETC should not care whether any L2 uses it as L1, anyone is free to do it.\r\n@frankbuse you're assuming miners care about ETC which is false - also this ECIP mentions that `The miners are not interested in the project they are mining`\r\n\r\nWhat ECIP tries to accomplish is to prevent people from withdrawing their money to prevent possible huge dumps of ETC. My guess is that smart investors won't lock themselves in anyway.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478340492/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00065_478343876.json b/.gh-issues/00065_478343876.json
new file mode 100644
index 0000000..9713948
--- /dev/null
+++ b/.gh-issues/00065_478343876.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478343876",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/65#issuecomment-478343876",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/65",
+    "id": 478343876,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODM0Mzg3Ng==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-03-31T13:51:55Z",
+    "updated_at": "2019-03-31T13:51:55Z",
+    "author_association": "MEMBER",
+    "body": "I would like to remind everyone that accepting a proposal as _draft_ does not imply any governance and that GitHub is not the best place to debate whether a proposal should be accepted or not.\r\n\r\nThe ECIP process accepts any _technical sound_ proposal as a draft as long as it meets basic technical standards and follows the process strictly. The actual governance and acceptance or rejecting process start _after_ the technical discussion on Github.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478343876/reactions",
+      "total_count": 3,
+      "+1": 3,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00065_478345480.json b/.gh-issues/00065_478345480.json
new file mode 100644
index 0000000..c83a917
--- /dev/null
+++ b/.gh-issues/00065_478345480.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478345480",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/65#issuecomment-478345480",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/65",
+    "id": 478345480,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODM0NTQ4MA==",
+    "user": {
+      "login": "anotherVariable",
+      "id": 247838,
+      "node_id": "MDQ6VXNlcjI0NzgzOA==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/247838?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/anotherVariable",
+      "html_url": "https://github.com/anotherVariable",
+      "followers_url": "https://api.github.com/users/anotherVariable/followers",
+      "following_url": "https://api.github.com/users/anotherVariable/following{/other_user}",
+      "gists_url": "https://api.github.com/users/anotherVariable/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/anotherVariable/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/anotherVariable/subscriptions",
+      "organizations_url": "https://api.github.com/users/anotherVariable/orgs",
+      "repos_url": "https://api.github.com/users/anotherVariable/repos",
+      "events_url": "https://api.github.com/users/anotherVariable/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/anotherVariable/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-03-31T14:12:29Z",
+    "updated_at": "2019-03-31T16:00:50Z",
+    "author_association": "NONE",
+    "body": "If all you have to do is lock up some ETC to get some back, what incentive does that give to the miners to keep on mining who keep the network secure?\r\n\r\nEspecially when cold staking wants to take away from the miner reward, and split it up to someone that just does nothing, but puts some ETC in a smart contract and walks away for 27 days.\r\n\r\nThe chain doesn't need any more so called `hodlers` it needs people that use it every day not once every 27 days. 😉 \r\n\r\nAlso from what I remember the CLO network hash fell quite a bit, right after cold staking was introduced? I know I quit mining and just started staking. 😄 ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478345480/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00065_478353061.json b/.gh-issues/00065_478353061.json
new file mode 100644
index 0000000..09075ba
--- /dev/null
+++ b/.gh-issues/00065_478353061.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478353061",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/65#issuecomment-478353061",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/65",
+    "id": 478353061,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODM1MzA2MQ==",
+    "user": {
+      "login": "drd34d",
+      "id": 30156189,
+      "node_id": "MDQ6VXNlcjMwMTU2MTg5",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/30156189?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/drd34d",
+      "html_url": "https://github.com/drd34d",
+      "followers_url": "https://api.github.com/users/drd34d/followers",
+      "following_url": "https://api.github.com/users/drd34d/following{/other_user}",
+      "gists_url": "https://api.github.com/users/drd34d/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/drd34d/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/drd34d/subscriptions",
+      "organizations_url": "https://api.github.com/users/drd34d/orgs",
+      "repos_url": "https://api.github.com/users/drd34d/repos",
+      "events_url": "https://api.github.com/users/drd34d/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/drd34d/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-03-31T15:46:45Z",
+    "updated_at": "2019-03-31T15:47:09Z",
+    "author_association": "NONE",
+    "body": "> Motivation:\r\n> 1. Rebalance the influence of miners and stakeholders\r\n> The more power miners have, the greater the dumping potential of the mineable crypto asset.\r\n> The more power long-term investors have, the greater the upside potential of the asset.\r\n> \r\n> 2. Financial incentives\r\n> Cold Staking can push the price of a crypto asset higher and increase its upside potential.\r\n\r\nA proposal which the motivation is admitedly financial benefits for stakeholders, at the cost of reduction of mining rewards (and it's predictable consequences, ie: reduction of networh hash), it's surely not an \"improvement\".\r\n\r\nImo \"dumping potential\" and price shouldn't be something devs should be worrying about at the moment.\r\n\r\nAlso, in case you didn't know, \"investors\" and stakeholders will \"dump\" as soon as the price hits their targets, as long as the profit is bigger than the stake rewards.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478353061/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00065_478357168.json b/.gh-issues/00065_478357168.json
new file mode 100644
index 0000000..3b3dc0a
--- /dev/null
+++ b/.gh-issues/00065_478357168.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478357168",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/65#issuecomment-478357168",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/65",
+    "id": 478357168,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODM1NzE2OA==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-03-31T16:37:20Z",
+    "updated_at": "2019-03-31T16:37:20Z",
+    "author_association": "MEMBER",
+    "body": "I am following @soc1c lead in saying any technically-sound draft ECIP proposals that follow the format should be accepted, and debates and discussions about them that are non-technical but more political and financial should happen out of Github. Discord ECIP channels are a great place for debate, as well as Twitter.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478357168/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00065_478363926.json b/.gh-issues/00065_478363926.json
new file mode 100644
index 0000000..cb96f02
--- /dev/null
+++ b/.gh-issues/00065_478363926.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478363926",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/65#issuecomment-478363926",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/65",
+    "id": 478363926,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODM2MzkyNg==",
+    "user": {
+      "login": "tzdybal",
+      "id": 1138893,
+      "node_id": "MDQ6VXNlcjExMzg4OTM=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/1138893?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/tzdybal",
+      "html_url": "https://github.com/tzdybal",
+      "followers_url": "https://api.github.com/users/tzdybal/followers",
+      "following_url": "https://api.github.com/users/tzdybal/following{/other_user}",
+      "gists_url": "https://api.github.com/users/tzdybal/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/tzdybal/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/tzdybal/subscriptions",
+      "organizations_url": "https://api.github.com/users/tzdybal/orgs",
+      "repos_url": "https://api.github.com/users/tzdybal/repos",
+      "events_url": "https://api.github.com/users/tzdybal/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/tzdybal/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-03-31T18:02:17Z",
+    "updated_at": "2019-03-31T18:02:17Z",
+    "author_association": "MEMBER",
+    "body": "I don't agree with @YazzyYaz and @soc1c. All those comments are on the \"issue\", not \"pull request\" started by @Dexaran - I would guess that this is the place of his choice for discussion.\r\nIMHO PR should be accepted, because ECIP is \"sound\" and OK from editorial point of view. And discussion can be continued in here. \r\nDiscussion in Discord are IMHO not good, because there are many ECIPs, and off-topics discussed in there and searching/archiving/recalling such discussion is rather hard. \r\n\r\nAnd now, to the point...\r\nI don't agree with this proposal. As mentioned before, taking money from miners and giving it to the hodlers probably would reduce hash rate (as miners will be deincentivized)\r\nI would also say that this *is* about monetary policy.\r\nAddressing the \"fundamental\" part:\r\n1. With decreased block reward, miners will be even less interested in mining ETC at all.\r\n2. IMHO, most \"long time investors\" can at most shill the coin on Twitter. They can't switch easily, only if they invested out-of-chain, for example funded dev team or incubator. And in such case, they won't gain from staking. OFC they can also stake, but the part of investment that makes it harder to switch is not giving cold stake incentives. \r\n3. What kind of \"valuable\" investors can be attracted? Individual developers that do cold staking + develop in the ecosystem? Big companies that can afford staking and funding of dev teams, dApps, tools, etc? IMHO they would/wouldn't invest in ETC anyways, because of general characteristics of the chain. Startups? They probably won't have money for staking.\r\n\r\nI'm against adopting this ECIP, because:\r\n* it changes the rules of the game for miners / changes monetary policy\r\n* its main goal is to change ETC price / valuation\r\n* influence of stakeholders won't be \"rebalanced\" - they will only get some reward for cold staking, but it won't change the way they \"influence\" the network - they can participate in community right now, and after this change they won't get any extra power / rights\r\n* in my opinion it doesn't improve anything except profits of some network participants",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478363926/reactions",
+      "total_count": 5,
+      "+1": 5,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00065_478368643.json b/.gh-issues/00065_478368643.json
new file mode 100644
index 0000000..8b2ec09
--- /dev/null
+++ b/.gh-issues/00065_478368643.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478368643",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/65#issuecomment-478368643",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/65",
+    "id": 478368643,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODM2ODY0Mw==",
+    "user": {
+      "login": "stevanlohja",
+      "id": 10556209,
+      "node_id": "MDQ6VXNlcjEwNTU2MjA5",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/10556209?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/stevanlohja",
+      "html_url": "https://github.com/stevanlohja",
+      "followers_url": "https://api.github.com/users/stevanlohja/followers",
+      "following_url": "https://api.github.com/users/stevanlohja/following{/other_user}",
+      "gists_url": "https://api.github.com/users/stevanlohja/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/stevanlohja/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/stevanlohja/subscriptions",
+      "organizations_url": "https://api.github.com/users/stevanlohja/orgs",
+      "repos_url": "https://api.github.com/users/stevanlohja/repos",
+      "events_url": "https://api.github.com/users/stevanlohja/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/stevanlohja/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-03-31T18:51:37Z",
+    "updated_at": "2019-03-31T20:42:30Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Dividends for holdings puts participants at risk to securities laws as well as the regulatory perception of our network. SEC says Ethereum is not a security - let's keep it that way. Nay from me.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478368643/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00067.json b/.gh-issues/00067.json
new file mode 100644
index 0000000..3fceb59
--- /dev/null
+++ b/.gh-issues/00067.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/67",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/67/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/67/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/67/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/67",
+    "id": 427826504,
+    "node_id": "MDU6SXNzdWU0Mjc4MjY1MDQ=",
+    "number": 67,
+    "title": "ECIP-1054: Atlantis EVM and Protocol Upgrades",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 4,
+    "created_at": "2019-04-01T17:31:57Z",
+    "updated_at": "2019-10-07T06:48:26Z",
+    "closed_at": "2019-10-07T06:48:26Z",
+    "author_association": "MEMBER",
+    "body": "Atlantis Hardfork Meta\r\nEnable the outstanding Ethereum Foundation Spurious Dragon and Byzantium network protocol upgrades on the Ethereum Classic network in a hard-fork code-named Atlantis to enable maximum compatibility across these networks.\r\n\r\n![etcatlantis_copy](https://user-images.githubusercontent.com/47772477/54919046-11477200-4f00-11e9-84f5-f767085e355b.jpg)\r\n\r\nTo Discussion to : https://github.com/etclabscore/ECIPs/pull/10",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/67/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00067_478707443.json b/.gh-issues/00067_478707443.json
new file mode 100644
index 0000000..a6edf7e
--- /dev/null
+++ b/.gh-issues/00067_478707443.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478707443",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/67#issuecomment-478707443",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/67",
+    "id": 478707443,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODcwNzQ0Mw==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-04-01T19:11:19Z",
+    "updated_at": "2019-04-01T19:11:19Z",
+    "author_association": "MEMBER",
+    "body": "What's the point of this ticket?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/478707443/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00067_479447618.json b/.gh-issues/00067_479447618.json
new file mode 100644
index 0000000..22b4c7e
--- /dev/null
+++ b/.gh-issues/00067_479447618.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/479447618",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/67#issuecomment-479447618",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/67",
+    "id": 479447618,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTQ0NzYxOA==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-04-03T11:21:44Z",
+    "updated_at": "2019-04-03T11:21:44Z",
+    "author_association": "MEMBER",
+    "body": "@soc1c to add a `Discussions-To` to the preamble.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/479447618/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00067_490231004.json b/.gh-issues/00067_490231004.json
new file mode 100644
index 0000000..d5977d1
--- /dev/null
+++ b/.gh-issues/00067_490231004.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/490231004",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/67#issuecomment-490231004",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/67",
+    "id": 490231004,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDIzMTAwNA==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-05-07T19:52:20Z",
+    "updated_at": "2019-05-07T19:52:20Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Where should the discussions go to?\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/490231004/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00067_495187312.json b/.gh-issues/00067_495187312.json
new file mode 100644
index 0000000..73f7dc9
--- /dev/null
+++ b/.gh-issues/00067_495187312.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/495187312",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/67#issuecomment-495187312",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/67",
+    "id": 495187312,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTE4NzMxMg==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-05-23T11:56:45Z",
+    "updated_at": "2019-05-23T11:56:45Z",
+    "author_association": "MEMBER",
+    "body": "here or here: https://github.com/ethereumclassic/ECIPs/issues/78",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/495187312/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00068.json b/.gh-issues/00068.json
new file mode 100644
index 0000000..9b2234c
--- /dev/null
+++ b/.gh-issues/00068.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/68",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/68/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/68/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/68/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/68",
+    "id": 427836343,
+    "node_id": "MDU6SXNzdWU0Mjc4MzYzNDM=",
+    "number": 68,
+    "title": "ECIP-1053 Add OpenRPC Service Discovery To JSON-RPC Services",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-04-01T17:57:34Z",
+    "updated_at": "2019-04-01T17:57:34Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "Needs to add a `To-Discussion` to ECIP-1053\r\n\r\nFor now, I propose this link: https://github.com/etclabscore/ECIPs/blob/master/ECIPs/ECIP-1053.md\r\n\r\nBut it can be changed depending on what is more appropriate for discussions link.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/68/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00077.json b/.gh-issues/00077.json
new file mode 100644
index 0000000..bb07772
--- /dev/null
+++ b/.gh-issues/00077.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/77",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/77/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/77/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/77/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/77",
+    "id": 443516312,
+    "node_id": "MDU6SXNzdWU0NDM1MTYzMTI=",
+    "number": 77,
+    "title": "Add tools to validate ECIP against some kind of schema",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-05-13T17:27:44Z",
+    "updated_at": "2019-05-13T17:27:44Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/77/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00078.json b/.gh-issues/00078.json
new file mode 100644
index 0000000..04cea85
--- /dev/null
+++ b/.gh-issues/00078.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/78",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/78/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/78/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/78/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/78",
+    "id": 447606232,
+    "node_id": "MDU6SXNzdWU0NDc2MDYyMzI=",
+    "number": 78,
+    "title": "Final Call: ECIP-1054 Atlantis Upgrade",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 16,
+    "created_at": "2019-05-23T11:39:21Z",
+    "updated_at": "2019-05-31T13:31:26Z",
+    "closed_at": "2019-05-31T10:41:03Z",
+    "author_association": "MEMBER",
+    "body": "### ETC Core Devs Call - Atlantis Finalization\r\n\r\nWhen: **Thursday, May 30, 2019, 3pm UTC**, 60 minutes max.\r\n\r\nWhere: **Ethereum Classic Discord** https://discord.gg/dwxb6nf `#ecips` channel. Will use/create a voice channel _ad hoc._\r\n\r\n### Agenda\r\n\r\n- Quick client teams check-in\r\n  - Geth / Multi-Geth \r\n  - Parity Ethereum\r\n  - IOHK Mantis\r\n- Atlantis (ECIP-1054) is in _\"last call\"_ state\r\n  - ECIP-1054 needs to be either **accepted** or _updated_ (or _rejected_)\r\n  - discuss whether EIP-161 should be included or not @meowsbits @sorpaas  \r\n  - discuss any other EIP that might cause uncertainty\r\n  - discuss timeline for the protocol upgrade\r\n    - Morden Classic and Kotti Classic testnet (August?)\r\n    - Ethereum Classic mainnet (September?)\r\n- Anything else related to Atlantis\r\n- Outlook: Agharta (ECIP-1056) if time permits\r\n- Outlook: Astor SHA3 testnet if time permits\r\n\r\nPlease comment to add items to the agenda",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/78/reactions",
+      "total_count": 8,
+      "+1": 7,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 1
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00078_496693823.json b/.gh-issues/00078_496693823.json
new file mode 100644
index 0000000..c599fa5
--- /dev/null
+++ b/.gh-issues/00078_496693823.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/496693823",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/78#issuecomment-496693823",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/78",
+    "id": 496693823,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjY5MzgyMw==",
+    "user": {
+      "login": "antsankov",
+      "id": 2533512,
+      "node_id": "MDQ6VXNlcjI1MzM1MTI=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/2533512?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/antsankov",
+      "html_url": "https://github.com/antsankov",
+      "followers_url": "https://api.github.com/users/antsankov/followers",
+      "following_url": "https://api.github.com/users/antsankov/following{/other_user}",
+      "gists_url": "https://api.github.com/users/antsankov/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/antsankov/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/antsankov/subscriptions",
+      "organizations_url": "https://api.github.com/users/antsankov/orgs",
+      "repos_url": "https://api.github.com/users/antsankov/repos",
+      "events_url": "https://api.github.com/users/antsankov/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/antsankov/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-05-28T21:18:41Z",
+    "updated_at": "2019-05-29T22:43:58Z",
+    "author_association": "NONE",
+    "body": "Would like to share progress on Astor SHA3 testnet \r\n- What has been done so far, \r\n- What are the next steps,\r\n- Community feedback\r\n\r\nhttps://astor.host - home page\r\nhttps://stats.astor.host - stats page\r\nhttps://explore.astor.host - block explorer ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/496693823/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 1
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00078_496723650.json b/.gh-issues/00078_496723650.json
new file mode 100644
index 0000000..42266ba
--- /dev/null
+++ b/.gh-issues/00078_496723650.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/496723650",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/78#issuecomment-496723650",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/78",
+    "id": 496723650,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjcyMzY1MA==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-05-28T23:12:18Z",
+    "updated_at": "2019-05-28T23:24:42Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Sorry @antsankov, although I think it's great you're making progress in that space, I must say I motion against any topics that aren't directly related to the Atlantis fork in question for this particular meeting.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/496723650/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00078_496725924.json b/.gh-issues/00078_496725924.json
new file mode 100644
index 0000000..bfad555
--- /dev/null
+++ b/.gh-issues/00078_496725924.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/496725924",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/78#issuecomment-496725924",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/78",
+    "id": 496725924,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjcyNTkyNA==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-05-28T23:23:20Z",
+    "updated_at": "2019-05-30T13:59:25Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Related to [EIP161](http://eips.ethereum.org/EIPS/eip-161):\r\n\r\n- [EIP168 \"Killing dust accounts\"](https://github.com/ethereum/EIPs/issues/168) will be useful background reference. \r\n- [EIP169 \"Dust account replay security\"](https://github.com/ethereum/EIPs/issues/169)\r\n- [Parity PR 4757 \"EIP-168, 169: Dust protection\"](https://github.com/paritytech/parity-ethereum/pull/4757)\r\n- > [\"A bunch of transactions were subsequently fired which cleared these spam accounts from the state.\"](https://github.com/ethereumbook/ethereumbook/issues/477#issuecomment-383556405)\r\n- > [\"... the new Geth behavior matches Parity’s, and empty accounts will cease to be a source of concern in general in about one week once the state clearing process finishes.\"](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-161.md)\r\n- ... ...: anyone know exactly where these contracts are? ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/496725924/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 1
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00078_496932666.json b/.gh-issues/00078_496932666.json
new file mode 100644
index 0000000..7ff6ad4
--- /dev/null
+++ b/.gh-issues/00078_496932666.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/496932666",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/78#issuecomment-496932666",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/78",
+    "id": 496932666,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjkzMjY2Ng==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-05-29T13:18:13Z",
+    "updated_at": "2019-05-29T13:19:02Z",
+    "author_association": "MEMBER",
+    "body": "@antsankov added it to the agenda (if time permits)\r\n\r\nNote, this is tomorrow!",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/496932666/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00078_496978994.json b/.gh-issues/00078_496978994.json
new file mode 100644
index 0000000..ab35fbd
--- /dev/null
+++ b/.gh-issues/00078_496978994.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/496978994",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/78#issuecomment-496978994",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/78",
+    "id": 496978994,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5Njk3ODk5NA==",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-05-29T15:10:38Z",
+    "updated_at": "2019-05-29T15:10:38Z",
+    "author_association": "MEMBER",
+    "body": "the dust clean up isn't a contract, iirc. it is a change in transaction logic where by if a transaction is sent to an account the results in it being empty, the account is pruned. logistically,  sending an transfer of zero value to all the empty accounts killed them.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/496978994/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00078_497037284.json b/.gh-issues/00078_497037284.json
new file mode 100644
index 0000000..c695fdc
--- /dev/null
+++ b/.gh-issues/00078_497037284.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497037284",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/78#issuecomment-497037284",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/78",
+    "id": 497037284,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzAzNzI4NA==",
+    "user": {
+      "login": "stevanlohja",
+      "id": 10556209,
+      "node_id": "MDQ6VXNlcjEwNTU2MjA5",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/10556209?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/stevanlohja",
+      "html_url": "https://github.com/stevanlohja",
+      "followers_url": "https://api.github.com/users/stevanlohja/followers",
+      "following_url": "https://api.github.com/users/stevanlohja/following{/other_user}",
+      "gists_url": "https://api.github.com/users/stevanlohja/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/stevanlohja/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/stevanlohja/subscriptions",
+      "organizations_url": "https://api.github.com/users/stevanlohja/orgs",
+      "repos_url": "https://api.github.com/users/stevanlohja/repos",
+      "events_url": "https://api.github.com/users/stevanlohja/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/stevanlohja/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-05-29T17:39:43Z",
+    "updated_at": "2019-05-29T17:39:43Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Does EIP-170 cause issues with existing large contracts on ETC?\r\n> if contract creation initialization returns data with length of more than 0x6000 (2**14 + 2**13) bytes, contract creation fails with an out of gas error.\r\nSrc: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-170.md",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497037284/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 1
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00078_497354676.json b/.gh-issues/00078_497354676.json
new file mode 100644
index 0000000..ec85e46
--- /dev/null
+++ b/.gh-issues/00078_497354676.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497354676",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/78#issuecomment-497354676",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/78",
+    "id": 497354676,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzM1NDY3Ng==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-05-30T14:42:36Z",
+    "updated_at": "2019-05-30T14:42:36Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Introducing EIP170 as a feature that enables at and beyond a given block transition value (ie some block height _n_ (the value for the proposed fork)) would not impact contracts deployed in blocks below that value. This is how go-ethereum and multi-geth handle this logic (below). \r\n\r\n```go\r\nret, err := run(evm, contract, nil, false)\r\n\r\n\t// check whether the max code size has been exceeded\r\n\tmaxCodeSizeExceeded := evm.ChainConfig().IsEIP170F(evm.BlockNumber) && len(ret) > params.MaxCodeSize\r\n\t// if the contract creation ran successfully and no errors were returned\r\n\t// calculate the gas required to store the code. If the code could not\r\n\t// be stored due to not enough gas set an error and let it be handled\r\n\t// by the error checking condition below.\r\n\tif err == nil && !maxCodeSizeExceeded {\r\n\t\tcreateDataGas := uint64(len(ret)) * params.CreateDataGas\r\n\t\tif contract.UseGas(createDataGas) {\r\n\t\t\tevm.StateDB.SetCode(address, ret)\r\n\t\t} else {\r\n\t\t\terr = ErrCodeStoreOutOfGas\r\n\t\t}\r\n\t}\r\n\r\n\t// When an error was returned by the EVM or when setting the creation code\r\n\t// above we revert to the snapshot and consume any gas remaining. Additionally\r\n\t// when we're in homestead this also counts for code storage gas errors.\r\n\tif maxCodeSizeExceeded || (err != nil && (evm.ChainConfig().IsEIP2F(evm.BlockNumber) || err != ErrCodeStoreOutOfGas)) {\r\n\t\tevm.StateDB.RevertToSnapshot(snapshot)\r\n\t\tif err != errExecutionReverted {\r\n\t\t\tcontract.UseGas(contract.Gas)\r\n\t\t}\r\n\t}\r\n\t// Assign err if contract code size exceeds the max while the err is still empty.\r\n\tif maxCodeSizeExceeded && err == nil {\r\n\t\terr = errMaxCodeSizeExceeded\r\n\t}\r\n\tif evm.vmConfig.Debug && evm.depth == 0 {\r\n\t\tevm.vmConfig.Tracer.CaptureEnd(ret, gas-contract.Gas, time.Since(start), err)\r\n\t}\r\nreturn ret, address, contract.Gas, err\r\n```\r\nhttps://github.com/multi-geth/multi-geth/blob/master/core/vm/evm.go#L408\r\n\r\nParity:\r\n```rust\r\n\t/// See main EthashParams docs.\r\n\tpub max_code_size: Option<Uint>,\r\n\t/// Maximum size of transaction RLP payload.\r\n\tpub max_transaction_size: Option<Uint>,\r\n\t/// See main EthashParams docs.\r\n\tpub max_code_size_transition: Option<Uint>,\r\n/// Transaction permission contract address.\r\n```\r\nhttps://github.com/paritytech/parity-ethereum/blob/master/json/src/spec/params.rs#L111-L116\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497354676/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00078_497360799.json b/.gh-issues/00078_497360799.json
new file mode 100644
index 0000000..51b3dd6
--- /dev/null
+++ b/.gh-issues/00078_497360799.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497360799",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/78#issuecomment-497360799",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/78",
+    "id": 497360799,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzM2MDc5OQ==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-05-30T14:59:51Z",
+    "updated_at": "2019-05-30T14:59:51Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "@realcodywburns gotcha... is there a list of dead accounts that need to receive a killer transaction? is there a record anywhere of who handled this cleanup and how on the foundation chain?\r\n\r\nor just\r\n\r\n ```js\r\nfor (a in allTheAccounts) {\r\n  eth.sendTransaction({from: me, to: a, value: 0});\r\n}\r\n```\r\n?\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497360799/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00078_497386051.json b/.gh-issues/00078_497386051.json
new file mode 100644
index 0000000..cd76ab4
--- /dev/null
+++ b/.gh-issues/00078_497386051.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497386051",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/78#issuecomment-497386051",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/78",
+    "id": 497386051,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzM4NjA1MQ==",
+    "user": {
+      "login": "stevanlohja",
+      "id": 10556209,
+      "node_id": "MDQ6VXNlcjEwNTU2MjA5",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/10556209?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/stevanlohja",
+      "html_url": "https://github.com/stevanlohja",
+      "followers_url": "https://api.github.com/users/stevanlohja/followers",
+      "following_url": "https://api.github.com/users/stevanlohja/following{/other_user}",
+      "gists_url": "https://api.github.com/users/stevanlohja/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/stevanlohja/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/stevanlohja/subscriptions",
+      "organizations_url": "https://api.github.com/users/stevanlohja/orgs",
+      "repos_url": "https://api.github.com/users/stevanlohja/repos",
+      "events_url": "https://api.github.com/users/stevanlohja/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/stevanlohja/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-05-30T16:09:19Z",
+    "updated_at": "2019-05-30T16:10:33Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "> Does EIP-170 cause issues with existing large contracts on ETC?\r\n\r\nThe question answered in the call and above thread. EIP-170 will not cause issues with existing large contracts but will enforce a limit post fork and this can be changed in the future if need be. There were 2 opposers of this EIP in the call, but far more express for it. To my understanding, these opposers can make their technical case in the next call.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497386051/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00078_497388694.json b/.gh-issues/00078_497388694.json
new file mode 100644
index 0000000..90827a6
--- /dev/null
+++ b/.gh-issues/00078_497388694.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497388694",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/78#issuecomment-497388694",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/78",
+    "id": 497388694,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzM4ODY5NA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-05-30T16:17:09Z",
+    "updated_at": "2019-05-30T16:17:09Z",
+    "author_association": "MEMBER",
+    "body": "@YazzyYaz could you post notes here?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497388694/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00078_497391245.json b/.gh-issues/00078_497391245.json
new file mode 100644
index 0000000..c4a41ad
--- /dev/null
+++ b/.gh-issues/00078_497391245.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497391245",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/78#issuecomment-497391245",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/78",
+    "id": 497391245,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzM5MTI0NQ==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-05-30T16:24:36Z",
+    "updated_at": "2019-05-31T13:31:26Z",
+    "author_association": "MEMBER",
+    "body": "Agenda: Determine whether Atlantis in accepted state or continue working.\r\n\r\nEIP-161 should be included or not?\r\n\r\nIsaac: concern about post-implementation. State-clearing process. Changes in EIP-161 makes it valid to remove dead accounts and frees up space on the machine.\r\n\r\nSomeone has to do something for this to happen.\r\n\r\nNeed to know which accounts need to be removed. Need more information about implementation.\r\n\r\nSorpaas: Foundation side. You can change each empty account to clear it out. Use Op-code to clear the empty account. Filter out all the accounts that are valid for clearing. \r\n\r\nLooking for dead accounts. 0 nonce, 0 balance, 0 code for Contract addresses.\r\n\r\nQuery for them.\r\n\r\nAny concerns to include it? It doesn’t affect transaction history.\r\n\r\nPros to include it: Technical Debt to resolve. Something we can remove from the machine. It also helps with testing. \r\n\r\nImpossible to do Atlantis without including the EIP-161, even for security concerns.\r\n\r\nAgreement on including EIP-161 reached.\r\n\r\n---\r\n\r\nStev asked about EIP-170 for contract code size. It will only stop for contract creation size that’s large.\r\n\r\nGigantic contracts will get stopped.  Increasing contract size limit shouldn’t affect immutability according to Sorpaas. Best to include it to stay 1:1 with Foundation chain, at least with the non-contentious EIPs.\r\n\r\nAnthony brought up letting miner side decide what size of contract transaction to mine. Sorpaas explains it doesn’t just affect contract creation but also internet contract calls which would also return out-of-gas errors if it’s a large contract as by EIP-170.\r\n\r\nShane asks if we are set on hard limit on gas. No contract size limit at the moment in ETC. Right now you pay gas based on how much you want to store. There’s a soft limit that can be changed.\r\n\r\nUndecided on EIP-170 due to uncertainty over having a contract limit.\r\n\r\nMakes testing easier according to Sorpaas.\r\n\r\nZach is saying that if a contract creation costs more than the gas limit, miners can vote on higher gas limits in future blocks to accommodate for contract.\r\n\r\nIt doesn’t break compatibility.\r\n\r\nAnthony against it because a hardfork breaks pre-described agreements but not as a soft fork. \r\n\r\nWe will decide in 2 weeks time for another vote on EIP-170. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497391245/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00078_497391370.json b/.gh-issues/00078_497391370.json
new file mode 100644
index 0000000..12d6860
--- /dev/null
+++ b/.gh-issues/00078_497391370.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497391370",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/78#issuecomment-497391370",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/78",
+    "id": 497391370,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzM5MTM3MA==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-05-30T16:24:58Z",
+    "updated_at": "2019-05-30T16:24:58Z",
+    "author_association": "MEMBER",
+    "body": "Rough draft, sorry @soc1c ^",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497391370/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00078_497393690.json b/.gh-issues/00078_497393690.json
new file mode 100644
index 0000000..78931f3
--- /dev/null
+++ b/.gh-issues/00078_497393690.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497393690",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/78#issuecomment-497393690",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/78",
+    "id": 497393690,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzM5MzY5MA==",
+    "user": {
+      "login": "pyskell",
+      "id": 9665963,
+      "node_id": "MDQ6VXNlcjk2NjU5NjM=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/9665963?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/pyskell",
+      "html_url": "https://github.com/pyskell",
+      "followers_url": "https://api.github.com/users/pyskell/followers",
+      "following_url": "https://api.github.com/users/pyskell/following{/other_user}",
+      "gists_url": "https://api.github.com/users/pyskell/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/pyskell/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/pyskell/subscriptions",
+      "organizations_url": "https://api.github.com/users/pyskell/orgs",
+      "repos_url": "https://api.github.com/users/pyskell/repos",
+      "events_url": "https://api.github.com/users/pyskell/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/pyskell/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-05-30T16:31:31Z",
+    "updated_at": "2019-05-30T16:31:31Z",
+    "author_association": "MEMBER",
+    "body": "My opposition is the following:\r\n\r\n1. These rules can simply be applied to transaction validation rather than block validation, making it a soft fork rather than a hard fork.\r\n2. In practical terms this will make no difference, miners will download one of the clients that has these types of transactions excluded by default and future blocks will not contain any such transactions.\r\n3. It's vitally important to stick to pre-agreed rules when they're defined. In this case gas limit is a rule that governs computational size of transactions and there was no bound on physical data/contract size.\r\n4. There's precedent for these types of things in other cryptocurrencies, example: https://github.com/bitcoin/bitcoin/commit/6a4c196dd64da2fd33dc7ae77a8cdd3e4cf0eff1\r\n5. Whether this is a contract creation call or an internal contract call shouldn't matter, both types of transactions can simply be rejected from inclusion in a block if their `data` is greater than `maxCodeSize` (per geth's implementation). As per point 2 I believe most clients will update and enforce the soft fork.\r\n\r\nRegardless I don't want to delay the Atlantis hard fork and apologize for the late comment.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497393690/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00078_497431639.json b/.gh-issues/00078_497431639.json
new file mode 100644
index 0000000..94f47fc
--- /dev/null
+++ b/.gh-issues/00078_497431639.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497431639",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/78#issuecomment-497431639",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/78",
+    "id": 497431639,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzQzMTYzOQ==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-05-30T18:20:51Z",
+    "updated_at": "2019-05-30T18:50:06Z",
+    "author_association": "MEMBER",
+    "body": "@pyskell thanks for the explanation of the idea. I have a different kind of question regarding \r\n> It's vitally important to stick to pre-agreed rules when they're defined. In this case gas limit is a rule that governs computational size of transactions and there was no bound on physical data/contract size.\r\n\r\nI'm wondering what happens if the initial design of Ethereum is 'flawed'. I personally believe that some things are 'flawed' (though I'm open to being convinced otherwise) like for example:\r\n\r\n1. I believe we should limit the block size to have a guarantee that the chain size is able to scale (on L1) in a slow enough way so that majority can actually run it for the next decades\r\n\r\n1. I also think that having 15 second blocks isn't really beneficial for a store of value coin because you will always need more than 1 confirmation (reasoning from the fact that security is a function of time & energy, not the number of blocks). So we're basically just adding block headers for no good reason - I could be missing stuff here (actually there is one benefit that I know of, which is that you can gather the statistical data on the fly about things included in the block header, but I don't think this is used yet)\r\n\r\n\r\nDo we say these rules are pre-agreed and that we MUST stick to them?\r\n\r\n\r\nBtw, regarding the proposal from pyskell. I'm still slightly more in favor for a hard cap, but we could try the soft fork solution to see if it catches on and we could do a hard cap later on if needed. Assuming pyskell solution has no attack vectors and that the miners do adopt it, how much harder does this make it for devs?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497431639/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00078_497664297.json b/.gh-issues/00078_497664297.json
new file mode 100644
index 0000000..4f9dc36
--- /dev/null
+++ b/.gh-issues/00078_497664297.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497664297",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/78#issuecomment-497664297",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/78",
+    "id": 497664297,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzY2NDI5Nw==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-05-31T10:41:03Z",
+    "updated_at": "2019-05-31T10:41:03Z",
+    "author_association": "MEMBER",
+    "body": "To be continued with EIP-170 in #79 ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497664297/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00078_497670050.json b/.gh-issues/00078_497670050.json
new file mode 100644
index 0000000..69143db
--- /dev/null
+++ b/.gh-issues/00078_497670050.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497670050",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/78#issuecomment-497670050",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/78",
+    "id": 497670050,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzY3MDA1MA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-05-31T11:03:34Z",
+    "updated_at": "2019-05-31T11:03:34Z",
+    "author_association": "MEMBER",
+    "body": "recording: https://www.youtube.com/watch?v=ry3mghEGqKo",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497670050/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00079.json b/.gh-issues/00079.json
new file mode 100644
index 0000000..f06a013
--- /dev/null
+++ b/.gh-issues/00079.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/79",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/79/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/79/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/79/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/79",
+    "id": 450734422,
+    "node_id": "MDU6SXNzdWU0NTA3MzQ0MjI=",
+    "number": 79,
+    "title": "Final Call: ECIP-1054 Atlantis Upgrade",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 9,
+    "created_at": "2019-05-31T10:40:43Z",
+    "updated_at": "2019-06-13T18:39:27Z",
+    "closed_at": "2019-06-13T18:38:33Z",
+    "author_association": "MEMBER",
+    "body": "ref https://github.com/etclabscore/ECIPs/issues/25\r\n\r\n### ETC Core Devs Call - Atlantis Finalization\r\n\r\nWhen: **Thursday, June 13, 2019, 3pm UTC**, 60 minutes max.\r\n\r\nWhere: **Ethereum Classic Discord** `#ecips` channel. Will use/create a voice channel _ad hoc._ Ask for invite here if you are not on that discord.\r\n\r\n### Agenda\r\n\r\n- Quick client teams check-in\r\n  - Geth / Multi-Geth \r\n  - Parity Ethereum\r\n  - IOHK Mantis\r\n- Testing updates\r\n  - Kensington Testnet\r\n  - Kotti Testnet\r\n  - Morden Testnet\r\n- Atlantis (ECIP-1054) is in _\"last call\"_ state\r\n  - ECIP-1054 needs to be either **accepted** or _updated_ (or _rejected_)\r\n  - ideally, we agree on how (and when) we accept Atlantis in this call\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/79/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00079_497923053.json b/.gh-issues/00079_497923053.json
new file mode 100644
index 0000000..deeb7cb
--- /dev/null
+++ b/.gh-issues/00079_497923053.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497923053",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/79#issuecomment-497923053",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/79",
+    "id": 497923053,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzkyMzA1Mw==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-01T07:54:09Z",
+    "updated_at": "2019-06-01T07:54:09Z",
+    "author_association": "MEMBER",
+    "body": "Q to EIP161: \r\nWhat will happen if someone, who created an address X years ago, which wasn’t used a long time, and now after implenting EIP161, there will be a transfer to it? I assume that one will be rejected!? Are then his/her ETC got lost?\r\n\r\nThx for the answers.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/497923053/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00079_498304166.json b/.gh-issues/00079_498304166.json
new file mode 100644
index 0000000..78aaeb6
--- /dev/null
+++ b/.gh-issues/00079_498304166.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/498304166",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/79#issuecomment-498304166",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/79",
+    "id": 498304166,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODMwNDE2Ng==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-03T15:25:06Z",
+    "updated_at": "2019-06-03T19:49:09Z",
+    "author_association": "MEMBER",
+    "body": "I'm copying over the answer from @pyskell :\r\n\r\n> My opposition is the following:\r\n\r\n> 1. These rules can simply be applied to transaction validation rather than block validation, making it a soft fork rather than a hard fork.\r\n\r\n> 2. In practical terms this will make no difference, miners will download one of the clients that has these types of transactions excluded by default and future blocks will not contain any such transactions.\r\n> 3. It's vitally important to stick to pre-agreed rules when they're defined. In this case gas limit is a rule that governs computational size of transactions and there was no bound on physical data/contract size.\r\n> 4. There's precedent for these types of things in other cryptocurrencies, example: https://github.com/bitcoin/bitcoin/commit/6a4c196dd64da2fd33dc7ae77a8cdd3e4cf0eff1\r\n> 5. Whether this is a contract creation call or an internal contract call shouldn't matter, both types of transactions can simply be rejected from inclusion in a block if their `data` is greater than `maxCodeSize` (per geth's implementation). As per point 2 I believe most clients will update and enforce the soft fork.\r\n\r\n> Regardless I don't want to delay the Atlantis hard fork and apologize for the late comment.\r\n\r\nWhat are your thoughts regarding this?\r\nAs I mentioned in the previous thread, I'm still slightly more in favor for a hard cap, but we could try the soft fork solution to see if it catches on and we could do a hard cap later on if needed. Assuming @pyskell  solution has no attack vectors and that the miners do adopt it, how much harder does this make it for devs?\r\n\r\ncc: @tzdybal @meowsbits @shanejonas @BelfordZ ,...",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/498304166/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00079_498397801.json b/.gh-issues/00079_498397801.json
new file mode 100644
index 0000000..97175bb
--- /dev/null
+++ b/.gh-issues/00079_498397801.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/498397801",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/79#issuecomment-498397801",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/79",
+    "id": 498397801,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODM5NzgwMQ==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-03T19:41:56Z",
+    "updated_at": "2019-06-03T19:41:56Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Thank you for deciding to rescheduling the meeting. Its now clear that was the right choice. \r\nThoughts on EIP 170:\r\n\r\nFirst, unfortunately we cannot really solve this so easily with @pyskell's proposed soft fork. The problem is that some transactions can _result_ in the creation of a contract (when a function call does a CREATE operation). This can happen at any point during execution (for example at the very end of a large amount of computation). In such a case, it would break the ethics of our gas-mechanism to simple throw away the transaction without charging the sender. If we charge the sender, it's a hard-fork (because it's a new, previously invalid, on-chain behavior). (description of a [similar issue](http://hackingdistributed.com/2016/06/28/ethereum-soft-fork-dos-vector/))\r\n\r\nMy second observation is that the _real_ problem is not `CREATE`ing, but `CALL`ing. Calling apparently costs only (originally 40) now 700 gas (according to yellow paper update from oct 2016)\r\n![image](https://user-images.githubusercontent.com/6954889/58826358-875a0a80-860e-11e9-9ca1-3c5e95b145eb.png)\r\n*The constant gas cost does not properly reflect the variable required work of loading a contract from disk to memory*\r\nHere is a more direct proposal that came after EIP-170: https://github.com/ethereum/EIPs/issues/1662\r\nIt simply makes the gas-cost of loading the contract dependent on size, by caching the size data in a new field on the account. Actually I'm wondering if the caching is even necessary (should be able to just load the contract and determine size at that point?). I'll bring it up in that thread.\r\n\r\nThere is at least 1 way to achieve mitigation of the attack vector as a soft. One roundabout way would be to simply set the block-gas-limit to a lower amount like 1 or 2 million. This can be hardcoded (as a soft fork), or even be done simple by having all client developers change the default setting, and asking miners and mining pools to use that number. Many of us have advocated this [on other grounds](https://github.com/ethereumclassic/ECIPs/pull/6)\r\n\r\n#### Conclusion:\r\nAlthough there are more direct and/or less authoritative ways to fix this issue, I support moving forward with EIP-170 in its current form. I don't believe there are any significant mutability concerns with EIP-170\r\n\r\nThe current code architecture (using a fork of geth) I think is the most reasonable option for ETC given our limited developers and resources. Nearly all client devs have said the tests are easier to run if we keep everything eth-compatible (for now). We only have a handful of client devs supposedly attempting to support 4(?) client implementations. Compare that to ethereum's 100+ devs contributing to Geth alone. I think that's a huge problem but I digress. \r\n\r\nUnder this architecture, EIP-170 is the least complex solution. It also keeps us on track with the greater Atlantis ECIP.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/498397801/reactions",
+      "total_count": 4,
+      "+1": 4,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00079_498406886.json b/.gh-issues/00079_498406886.json
new file mode 100644
index 0000000..3e168a4
--- /dev/null
+++ b/.gh-issues/00079_498406886.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/498406886",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/79#issuecomment-498406886",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/79",
+    "id": 498406886,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODQwNjg4Ng==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-03T20:08:28Z",
+    "updated_at": "2019-06-03T20:08:44Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "@TheEnthusiasticAs \r\n\r\n> I assume that one will be rejected!? Are then his/her ETC got lost?\r\n\r\nNo, the transaction will not be rejected and the value will not be lost. The transaction will operate normally.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/498406886/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00079_498815227.json b/.gh-issues/00079_498815227.json
new file mode 100644
index 0000000..d909d2e
--- /dev/null
+++ b/.gh-issues/00079_498815227.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/498815227",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/79#issuecomment-498815227",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/79",
+    "id": 498815227,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODgxNTIyNw==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-04T19:45:06Z",
+    "updated_at": "2019-06-04T19:45:06Z",
+    "author_association": "MEMBER",
+    "body": "Closing in favour of #80",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/498815227/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00079_500910226.json b/.gh-issues/00079_500910226.json
new file mode 100644
index 0000000..f3513c7
--- /dev/null
+++ b/.gh-issues/00079_500910226.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/500910226",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/79#issuecomment-500910226",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/79",
+    "id": 500910226,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDkxMDIyNg==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-11T16:04:08Z",
+    "updated_at": "2019-06-11T16:04:08Z",
+    "author_association": "MEMBER",
+    "body": "Reopening after #80",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/500910226/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00079_501734141.json b/.gh-issues/00079_501734141.json
new file mode 100644
index 0000000..ea41216
--- /dev/null
+++ b/.gh-issues/00079_501734141.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/501734141",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/79#issuecomment-501734141",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/79",
+    "id": 501734141,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTczNDE0MQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-13T14:44:21Z",
+    "updated_at": "2019-06-13T14:44:21Z",
+    "author_association": "MEMBER",
+    "body": "starting on time in 15 minutes on discord https://discord.gg/HJfne6e\r\n\r\njoin the meeting audio channel",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/501734141/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00079_501829867.json b/.gh-issues/00079_501829867.json
new file mode 100644
index 0000000..58af5c5
--- /dev/null
+++ b/.gh-issues/00079_501829867.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/501829867",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/79#issuecomment-501829867",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/79",
+    "id": 501829867,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTgyOTg2Nw==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-13T18:38:27Z",
+    "updated_at": "2019-06-13T18:39:27Z",
+    "author_association": "MEMBER",
+    "body": "Rough outcome:\r\n\r\n1. everyone agreed ECIP-1054 should move forward as proposed, as a bundle of proposals; no included proposal was objected; on a technical level this is _accepted_ now\r\n2. the timeline of testing and mainnet-hardfork activation was contested and no consensus was found\r\n3. a subsequent call will be held 7 days after this meeting, hopefully to further discuss the client landscape, review / testing results, and potentially a timeline everyone can agree upon",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/501829867/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00079_501829904.json b/.gh-issues/00079_501829904.json
new file mode 100644
index 0000000..0d82641
--- /dev/null
+++ b/.gh-issues/00079_501829904.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/501829904",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/79#issuecomment-501829904",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/79",
+    "id": 501829904,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTgyOTkwNA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-13T18:38:33Z",
+    "updated_at": "2019-06-13T18:38:33Z",
+    "author_association": "MEMBER",
+    "body": "k",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/501829904/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00080.json b/.gh-issues/00080.json
new file mode 100644
index 0000000..7cd1457
--- /dev/null
+++ b/.gh-issues/00080.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/80",
+    "id": 452173819,
+    "node_id": "MDU6SXNzdWU0NTIxNzM4MTk=",
+    "number": 80,
+    "title": "Intermediate Atlantis Upgrade Scheduling Call",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 18,
+    "created_at": "2019-06-04T19:43:21Z",
+    "updated_at": "2019-06-14T11:26:52Z",
+    "closed_at": "2019-06-11T16:03:44Z",
+    "author_association": "MEMBER",
+    "body": "It became apparent that certain parts of the Ethereum Classic community are appreciating an [accelerated hardfork schedule](https://medium.com/ethereum-classic-labs/etc-labs-upgrades-ethereum-classic-to-expand-functionality-and-improve-compatability-with-ethereum-e2ac7d9aad93). To avoid confusion, rushing protocol upgrades, and putting the network at risk of a potential split, I propose scheduling an intermediate atlantis-upgrade scheduling call to discuss and agree on a realistic timeline for ECIP-1054\r\n\r\nref #79 \r\n\r\n### ETC Core Devs Call - Atlantis Scheduling\r\n\r\nWhen: **Friday, June 07, 2019, 1pm UTC**, 30 minutes max.\r\n\r\nWhere: **Youtube Livestream** https://www.youtube.com/watch?v=hDVrKDSOCWA&feature=youtu.be\r\nYou can stream the call and chat and ask questions on Youtube Livestream. If you want access to the Hangouts to chat via voice, you'll need to message @soc1c or @YazzyYaz for a link to that. Due to limit on voice call attendees by Google, we ask that only those who are interested in using voice to ask for the invite to the Hangouts.\r\n### Agenda\r\n\r\n- Quick client teams check-in\r\n  - Geth / Multi-Geth \r\n  - Parity Ethereum\r\n  - IOHK Mantis\r\n- Discuss timeline for the protocol upgrade\r\n    - Morden Classic and Kotti Classic testnet\r\n    - Ethereum Classic mainnet \r\n\r\nThere are two competing proposals right now, I will give them letters, and propose a 3rd as a compromise:\r\n\r\n- [**A**] Original ECIP-1054 schedule\r\n  - `1_039_000` on Kotti Classic PoA-testnet (early August 2019)\r\n  - `4_723_000` on Morden Classic PoW-testnet (early August 2019)\r\n  - `8_750_000` on Ethereum Classic PoW-mainnet (mid-September 2019)\r\n- [**B**] ETCLabs \"July 1st\" schedule\r\n  - `N/A` on Kotti Classic PoA-testnet\r\n  - immediately on Morden Classic PoW-testnet (early June 2019)\r\n  - `8_343_000` on Ethereum Classic PoW-mainnet (July 1st 2019)\r\n- [**C**] Moderately accelerated schedule\r\n  - `716_617` on Kotti Classic PoA-testnet (two weeks from now)\r\n  - `4_729_274` on Morden Classic PoW-testnet (two weeks from now)\r\n  - `8_500_000` on Ethereum Classic PoW-mainnet (six weeks after successfull testnet forks)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80/reactions",
+      "total_count": 6,
+      "+1": 6,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00080_499126658.json b/.gh-issues/00080_499126658.json
new file mode 100644
index 0000000..7034958
--- /dev/null
+++ b/.gh-issues/00080_499126658.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499126658",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/80#issuecomment-499126658",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80",
+    "id": 499126658,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTEyNjY1OA==",
+    "user": {
+      "login": "wired1924",
+      "id": 51412681,
+      "node_id": "MDQ6VXNlcjUxNDEyNjgx",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/51412681?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/wired1924",
+      "html_url": "https://github.com/wired1924",
+      "followers_url": "https://api.github.com/users/wired1924/followers",
+      "following_url": "https://api.github.com/users/wired1924/following{/other_user}",
+      "gists_url": "https://api.github.com/users/wired1924/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/wired1924/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/wired1924/subscriptions",
+      "organizations_url": "https://api.github.com/users/wired1924/orgs",
+      "repos_url": "https://api.github.com/users/wired1924/repos",
+      "events_url": "https://api.github.com/users/wired1924/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/wired1924/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-05T15:13:40Z",
+    "updated_at": "2019-06-05T15:13:40Z",
+    "author_association": "NONE",
+    "body": "Where is the link for the call? ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499126658/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00080_499165887.json b/.gh-issues/00080_499165887.json
new file mode 100644
index 0000000..7c93ecb
--- /dev/null
+++ b/.gh-issues/00080_499165887.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499165887",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/80#issuecomment-499165887",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80",
+    "id": 499165887,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTE2NTg4Nw==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-05T16:50:57Z",
+    "updated_at": "2019-06-05T16:51:27Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Typo: `[B]` should `s/June 1/July 1/`",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499165887/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00080_499284977.json b/.gh-issues/00080_499284977.json
new file mode 100644
index 0000000..fd042f6
--- /dev/null
+++ b/.gh-issues/00080_499284977.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499284977",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/80#issuecomment-499284977",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80",
+    "id": 499284977,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTI4NDk3Nw==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-05T22:52:12Z",
+    "updated_at": "2019-06-05T22:52:12Z",
+    "author_association": "MEMBER",
+    "body": "> Typo: `[B]` should `s/June 1/July 1/`\r\n\r\nI updated it, thanks for pointing it out.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499284977/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00080_499293533.json b/.gh-issues/00080_499293533.json
new file mode 100644
index 0000000..f02af75
--- /dev/null
+++ b/.gh-issues/00080_499293533.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499293533",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/80#issuecomment-499293533",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80",
+    "id": 499293533,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTI5MzUzMw==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-05T23:33:06Z",
+    "updated_at": "2019-06-05T23:33:06Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "re: `[B]` again, \"immediately\" is obviously incomplete and impossible. What is the tangible proposed number? (If there is one?)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499293533/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00080_499310927.json b/.gh-issues/00080_499310927.json
new file mode 100644
index 0000000..a85deb9
--- /dev/null
+++ b/.gh-issues/00080_499310927.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499310927",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/80#issuecomment-499310927",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80",
+    "id": 499310927,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTMxMDkyNw==",
+    "user": {
+      "login": "cats9000",
+      "id": 51427267,
+      "node_id": "MDQ6VXNlcjUxNDI3MjY3",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/51427267?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/cats9000",
+      "html_url": "https://github.com/cats9000",
+      "followers_url": "https://api.github.com/users/cats9000/followers",
+      "following_url": "https://api.github.com/users/cats9000/following{/other_user}",
+      "gists_url": "https://api.github.com/users/cats9000/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/cats9000/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/cats9000/subscriptions",
+      "organizations_url": "https://api.github.com/users/cats9000/orgs",
+      "repos_url": "https://api.github.com/users/cats9000/repos",
+      "events_url": "https://api.github.com/users/cats9000/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/cats9000/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-06T01:08:07Z",
+    "updated_at": "2019-06-06T01:08:07Z",
+    "author_association": "NONE",
+    "body": "> Ask for invite here if you are not on that discord.\r\n\r\n@soc1c could I please have an invitation? ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499310927/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00080_499312038.json b/.gh-issues/00080_499312038.json
new file mode 100644
index 0000000..efeb422
--- /dev/null
+++ b/.gh-issues/00080_499312038.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499312038",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/80#issuecomment-499312038",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80",
+    "id": 499312038,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTMxMjAzOA==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-06T01:14:41Z",
+    "updated_at": "2019-06-06T01:14:41Z",
+    "author_association": "MEMBER",
+    "body": "1pm UTC is 9am EST right (just to confirm and not to miss it)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499312038/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00080_499347882.json b/.gh-issues/00080_499347882.json
new file mode 100644
index 0000000..e658fda
--- /dev/null
+++ b/.gh-issues/00080_499347882.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499347882",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/80#issuecomment-499347882",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80",
+    "id": 499347882,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTM0Nzg4Mg==",
+    "user": {
+      "login": "mikeyb",
+      "id": 36461,
+      "node_id": "MDQ6VXNlcjM2NDYx",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/36461?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/mikeyb",
+      "html_url": "https://github.com/mikeyb",
+      "followers_url": "https://api.github.com/users/mikeyb/followers",
+      "following_url": "https://api.github.com/users/mikeyb/following{/other_user}",
+      "gists_url": "https://api.github.com/users/mikeyb/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/mikeyb/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/mikeyb/subscriptions",
+      "organizations_url": "https://api.github.com/users/mikeyb/orgs",
+      "repos_url": "https://api.github.com/users/mikeyb/repos",
+      "events_url": "https://api.github.com/users/mikeyb/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/mikeyb/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-06T04:54:48Z",
+    "updated_at": "2019-06-06T04:54:48Z",
+    "author_association": "MEMBER",
+    "body": "http://www.timebie.com/std/utc.php",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499347882/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00080_499378058.json b/.gh-issues/00080_499378058.json
new file mode 100644
index 0000000..56598a9
--- /dev/null
+++ b/.gh-issues/00080_499378058.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499378058",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/80#issuecomment-499378058",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80",
+    "id": 499378058,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTM3ODA1OA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-06T07:15:24Z",
+    "updated_at": "2019-06-06T07:15:24Z",
+    "author_association": "MEMBER",
+    "body": "@wired1924 @cats9000 https://discord.gg/HJfne6e",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499378058/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00080_499592498.json b/.gh-issues/00080_499592498.json
new file mode 100644
index 0000000..8e939e6
--- /dev/null
+++ b/.gh-issues/00080_499592498.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499592498",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/80#issuecomment-499592498",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80",
+    "id": 499592498,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTU5MjQ5OA==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-06T17:31:33Z",
+    "updated_at": "2019-06-06T17:31:33Z",
+    "author_association": "MEMBER",
+    "body": "After talks with @soc1c @mikeyb and @TokenHash I have updated the ECIP discussion location to the Youtube Livestream here: https://www.youtube.com/watch?v=hDVrKDSOCWA&feature=youtu.be",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499592498/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00080_499847317.json b/.gh-issues/00080_499847317.json
new file mode 100644
index 0000000..5053751
--- /dev/null
+++ b/.gh-issues/00080_499847317.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499847317",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/80#issuecomment-499847317",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80",
+    "id": 499847317,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTg0NzMxNw==",
+    "user": {
+      "login": "tzdybal",
+      "id": 1138893,
+      "node_id": "MDQ6VXNlcjExMzg4OTM=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/1138893?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/tzdybal",
+      "html_url": "https://github.com/tzdybal",
+      "followers_url": "https://api.github.com/users/tzdybal/followers",
+      "following_url": "https://api.github.com/users/tzdybal/following{/other_user}",
+      "gists_url": "https://api.github.com/users/tzdybal/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/tzdybal/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/tzdybal/subscriptions",
+      "organizations_url": "https://api.github.com/users/tzdybal/orgs",
+      "repos_url": "https://api.github.com/users/tzdybal/repos",
+      "events_url": "https://api.github.com/users/tzdybal/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/tzdybal/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-07T11:13:33Z",
+    "updated_at": "2019-06-07T11:13:33Z",
+    "author_association": "MEMBER",
+    "body": "Unfortunately I'm not able to participate in the call, but I want to share my opinion as a developer.\r\n\r\n**I fully endorse option A - Original ECIP schedule.**\r\n\r\nAccording to my experience with previous forks, it's impossible to avoid network split with tight schedule. In my opinion even the original schedule leave just enough time for informational campaign and software update of the nodes. Because of the decentralized nature of the network, where you can't directly contact all participants, updates take time.\r\n\r\nI would also like to remind all parties, that regardless of what will be decided, changes has to be implemented thru ECIP process. In my opinion, change of a activation block is such a significant change, that ECIP should go back to \"Draft\" state and then wait 2 weeks in \"Last call\".",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499847317/reactions",
+      "total_count": 11,
+      "+1": 11,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00080_499887259.json b/.gh-issues/00080_499887259.json
new file mode 100644
index 0000000..e1525c5
--- /dev/null
+++ b/.gh-issues/00080_499887259.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499887259",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/80#issuecomment-499887259",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80",
+    "id": 499887259,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTg4NzI1OQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-07T13:36:06Z",
+    "updated_at": "2019-06-07T13:36:06Z",
+    "author_association": "MEMBER",
+    "body": "Thanks for everyone, I updated the ECIP according to the results of the call in #82 ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499887259/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00080_499935145.json b/.gh-issues/00080_499935145.json
new file mode 100644
index 0000000..9037c1d
--- /dev/null
+++ b/.gh-issues/00080_499935145.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499935145",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/80#issuecomment-499935145",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80",
+    "id": 499935145,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTkzNTE0NQ==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-07T15:40:59Z",
+    "updated_at": "2019-06-07T15:40:59Z",
+    "author_association": "MEMBER",
+    "body": "Livestream of Discussion: https://www.youtube.com/watch?v=hDVrKDSOCWA",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499935145/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00080_499938359.json b/.gh-issues/00080_499938359.json
new file mode 100644
index 0000000..c518bb6
--- /dev/null
+++ b/.gh-issues/00080_499938359.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499938359",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/80#issuecomment-499938359",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80",
+    "id": 499938359,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTkzODM1OQ==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-07T15:49:37Z",
+    "updated_at": "2019-06-07T15:50:29Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "My understanding is that we are tentatively targeting a compromise date at block 8,500,000 (early august). \r\n\r\nPlease thumbs down if this is inaccurate or you have a pressing objection it.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499938359/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00080_499943006.json b/.gh-issues/00080_499943006.json
new file mode 100644
index 0000000..e53ad25
--- /dev/null
+++ b/.gh-issues/00080_499943006.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499943006",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/80#issuecomment-499943006",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80",
+    "id": 499943006,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTk0MzAwNg==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-07T16:02:45Z",
+    "updated_at": "2019-06-07T16:02:45Z",
+    "author_association": "MEMBER",
+    "body": "The agreed dates with Terry Culver's feedback are:\r\n\r\n716_617 on Kotti Classic PoA-testnet (two weeks from now)\r\n4_729_274 on Morden Classic PoW-testnet (two weeks from now)\r\n8_500_000 on Ethereum Classic PoW-mainnet (six weeks after successfull testnet forks)\r\n\r\n[the above is from #ecips channel posted by @stevanlohja]",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499943006/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00080_500372684.json b/.gh-issues/00080_500372684.json
new file mode 100644
index 0000000..983c462
--- /dev/null
+++ b/.gh-issues/00080_500372684.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/500372684",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/80#issuecomment-500372684",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80",
+    "id": 500372684,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDM3MjY4NA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-10T10:43:14Z",
+    "updated_at": "2019-06-10T10:43:14Z",
+    "author_association": "MEMBER",
+    "body": "> The agreed dates with Terry Culver's feedback are:\r\n> \r\n> 716_617 on Kotti Classic PoA-testnet (two weeks from now)\r\n> 4_729_274 on Morden Classic PoW-testnet (two weeks from now)\r\n> 8_500_000 on Ethereum Classic PoW-mainnet (six weeks after successfull testnet forks)\r\n> \r\n> [the above is from #ecips channel posted by @stevanlohja]\r\n\r\nThanks",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/500372684/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00080_500882171.json b/.gh-issues/00080_500882171.json
new file mode 100644
index 0000000..f7e3094
--- /dev/null
+++ b/.gh-issues/00080_500882171.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/500882171",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/80#issuecomment-500882171",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80",
+    "id": 500882171,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDg4MjE3MQ==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-11T15:01:50Z",
+    "updated_at": "2019-06-11T15:01:50Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "with regard to eip161 @meowsbits there is a contract used by the EF to delete _some_ empties. I got it from Martin Swende. [here it is](https://etherscan.io/address/0xa43ebd8939d8328f5858119a3fb65f65c864c6dd#contracts), but it only cleans the ones from the attack, not all of them. My understanding is that the attacker must have generated addresses in a predictable mathematical way, and this contract just erases those ones using his same math. we can give this a try, hopefully it will remove the vast majority. It is also possible to remove all of them, but its a bit difficult to find them due to the \"secure tree\" abstraction - the fact that  a key use in the tree is the hash of the address. I can find the keys, but then I need thei preimages. I can probably get those another way but would have to comb through every transaction.\r\n\r\ntldr: the cleanup happens after the hard fork, so we should move forward, either way. plus i have the contract that can probably do a very good job",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/500882171/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00080_501883418.json b/.gh-issues/00080_501883418.json
new file mode 100644
index 0000000..35350ac
--- /dev/null
+++ b/.gh-issues/00080_501883418.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/501883418",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/80#issuecomment-501883418",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80",
+    "id": 501883418,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTg4MzQxOA==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-13T21:21:12Z",
+    "updated_at": "2019-06-13T21:21:12Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "the repo for ethereum's state clearing process eip161 is forked into my repo [here](https://github.com/zmitton/statesweep)\r\n\r\nif anyone wants to get involved please subscribe or open issues there",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/501883418/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00080_502073002.json b/.gh-issues/00080_502073002.json
new file mode 100644
index 0000000..a331afd
--- /dev/null
+++ b/.gh-issues/00080_502073002.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/502073002",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/80#issuecomment-502073002",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/80",
+    "id": 502073002,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjA3MzAwMg==",
+    "user": {
+      "login": "devfdn",
+      "id": 46411767,
+      "node_id": "MDQ6VXNlcjQ2NDExNzY3",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/46411767?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/devfdn",
+      "html_url": "https://github.com/devfdn",
+      "followers_url": "https://api.github.com/users/devfdn/followers",
+      "following_url": "https://api.github.com/users/devfdn/following{/other_user}",
+      "gists_url": "https://api.github.com/users/devfdn/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/devfdn/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/devfdn/subscriptions",
+      "organizations_url": "https://api.github.com/users/devfdn/orgs",
+      "repos_url": "https://api.github.com/users/devfdn/repos",
+      "events_url": "https://api.github.com/users/devfdn/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/devfdn/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-14T11:26:52Z",
+    "updated_at": "2019-06-14T11:26:52Z",
+    "author_association": "NONE",
+    "body": "what successful testing means for atlantis time schedule?? i am reeading geth code and see this https://github.com/ethereumproject/go-ethereum/issues/717!! can somebodey please explain",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/502073002/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00083.json b/.gh-issues/00083.json
new file mode 100644
index 0000000..1df4e8b
--- /dev/null
+++ b/.gh-issues/00083.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/83",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/83/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/83/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/83/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/83",
+    "id": 456575569,
+    "node_id": "MDU6SXNzdWU0NTY1NzU1Njk=",
+    "number": 83,
+    "title": "Final of the Final Call: ECIP-1054 Atlantis Upgrade",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 9,
+    "created_at": "2019-06-15T21:00:46Z",
+    "updated_at": "2019-06-20T15:23:51Z",
+    "closed_at": "2019-06-20T15:23:51Z",
+    "author_association": "MEMBER",
+    "body": "### ETC Core Devs Call - Finalization of the Atlantis Finalization\r\n\r\nWhen: **Thursday, June 20, 2019, 3pm UTC**.\r\n\r\nWhere: **Ethereum Classic Discord** `#ecips` channel.\r\n\r\n### Agenda\r\n\r\n- Quick client teams check-in\r\n  - Multi-Geth \r\n  - Parity Ethereum\r\n  - IOHK Mantis\r\n  - Classic Geth\r\n- Testnet status\r\n  - Kensington \r\n  - Kotti Hardfork\r\n  - Morden Outlook\r\n- Discussion about the hard fork block\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/83/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00083_502405077.json b/.gh-issues/00083_502405077.json
new file mode 100644
index 0000000..5092f04
--- /dev/null
+++ b/.gh-issues/00083_502405077.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/502405077",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/83#issuecomment-502405077",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/83",
+    "id": 502405077,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjQwNTA3Nw==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-15T22:51:10Z",
+    "updated_at": "2019-06-15T22:51:10Z",
+    "author_association": "MEMBER",
+    "body": "I suggest people come up with reasons as to why they believe we should choose a specific block. We need to provide arguments if we want to come to a conclusion and this can only be done if we all list the pros/cons and explain why these matter **for ETC network**. We should always make decisions that prioritize network stability/security because some errors can cause huge damage to the ETC network and consequently its stakeholders.\r\nAnswers like `I don't want to fork at block 'X'` or `we already agreed on the date` are IMO invalid. The reason being is:\r\n\r\n1. the \"Asian miner/exchange community\" assumption from which the date was set appears to have been incorrect\r\n2. a new Atlantis client appeared out of thin air and was not taken into account when choosing the date the first time\r\n\r\nWe can learn a couple of things from this:\r\n1. we should communicate more openly about what the intents of the parties are\r\n2. we need to share information regarding clients openly and the code should be open source and available to read instead of dropped at the community in the last moment\r\n\r\nLets openly state if there is work done that it touching the ETC network. Software estimation is hard as is, such information needs to be public in order for people to give a valid estimate.\r\n\r\nSo please, come up with **rational arguments**. Everything else will be discarded.\r\nWe should optimize for 2 things. Keep ETC decentralized and avoid a network split. If any of these two fails, ETC loses its core value.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/502405077/reactions",
+      "total_count": 8,
+      "+1": 3,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 5,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00083_502412123.json b/.gh-issues/00083_502412123.json
new file mode 100644
index 0000000..82565d2
--- /dev/null
+++ b/.gh-issues/00083_502412123.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/502412123",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/83#issuecomment-502412123",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/83",
+    "id": 502412123,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjQxMjEyMw==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-16T01:42:28Z",
+    "updated_at": "2019-06-16T01:43:22Z",
+    "author_association": "MEMBER",
+    "body": "In my case, I continue to support the motion that the block should be moved back to 8,750,000 because:\r\n\r\n• The previous agreement on block 8,500,000 was not considering that Classic Geth was going to be available for Atlantis.\r\n• Classic Geth has to be available because many stakeholders will not migrate to Multi-Geth or Parity.\r\n• Classic Geth was published very recently and core devs say that 3-4 more weeks are necessary for proper testing.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/502412123/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00083_502431049.json b/.gh-issues/00083_502431049.json
new file mode 100644
index 0000000..5ffe526
--- /dev/null
+++ b/.gh-issues/00083_502431049.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/502431049",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/83#issuecomment-502431049",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/83",
+    "id": 502431049,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjQzMTA0OQ==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-16T08:12:58Z",
+    "updated_at": "2019-06-16T18:09:39Z",
+    "author_association": "MEMBER",
+    "body": "The decision of on which block the hard fork should be done, should be based first on the results of the tests, if for us the security of the network is important (If they will come towards, that we can do it on block 8.75, then it is fine). At the second step, we should check, whether ALL the participants are ready for it. And only then the hard fork should be executed. The Classic Geth tests are included.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/502431049/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00083_502435249.json b/.gh-issues/00083_502435249.json
new file mode 100644
index 0000000..3477554
--- /dev/null
+++ b/.gh-issues/00083_502435249.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/502435249",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/83#issuecomment-502435249",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/83",
+    "id": 502435249,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjQzNTI0OQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-16T09:16:30Z",
+    "updated_at": "2019-06-16T09:16:30Z",
+    "author_association": "MEMBER",
+    "body": "Just for the record, this was the proposal from the last call that was _almost_ accepted:\r\n\r\n1. Testing on [Kensington](https://github.com/eth-classic/kensington) (block `100)`, [Kotti](https://github.com/goerli/testnet#meta-data-kotti-classic) (block `716_617`), Morden (block `4_729_274`) continues as agreed upon in the previous call.\r\n2. We commit to a testing deadline roughly around `July 28th, 2019` which we use to evaluate the status and maturity of Atlantis.\r\n3. If there are no major problems discovered in that testing period, we commit to activating Atlantis on mainnet with a target in September around block `8_750_000`.\r\n\r\nWe can use this as the starting point of the discussion (maybe).\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/502435249/reactions",
+      "total_count": 4,
+      "+1": 4,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00083_502648849.json b/.gh-issues/00083_502648849.json
new file mode 100644
index 0000000..db11df1
--- /dev/null
+++ b/.gh-issues/00083_502648849.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/502648849",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/83#issuecomment-502648849",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/83",
+    "id": 502648849,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjY0ODg0OQ==",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-17T11:44:52Z",
+    "updated_at": "2019-06-17T11:44:52Z",
+    "author_association": "MEMBER",
+    "body": "Is the a list of functional and nonfunctional testing protocol that the networks are looking to pass prior to go live, or is the only criteria that the nodes dont have noticable consensus failures when just syncing  on a test net",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/502648849/reactions",
+      "total_count": 2,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 2
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00083_503158600.json b/.gh-issues/00083_503158600.json
new file mode 100644
index 0000000..b783392
--- /dev/null
+++ b/.gh-issues/00083_503158600.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/503158600",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/83#issuecomment-503158600",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/83",
+    "id": 503158600,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzE1ODYwMA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-18T14:23:38Z",
+    "updated_at": "2019-06-19T10:42:53Z",
+    "author_association": "MEMBER",
+    "body": "Just to make sure the upgrade does not hit a weekend, here are some numbers for discussion:\r\n\r\n- \"Potential Atlantis upgrade target for block **8732000** would happen around **2019-09-10** 12:00:00 UTC based on current block number 8251958 at 14.96 seconds block time.\"\r\n- \"Potential Atlantis upgrade target for block **8743000** would happen around **2019-09-12** 12:00:00 UTC based on current block number 8251958 at 14.96 seconds block time.\"\r\n- \"Potential Atlantis upgrade target for block **8772000** would happen around **2019-09-17** 12:00:00 UTC based on current block number 8251958 at 14.96 seconds block time.\"\r\n\r\n(Trying to avoid a fork on 9-11 lol)\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/503158600/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00083_503685354.json b/.gh-issues/00083_503685354.json
new file mode 100644
index 0000000..10a4df9
--- /dev/null
+++ b/.gh-issues/00083_503685354.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/503685354",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/83#issuecomment-503685354",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/83",
+    "id": 503685354,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzY4NTM1NA==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-19T18:53:11Z",
+    "updated_at": "2019-06-20T03:25:10Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "I'm unfortunately going to miss the call tomorrow; I'll be :airplane: . \r\n\r\nAs an anticipated absentee, here's my two cents:\r\n\r\n- I'm OK with any target hardfork number that gets decided.\r\n- I would advocate continued work, with open and collaborative relationships, across client teams to build together criteria and strategies and delegated responsibilities for both test-network and x-client integration-testing strategies and goals. I've just opened this issue as a potential space for this: https://github.com/ethereumclassic/ECIPs/issues/84\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/503685354/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00083_503689145.json b/.gh-issues/00083_503689145.json
new file mode 100644
index 0000000..c6b483c
--- /dev/null
+++ b/.gh-issues/00083_503689145.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/503689145",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/83#issuecomment-503689145",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/83",
+    "id": 503689145,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzY4OTE0NQ==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-19T19:04:16Z",
+    "updated_at": "2019-06-19T20:46:10Z",
+    "author_association": "MEMBER",
+    "body": "Hey everyone, I'm currently not sure whether I will be able to join tomorrow's meeting. So just want to post some of my comments. First of all, congratulations everyone! From what I know ETCLabs finally turned back and agreed to push the hard fork date back to September. Thanks all community members who have defended the integrity and security of Ethereum Classic.\r\n\r\nTo re-hash issues why we definitely cannot hard fork in August:\r\n\r\n* There were 2 consensus bugs discovered in Classic Geth recently (https://github.com/eth-classic/go-ethereum/issues/55 https://github.com/eth-classic/go-ethereum/issues/67). Both of them are serious issues which, if undiscovered, will cause a consensus split. This shows that the Classic Geth codebase is not yet matured for production usage. As a result, we need to have at least an extra month or more for the extended testing period. Considering that we need an additional 6 weeks after testing period to inform miners/exchanges/nodes, this puts the earliest possible hard fork date back to September.\r\n* As much as we like Kensington, the testnet is not enough. In particular, one feature added this time is EIP-161, which operates on empty accounts. However, the transition period for Kensington is too early that there is never an empty account on chain. As a result, EIP-161 remains untested no matter what we do on Kensington, and we need another testnet to make sure everything works. This requires extra time.\r\n* We also need to plan for additional code reviews and also importantly, fuzzy testing. All of this take time.\r\n\r\nRegarding @soc1c's comments on predicting the hard fork date: the issue is that we cannot. ETC has only around 1/10 of ETH's hashrate, which means because we're sharing the same algorithm, total network hashrate can fluctuate a lot. This makes the actual time unpredictable. Especially during hard fork, miners may have incentive to switch chains to take advantage of the fork. This is something that has happened in the past. So picking block numbers based on prediction of whether it's on weekdays or weekends probably does not make much sense.\r\n\r\nRegarding the block number -- anything in September should be fine. A slight consideration is that we may have some members in the community who just do not want to hard fork before 8.75m, either due to politics, philosophy or practical planning issues. So it's best to pick the block number to be on or after 8.75m. That is, choose from `8750000`, `8772000`, etc.\r\n\r\nGood luck everyone tomorrow! And congratulations!\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/503689145/reactions",
+      "total_count": 6,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 3,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 3,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00083_504067370.json b/.gh-issues/00083_504067370.json
new file mode 100644
index 0000000..b4c468d
--- /dev/null
+++ b/.gh-issues/00083_504067370.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/504067370",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/83#issuecomment-504067370",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/83",
+    "id": 504067370,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDA2NzM3MA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-20T15:17:58Z",
+    "updated_at": "2019-06-20T15:17:58Z",
+    "author_association": "MEMBER",
+    "body": "ECIP-1054 was accepted with the mainnet upgrade target of `8_772_000`. :+1: \r\n\r\nGood work!",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/504067370/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 1,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00084.json b/.gh-issues/00084.json
new file mode 100644
index 0000000..b8de1ac
--- /dev/null
+++ b/.gh-issues/00084.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/84",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/84/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/84/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/84/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/84",
+    "id": 458172824,
+    "node_id": "MDU6SXNzdWU0NTgxNzI4MjQ=",
+    "number": 84,
+    "title": "discussion: x-client Atlantis (ECIP 1054) prep and testing protocols ",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 2,
+    "created_at": "2019-06-19T18:49:48Z",
+    "updated_at": "2019-06-19T21:59:00Z",
+    "closed_at": null,
+    "author_association": "CONTRIBUTOR",
+    "body": ":construction: :tropical_fish: I would like to see and help work toward describing plans and accountable standards for\r\n\r\n#### A. Test network testing protocol\r\n\r\nAs [cody speaks to](https://github.com/ethereumclassic/ECIPs/issues/83#issuecomment-502648849), testnet outcomes are only as meaningful as the rigors they are subjected to. We ought to be clear and collaborative about the design and implementation of these **\"live\" testnet protocols**. Who will participate in this? Who will take responsibility, and for which aspects? What are standards that we expect for these protocols? ... reproducability? ... regression-readiness? \r\n\r\n- Kensington\r\n- Kotti\r\n- Morden\r\n\r\n#### B. Cross client integration tests\r\n\r\nLike establishing a shared and meaningful idea of what \"not breaking\" means above, there are clear limitations to the implications of even successful testnet behavior (for example https://github.com/eth-classic/go-ethereum/issues/67 would not have been caught). \r\n\r\nThis points to the value of shared **cross-client test suites**, which can prove out edge cases and other important simulations that may not be possible or practical on a test network. [ethereum/tests](https://github.com/ethereum/tests) is an example of this, albeit in a very one-trick-pony kind of way. \r\n\r\n---\r\n\r\n> Since the teams \"owning\" client development are either independent and/or volunteer-based, and that participation in the network is entirely in the hands of the client operator in the first place, the standards that might be developed here could not be considered with any more earnest than suggested guidelines for client software and operator review, albeit developed with common aims and shared skin in the game.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/84/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00084_503685057.json b/.gh-issues/00084_503685057.json
new file mode 100644
index 0000000..5855d25
--- /dev/null
+++ b/.gh-issues/00084_503685057.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/503685057",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/84#issuecomment-503685057",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/84",
+    "id": 503685057,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzY4NTA1Nw==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-19T18:52:13Z",
+    "updated_at": "2019-06-19T18:52:13Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "__Rel B. Cross client integration tests__\r\n\r\nAt ETC Labs, we've been developing an \"extrapolated\" test suite based on ethereum/tests that extends relevance for some of these \"sub-suites\" thru the anticipated Atlantis configuration. So far -- albeit experimentally -- classic geth and multigeth have shown consistent behavior for custom Difficulty and GeneralStateTests and we're working on adoption for Parity as well. \r\n\r\nWork on this at multi-geth can be found here: https://github.com/etclabscore/multi-geth/tree/feat/parity-chainspec-tests-fill-atlantis-2, and an example Atlantis-filled difficulty test can be found here: https://gist.github.com/whilei/cf5700910b41207a37d9f7ca58d0fd3d \r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/503685057/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00084_503762401.json b/.gh-issues/00084_503762401.json
new file mode 100644
index 0000000..2ed742d
--- /dev/null
+++ b/.gh-issues/00084_503762401.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/503762401",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/84#issuecomment-503762401",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/84",
+    "id": 503762401,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzc2MjQwMQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-19T21:59:00Z",
+    "updated_at": "2019-06-19T21:59:00Z",
+    "author_association": "MEMBER",
+    "body": "Kotti Hardfork is tonight!\r\n\r\nhttps://stats.kotti.goerli.net/",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/503762401/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00091.json b/.gh-issues/00091.json
new file mode 100644
index 0000000..b3f69f4
--- /dev/null
+++ b/.gh-issues/00091.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/91",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/91/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/91/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/91/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/91",
+    "id": 461599470,
+    "node_id": "MDU6SXNzdWU0NjE1OTk0NzA=",
+    "number": 91,
+    "title": "testing webhook bot for discord",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2019-06-27T15:32:16Z",
+    "updated_at": "2019-06-27T15:33:48Z",
+    "closed_at": "2019-06-27T15:33:38Z",
+    "author_association": "MEMBER",
+    "body": "this should shouw up in the ecip room in discord",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/91/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00091_506396592.json b/.gh-issues/00091_506396592.json
new file mode 100644
index 0000000..e345fdc
--- /dev/null
+++ b/.gh-issues/00091_506396592.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506396592",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/91#issuecomment-506396592",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/91",
+    "id": 506396592,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjM5NjU5Mg==",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-27T15:33:48Z",
+    "updated_at": "2019-06-27T15:33:48Z",
+    "author_association": "MEMBER",
+    "body": "looks good to me",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506396592/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00098.json b/.gh-issues/00098.json
new file mode 100644
index 0000000..68ba1e9
--- /dev/null
+++ b/.gh-issues/00098.json
@@ -0,0 +1,118 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/98",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/98/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/98/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/98/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/98",
+    "id": 462136358,
+    "node_id": "MDU6SXNzdWU0NjIxMzYzNTg=",
+    "number": 98,
+    "title": "ECIP-1000 license needs verification",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "assignees": [
+      {
+        "login": "sorpaas",
+        "id": 6277322,
+        "node_id": "MDQ6VXNlcjYyNzczMjI=",
+        "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/sorpaas",
+        "html_url": "https://github.com/sorpaas",
+        "followers_url": "https://api.github.com/users/sorpaas/followers",
+        "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+        "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+        "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+        "repos_url": "https://api.github.com/users/sorpaas/repos",
+        "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+        "type": "User",
+        "site_admin": false
+      },
+      {
+        "login": "realcodywburns",
+        "id": 13103499,
+        "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+        "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/realcodywburns",
+        "html_url": "https://github.com/realcodywburns",
+        "followers_url": "https://api.github.com/users/realcodywburns/followers",
+        "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+        "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+        "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+        "repos_url": "https://api.github.com/users/realcodywburns/repos",
+        "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+        "type": "User",
+        "site_admin": false
+      }
+    ],
+    "milestone": null,
+    "comments": 2,
+    "created_at": "2019-06-28T17:28:39Z",
+    "updated_at": "2019-10-23T14:44:26Z",
+    "closed_at": "2019-10-23T14:44:26Z",
+    "author_association": "MEMBER",
+    "body": " BIP 001 the following text can be found:\r\n\r\n```\r\nThis document was derived heavily from Python's PEP-0001. In many places text was simply copied and modified. Although the PEP-0001 text was written by Barry Warsaw, Jeremy Hylton, and David Goodger, they are not responsible for its use in the Bitcoin Improvement Process, and should not be bothered with technical questions specific to Bitcoin or the BIP process. Please direct all comments to the BIP editors or the Bitcoin development mailing list.\r\n``` \r\nthe ECIP-1000 points to luke-jr as the copy right holder. If he is, we need to properly link to the license, if not it needs to be addressed with the proper license",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/98/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00098_506822967.json b/.gh-issues/00098_506822967.json
new file mode 100644
index 0000000..d17f629
--- /dev/null
+++ b/.gh-issues/00098_506822967.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506822967",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/98#issuecomment-506822967",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/98",
+    "id": 506822967,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjgyMjk2Nw==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-28T17:52:50Z",
+    "updated_at": "2019-06-28T17:52:50Z",
+    "author_association": "MEMBER",
+    "body": "I think the correct comparable BIP is BIP-0002:\r\n\r\nhttps://github.com/bitcoin/bips/blob/master/bip-0002.mediawiki\r\n\r\nThat was written for Bitcoin by @luke-jr, but it is based on something else. I think it was based on:\r\n\r\nhttps://tools.ietf.org/html/rfc7282",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506822967/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00098_542156547.json b/.gh-issues/00098_542156547.json
new file mode 100644
index 0000000..711b678
--- /dev/null
+++ b/.gh-issues/00098_542156547.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/542156547",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/98#issuecomment-542156547",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/98",
+    "id": 542156547,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjE1NjU0Nw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-15T10:56:55Z",
+    "updated_at": "2019-10-15T10:56:55Z",
+    "author_association": "MEMBER",
+    "body": "I don't see any issue here, @realcodywburns.\r\n\r\nAs per https://github.com/bitcoin/bips/blob/master/bip-0002.mediawiki, that is \r\n\r\nhttps://spdx.org/licenses/BSD-2-Clause.html\r\n\r\nWhich is a weaker permissive license than the Apache 2 which @sorpaas uses for ECIP-1000.\r\n\r\nWhat do you think we are missing here?   Perhaps just a link to https://github.com/bitcoin/bips/blob/master/bip-0002.mediawiki from ECIP-1000?\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/542156547/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00109.json b/.gh-issues/00109.json
new file mode 100644
index 0000000..09781c8
--- /dev/null
+++ b/.gh-issues/00109.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/109",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/109/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/109/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/109/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/109",
+    "id": 464813687,
+    "node_id": "MDU6SXNzdWU0NjQ4MTM2ODc=",
+    "number": 109,
+    "title": "Correct URL to ECIPs website on ./ethereumclassic/ECIPs",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 2,
+    "created_at": "2019-07-06T03:44:36Z",
+    "updated_at": "2019-10-23T16:16:52Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "I think the link and text to the ECIPs site on ./ethereumclassic/ECIPs should be:\r\n\r\n`The Ethereum Classic Improvement Proposal repository is at https://ecips.ethereumclassic.org/`\r\n\r\nCurrently it's:\r\n\r\n`https://ethereumclassic.org/`\r\n\r\n...which takes you the home, but that is not the ECIPs site.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/109/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00109_545476299.json b/.gh-issues/00109_545476299.json
new file mode 100644
index 0000000..02284ab
--- /dev/null
+++ b/.gh-issues/00109_545476299.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/545476299",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/109#issuecomment-545476299",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/109",
+    "id": 545476299,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTQ3NjI5OQ==",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-23T14:39:32Z",
+    "updated_at": "2019-10-23T14:39:32Z",
+    "author_association": "MEMBER",
+    "body": "is this still an issue",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/545476299/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00109_545522317.json b/.gh-issues/00109_545522317.json
new file mode 100644
index 0000000..7c3428b
--- /dev/null
+++ b/.gh-issues/00109_545522317.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/545522317",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/109#issuecomment-545522317",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/109",
+    "id": 545522317,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTUyMjMxNw==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-23T16:16:52Z",
+    "updated_at": "2019-10-23T16:16:52Z",
+    "author_association": "MEMBER",
+    "body": "I don't understand the issue",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/545522317/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00130.json b/.gh-issues/00130.json
new file mode 100644
index 0000000..334add9
--- /dev/null
+++ b/.gh-issues/00130.json
@@ -0,0 +1,77 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/130",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/130/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/130/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/130/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/130",
+    "id": 480568482,
+    "node_id": "MDU6SXNzdWU0ODA1Njg0ODI=",
+    "number": 130,
+    "title": "[ECIP-1054] Atlantis Hardfork Outreach Tracker",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785137,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTM3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/status:%20accepted",
+        "name": "status: accepted",
+        "color": "d876e3",
+        "default": false,
+        "description": "Ecip has been accepted and is awaiting Final status and activation"
+      },
+      {
+        "id": 1154785129,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20meta",
+        "name": "type: meta",
+        "color": "cfd3d7",
+        "default": false,
+        "description": "Accepted best practices"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 14,
+    "created_at": "2019-08-14T09:13:40Z",
+    "updated_at": "2019-10-06T19:31:53Z",
+    "closed_at": "2019-09-13T08:22:35Z",
+    "author_association": "MEMBER",
+    "body": "### TL;DR\r\nIf someone pointed you to this issue, you **probably have to upgrade your Ethereum Classic node software** in anticipation of the **upcoming Atlantis protocol upgrade** ([ECIP-1054](https://ecips.ethereumclassic.org/ECIPs/ecip-1054)).\r\n\r\nYou have to run **at least** one of the following client versions:\r\n- Classic-Geth, version **6.0.8-stable** or later: [etclabscore/go-ethereum/releases](https://github.com/etclabscore/go-ethereum/releases)\r\n- Multi-Geth, version **1.9.2-stable** or later: [multi-geth/multi-geth/releases](https://github.com/multi-geth/multi-geth/releases)\r\n- Parity Ethereum, version **2.5.6-stable** or later: [paritytech/parity-ethereum/releases](https://github.com/paritytech/parity-ethereum/releases)\r\n- _Mantis is no longer supporting Ethereum Classic!_\r\n\r\n**Projected Hardfork Date** based on 14.5 seconds block time:\r\n- 9:00 am UTC  |  **Friday, September 13, 2019**\r\n\r\nPlease share this on all channels. That's exactly 1 month from today creating this tracking ticket.\r\n\r\n### Reach out to Mining Pools\r\n- [x] https://etc.ethermine.org/\r\n- [x] https://etc.nanopool.org/\r\n- [x] https://ethereum-classic.miningpoolhub.com/\r\n- [x] https://2miners.com/etc-mining-pool\r\n- [x] https://etc.f2pool.com\r\n- [x] https://pool.btc.com/\r\n- [ ] https://etcpool.maxhash.org/\r\n- [ ] https://minergate.com/etc-mining-pool\r\n- [ ] https://etc.solopool.org/\r\n- [ ] https://etc.arsmine.com/\r\n- [ ] http://etc.hvpps.net/\r\n- [ ] https://anyhash.net/\r\n- [x] https://comining.io/\r\n- [x] https://etc.cominers.org/\r\n- [x] https://hashon.me/etc/home\r\n- [ ] http://tpool.io/pool/etc/stats\r\n- [ ] https://etc.matpool.io/\r\n- [ ] https://beepool.org/coindetail/etc\r\n\r\n### Update Websites and Social Media\r\n- [x] https://ethereumclassic.org/\r\n- [x] https://twitter.com/eth_classic?lang=en\r\n- [ ] https://ethereumclassic.github.io/\r\n- [ ] https://etccooperative.org/\r\n- [x] https://etclabscore.github.io/etclabscore/\r\n- [x] https://etclabs.org\r\n- [x] https://twitter.com/etclabscore\r\n- [x] https://twitter.com/etclabs\r\n- [ ] https://en.wikipedia.org/wiki/Ethereum_Classic\r\n\r\n### Update Block Explorers and Services\r\n- [x] https://blockscout.com/etc/mainnet\r\n- [x] https://gastracker.io/\r\n- [x] https://etcblockexplorer.com/home\r\n- [x] https://etherhub.io/home\r\n- [ ] https://0xeth.com/\r\n- [x] https://www.ethercluster.com/\r\n\r\n### Reach out to Exchanges\r\n- [ ] https://hk.coineal.com/trade_center.html?s=etc-btc#en_US\r\n- [ ] https://www.cointiger.com/en-us/#/trade_pro?coin=etc_btc\r\n- [x] https://trans.zb.com/etcusdt\r\n- [x] https://trade.coinegg.com/trade/etc_btc\r\n- [ ] https://www.bitker.com/#/bbTrades/etc_btc\r\n- [ ] https://www.catex.io/trading/ETC/TRX\r\n- [ ] https://www.idcm.io/trading/ETC_USDT\r\n- [x] https://www.okex.com/market?product=etc_usdt\r\n- [ ] https://www.digifinex.com/en-ww/trade/USDT/ETC\r\n- [ ] https://www.55.com/home/#/exchange?symbol=ETCETH&site=B\r\n- [ ] https://www.coinbene.com/exchange/en_US/ETCUSDT\r\n- [ ] https://www.bitforex.com/en/spot/etc_usdt\r\n- [ ] https://www.bibox.com/exchange?coinPair=ETC_USDT\r\n- [ ] https://hitbtc.com/ETC-to-BTC\r\n- [ ] https://www.digifinex.com/en-ww/trade/ETH/ETC\r\n- [ ] https://www.idax.pro/exchange?pairname=ETC_USDT\r\n- [ ] https://p2pb2b.io/trade/ETC_USD\r\n- [ ] https://www.hbg.com/etc_usdt/exchange/\r\n- [ ] https://coinsbit.io/trade/ETC_BTC\r\n- [x] https://www.binance.com/en/trade/ETC_USDT\r\n- [x] https://pro.coinbase.com/trade/ETC-USD\r\n- [x] https://www.bitfinex.com/\r\n- [x] https://international.bittrex.com/Market/Index?MarketName=BTC-ETC\r\n- [x] https://poloniex.com/exchange#btc_etc\r\n- [x] https://trade.kraken.com/markets/kraken/etc/eur",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/130/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00130_521612901.json b/.gh-issues/00130_521612901.json
new file mode 100644
index 0000000..d4d6b39
--- /dev/null
+++ b/.gh-issues/00130_521612901.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/521612901",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/130#issuecomment-521612901",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/130",
+    "id": 521612901,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTYxMjkwMQ==",
+    "user": {
+      "login": "saturn-network",
+      "id": 44673408,
+      "node_id": "MDQ6VXNlcjQ0NjczNDA4",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/44673408?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/saturn-network",
+      "html_url": "https://github.com/saturn-network",
+      "followers_url": "https://api.github.com/users/saturn-network/followers",
+      "following_url": "https://api.github.com/users/saturn-network/following{/other_user}",
+      "gists_url": "https://api.github.com/users/saturn-network/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/saturn-network/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/saturn-network/subscriptions",
+      "organizations_url": "https://api.github.com/users/saturn-network/orgs",
+      "repos_url": "https://api.github.com/users/saturn-network/repos",
+      "events_url": "https://api.github.com/users/saturn-network/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/saturn-network/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-08-15T11:41:52Z",
+    "updated_at": "2019-08-15T11:41:52Z",
+    "author_association": "NONE",
+    "body": "Saturn Wallet and our dApps are ready for #atlantis!",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/521612901/reactions",
+      "total_count": 13,
+      "+1": 5,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 4,
+      "rocket": 4,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00130_522249929.json b/.gh-issues/00130_522249929.json
new file mode 100644
index 0000000..9e1df99
--- /dev/null
+++ b/.gh-issues/00130_522249929.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/522249929",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/130#issuecomment-522249929",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/130",
+    "id": 522249929,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjI0OTkyOQ==",
+    "user": {
+      "login": "p3c-bot",
+      "id": 40745785,
+      "node_id": "MDQ6VXNlcjQwNzQ1Nzg1",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/40745785?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/p3c-bot",
+      "html_url": "https://github.com/p3c-bot",
+      "followers_url": "https://api.github.com/users/p3c-bot/followers",
+      "following_url": "https://api.github.com/users/p3c-bot/following{/other_user}",
+      "gists_url": "https://api.github.com/users/p3c-bot/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/p3c-bot/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/p3c-bot/subscriptions",
+      "organizations_url": "https://api.github.com/users/p3c-bot/orgs",
+      "repos_url": "https://api.github.com/users/p3c-bot/repos",
+      "events_url": "https://api.github.com/users/p3c-bot/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/p3c-bot/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-08-17T16:06:23Z",
+    "updated_at": "2019-08-17T16:09:51Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "[P3C.io](https://p3c.io) and [Dappdirect.net](https://dappdirect.net) are prepared for Atlantis and using Classic Geth 6.0.8! \r\n\r\nWe had some issue un-tarring the release (`tar: This does not look like a tar archive`) and used the following commands:\r\n```\r\n$ wget https://github.com/etclabscore/go-ethereum/releases/download/v6.0.8/geth-classic-v6.0.8-linux.tar.gz\r\n$ gunzip geth-classic-v6.0.8-linux.tar.gz\r\n$ tar -xzf geth-classic-v6.0.8-linux.tar\r\n$ cd geth-classic-v6.0.8-linux/ && ./geth\r\n```",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/522249929/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00130_522301713.json b/.gh-issues/00130_522301713.json
new file mode 100644
index 0000000..af3f876
--- /dev/null
+++ b/.gh-issues/00130_522301713.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/522301713",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/130#issuecomment-522301713",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/130",
+    "id": 522301713,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjMwMTcxMw==",
+    "user": {
+      "login": "igorbarinov",
+      "id": 424628,
+      "node_id": "MDQ6VXNlcjQyNDYyOA==",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/424628?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/igorbarinov",
+      "html_url": "https://github.com/igorbarinov",
+      "followers_url": "https://api.github.com/users/igorbarinov/followers",
+      "following_url": "https://api.github.com/users/igorbarinov/following{/other_user}",
+      "gists_url": "https://api.github.com/users/igorbarinov/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/igorbarinov/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/igorbarinov/subscriptions",
+      "organizations_url": "https://api.github.com/users/igorbarinov/orgs",
+      "repos_url": "https://api.github.com/users/igorbarinov/repos",
+      "events_url": "https://api.github.com/users/igorbarinov/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/igorbarinov/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-08-18T08:22:30Z",
+    "updated_at": "2019-08-18T08:22:30Z",
+    "author_association": "NONE",
+    "body": "Cool. BlockScout archive node is updated to 2.6.1.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/522301713/reactions",
+      "total_count": 3,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 1,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 1,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00130_523974194.json b/.gh-issues/00130_523974194.json
new file mode 100644
index 0000000..9f1a3d4
--- /dev/null
+++ b/.gh-issues/00130_523974194.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/523974194",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/130#issuecomment-523974194",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/130",
+    "id": 523974194,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzk3NDE5NA==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-08-22T16:15:38Z",
+    "updated_at": "2019-09-11T21:08:58Z",
+    "author_association": "MEMBER",
+    "body": "As of Sep 11, 2019 these are the stakeholders who have confirmed the upgrade that I am aware of:\r\n\r\nUpgraded:\r\n\r\n• Cointron\r\n• Circle/Poloniex\r\n• CoinEgg\r\n• Coinbase\r\n• Bitfinex\r\n• 2miners\r\n• NanoPool\r\n• BlockScout\r\n• ShapeShift\r\n• Saturn\r\n• P3C/DappDirect\r\n• Ethernode\r\n• Gastracker\r\n• Emerald Wallet\r\n• Bit-Z\r\n• BaikalMine\r\n• AtomicWAllet\r\n• Coinomi\r\n• Exodus\r\n• Guarda\r\n• Wattpool\r\n• MyCrypto\r\n• Ethercluster\r\n• JAXX\r\n• Binance\r\n• Etherhub\r\n• Bittrex\r\n• AdaMiners\r\n• Ledger\r\n• FairPool\r\n• Huobi Global\r\n• Korbit\r\n• Upbit\r\n• Coinone\r\n• ZB\r\n• Google Query\r\n• OkEx\r\n• Stex\r\n• BTC.com\r\n• SimplePool.Link\r\n• ProtonMine\r\n• Comining\r\n• F2Pool\r\n• Cominers\r\n• Cobo\r\n• Bitpie\r\n• MyEtherWallet\r\n• Hashon-Pool\r\n• MiningPoolHub\r\n\r\nWorking on it:\r\n\r\n• Kraken\r\n• EXMO",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/523974194/reactions",
+      "total_count": 7,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 2,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 3,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00130_524318819.json b/.gh-issues/00130_524318819.json
new file mode 100644
index 0000000..90ee024
--- /dev/null
+++ b/.gh-issues/00130_524318819.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/524318819",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/130#issuecomment-524318819",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/130",
+    "id": 524318819,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDMxODgxOQ==",
+    "user": {
+      "login": "Max-Casanova",
+      "id": 37521712,
+      "node_id": "MDQ6VXNlcjM3NTIxNzEy",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/37521712?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/Max-Casanova",
+      "html_url": "https://github.com/Max-Casanova",
+      "followers_url": "https://api.github.com/users/Max-Casanova/followers",
+      "following_url": "https://api.github.com/users/Max-Casanova/following{/other_user}",
+      "gists_url": "https://api.github.com/users/Max-Casanova/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/Max-Casanova/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/Max-Casanova/subscriptions",
+      "organizations_url": "https://api.github.com/users/Max-Casanova/orgs",
+      "repos_url": "https://api.github.com/users/Max-Casanova/repos",
+      "events_url": "https://api.github.com/users/Max-Casanova/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/Max-Casanova/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-08-23T13:38:46Z",
+    "updated_at": "2019-08-24T01:54:03Z",
+    "author_association": "NONE",
+    "body": "@soc1c \r\nhttps://baikalmine.com/en/pplns/etc/\r\nAre ready to a fork!",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/524318819/reactions",
+      "total_count": 2,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 1,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00130_527336109.json b/.gh-issues/00130_527336109.json
new file mode 100644
index 0000000..47fa74c
--- /dev/null
+++ b/.gh-issues/00130_527336109.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/527336109",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/130#issuecomment-527336109",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/130",
+    "id": 527336109,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzMzNjEwOQ==",
+    "user": {
+      "login": "adaminers",
+      "id": 49587584,
+      "node_id": "MDQ6VXNlcjQ5NTg3NTg0",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/49587584?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/adaminers",
+      "html_url": "https://github.com/adaminers",
+      "followers_url": "https://api.github.com/users/adaminers/followers",
+      "following_url": "https://api.github.com/users/adaminers/following{/other_user}",
+      "gists_url": "https://api.github.com/users/adaminers/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/adaminers/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/adaminers/subscriptions",
+      "organizations_url": "https://api.github.com/users/adaminers/orgs",
+      "repos_url": "https://api.github.com/users/adaminers/repos",
+      "events_url": "https://api.github.com/users/adaminers/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/adaminers/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-09-03T07:16:21Z",
+    "updated_at": "2019-09-03T07:16:21Z",
+    "author_association": "NONE",
+    "body": "https://pps-etc.adaminers.com\r\nhttps://solo-etc.adaminers.com \r\n\r\nWe are ready for the fork!",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/527336109/reactions",
+      "total_count": 2,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 1,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00130_529475692.json b/.gh-issues/00130_529475692.json
new file mode 100644
index 0000000..be6e95a
--- /dev/null
+++ b/.gh-issues/00130_529475692.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/529475692",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/130#issuecomment-529475692",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/130",
+    "id": 529475692,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTQ3NTY5Mg==",
+    "user": {
+      "login": "xiphon",
+      "id": 26060097,
+      "node_id": "MDQ6VXNlcjI2MDYwMDk3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/26060097?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/xiphon",
+      "html_url": "https://github.com/xiphon",
+      "followers_url": "https://api.github.com/users/xiphon/followers",
+      "following_url": "https://api.github.com/users/xiphon/following{/other_user}",
+      "gists_url": "https://api.github.com/users/xiphon/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/xiphon/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/xiphon/subscriptions",
+      "organizations_url": "https://api.github.com/users/xiphon/orgs",
+      "repos_url": "https://api.github.com/users/xiphon/repos",
+      "events_url": "https://api.github.com/users/xiphon/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/xiphon/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-09-09T13:31:23Z",
+    "updated_at": "2019-09-09T13:31:23Z",
+    "author_association": "NONE",
+    "body": "https://etc.fairpool.xyz is ready",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/529475692/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00130_530048547.json b/.gh-issues/00130_530048547.json
new file mode 100644
index 0000000..cd8e780
--- /dev/null
+++ b/.gh-issues/00130_530048547.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/530048547",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/130#issuecomment-530048547",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/130",
+    "id": 530048547,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDA0ODU0Nw==",
+    "user": {
+      "login": "bcmob",
+      "id": 14820341,
+      "node_id": "MDQ6VXNlcjE0ODIwMzQx",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/14820341?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bcmob",
+      "html_url": "https://github.com/bcmob",
+      "followers_url": "https://api.github.com/users/bcmob/followers",
+      "following_url": "https://api.github.com/users/bcmob/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bcmob/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bcmob/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bcmob/subscriptions",
+      "organizations_url": "https://api.github.com/users/bcmob/orgs",
+      "repos_url": "https://api.github.com/users/bcmob/repos",
+      "events_url": "https://api.github.com/users/bcmob/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bcmob/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-09-10T17:50:43Z",
+    "updated_at": "2019-09-10T17:50:43Z",
+    "author_association": "NONE",
+    "body": "POOL [https://simplepool.link/etc](https://simplepool.link/etc) is ready\r\nparity 2.5.7-stable and Classic-Geth  6.0.9",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/530048547/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00130_530090038.json b/.gh-issues/00130_530090038.json
new file mode 100644
index 0000000..4794c2c
--- /dev/null
+++ b/.gh-issues/00130_530090038.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/530090038",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/130#issuecomment-530090038",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/130",
+    "id": 530090038,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDA5MDAzOA==",
+    "user": {
+      "login": "mathias7799",
+      "id": 34777770,
+      "node_id": "MDQ6VXNlcjM0Nzc3Nzcw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/34777770?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/mathias7799",
+      "html_url": "https://github.com/mathias7799",
+      "followers_url": "https://api.github.com/users/mathias7799/followers",
+      "following_url": "https://api.github.com/users/mathias7799/following{/other_user}",
+      "gists_url": "https://api.github.com/users/mathias7799/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/mathias7799/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/mathias7799/subscriptions",
+      "organizations_url": "https://api.github.com/users/mathias7799/orgs",
+      "repos_url": "https://api.github.com/users/mathias7799/repos",
+      "events_url": "https://api.github.com/users/mathias7799/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/mathias7799/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-09-10T19:43:31Z",
+    "updated_at": "2019-09-10T19:43:31Z",
+    "author_association": "NONE",
+    "body": "https://etc.protonmine.com is ready for the fork :)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/530090038/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00130_530300631.json b/.gh-issues/00130_530300631.json
new file mode 100644
index 0000000..6446183
--- /dev/null
+++ b/.gh-issues/00130_530300631.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/530300631",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/130#issuecomment-530300631",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/130",
+    "id": 530300631,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDMwMDYzMQ==",
+    "user": {
+      "login": "Athethepainter",
+      "id": 42865291,
+      "node_id": "MDQ6VXNlcjQyODY1Mjkx",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/42865291?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/Athethepainter",
+      "html_url": "https://github.com/Athethepainter",
+      "followers_url": "https://api.github.com/users/Athethepainter/followers",
+      "following_url": "https://api.github.com/users/Athethepainter/following{/other_user}",
+      "gists_url": "https://api.github.com/users/Athethepainter/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/Athethepainter/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/Athethepainter/subscriptions",
+      "organizations_url": "https://api.github.com/users/Athethepainter/orgs",
+      "repos_url": "https://api.github.com/users/Athethepainter/repos",
+      "events_url": "https://api.github.com/users/Athethepainter/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/Athethepainter/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-09-11T09:29:19Z",
+    "updated_at": "2019-09-11T09:29:19Z",
+    "author_association": "MEMBER",
+    "body": "Hi everyone, \r\n\r\n[https://www.cruxpool.com/etc](url) is ready for the fork ! ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/530300631/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00130_530413922.json b/.gh-issues/00130_530413922.json
new file mode 100644
index 0000000..7ab8662
--- /dev/null
+++ b/.gh-issues/00130_530413922.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/530413922",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/130#issuecomment-530413922",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/130",
+    "id": 530413922,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDQxMzkyMg==",
+    "user": {
+      "login": "malefol7",
+      "id": 45095704,
+      "node_id": "MDQ6VXNlcjQ1MDk1NzA0",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/45095704?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/malefol7",
+      "html_url": "https://github.com/malefol7",
+      "followers_url": "https://api.github.com/users/malefol7/followers",
+      "following_url": "https://api.github.com/users/malefol7/following{/other_user}",
+      "gists_url": "https://api.github.com/users/malefol7/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/malefol7/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/malefol7/subscriptions",
+      "organizations_url": "https://api.github.com/users/malefol7/orgs",
+      "repos_url": "https://api.github.com/users/malefol7/repos",
+      "events_url": "https://api.github.com/users/malefol7/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/malefol7/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-09-11T14:44:43Z",
+    "updated_at": "2019-09-11T14:44:43Z",
+    "author_association": "NONE",
+    "body": "Hi everyone,\r\ncominers.org is ready, update performed successfully, parity 2.5.7 stable",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/530413922/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00130_530505642.json b/.gh-issues/00130_530505642.json
new file mode 100644
index 0000000..a69291f
--- /dev/null
+++ b/.gh-issues/00130_530505642.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/530505642",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/130#issuecomment-530505642",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/130",
+    "id": 530505642,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDUwNTY0Mg==",
+    "user": {
+      "login": "HashonPool",
+      "id": 55207753,
+      "node_id": "MDQ6VXNlcjU1MjA3NzUz",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/55207753?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/HashonPool",
+      "html_url": "https://github.com/HashonPool",
+      "followers_url": "https://api.github.com/users/HashonPool/followers",
+      "following_url": "https://api.github.com/users/HashonPool/following{/other_user}",
+      "gists_url": "https://api.github.com/users/HashonPool/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/HashonPool/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/HashonPool/subscriptions",
+      "organizations_url": "https://api.github.com/users/HashonPool/orgs",
+      "repos_url": "https://api.github.com/users/HashonPool/repos",
+      "events_url": "https://api.github.com/users/HashonPool/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/HashonPool/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-09-11T18:25:43Z",
+    "updated_at": "2019-09-11T18:25:43Z",
+    "author_association": "NONE",
+    "body": "@soc1c\r\nHashOn-Pool\r\nhttps://hashon.me\r\nAre prepared for Atlantis fork!",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/530505642/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00130_531147233.json b/.gh-issues/00130_531147233.json
new file mode 100644
index 0000000..683a6a1
--- /dev/null
+++ b/.gh-issues/00130_531147233.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/531147233",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/130#issuecomment-531147233",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/130",
+    "id": 531147233,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMTE0NzIzMw==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-09-13T08:22:35Z",
+    "updated_at": "2019-09-13T08:22:35Z",
+    "author_association": "MEMBER",
+    "body": "Done",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/531147233/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00130_538779821.json b/.gh-issues/00130_538779821.json
new file mode 100644
index 0000000..b4caed4
--- /dev/null
+++ b/.gh-issues/00130_538779821.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/538779821",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/130#issuecomment-538779821",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/130",
+    "id": 538779821,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODc3OTgyMQ==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-06T19:31:52Z",
+    "updated_at": "2019-10-06T19:31:52Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "This page is a great resource. What can we do to save it? we are going to need it for every hard fork\r\n\r\nI suggest committing it to the repo somehow so we all have it.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/538779821/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00131.json b/.gh-issues/00131.json
new file mode 100644
index 0000000..d3b5f7d
--- /dev/null
+++ b/.gh-issues/00131.json
@@ -0,0 +1,96 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/131",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/131/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/131/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/131/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/131",
+    "id": 485779724,
+    "node_id": "MDU6SXNzdWU0ODU3Nzk3MjQ=",
+    "number": 131,
+    "title": "ECIP-1056: Agharta EVM and Protocol Upgrades",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/1",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/milestone/1",
+      "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/1/labels",
+      "id": 4777611,
+      "node_id": "MDk6TWlsZXN0b25lNDc3NzYxMQ==",
+      "number": 1,
+      "title": "Agharta Hardfork   ",
+      "description": "",
+      "creator": {
+        "login": "realcodywburns",
+        "id": 13103499,
+        "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+        "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/realcodywburns",
+        "html_url": "https://github.com/realcodywburns",
+        "followers_url": "https://api.github.com/users/realcodywburns/followers",
+        "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+        "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+        "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+        "repos_url": "https://api.github.com/users/realcodywburns/repos",
+        "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+        "type": "User",
+        "site_admin": false
+      },
+      "open_issues": 2,
+      "closed_issues": 4,
+      "state": "open",
+      "created_at": "2019-10-23T14:38:36Z",
+      "updated_at": "2019-10-28T22:17:15Z",
+      "due_on": null,
+      "closed_at": null
+    },
+    "comments": 7,
+    "created_at": "2019-08-27T12:28:43Z",
+    "updated_at": "2019-11-07T21:52:32Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/131/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00131_529164498.json b/.gh-issues/00131_529164498.json
new file mode 100644
index 0000000..6d12233
--- /dev/null
+++ b/.gh-issues/00131_529164498.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/529164498",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/131#issuecomment-529164498",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/131",
+    "id": 529164498,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTE2NDQ5OA==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-09-08T02:52:40Z",
+    "updated_at": "2019-09-08T02:53:05Z",
+    "author_association": "MEMBER",
+    "body": "Hi core dev team,\r\n\r\nI was wondering if there are any technical chats between yourselves about it and if Agharta changes are good.\r\n\r\ne.g.:\r\n\r\nVia EIP-1702 new account version:\r\n\r\n- EIP 145 (Bitwise shifting instructions)\r\n- EIP 1014 (Skinny CREATE2 opcode)\r\n- EIP 1052 (EXTCODEHASH opcode)\r\n\r\nIs all generally ok with eip-1702, 145, 1014 and 1052? Or are there disagreements that will be sorted out after Atlantis?\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/529164498/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00131_529398677.json b/.gh-issues/00131_529398677.json
new file mode 100644
index 0000000..5329219
--- /dev/null
+++ b/.gh-issues/00131_529398677.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/529398677",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/131#issuecomment-529398677",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/131",
+    "id": 529398677,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTM5ODY3Nw==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-09-09T10:09:09Z",
+    "updated_at": "2019-09-09T10:09:09Z",
+    "author_association": "MEMBER",
+    "body": "yes, all four EIPs make a lot of sense. We should not get distracted now though and focus on Atlantis. Will organize calls after Atlantis",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/529398677/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00131_545929671.json b/.gh-issues/00131_545929671.json
new file mode 100644
index 0000000..62a1bb2
--- /dev/null
+++ b/.gh-issues/00131_545929671.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/545929671",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/131#issuecomment-545929671",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/131",
+    "id": 545929671,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTkyOTY3MQ==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-24T13:55:45Z",
+    "updated_at": "2019-10-24T13:55:45Z",
+    "author_association": "MEMBER",
+    "body": "I highly suggest we name the hardfork Agartha instead of Agharta.\r\n\r\nAgharta is a Miles Davis album: https://www.youtube.com/watch?v=crpJgZxqMcg\r\n\r\nAgartha is the Hollow Earth kingdom: https://en.wikipedia.org/wiki/Agartha",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/545929671/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00131_546063923.json b/.gh-issues/00131_546063923.json
new file mode 100644
index 0000000..20325f7
--- /dev/null
+++ b/.gh-issues/00131_546063923.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546063923",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/131#issuecomment-546063923",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/131",
+    "id": 546063923,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjA2MzkyMw==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-24T19:18:58Z",
+    "updated_at": "2019-10-24T19:18:58Z",
+    "author_association": "MEMBER",
+    "body": "Im not sure its been mentioned, but this would make anyone looking to develop a new EVM would need to implement all previous versions as well.\r\n\r\nThat being said, we must be prudent to ensure that changes are very well documented, and the implementation of each version can be replicated by following this documentation with relative ease.\r\n\r\nWe should hold off on including this ECIP until the following are very well defined:\r\n\r\nWhat will be the canonical model for describing the EVM\r\nIn what format will changes to this model be proposed\r\nwhere will the model which specifies each version be located?\r\nFurther, it would not be wise to make changes to the EVM until this is sorted out. So to be clear, I don't think we should put a date on this HF until the above is sorted out.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546063923/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00131_546200510.json b/.gh-issues/00131_546200510.json
new file mode 100644
index 0000000..486d545
--- /dev/null
+++ b/.gh-issues/00131_546200510.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546200510",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/131#issuecomment-546200510",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/131",
+    "id": 546200510,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjIwMDUxMA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-25T04:56:05Z",
+    "updated_at": "2019-10-25T04:56:05Z",
+    "author_association": "MEMBER",
+    "body": "what specifically are you referring to?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546200510/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00131_546456254.json b/.gh-issues/00131_546456254.json
new file mode 100644
index 0000000..d5327cc
--- /dev/null
+++ b/.gh-issues/00131_546456254.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546456254",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/131#issuecomment-546456254",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/131",
+    "id": 546456254,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjQ1NjI1NA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-25T18:10:41Z",
+    "updated_at": "2019-10-25T18:10:41Z",
+    "author_association": "MEMBER",
+    "body": "@BelfordZ When I asked more about EVM versioning on ETH All Core Devs, it was clear that there were two different \"levels\" of versioning which we need to model:\r\n\r\n1. Straight version numbers, which 1702 can handle.\r\n2. Actual deep semantic versioning, which likely needs KEVM-level analysis.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546456254/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00131_551282334.json b/.gh-issues/00131_551282334.json
new file mode 100644
index 0000000..19a468c
--- /dev/null
+++ b/.gh-issues/00131_551282334.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551282334",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/131#issuecomment-551282334",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/131",
+    "id": 551282334,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTI4MjMzNA==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T21:51:41Z",
+    "updated_at": "2019-11-07T21:52:32Z",
+    "author_association": "MEMBER",
+    "body": "@soc1c I was referring to the implicit use of EIP-1702, [which has since been removed](https://github.com/ethereumclassic/ECIPs/commit/97a95433852528e46864594440e11ba6704533ac#diff-54ed978770a16e10d07bfde59683e172). Please dismiss above comment.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551282334/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00133.json b/.gh-issues/00133.json
new file mode 100644
index 0000000..4658f79
--- /dev/null
+++ b/.gh-issues/00133.json
@@ -0,0 +1,68 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/133",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/133/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/133/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/133/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/133",
+    "id": 489623771,
+    "node_id": "MDU6SXNzdWU0ODk2MjM3NzE=",
+    "number": 133,
+    "title": "Hands-On Call: Atlantis Hardfork",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785129,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20meta",
+        "name": "type: meta",
+        "color": "cfd3d7",
+        "default": false,
+        "description": "Accepted best practices"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 7,
+    "created_at": "2019-09-05T09:04:41Z",
+    "updated_at": "2019-09-13T08:22:52Z",
+    "closed_at": "2019-09-13T08:22:52Z",
+    "author_association": "MEMBER",
+    "body": "ref https://github.com/etclabscore/ECIPs/issues/29\r\n\r\n### ETC Core Devs Call - Atlantis Hardfork Hands-On\r\n\r\nWhen: **Thursday, September 12, 2019, 2:00 pm UTC, during the expected hardfork**, 120 minutes max.\r\n\r\nlatest prediction: `2:50:07 pm UTC  |  Thursday, September 12, 2019`\r\n\r\nWhere: **Ethereum Classic Discord** `#ecips` channel. Will use/create a voice channel _ad hoc._ Ask for an invite here if you are not on that discord.\r\n\r\nThis will be an _informal_ call for core developers and everyone else interested to monitor the hardfork and discuss progress, eventually, act if necessary. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/133/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00133_528286602.json b/.gh-issues/00133_528286602.json
new file mode 100644
index 0000000..4bbb75c
--- /dev/null
+++ b/.gh-issues/00133_528286602.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/528286602",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/133#issuecomment-528286602",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/133",
+    "id": 528286602,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODI4NjYwMg==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-09-05T09:43:19Z",
+    "updated_at": "2019-09-12T06:09:24Z",
+    "author_association": "MEMBER",
+    "body": "Fork Monitoring:\r\n- http://atlantis.soc1.cz/\r\n\r\nBlock explorer: \r\n- https://blockscout.com/etc/mainnet\r\n- https://gastracker.io/\r\n\r\nNode upgrade status:\r\n- https://gastracker.io/stats/nodes\r\n- #130 \r\n\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/528286602/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00133_528287832.json b/.gh-issues/00133_528287832.json
new file mode 100644
index 0000000..8f0be5b
--- /dev/null
+++ b/.gh-issues/00133_528287832.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/528287832",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/133#issuecomment-528287832",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/133",
+    "id": 528287832,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODI4NzgzMg==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-09-05T09:46:46Z",
+    "updated_at": "2019-09-05T09:46:46Z",
+    "author_association": "MEMBER",
+    "body": "Latest prediction: `11:19:14 pm UTC | Thursday, September 12, 2019`",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/528287832/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00133_528294862.json b/.gh-issues/00133_528294862.json
new file mode 100644
index 0000000..fe5c5ef
--- /dev/null
+++ b/.gh-issues/00133_528294862.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/528294862",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/133#issuecomment-528294862",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/133",
+    "id": 528294862,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODI5NDg2Mg==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-09-05T10:06:17Z",
+    "updated_at": "2019-09-05T10:06:17Z",
+    "author_association": "MEMBER",
+    "body": "Upgrade rate:\r\n\r\n![](https://cdn.discordapp.com/attachments/593821590366715905/619109902987558922/unknown.png)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/528294862/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00133_528417996.json b/.gh-issues/00133_528417996.json
new file mode 100644
index 0000000..110cdba
--- /dev/null
+++ b/.gh-issues/00133_528417996.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/528417996",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/133#issuecomment-528417996",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/133",
+    "id": 528417996,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODQxNzk5Ng==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-09-05T15:12:50Z",
+    "updated_at": "2019-09-05T15:12:50Z",
+    "author_association": "MEMBER",
+    "body": "If the latest prediction is `11:19:14 pm UTC | Thursday, September 12, 2019`\r\n\r\nDoes that mean the call is likely on the 12th, or is it still on the 13th as written above?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/528417996/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00133_529147513.json b/.gh-issues/00133_529147513.json
new file mode 100644
index 0000000..f205c94
--- /dev/null
+++ b/.gh-issues/00133_529147513.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/529147513",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/133#issuecomment-529147513",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/133",
+    "id": 529147513,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTE0NzUxMw==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-09-07T21:17:02Z",
+    "updated_at": "2019-09-07T21:17:02Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "if we are trying to meet during block `8_772_000` that's Thursday but hard to pinpoint. Still I'm calculating anywhere from 13:00 - 16:00 UTC",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/529147513/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00133_529399474.json b/.gh-issues/00133_529399474.json
new file mode 100644
index 0000000..af0179f
--- /dev/null
+++ b/.gh-issues/00133_529399474.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/529399474",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/133#issuecomment-529399474",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/133",
+    "id": 529399474,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTM5OTQ3NA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-09-09T10:11:11Z",
+    "updated_at": "2019-09-09T10:11:11Z",
+    "author_association": "MEMBER",
+    "body": "We are now close enough to estimate it around noon UTC on Thursday\r\n\r\n```\r\n11:54:14 am UTC  |  Thursday, September 12, 2019\r\n```",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/529399474/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00133_530680302.json b/.gh-issues/00133_530680302.json
new file mode 100644
index 0000000..789ac74
--- /dev/null
+++ b/.gh-issues/00133_530680302.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/530680302",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/133#issuecomment-530680302",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/133",
+    "id": 530680302,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDY4MDMwMg==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-09-12T06:09:51Z",
+    "updated_at": "2019-09-12T06:09:51Z",
+    "author_association": "MEMBER",
+    "body": "**Call will start at 2pm UTC today!**",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/530680302/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00135.json b/.gh-issues/00135.json
new file mode 100644
index 0000000..075e488
--- /dev/null
+++ b/.gh-issues/00135.json
@@ -0,0 +1,96 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/135",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/135/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/135/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/135/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/135",
+    "id": 493204903,
+    "node_id": "MDU6SXNzdWU0OTMyMDQ5MDM=",
+    "number": 135,
+    "title": "Core Devs Call: ECIP-1056 Agharta Upgrade",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/1",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/milestone/1",
+      "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/1/labels",
+      "id": 4777611,
+      "node_id": "MDk6TWlsZXN0b25lNDc3NzYxMQ==",
+      "number": 1,
+      "title": "Agharta Hardfork   ",
+      "description": "",
+      "creator": {
+        "login": "realcodywburns",
+        "id": 13103499,
+        "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+        "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/realcodywburns",
+        "html_url": "https://github.com/realcodywburns",
+        "followers_url": "https://api.github.com/users/realcodywburns/followers",
+        "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+        "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+        "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+        "repos_url": "https://api.github.com/users/realcodywburns/repos",
+        "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+        "type": "User",
+        "site_admin": false
+      },
+      "open_issues": 2,
+      "closed_issues": 4,
+      "state": "open",
+      "created_at": "2019-10-23T14:38:36Z",
+      "updated_at": "2019-10-28T22:17:15Z",
+      "due_on": null,
+      "closed_at": null
+    },
+    "comments": 16,
+    "created_at": "2019-09-13T08:41:44Z",
+    "updated_at": "2019-10-28T22:16:51Z",
+    "closed_at": "2019-10-28T22:16:51Z",
+    "author_association": "MEMBER",
+    "body": "Ref #131 [ECIP-1056](https://github.com/ethereumclassic/ECIPs/blob/master/_specs/ecip-1056.md)\r\n\r\n### ETC Core Devs Call - Agharta Finalization\r\n\r\nWhen: **Thursday, October 24, 2019, 1pm UTC**, 60 minutes max.\r\n\r\nWhere: **Ethereum Classic Discord** https://discord.gg/dwxb6nf `#ecips` channel. Will use/create a voice channel _ad hoc._\r\n\r\n### Agenda\r\n\r\n- Quick client teams check-in\r\n  - Geth Classic / ChainSafe, ETC Labs Core\r\n  - Multi-Geth / Multi-Geth, ETCLabs Core \r\n  - Parity Ethereum / Parity Tech\r\n  - Mantis / IOHK\r\n  - Hyperledger Besu / ChainSafe, PegaSys\r\n- Agharta (ECIP-1056) is in _\"draft\"_ state\r\n  - ECIP-1056 needs to be either **accepted** or _updated_ (or _rejected_)\r\n    - discuss [EIP 145](https://eips.ethereum.org/EIPS/eip-145) (Bitwise shifting instructions)\r\n    - discuss [EIP 1014](https://eips.ethereum.org/EIPS/eip-1014) (Skinny `CREATE2` opcode)\r\n    - discuss [EIP 1052](https://eips.ethereum.org/EIPS/eip-1052) (`EXTCODEHASH` opcode)\r\n    - discuss account versioning ref #86 (EIP-1702)\r\n  - discuss a timeline for the protocol upgrade\r\n    - Morden Classic and Kotti Classic testnet (January?)\r\n    - Ethereum Classic mainnet (March?)\r\n- anything else related to Agharta\r\n\r\n### Bonus\r\n- Sha3 / ECIP-1049\r\n- DAG Size / ECIP-1043\r\n\r\nPlease comment to add items to the agenda",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/135/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00135_533198102.json b/.gh-issues/00135_533198102.json
new file mode 100644
index 0000000..5bc5188
--- /dev/null
+++ b/.gh-issues/00135_533198102.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/533198102",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/135#issuecomment-533198102",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/135",
+    "id": 533198102,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzE5ODEwMg==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-09-19T16:00:14Z",
+    "updated_at": "2019-09-19T16:00:14Z",
+    "author_association": "MEMBER",
+    "body": "After checking from the ECIP sponsor @realcodywburns and some others in the ecosystem, I am proposing to add to the agenda a discussion about ECIP-1043: http://ecips.ethereumclassic.org/ECIPs/ecip-1043\r\n\r\nI cannot comment on its technical merit or risks (leave that to devs) but the rationale \"the DAG has failed at its task and now only serves as a deterrent to broader investment in application specific hardware by competent distributors\" if true, is logical and would make mining more open and competitive in ETC among other benefits.\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/533198102/reactions",
+      "total_count": 3,
+      "+1": 3,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00135_544389955.json b/.gh-issues/00135_544389955.json
new file mode 100644
index 0000000..7052b6b
--- /dev/null
+++ b/.gh-issues/00135_544389955.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544389955",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/135#issuecomment-544389955",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/135",
+    "id": 544389955,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDM4OTk1NQ==",
+    "user": {
+      "login": "nishantsharma87",
+      "id": 22880897,
+      "node_id": "MDQ6VXNlcjIyODgwODk3",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/22880897?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/nishantsharma87",
+      "html_url": "https://github.com/nishantsharma87",
+      "followers_url": "https://api.github.com/users/nishantsharma87/followers",
+      "following_url": "https://api.github.com/users/nishantsharma87/following{/other_user}",
+      "gists_url": "https://api.github.com/users/nishantsharma87/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/nishantsharma87/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/nishantsharma87/subscriptions",
+      "organizations_url": "https://api.github.com/users/nishantsharma87/orgs",
+      "repos_url": "https://api.github.com/users/nishantsharma87/repos",
+      "events_url": "https://api.github.com/users/nishantsharma87/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/nishantsharma87/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-21T07:41:21Z",
+    "updated_at": "2019-10-21T07:41:21Z",
+    "author_association": "NONE",
+    "body": "+1 to @TokenHash's  post for adding the discussion about ECIP-1043 to the agenda. IMO although this solution may seem like only kicking the can farther down the road, this can resolve the anti-competitive bug that the DAG is for ETC mining until the time more permanent solutions, some of which are under discussion by the community (such as SHA3), are implemented.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544389955/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00135_544434604.json b/.gh-issues/00135_544434604.json
new file mode 100644
index 0000000..45a85a0
--- /dev/null
+++ b/.gh-issues/00135_544434604.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544434604",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/135#issuecomment-544434604",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/135",
+    "id": 544434604,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDQzNDYwNA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-21T09:38:23Z",
+    "updated_at": "2019-10-21T09:38:23Z",
+    "author_association": "MEMBER",
+    "body": "@realcodywburns Please can you replace:\r\n\r\nPantheon?\r\nBesu?\r\n\r\nWith ...\r\n\r\nHyperledger Besu / ChainSafe.\r\n\r\nI assume that @GregTheGreek will be at this meeting and ready and are to talk to both Classic Geth (plan = death) and HL Besu (plan=support).  If not, then Yaz can speak for Besu.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544434604/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 1
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00135_544435714.json b/.gh-issues/00135_544435714.json
new file mode 100644
index 0000000..dddbc2c
--- /dev/null
+++ b/.gh-issues/00135_544435714.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544435714",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/135#issuecomment-544435714",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/135",
+    "id": 544435714,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDQzNTcxNA==",
+    "user": {
+      "login": "GregTheGreek",
+      "id": 16929357,
+      "node_id": "MDQ6VXNlcjE2OTI5MzU3",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/16929357?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/GregTheGreek",
+      "html_url": "https://github.com/GregTheGreek",
+      "followers_url": "https://api.github.com/users/GregTheGreek/followers",
+      "following_url": "https://api.github.com/users/GregTheGreek/following{/other_user}",
+      "gists_url": "https://api.github.com/users/GregTheGreek/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/GregTheGreek/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/GregTheGreek/subscriptions",
+      "organizations_url": "https://api.github.com/users/GregTheGreek/orgs",
+      "repos_url": "https://api.github.com/users/GregTheGreek/repos",
+      "events_url": "https://api.github.com/users/GregTheGreek/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/GregTheGreek/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-21T09:41:11Z",
+    "updated_at": "2019-10-21T09:41:11Z",
+    "author_association": "NONE",
+    "body": "Yep will be attending the meeting, speaking on behalf of Gethc and Besu.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544435714/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00135_544437320.json b/.gh-issues/00135_544437320.json
new file mode 100644
index 0000000..8666e4c
--- /dev/null
+++ b/.gh-issues/00135_544437320.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544437320",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/135#issuecomment-544437320",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/135",
+    "id": 544437320,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDQzNzMyMA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-21T09:45:31Z",
+    "updated_at": "2019-10-21T09:45:31Z",
+    "author_association": "MEMBER",
+    "body": "I will be on an airplane and unable to attend, but I plan to have submitted an ECIP for an alternative plan to Agharta called \"Phoenix\" where we have two parallel release lines for each client - one with Constantinople+ETC changes and one with Constantinople+Instanbul+ETC changes.   We would have temp POW + POA networks for each, so 4 testnets in all.\r\n\r\nThis lets us get to candidate client builds almost immediately, so we attempt to fast follow Instanbul.   We make no decision on whether to do single phase or two phase updates to catch up with ETH.\r\n\r\nAnd all of that can be done in parallel with ECIPS, which will be the critical path.\r\n\r\nPlease can somebody else be the \"champion\" of this alternative approach in the meeting?  I have explaining it to Yaz, Anthony, Cody, Afri and Terry, at least, I believe, and think it superior.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544437320/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 1,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00135_544438577.json b/.gh-issues/00135_544438577.json
new file mode 100644
index 0000000..2c157a1
--- /dev/null
+++ b/.gh-issues/00135_544438577.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544438577",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/135#issuecomment-544438577",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/135",
+    "id": 544438577,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDQzODU3Nw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-21T09:48:52Z",
+    "updated_at": "2019-10-21T09:49:24Z",
+    "author_association": "MEMBER",
+    "body": "Also, whether or not we follow this plan, please let's change the name from Agharta.  I can never spell it correctly.  We need a simpler and more memorable name.\r\n\r\nI am advocating for \"Phoenix\" for obvious reasons.  This will be the HF (whether in a single HF or two-phase) which sees ETC reborn, to advance PAST the ETH protocol.  I cannot think of anything more appropriate to name the HF.\r\n\r\nAnd very simple to remember.  Great for marketing of this HF too.\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544438577/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00135_544440405.json b/.gh-issues/00135_544440405.json
new file mode 100644
index 0000000..6baf3c5
--- /dev/null
+++ b/.gh-issues/00135_544440405.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544440405",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/135#issuecomment-544440405",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/135",
+    "id": 544440405,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDQ0MDQwNQ==",
+    "user": {
+      "login": "GregTheGreek",
+      "id": 16929357,
+      "node_id": "MDQ6VXNlcjE2OTI5MzU3",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/16929357?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/GregTheGreek",
+      "html_url": "https://github.com/GregTheGreek",
+      "followers_url": "https://api.github.com/users/GregTheGreek/followers",
+      "following_url": "https://api.github.com/users/GregTheGreek/following{/other_user}",
+      "gists_url": "https://api.github.com/users/GregTheGreek/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/GregTheGreek/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/GregTheGreek/subscriptions",
+      "organizations_url": "https://api.github.com/users/GregTheGreek/orgs",
+      "repos_url": "https://api.github.com/users/GregTheGreek/repos",
+      "events_url": "https://api.github.com/users/GregTheGreek/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/GregTheGreek/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-21T09:53:50Z",
+    "updated_at": "2019-10-21T09:53:50Z",
+    "author_association": "NONE",
+    "body": "Can you try and get that in well before the call so everyone has time to read it and understand it. Will make discussion flow much smoother during the call.\r\n\r\n> This will be the HF (whether in a single HF or two-phase) which sees ETC reborn, to advance PAST the ETH protocol.\r\n\r\nWhat are we moving past? We're implementing the exact same changes to the best of my knowledge?\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544440405/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00135_544455151.json b/.gh-issues/00135_544455151.json
new file mode 100644
index 0000000..097cff9
--- /dev/null
+++ b/.gh-issues/00135_544455151.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544455151",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/135#issuecomment-544455151",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/135",
+    "id": 544455151,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDQ1NTE1MQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-21T10:34:37Z",
+    "updated_at": "2019-10-21T10:34:37Z",
+    "author_association": "MEMBER",
+    "body": "We should figure out the clients first before advancing past the Foundation Ethereum protocol.\r\n\r\nI believe, having a Phoenix hardfork will just slow us down. Agharta is basically ready to be tested, why not just do it?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544455151/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00135_544614307.json b/.gh-issues/00135_544614307.json
new file mode 100644
index 0000000..8e5da15
--- /dev/null
+++ b/.gh-issues/00135_544614307.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544614307",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/135#issuecomment-544614307",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/135",
+    "id": 544614307,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDYxNDMwNw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-21T17:11:58Z",
+    "updated_at": "2019-10-21T17:11:58Z",
+    "author_association": "MEMBER",
+    "body": "@soc1c \"Agharta is basically ready to be tested, why not just do it?\"\r\nSure - I guess we can.\r\n\r\n@GregTheGreek We will likely also be doing EIP-1702 and EIP-615, and maybe FlyClient, maybe some Swarm bits which may or may not need including in the HF(s).",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544614307/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00135_544614559.json b/.gh-issues/00135_544614559.json
new file mode 100644
index 0000000..7c1ea3a
--- /dev/null
+++ b/.gh-issues/00135_544614559.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544614559",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/135#issuecomment-544614559",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/135",
+    "id": 544614559,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDYxNDU1OQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-21T17:12:37Z",
+    "updated_at": "2019-10-21T17:12:37Z",
+    "author_association": "MEMBER",
+    "body": "@soc1c If nothing else, please goodness let's change the name.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544614559/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00135_544618759.json b/.gh-issues/00135_544618759.json
new file mode 100644
index 0000000..c07eb50
--- /dev/null
+++ b/.gh-issues/00135_544618759.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544618759",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/135#issuecomment-544618759",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/135",
+    "id": 544618759,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDYxODc1OQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-21T17:22:40Z",
+    "updated_at": "2019-10-21T17:23:19Z",
+    "author_association": "MEMBER",
+    "body": "@soc1c \"Agharta is basically ready to be tested, why not just do it?\"\r\n\r\nThe Phoenix plan would see us having two parallel release plans, one of which would be exactly the same as the current Agharta plan, and one of which would include Instanbul as well.\r\n\r\nThe worry with the two-phase approach is that it is going to take us several months longer, but without actually giving us any more safety or certainty.   Because the critical path here is going to be human consensus - not the technology.\r\n\r\nIf we don't have ETC mainnet with Agharta until March, and then have another HF for the Istanbul changes STARTING IN MARCH then we will likely will not complete that for another 6 months, right?   So maybe September 2020?\r\n\r\nBut the reality is that we could make Constantinople + Instanbul supporting ETC clients for for Parity and MultiGeth today as well.   Yes, it is a slightly moving target and would need to be kept refreshed as ETH keeps moving, but we could do it.\r\n\r\nGetting both streams of technical work going now would mean we have long-running testnets for each (POW and POA for each, for 4 testnets in today), and get great certainty - while we work on the human consensus.\r\n\r\nI think that we are still likely to ship as two HFs, but I want to start on the second HF now - not wait for months before even starting.\r\n\r\nI think we can hit the first HF way before March, and I think we can hit the second HF way before September.\r\n\r\nFor Parity and MultiGeth, we are mainly just enabling codepaths which already exist.   We don't have the challenges of ETH in having to invent the protocol changes and implement them all intermixed with the human consensus.\r\n\r\nBarring for EIP-1702 and EIP-615, which I guess would likely hit the second HF.\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544618759/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00135_544618924.json b/.gh-issues/00135_544618924.json
new file mode 100644
index 0000000..80aeefe
--- /dev/null
+++ b/.gh-issues/00135_544618924.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544618924",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/135#issuecomment-544618924",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/135",
+    "id": 544618924,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDYxODkyNA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-21T17:23:03Z",
+    "updated_at": "2019-10-21T17:23:03Z",
+    "author_association": "MEMBER",
+    "body": "If my plane has Wifi then I will be there in the meeting tomorrow too.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544618924/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00135_544958895.json b/.gh-issues/00135_544958895.json
new file mode 100644
index 0000000..8579244
--- /dev/null
+++ b/.gh-issues/00135_544958895.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544958895",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/135#issuecomment-544958895",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/135",
+    "id": 544958895,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDk1ODg5NQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-22T13:21:47Z",
+    "updated_at": "2019-10-22T13:21:58Z",
+    "author_association": "MEMBER",
+    "body": "Potential Agharta timeline\r\n\r\n- Morden Testnet (_deprecated_), Dec 11, 2019, 12pm UTC, block `5_348_435` (Gethc, Parity)\r\n- Mordor Testnet, Jan 15, 2020, 12pm UTC, block `617_716` (Gethc, Parity, Mgeth)\r\n- Kotti Testnet, Feb 05, 2020, 12pm UTC, block `2_028_202` (Parity, Mgeth)\r\n- Classic Mainnet, Apr 15, 2020, 12pm UTC, _no block number required yet_",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544958895/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00135_545929697.json b/.gh-issues/00135_545929697.json
new file mode 100644
index 0000000..950cc50
--- /dev/null
+++ b/.gh-issues/00135_545929697.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/545929697",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/135#issuecomment-545929697",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/135",
+    "id": 545929697,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTkyOTY5Nw==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-24T13:55:48Z",
+    "updated_at": "2019-10-24T13:55:48Z",
+    "author_association": "MEMBER",
+    "body": "Thanks everyone for attending. Notes below:\r\n\r\n# ETC Core Devs Call - Agharta Finalization\r\n\r\nDate Thursday, October 24, 2019, 1:00pm-1:52 UTC\r\n\r\nAttendees:\r\n- bakon\r\n- bobsummerwill\r\n- BTCLovera\r\n- DonaldMcIntyre\r\n- DontPanicBurns\r\n- GregTheGreek\r\n- Kimi Sian-Yu Chen\r\n- OmniEdge\r\n- OrYn\r\n- soc1c\r\n- sorpaas\r\n- stev\r\n- Tj\r\n- tzdybal\r\n- wolf_li\r\n- yaz\r\n- Yebisu\r\n\r\nCore devs:\r\n- Attendees include Classic Geth / ChainSafe\r\n- Attendees include Multi Geth / ETCLabs\r\n- Attendees include Parity Ethereum\r\n\r\nECIP-1056 discussions:\r\n- No objections to EIP-145\r\n- No objections to EIP-1014\r\n- No objections to EIP-1052\r\n- Objectsions to EIP-1702\r\n  - need our own Solidity compiler\r\n  - need our own tooling\r\n- Conclusion: Let's prioritize ETH changes first\r\n- Let's keep EIP-1702 in ECIP-1065\r\n- Question: Why not include Istanbul in Agharta?\r\n  - Bob proposes Phoenix 1 and 2\r\n  - Breaking changes in Istanbul\r\n  - Taking too long to implement\r\n  - Classic Geth does not implement it yet\r\n  - Tooling might be screwed\r\n- Chain-parity with ETH main-chain should be the goal\r\n- No one opposes Constantinople EIPs\r\n- ECIP-1702 will be removed from ECIP-1056 in favor of ECIP-1065\r\n\r\n- Moving on with timing\r\n  - Afri proposes 6 months timeline\r\n    - Question: why so slow\r\n    - Answer: because ECIP-1702 but that is removed now\r\n    - Afri's proposal rejected\r\n  - New timeline proposed\r\n    - Morden Testnet Nov/13th, 2019\r\n    - Mordor Testnet Nov 20th, 2019\r\n  - Kotti Testnet Dec/11th, 2019\r\n  - **Classic Mainnet Jan/15th, 2020**\r\n- No objections\r\n\r\n- Conclusion: Move Agharta to **last call** with decisions made above\r\n  - with EIP 145, 1014, 1052, without 1702\r\n  - with \"January-15\" timeline\r\n\r\n- Side note: ECIP-1050 will also move to _last call_ after this discussion",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/545929697/reactions",
+      "total_count": 3,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 1,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00135_545942498.json b/.gh-issues/00135_545942498.json
new file mode 100644
index 0000000..3168c11
--- /dev/null
+++ b/.gh-issues/00135_545942498.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/545942498",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/135#issuecomment-545942498",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/135",
+    "id": 545942498,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTk0MjQ5OA==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-24T14:23:38Z",
+    "updated_at": "2019-10-24T14:23:38Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "looks good guys. Sorry I could not attend, but I'm very happy with the above results",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/545942498/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00135_545973588.json b/.gh-issues/00135_545973588.json
new file mode 100644
index 0000000..c702295
--- /dev/null
+++ b/.gh-issues/00135_545973588.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/545973588",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/135#issuecomment-545973588",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/135",
+    "id": 545973588,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTk3MzU4OA==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-24T15:31:26Z",
+    "updated_at": "2019-10-24T15:31:26Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "i was late, but there",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/545973588/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00138.json b/.gh-issues/00138.json
new file mode 100644
index 0000000..91cf331
--- /dev/null
+++ b/.gh-issues/00138.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/138",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/138/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/138/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/138/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/138",
+    "id": 496384469,
+    "node_id": "MDU6SXNzdWU0OTYzODQ0Njk=",
+    "number": 138,
+    "title": "ECIP 1043: Fix DAG limit restriction",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2019-09-20T14:28:41Z",
+    "updated_at": "2019-11-07T16:49:48Z",
+    "closed_at": "2019-11-07T16:49:48Z",
+    "author_association": "MEMBER",
+    "body": "Discussion page for ECIP 1043: Fixed DAG limit restriction.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/138/reactions",
+      "total_count": 3,
+      "+1": 3,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00138_551165496.json b/.gh-issues/00138_551165496.json
new file mode 100644
index 0000000..6bef6d5
--- /dev/null
+++ b/.gh-issues/00138_551165496.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551165496",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/138#issuecomment-551165496",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/138",
+    "id": 551165496,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTE2NTQ5Ng==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T16:49:48Z",
+    "updated_at": "2019-11-07T16:49:48Z",
+    "author_association": "MEMBER",
+    "body": "duplicate of #11 ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551165496/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00140.json b/.gh-issues/00140.json
new file mode 100644
index 0000000..ea32adb
--- /dev/null
+++ b/.gh-issues/00140.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/140",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/140/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/140/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/140/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/140",
+    "id": 496478531,
+    "node_id": "MDU6SXNzdWU0OTY0Nzg1MzE=",
+    "number": 140,
+    "title": "ECIPs website not showing all ECIP preamble lines",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 2,
+    "created_at": "2019-09-20T18:01:15Z",
+    "updated_at": "2019-11-10T12:19:12Z",
+    "closed_at": "2019-11-10T12:13:28Z",
+    "author_association": "MEMBER",
+    "body": "The ECIPs website does not show all lines of the preambles, so, for example, the discussion link of ECIP-1043 is not showing:\r\n\r\n![ecips site lines](https://user-images.githubusercontent.com/29529586/65348298-04999300-db9e-11e9-9977-df009c75128b.png)\r\n\r\nI think it's because the php/html/css is calling only up to 5 lines per ECIP, but I think it could be expanded.\r\n\r\nI recommend setting the line count to 15 as that is the max amount of lines on a preamble as per ECIP-1000.\r\n\r\nRe: http://ecips.ethereumclassic.org/ECIPs/ecip-1043",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/140/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00140_552095978.json b/.gh-issues/00140_552095978.json
new file mode 100644
index 0000000..7155c95
--- /dev/null
+++ b/.gh-issues/00140_552095978.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552095978",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/140#issuecomment-552095978",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/140",
+    "id": 552095978,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjA5NTk3OA==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-09T12:35:50Z",
+    "updated_at": "2019-11-10T12:19:12Z",
+    "author_association": "MEMBER",
+    "body": "I checked your example: The link is showing now. I am assuming after opening a discussion the link will be intergrated.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552095978/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00140_552189104.json b/.gh-issues/00140_552189104.json
new file mode 100644
index 0000000..73be3c3
--- /dev/null
+++ b/.gh-issues/00140_552189104.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552189104",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/140#issuecomment-552189104",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/140",
+    "id": 552189104,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjE4OTEwNA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-10T12:13:26Z",
+    "updated_at": "2019-11-10T12:13:26Z",
+    "author_association": "MEMBER",
+    "body": "Fixed in #173 ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552189104/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00143.json b/.gh-issues/00143.json
new file mode 100644
index 0000000..b6540e4
--- /dev/null
+++ b/.gh-issues/00143.json
@@ -0,0 +1,242 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/143",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/143/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/143/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/143/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/143",
+    "id": 509148015,
+    "node_id": "MDU6SXNzdWU1MDkxNDgwMTU=",
+    "number": 143,
+    "title": "Initial email contact to stakeholders/ notification list",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785130,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTMw",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/editor:%20enhancement",
+        "name": "editor: enhancement",
+        "color": "a2eeef",
+        "default": false,
+        "description": "New feature or request"
+      }
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "assignees": [
+      {
+        "login": "bobsummerwill",
+        "id": 3788156,
+        "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+        "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/bobsummerwill",
+        "html_url": "https://github.com/bobsummerwill",
+        "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+        "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+        "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+        "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+        "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+        "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+        "type": "User",
+        "site_admin": false
+      },
+      {
+        "login": "YazzyYaz",
+        "id": 9094204,
+        "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+        "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/YazzyYaz",
+        "html_url": "https://github.com/YazzyYaz",
+        "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+        "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+        "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+        "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+        "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+        "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+        "type": "User",
+        "site_admin": false
+      },
+      {
+        "login": "realcodywburns",
+        "id": 13103499,
+        "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+        "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/realcodywburns",
+        "html_url": "https://github.com/realcodywburns",
+        "followers_url": "https://api.github.com/users/realcodywburns/followers",
+        "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+        "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+        "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+        "repos_url": "https://api.github.com/users/realcodywburns/repos",
+        "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+        "type": "User",
+        "site_admin": false
+      },
+      {
+        "login": "zoulaihui",
+        "id": 15258122,
+        "node_id": "MDQ6VXNlcjE1MjU4MTIy",
+        "avatar_url": "https://avatars1.githubusercontent.com/u/15258122?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/zoulaihui",
+        "html_url": "https://github.com/zoulaihui",
+        "followers_url": "https://api.github.com/users/zoulaihui/followers",
+        "following_url": "https://api.github.com/users/zoulaihui/following{/other_user}",
+        "gists_url": "https://api.github.com/users/zoulaihui/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/zoulaihui/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/zoulaihui/subscriptions",
+        "organizations_url": "https://api.github.com/users/zoulaihui/orgs",
+        "repos_url": "https://api.github.com/users/zoulaihui/repos",
+        "events_url": "https://api.github.com/users/zoulaihui/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/zoulaihui/received_events",
+        "type": "User",
+        "site_admin": false
+      },
+      {
+        "login": "TokenHash",
+        "id": 29529586,
+        "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+        "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/TokenHash",
+        "html_url": "https://github.com/TokenHash",
+        "followers_url": "https://api.github.com/users/TokenHash/followers",
+        "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+        "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+        "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+        "repos_url": "https://api.github.com/users/TokenHash/repos",
+        "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+        "type": "User",
+        "site_admin": false
+      },
+      {
+        "login": "developerkevin",
+        "id": 29807183,
+        "node_id": "MDQ6VXNlcjI5ODA3MTgz",
+        "avatar_url": "https://avatars2.githubusercontent.com/u/29807183?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/developerkevin",
+        "html_url": "https://github.com/developerkevin",
+        "followers_url": "https://api.github.com/users/developerkevin/followers",
+        "following_url": "https://api.github.com/users/developerkevin/following{/other_user}",
+        "gists_url": "https://api.github.com/users/developerkevin/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/developerkevin/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/developerkevin/subscriptions",
+        "organizations_url": "https://api.github.com/users/developerkevin/orgs",
+        "repos_url": "https://api.github.com/users/developerkevin/repos",
+        "events_url": "https://api.github.com/users/developerkevin/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/developerkevin/received_events",
+        "type": "User",
+        "site_admin": false
+      }
+    ],
+    "milestone": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/1",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/milestone/1",
+      "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/1/labels",
+      "id": 4777611,
+      "node_id": "MDk6TWlsZXN0b25lNDc3NzYxMQ==",
+      "number": 1,
+      "title": "Agharta Hardfork   ",
+      "description": "",
+      "creator": {
+        "login": "realcodywburns",
+        "id": 13103499,
+        "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+        "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/realcodywburns",
+        "html_url": "https://github.com/realcodywburns",
+        "followers_url": "https://api.github.com/users/realcodywburns/followers",
+        "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+        "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+        "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+        "repos_url": "https://api.github.com/users/realcodywburns/repos",
+        "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+        "type": "User",
+        "site_admin": false
+      },
+      "open_issues": 2,
+      "closed_issues": 4,
+      "state": "open",
+      "created_at": "2019-10-23T14:38:36Z",
+      "updated_at": "2019-10-28T22:17:15Z",
+      "due_on": null,
+      "closed_at": null
+    },
+    "comments": 5,
+    "created_at": "2019-10-18T15:20:22Z",
+    "updated_at": "2019-10-23T14:45:07Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "Notification of Agharta plan to make known stakeholders aware of the rough timeline and expected upgrades ahead of the fork:\r\n\r\n# 4 contact points:\r\n\r\n1. Initial heads up a fork is being discussed, get updated contact info\r\n2. Fork blocks have been decided\r\n3. Fork is 2 weeks out\r\n4. Fork happened and is good to go\r\n\r\n# List of contacts:\r\n\r\n## Exchanges\r\n- [ ] 55 Global Markets\r\n- [ ] ABCC\r\n- [ ] Abucoins\r\n- [ ] AEX\r\n- [ ] BCEX\r\n- [ ] Bibox\r\n- [ ] BigONE\r\n- [ ] Binance\r\n- [ ] Bit-Z\r\n- [ ] Bitfinex\r\n- [ ] BitForex\r\n- [ ] Bithumb\r\n- [ ] Bitker\r\n- [ ] Bitso\r\n- [ ] BitStar\r\n- [ ] Bittrex\r\n- [ ] BTC Markets\r\n- [ ] BTC Trade UA\r\n- [ ] BTC-Alpha\r\n- [ ] BTCC\r\n- [ ] BTCTrade\r\n- [ ] C2CX\r\n- [ ] Changelly\r\n- [ ] ChaoEX\r\n- [ ] Circle/Poloniex\r\n- [ ] Coinbase/Coinbase Wallet\r\n- [ ] Coinbene\r\n- [ ] Coineal\r\n- [ ] CoinEgg\r\n- [ ] CoinExchange\r\n- [ ] Coinnest\r\n- [ ] Coinone\r\n- [ ] Coinroom\r\n- [ ] Coinsbit\r\n- [ ] Coinsquare\r\n- [ ] CoinTiger\r\n- [ ] Coinut\r\n- [ ] Crex24\r\n- [ ] CryptoCurrencyX\r\n- [ ] CryptoMate\r\n- [ ] Cryptopia\r\n- [ ] DigiFinex\r\n- [ ] DragonEx\r\n- [ ] Evercoin\r\n- [ ] Exmo\r\n- [ ] Exrates\r\n- [ ] Gate.io\r\n- [ ] Gatehub\r\n- [ ] HitBTC\r\n- [ ] Huobi\r\n- [ ] HuobiGlobal\r\n- [ ] IDCM\r\n- [ ] Korbit\r\n- [ ] Kraken\r\n- [ ] Kucoin\r\n- [ ] Lbank\r\n- [ ] LiteBit.eu\r\n- [ ] London Block Exchange\r\n- [ ] Mr. Ripple\r\n- [ ] OKEx\r\n- [ ] Ovis\r\n- [ ] P2PB2B\r\n- [ ] QBTC\r\n- [ ] Qryptos\r\n- [ ] Right BTC\r\n- [ ] Robinhood\r\n- [ ] ShapeShift\r\n- [ ] STEX\r\n- [ ] Tokok\r\n- [ ] Upbit\r\n- [ ] Vebitcoin\r\n- [ ] YoBit\r\n- [ ] ZB com\r\n\r\n## Miners/Mining Pools\r\n- [ ] TED LEUNG\r\n- [ ] 0xETH\r\n- [ ] 2miners\r\n- [ ] 91pool\r\n- [ ] AntPool / Bitmain\r\n- [ ] ArsMine\r\n- [ ] BTC-com\r\n- [ ] BW\r\n- [ ] Clona Network\r\n- [ ] CoinFoundry\r\n- [ ] CoinMiners\r\n- [ ] Cominers\r\n- [ ] Comining\r\n- [ ] CruxPool\r\n- [ ] daboehlatresh\r\n- [ ] epool.io\r\n- [ ] Ethermine/Bitfly\r\n- [ ] F2Pool\r\n- [ ] GlobalPool\r\n- [ ] HashOn-Pool\r\n- [ ] MinerTopia\r\n- [ ] MiningPoolHub\r\n- [ ] NanoPool\r\n- [ ] PoolCrypto\r\n- [ ] ProtonMine\r\n- [ ] Rett Anderson\r\n- [ ] SoloMiningPools\r\n- [ ] UUpool\r\n- [ ] ViaBTC\r\n- [ ] Wattpool\r\n- [ ] Coinotron\r\n\r\n## Block Explorers\r\n- [ ] BlockScout\r\n- [ ] Etherhub\r\n- [ ] Gastracker\r\n- [ ] Google Query\r\n- [ ] MinerGate\r\n- [ ] Jade Explorer\r\n\r\n## Wallets\r\n- [ ] Atomic Wallet\r\n- [ ] Bitpie\r\n- [ ] Cobo\r\n- [ ] Coinomi\r\n- [ ] Emerald Wallet\r\n- [ ] Exodus\r\n- [ ] Guarda\r\n- [ ] JAXX\r\n- [ ] Ledger\r\n- [ ] MyCrypto\r\n- [ ] MyEtherWallet\r\n- [ ] Saturn Wallet\r\n- [ ] Trezor\r\n- [ ] Trust Wallet\r\n\r\n## Node Services Providers\r\n- [ ] Ethercluster\r\n- [ ] Ethernode\r\n- [ ] BloqCloud\r\n\r\n## Other/PR\r\n- [ ] CoinDesk\r\n- [ ] Bitcoin Magazine\r\n- [ ] Yahoo Finance\r\n- [ ] CoinTelegraph\r\n- [ ] NewsBTC\r\n- [ ] CryptoGlobe\r\n- [ ] CryptoBriefing\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/143/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00143_543809233.json b/.gh-issues/00143_543809233.json
new file mode 100644
index 0000000..cbd4a10
--- /dev/null
+++ b/.gh-issues/00143_543809233.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/543809233",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/143#issuecomment-543809233",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/143",
+    "id": 543809233,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzgwOTIzMw==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-18T15:57:27Z",
+    "updated_at": "2019-10-18T15:57:27Z",
+    "author_association": "MEMBER",
+    "body": "I will contact exchanges, pool miners and wallet operators corresponding to awesome list about agharta call. After fixing the apprx. date of the hf in that call, I will notificate about it too. Thx for the reminding ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/543809233/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00143_543813173.json b/.gh-issues/00143_543813173.json
new file mode 100644
index 0000000..c54769a
--- /dev/null
+++ b/.gh-issues/00143_543813173.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/543813173",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/143#issuecomment-543813173",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/143",
+    "id": 543813173,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzgxMzE3Mw==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-18T16:07:34Z",
+    "updated_at": "2019-10-18T16:07:34Z",
+    "author_association": "MEMBER",
+    "body": "I added my most updated list, pls add whoever you see missing, most known large stakeholders are added, all in alphabetical order per category.\r\n\r\n@TheEnthusiasticAs we can totally do the coordinated work we did with Atlantis.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/543813173/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00143_543826639.json b/.gh-issues/00143_543826639.json
new file mode 100644
index 0000000..d6fbfc5
--- /dev/null
+++ b/.gh-issues/00143_543826639.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/543826639",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/143#issuecomment-543826639",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/143",
+    "id": 543826639,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzgyNjYzOQ==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-18T16:36:22Z",
+    "updated_at": "2019-10-18T16:36:22Z",
+    "author_association": "MEMBER",
+    "body": "Do you mean, each one contact from his side? Sure @TokenHash ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/543826639/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 1,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00143_543850251.json b/.gh-issues/00143_543850251.json
new file mode 100644
index 0000000..6297b97
--- /dev/null
+++ b/.gh-issues/00143_543850251.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/543850251",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/143#issuecomment-543850251",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/143",
+    "id": 543850251,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzg1MDI1MQ==",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-18T17:30:10Z",
+    "updated_at": "2019-10-18T17:30:10Z",
+    "author_association": "MEMBER",
+    "body": "Great! Atlantis went well I think. Ideally I think there would be 4 contact points.\r\n1) initial heads up a fork is being discussed, get updated contact info\r\n2) fork blocks have been decided\r\n3) fork is 2 weeks out\r\n4) fork happened and is good to go\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/543850251/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00143_544006547.json b/.gh-issues/00143_544006547.json
new file mode 100644
index 0000000..3c3a51f
--- /dev/null
+++ b/.gh-issues/00143_544006547.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544006547",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/143#issuecomment-544006547",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/143",
+    "id": 544006547,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDAwNjU0Nw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-18T23:33:56Z",
+    "updated_at": "2019-10-18T23:33:56Z",
+    "author_association": "MEMBER",
+    "body": "I am going to share this with the ETC Global Comms WeChat group.\r\nWe should really look for some kind of HackMD or similar scratchpad which we can use everywhere in the world.   Github is inaccessible behind the GWF of China.   Long-term I think the answer to that is to move to a self-hosted Gitlab instance.\r\n\r\nBut in the meantime for this kind of global coordination task, let's just move this elsewhere.\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/544006547/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00144.json b/.gh-issues/00144.json
new file mode 100644
index 0000000..ab2ede0
--- /dev/null
+++ b/.gh-issues/00144.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/144",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/144/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/144/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/144/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/144",
+    "id": 509275871,
+    "node_id": "MDU6SXNzdWU1MDkyNzU4NzE=",
+    "number": 144,
+    "title": "ECIP-1055: Flyclient - Succinct PoW Using Merkle Mountain Ranges",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-10-18T19:42:30Z",
+    "updated_at": "2019-10-18T19:42:30Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "Discussions for Flyclient",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/144/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00146.json b/.gh-issues/00146.json
new file mode 100644
index 0000000..ccf01b0
--- /dev/null
+++ b/.gh-issues/00146.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/146",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/146/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/146/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/146/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/146",
+    "id": 509429998,
+    "node_id": "MDU6SXNzdWU1MDk0Mjk5OTg=",
+    "number": 146,
+    "title": "Ecip-1050 Fission codes",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2019-10-19T10:23:18Z",
+    "updated_at": "2019-10-25T01:18:57Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "@bmann:Hello Ethereum Classic Team!\r\n\r\nWe've been speaking with @pyskell and others who encouraged us to submit our FISSION Status Codes so that it can be used in Ethereum Classic. If there is interest, we would then also submit FISSION Translate, which builds on chain translation for smart contract messages.\r\n\r\nThis is meant to be blockchain agnostic, as bytes are able to be coded in pretty much any system. This is standards track on Ethereum as ERC-1066, and various other standards are starting to use it as a dependency.\r\n\r\nOn Ethereum Classic, it looks like it would make the most sense as an Informational ECIP -- please let me know if you would prefer it be Standards track instead.\r\n\r\n@expede is the author and architect of this work, I'm helping to learn the ECIP process and help explain anything that people have questions about.\r\n\r\nThe FISSION Suite has its own website, and the web version of this proposal may be more readable there: https://fission.codes/fission-codes/\r\n\r\n\r\n\r\n\r\nhttps://github.com/ethereumproject/ECIPs/pull/98",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/146/reactions",
+      "total_count": 6,
+      "+1": 3,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 3,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00146_546161401.json b/.gh-issues/00146_546161401.json
new file mode 100644
index 0000000..19c5068
--- /dev/null
+++ b/.gh-issues/00146_546161401.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546161401",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/146#issuecomment-546161401",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/146",
+    "id": 546161401,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjE2MTQwMQ==",
+    "user": {
+      "login": "bmann",
+      "id": 280420,
+      "node_id": "MDQ6VXNlcjI4MDQyMA==",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/280420?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bmann",
+      "html_url": "https://github.com/bmann",
+      "followers_url": "https://api.github.com/users/bmann/followers",
+      "following_url": "https://api.github.com/users/bmann/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bmann/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bmann/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bmann/subscriptions",
+      "organizations_url": "https://api.github.com/users/bmann/orgs",
+      "repos_url": "https://api.github.com/users/bmann/repos",
+      "events_url": "https://api.github.com/users/bmann/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bmann/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-25T01:18:56Z",
+    "updated_at": "2019-10-25T01:18:56Z",
+    "author_association": "NONE",
+    "body": "@realcodywburns let us know what you need from us. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546161401/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00147.json b/.gh-issues/00147.json
new file mode 100644
index 0000000..7951447
--- /dev/null
+++ b/.gh-issues/00147.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/147",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/147/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/147/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/147/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/147",
+    "id": 509613196,
+    "node_id": "MDU6SXNzdWU1MDk2MTMxOTY=",
+    "number": 147,
+    "title": "invoke-signer",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 3,
+    "created_at": "2019-10-20T15:50:01Z",
+    "updated_at": "2019-10-24T19:17:58Z",
+    "closed_at": null,
+    "author_association": "CONTRIBUTOR",
+    "body": "Discussion section for `invoke-signer` proposal\r\n\r\nMarkdown view of spec 👉: https://github.com/ethereumclassic/ECIPs/blob/9791c0b59582a2ed80d915afbf410bc104de20ea/_specs/invoke-signer.md",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/147/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00147_546044952.json b/.gh-issues/00147_546044952.json
new file mode 100644
index 0000000..8bb377e
--- /dev/null
+++ b/.gh-issues/00147_546044952.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546044952",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/147#issuecomment-546044952",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/147",
+    "id": 546044952,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjA0NDk1Mg==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-24T18:28:47Z",
+    "updated_at": "2019-10-24T18:28:47Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "@bobsummerwill \r\n> How would this relate to WalletConnect?\r\n\r\nbridge-servers = bad",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546044952/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00147_546048265.json b/.gh-issues/00147_546048265.json
new file mode 100644
index 0000000..f73e2a7
--- /dev/null
+++ b/.gh-issues/00147_546048265.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546048265",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/147#issuecomment-546048265",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/147",
+    "id": 546048265,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjA0ODI2NQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-24T18:37:12Z",
+    "updated_at": "2019-10-24T18:37:12Z",
+    "author_association": "MEMBER",
+    "body": "https://walletconnect.org/ for everyone else's benefit.\r\n\r\n@zmitton Please can you expand on your bridge servers comment?   Assume I am utterly ignorant of the details of walletconnect and of what you are proposing here and you will not be far from the truth.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546048265/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00147_546063546.json b/.gh-issues/00147_546063546.json
new file mode 100644
index 0000000..e6993be
--- /dev/null
+++ b/.gh-issues/00147_546063546.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546063546",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/147#issuecomment-546063546",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/147",
+    "id": 546063546,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjA2MzU0Ng==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-24T19:17:58Z",
+    "updated_at": "2019-10-24T19:17:58Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Im not an expert on wallet connect. That seems to solve a different problem. It requires servers to bridge devices which would not address the UX issue being solved by the ECIP. wallet connect might be useful for processes requiring automatic signing (like staking), but not for what we are currently seeing as user's behavior.\r\n\r\nThe issue addressed by the ECIP is dapp signing.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546063546/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00148.json b/.gh-issues/00148.json
new file mode 100644
index 0000000..6ba4e96
--- /dev/null
+++ b/.gh-issues/00148.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/148",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/148/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/148/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/148/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/148",
+    "id": 509626571,
+    "node_id": "MDU6SXNzdWU1MDk2MjY1NzE=",
+    "number": 148,
+    "title": "Ratchet Pricing",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-10-20T17:42:05Z",
+    "updated_at": "2019-10-20T17:42:05Z",
+    "closed_at": null,
+    "author_association": "CONTRIBUTOR",
+    "body": "Discussion section for ratchet-pricing proposal",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/148/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00164.json b/.gh-issues/00164.json
new file mode 100644
index 0000000..6b02c66
--- /dev/null
+++ b/.gh-issues/00164.json
@@ -0,0 +1,68 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/164",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/164/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/164/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/164/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/164",
+    "id": 517371119,
+    "node_id": "MDU6SXNzdWU1MTczNzExMTk=",
+    "number": 164,
+    "title": "Publish ecips to gh pages",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785130,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTMw",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/editor:%20enhancement",
+        "name": "editor: enhancement",
+        "color": "a2eeef",
+        "default": false,
+        "description": "New feature or request"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 4,
+    "created_at": "2019-11-04T20:03:32Z",
+    "updated_at": "2019-11-07T21:23:17Z",
+    "closed_at": "2019-11-07T19:45:15Z",
+    "author_association": "MEMBER",
+    "body": "the contents of: https://ecips.ethereumclassic.org should be published using GH pages.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/164/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00164_550079519.json b/.gh-issues/00164_550079519.json
new file mode 100644
index 0000000..e12aea9
--- /dev/null
+++ b/.gh-issues/00164_550079519.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550079519",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/164#issuecomment-550079519",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/164",
+    "id": 550079519,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDA3OTUxOQ==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T00:03:01Z",
+    "updated_at": "2019-11-06T00:03:01Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "I think they are",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550079519/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00164_551234315.json b/.gh-issues/00164_551234315.json
new file mode 100644
index 0000000..e835c3c
--- /dev/null
+++ b/.gh-issues/00164_551234315.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551234315",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/164#issuecomment-551234315",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/164",
+    "id": 551234315,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIzNDMxNQ==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T19:45:13Z",
+    "updated_at": "2019-11-07T19:45:13Z",
+    "author_association": "MEMBER",
+    "body": "I dont see a GH pages branch... Nor a link to a github pages URL, nor anything that would suggest its scripted to do a GH pages deploy.\r\n\r\nTBH I'm thinking of just overhauling this whole repo. It might have been pragmatic, but the current setup is amateur hour. Gonna close this issue and open one another day, outlining a more appropriate structure / process.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551234315/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00164_551235502.json b/.gh-issues/00164_551235502.json
new file mode 100644
index 0000000..bc528af
--- /dev/null
+++ b/.gh-issues/00164_551235502.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551235502",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/164#issuecomment-551235502",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/164",
+    "id": 551235502,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIzNTUwMg==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T19:48:32Z",
+    "updated_at": "2019-11-07T19:48:32Z",
+    "author_association": "MEMBER",
+    "body": "@BelfordZ it is GHPages. It uses Jekyll and is published here as a GHPages.\r\n\r\nhttps://github.com/ethereumclassic/ECIPs/blob/master/Gemfile#L11\r\n\r\nNot sure why you need to overhaul the current repo? Do you mean development process to contribute to it?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551235502/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00164_551270459.json b/.gh-issues/00164_551270459.json
new file mode 100644
index 0000000..f70b17e
--- /dev/null
+++ b/.gh-issues/00164_551270459.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551270459",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/164#issuecomment-551270459",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/164",
+    "id": 551270459,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTI3MDQ1OQ==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T21:23:17Z",
+    "updated_at": "2019-11-07T21:23:17Z",
+    "author_association": "MEMBER",
+    "body": "No, I mean the fact that this repo's deployment has leaked into its structure. It's very atypical of quality devops. The specs & ecips should be in a format / structure that is independent of the release target. Web is one of potentially many release targets. \r\n\r\nhonestly, there is just too many things that are not done to start listing them, hence why I said I would make a proper proposal / PR at a later date.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551270459/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165.json b/.gh-issues/00165.json
new file mode 100644
index 0000000..2261571
--- /dev/null
+++ b/.gh-issues/00165.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165",
+    "id": 517612622,
+    "node_id": "MDU6SXNzdWU1MTc2MTI2MjI=",
+    "number": 165,
+    "title": "Relicensing Permission",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 76,
+    "created_at": "2019-11-05T08:15:51Z",
+    "updated_at": "2019-11-10T19:15:14Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "@BelfordZ @bobsummerwill are proposing to unify the license of ECIP repo under Apache v2. Since ECIPs are written by many people, we need permission from people who have contributed. If you've contributed code or documentation to ECIP **at any point**, we would like to get your permission. The recommended way to do this would be to leave a comment at this Github issue. It's also possible to grant the permission privately or anonymously. Please let us know if you have this need.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165/reactions",
+      "total_count": 2,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 1,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_549712240.json b/.gh-issues/00165_549712240.json
new file mode 100644
index 0000000..06fe14b
--- /dev/null
+++ b/.gh-issues/00165_549712240.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549712240",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-549712240",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 549712240,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTcxMjI0MA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T08:17:29Z",
+    "updated_at": "2019-11-05T08:17:29Z",
+    "author_association": "MEMBER",
+    "body": "I, Wei Tang, give permission to license my contributions to ECIPs under Apache 2.0. I've used the email addresses sorpaas@gmail.com hi@that.world accounts@that.world",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549712240/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_549762634.json b/.gh-issues/00165_549762634.json
new file mode 100644
index 0000000..4aeba66
--- /dev/null
+++ b/.gh-issues/00165_549762634.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549762634",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-549762634",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 549762634,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTc2MjYzNA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T10:28:17Z",
+    "updated_at": "2019-11-05T10:28:17Z",
+    "author_association": "MEMBER",
+    "body": "I (co-)authored ECIPs 1054, 1056, and 1061 which are all separately licensed into the public domain.\r\n\r\n> Copyright and related rights waived via CC0.\r\n\r\nI would recommend that all ECIPs should be PD.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549762634/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_549830074.json b/.gh-issues/00165_549830074.json
new file mode 100644
index 0000000..023f3c5
--- /dev/null
+++ b/.gh-issues/00165_549830074.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549830074",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-549830074",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 549830074,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTgzMDA3NA==",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T13:49:10Z",
+    "updated_at": "2019-11-05T13:49:10Z",
+    "author_association": "MEMBER",
+    "body": "PDM would be fine for mine as well. \r\n\r\nTo the extent possible under law, I ,Cody Burns , have/will have dedicated all copyright and related and neighboring rights to this project to the public domain worldwide. The improvements and software examples are/will always be distributed without any warranty.\r\n\r\nI am fine with apache 2.0 being applied to all past, present, and future ethereum classic improvement proposals I submit.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549830074/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_549945386.json b/.gh-issues/00165_549945386.json
new file mode 100644
index 0000000..dbfa199
--- /dev/null
+++ b/.gh-issues/00165_549945386.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549945386",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-549945386",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 549945386,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTk0NTM4Ng==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T18:06:00Z",
+    "updated_at": "2019-11-05T18:06:00Z",
+    "author_association": "MEMBER",
+    "body": "New tracker link is here:\r\nhttps://docs.google.com/spreadsheets/d/14OlEk2MhsEr9vn5dqgVIw1h8mWqKymon3lbnwp1QwUY/edit?usp=sharing\r\n\r\nI will keep that updated based on replies to this issue.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549945386/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_549953503.json b/.gh-issues/00165_549953503.json
new file mode 100644
index 0000000..35584cc
--- /dev/null
+++ b/.gh-issues/00165_549953503.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549953503",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-549953503",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 549953503,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTk1MzUwMw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T18:23:35Z",
+    "updated_at": "2019-11-05T18:23:35Z",
+    "author_association": "MEMBER",
+    "body": "It looks like we are a massive way towards having consent already (see tracker):\r\n\r\nWe need consent for Apache 2.0 for their ECIPs from @snaproII, @shanejonas, @meowsbits, @26jesse, @antsankov, @cseberino, @bobthegrownup, @zmitton, @pyskell, @mikeyb, @YazzyYaz and @whilei and we are done.\r\n\r\nThe only \"public domain please\" standout so far is @soc1c, and that is a recommendation not a hard line, as far as I can see?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549953503/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_549954201.json b/.gh-issues/00165_549954201.json
new file mode 100644
index 0000000..87a8420
--- /dev/null
+++ b/.gh-issues/00165_549954201.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549954201",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-549954201",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 549954201,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTk1NDIwMQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T18:25:08Z",
+    "updated_at": "2019-11-05T18:25:08Z",
+    "author_association": "MEMBER",
+    "body": "Everything else is either /EIPs folder content which was copied and deleted, and is minor README edits or merges, or otherwise not anything which could be construed as IP, based on my prior experience.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549954201/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_549957719.json b/.gh-issues/00165_549957719.json
new file mode 100644
index 0000000..2f13f00
--- /dev/null
+++ b/.gh-issues/00165_549957719.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549957719",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-549957719",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 549957719,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTk1NzcxOQ==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T18:33:08Z",
+    "updated_at": "2019-11-05T18:33:08Z",
+    "author_association": "MEMBER",
+    "body": "@bobsummerwill Just a note -- if the author prefers public domain and has licensed her or his specs in public domain, then there's no need to ask permission to relicense it under Apache-2. Whether we want to intentionally do this is another topic.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549957719/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_549964961.json b/.gh-issues/00165_549964961.json
new file mode 100644
index 0000000..cacc669
--- /dev/null
+++ b/.gh-issues/00165_549964961.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549964961",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-549964961",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 549964961,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTk2NDk2MQ==",
+    "user": {
+      "login": "cseberino",
+      "id": 4721990,
+      "node_id": "MDQ6VXNlcjQ3MjE5OTA=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/4721990?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/cseberino",
+      "html_url": "https://github.com/cseberino",
+      "followers_url": "https://api.github.com/users/cseberino/followers",
+      "following_url": "https://api.github.com/users/cseberino/following{/other_user}",
+      "gists_url": "https://api.github.com/users/cseberino/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/cseberino/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/cseberino/subscriptions",
+      "organizations_url": "https://api.github.com/users/cseberino/orgs",
+      "repos_url": "https://api.github.com/users/cseberino/repos",
+      "events_url": "https://api.github.com/users/cseberino/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/cseberino/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T18:49:47Z",
+    "updated_at": "2019-11-05T18:49:47Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "I give permission to license my ECIPs under the Apache 2.0 license.\n\nChris Seberino\n_______________________________________\n\nChristian Seberino, Ph.D.\nPhone: (936) 235-1139\nEmail: cseberino@gmail.com\n_______________________________________\n\n\n\n\nOn Tue, Nov 5, 2019 at 12:33 PM Wei Tang <notifications@github.com> wrote:\n\n> @bobsummerwill <https://github.com/bobsummerwill> Just a note -- if the\n> author prefers public domain and has licensed her or his specs in public\n> domain, then there's no need to ask permission to relicense it under\n> Apache-2. Whether we want to intentionally do this is another topic.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereumclassic/ECIPs/issues/165?email_source=notifications&email_token=ABEA2RU4E7HBK6GR5SSTXL3QSG36NA5CNFSM4JI7EFL2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEDD3AVY#issuecomment-549957719>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ABEA2RWDJZZT3VIIOPN3NWDQSG36NANCNFSM4JI7EFLQ>\n> .\n>\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549964961/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_549968110.json b/.gh-issues/00165_549968110.json
new file mode 100644
index 0000000..9ffa8fa
--- /dev/null
+++ b/.gh-issues/00165_549968110.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549968110",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-549968110",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 549968110,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTk2ODExMA==",
+    "user": {
+      "login": "antsankov",
+      "id": 2533512,
+      "node_id": "MDQ6VXNlcjI1MzM1MTI=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/2533512?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/antsankov",
+      "html_url": "https://github.com/antsankov",
+      "followers_url": "https://api.github.com/users/antsankov/followers",
+      "following_url": "https://api.github.com/users/antsankov/following{/other_user}",
+      "gists_url": "https://api.github.com/users/antsankov/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/antsankov/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/antsankov/subscriptions",
+      "organizations_url": "https://api.github.com/users/antsankov/orgs",
+      "repos_url": "https://api.github.com/users/antsankov/repos",
+      "events_url": "https://api.github.com/users/antsankov/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/antsankov/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T18:57:21Z",
+    "updated_at": "2019-11-05T18:57:21Z",
+    "author_association": "NONE",
+    "body": "I give permission to license my ECIPs under the  Apache 2.0 license.\n\nOn a side note, after doing research, I do believe the Apache license is\nthe best open source license available for large multi-repo, many\nstakeholder, software ecosystems (Apache, Cassandra, Kafka, Hadoop,Spark,\netc.)\n\n- Alexander Tsankov\n\nOn Tue, Nov 5, 2019 at 13:49 cseberino <notifications@github.com> wrote:\n\n> I give permission to license my ECIPs under the Apache 2.0 license.\n>\n> Chris Seberino\n> _______________________________________\n>\n> Christian Seberino, Ph.D.\n> Phone: (936) 235-1139\n> Email: cseberino@gmail.com\n> _______________________________________\n>\n>\n>\n>\n> On Tue, Nov 5, 2019 at 12:33 PM Wei Tang <notifications@github.com> wrote:\n>\n> > @bobsummerwill <https://github.com/bobsummerwill> Just a note -- if the\n> > author prefers public domain and has licensed her or his specs in public\n> > domain, then there's no need to ask permission to relicense it under\n> > Apache-2. Whether we want to intentionally do this is another topic.\n> >\n> > —\n> > You are receiving this because you were mentioned.\n> > Reply to this email directly, view it on GitHub\n> > <\n> https://github.com/ethereumclassic/ECIPs/issues/165?email_source=notifications&email_token=ABEA2RU4E7HBK6GR5SSTXL3QSG36NA5CNFSM4JI7EFL2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEDD3AVY#issuecomment-549957719\n> >,\n> > or unsubscribe\n> > <\n> https://github.com/notifications/unsubscribe-auth/ABEA2RWDJZZT3VIIOPN3NWDQSG36NANCNFSM4JI7EFLQ\n> >\n> > .\n> >\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereumclassic/ECIPs/issues/165?email_source=notifications&email_token=AATKRCEEAL23OWAOCDO37GDQSG543A5CNFSM4JI7EFL2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEDD4ZII#issuecomment-549964961>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AATKRCCRS5CJEX2DN3A57M3QSG543ANCNFSM4JI7EFLQ>\n> .\n>\n-- \nSent from my phone. Excuse any brevity, tyops, or grammar error.\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549968110/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550166964.json b/.gh-issues/00165_550166964.json
new file mode 100644
index 0000000..d168014
--- /dev/null
+++ b/.gh-issues/00165_550166964.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550166964",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550166964",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550166964,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDE2Njk2NA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T06:33:53Z",
+    "updated_at": "2019-11-06T06:33:53Z",
+    "author_association": "MEMBER",
+    "body": "> The only \"public domain please\" standout so far is @soc1c, and that is a recommendation not a hard line, as far as I can see?\r\n\r\nYeah, it's a recommendation. That said, I believe specs require a different licensing format than actual software. So you would have to investigate Creative Commons or similar if you want to consider something that is not Public Domain.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550166964/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550167270.json b/.gh-issues/00165_550167270.json
new file mode 100644
index 0000000..94950aa
--- /dev/null
+++ b/.gh-issues/00165_550167270.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550167270",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550167270",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550167270,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDE2NzI3MA==",
+    "user": {
+      "login": "26jesse",
+      "id": 52479948,
+      "node_id": "MDQ6VXNlcjUyNDc5OTQ4",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/52479948?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/26jesse",
+      "html_url": "https://github.com/26jesse",
+      "followers_url": "https://api.github.com/users/26jesse/followers",
+      "following_url": "https://api.github.com/users/26jesse/following{/other_user}",
+      "gists_url": "https://api.github.com/users/26jesse/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/26jesse/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/26jesse/subscriptions",
+      "organizations_url": "https://api.github.com/users/26jesse/orgs",
+      "repos_url": "https://api.github.com/users/26jesse/repos",
+      "events_url": "https://api.github.com/users/26jesse/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/26jesse/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T06:35:02Z",
+    "updated_at": "2019-11-06T06:35:02Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "I consent\n\nOn Tue, Nov 5, 2019, 10:33 PM Talha Cross <notifications@github.com> wrote:\n\n> The only \"public domain please\" standout so far is @soc1c\n> <https://github.com/soc1c>, and that is a recommendation not a hard line,\n> as far as I can see?\n>\n> Yeah, it's a recommendation. That said, I believe specs require a\n> different licensing format than actual software. So you would have to\n> investigate Creative Commons or similar if you want to consider something\n> that is not Public Domain.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereumclassic/ECIPs/issues/165?email_source=notifications&email_token=AMQMPTGI32ZK7HSPQ3OTOH3QSJQNHA5CNFSM4JI7EFL2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEDFODNA#issuecomment-550166964>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AMQMPTCXGXG7N2XUYK72QCTQSJQNHANCNFSM4JI7EFLQ>\n> .\n>\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550167270/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550233349.json b/.gh-issues/00165_550233349.json
new file mode 100644
index 0000000..261e4d9
--- /dev/null
+++ b/.gh-issues/00165_550233349.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550233349",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550233349",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550233349,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDIzMzM0OQ==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T09:52:17Z",
+    "updated_at": "2019-11-06T09:52:17Z",
+    "author_association": "MEMBER",
+    "body": "Probably goes without saying, by I consent :)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550233349/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550337662.json b/.gh-issues/00165_550337662.json
new file mode 100644
index 0000000..761e829
--- /dev/null
+++ b/.gh-issues/00165_550337662.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550337662",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550337662",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550337662,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDMzNzY2Mg==",
+    "user": {
+      "login": "cseberino",
+      "id": 4721990,
+      "node_id": "MDQ6VXNlcjQ3MjE5OTA=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/4721990?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/cseberino",
+      "html_url": "https://github.com/cseberino",
+      "followers_url": "https://api.github.com/users/cseberino/followers",
+      "following_url": "https://api.github.com/users/cseberino/following{/other_user}",
+      "gists_url": "https://api.github.com/users/cseberino/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/cseberino/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/cseberino/subscriptions",
+      "organizations_url": "https://api.github.com/users/cseberino/orgs",
+      "repos_url": "https://api.github.com/users/cseberino/repos",
+      "events_url": "https://api.github.com/users/cseberino/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/cseberino/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T14:36:57Z",
+    "updated_at": "2019-11-06T14:36:57Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "I second what Talha said.  Not to add more stress but I think the Wikipedia\nlicense choice is probably\nthe most appropriate...   CC BY-SA ...\n\ncs\n\n\n\n\nOn Wed, Nov 6, 2019 at 12:33 AM Talha Cross <notifications@github.com>\nwrote:\n\n> The only \"public domain please\" standout so far is @soc1c\n> <https://github.com/soc1c>, and that is a recommendation not a hard line,\n> as far as I can see?\n>\n> Yeah, it's a recommendation. That said, I believe specs require a\n> different licensing format than actual software. So you would have to\n> investigate Creative Commons or similar if you want to consider something\n> that is not Public Domain.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereumclassic/ECIPs/issues/165?email_source=notifications&email_token=ABEA2RTAVDLZVMVKZOOCESDQSJQNHA5CNFSM4JI7EFL2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEDFODNA#issuecomment-550166964>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ABEA2RX45VZA3WEBSZPV7A3QSJQNHANCNFSM4JI7EFLQ>\n> .\n>\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550337662/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550395264.json b/.gh-issues/00165_550395264.json
new file mode 100644
index 0000000..2149698
--- /dev/null
+++ b/.gh-issues/00165_550395264.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550395264",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550395264",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550395264,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDM5NTI2NA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T16:41:50Z",
+    "updated_at": "2019-11-06T16:41:50Z",
+    "author_association": "MEMBER",
+    "body": "@soc1c @cseberino \"That said, I believe specs require a different licensing format than actual software. So you would have to investigate Creative Commons or similar if you want to consider something that is not Public Domain.\"\r\n\r\nThis is something that I will ask https://en.wikipedia.org/wiki/Mishi_Choudhary about for sure, but I suspect that Apache 2.0 is just fine too (though maybe \"overkill\").\r\n\r\nApache 2.0 will cover copyright and patents where CC anything gives you no patent protection.  There are still other forms of IP which we are not defended against - trademarks and trade secrets being the main ones.\r\n\r\nAside - Would anybody else like to join @YazzyYaz and me for this pending IP lawyer meeting?\r\n\r\n@MadeofTin, @Souptacular and maybe others will be joining too so that we can talk about both the EIP and ECIP processes, given how interrelated they are.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550395264/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550416455.json b/.gh-issues/00165_550416455.json
new file mode 100644
index 0000000..5c87fdb
--- /dev/null
+++ b/.gh-issues/00165_550416455.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550416455",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550416455",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550416455,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDQxNjQ1NQ==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T17:30:11Z",
+    "updated_at": "2019-11-06T17:30:11Z",
+    "author_association": "MEMBER",
+    "body": "I, Yaz Khoury, give permissions to license my modifications to the ECIPs as an editor under the Apache 2.0 License.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550416455/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550420695.json b/.gh-issues/00165_550420695.json
new file mode 100644
index 0000000..a2ca504
--- /dev/null
+++ b/.gh-issues/00165_550420695.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550420695",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550420695",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550420695,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDQyMDY5NQ==",
+    "user": {
+      "login": "Wolf-Linzhi",
+      "id": 56785535,
+      "node_id": "MDQ6VXNlcjU2Nzg1NTM1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/56785535?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/Wolf-Linzhi",
+      "html_url": "https://github.com/Wolf-Linzhi",
+      "followers_url": "https://api.github.com/users/Wolf-Linzhi/followers",
+      "following_url": "https://api.github.com/users/Wolf-Linzhi/following{/other_user}",
+      "gists_url": "https://api.github.com/users/Wolf-Linzhi/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/Wolf-Linzhi/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/Wolf-Linzhi/subscriptions",
+      "organizations_url": "https://api.github.com/users/Wolf-Linzhi/orgs",
+      "repos_url": "https://api.github.com/users/Wolf-Linzhi/repos",
+      "events_url": "https://api.github.com/users/Wolf-Linzhi/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/Wolf-Linzhi/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T17:40:37Z",
+    "updated_at": "2019-11-06T17:40:54Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "I, Wolfgang Spraul, give permission to license my ECIPs and modifications to ECIPs under the Apache 2.0 license.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550420695/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550421948.json b/.gh-issues/00165_550421948.json
new file mode 100644
index 0000000..468739b
--- /dev/null
+++ b/.gh-issues/00165_550421948.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550421948",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550421948",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550421948,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDQyMTk0OA==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T17:43:29Z",
+    "updated_at": "2019-11-06T17:43:29Z",
+    "author_association": "MEMBER",
+    "body": "I, phyro, give permissions to license my modifications to the ECIPs as an editor under the Apache 2.0 License.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550421948/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550445884.json b/.gh-issues/00165_550445884.json
new file mode 100644
index 0000000..8be96b6
--- /dev/null
+++ b/.gh-issues/00165_550445884.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550445884",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550445884",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550445884,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDQ0NTg4NA==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T18:43:08Z",
+    "updated_at": "2019-11-06T18:43:08Z",
+    "author_association": "MEMBER",
+    "body": "To establish a blanket license, irrespective of which one and how good it is, and to exclude those who don't want to use it, when there are several variations in ECIP-1000 that are totally acceptable, as seen in ETC and Bitcoin, is a security hole as this \"small\" and what appears as an \"irrelevant\" action is an unnecessary restriction to a single license and establishes \"restriction\" in itself as a philosophical norm, in ETC.\r\n\r\nThere is a long tradition of \"least authority\" in crypto, but this is exactly the opposite: an unnecessary and not justified \"most authority\" action.\r\n\r\nThis, as a first action of establishing a \"most authority\" philosophy pushed by @bobsummerwill will inexorably be followed by promoting more restrictions as already mentioned by him:\r\n\r\n• DCO\r\n• naming developers and killing anonymity\r\n• introducing more \"protections\" such as \"trademarks and trade secrets\"\r\n• speaking with lawyers to appeal to authority to impose more restrictions\r\n• appealing to EF, EEA, Hyperledger, and other \"OSS foundations\" as authority of how ETC should proceed, which are all opposite to ETC ethos\r\n\r\nSummerwill, has the wrong mindset, and all other participants in ETC have a lazy mindset that prefer to move on with what they consider as \"irrelevant\" or \"BS\" or \"a waste of time\", but they don't see they are opening the door to further attacks with more restrictions in ETC in the future. Just because there is one attacker being bothersome enough to push all to an unnecessary change. \r\n\r\nThe \"I am protecting you\" is the oldest excuse by authoritarians who then violate people with top down governance and restrictions, especially corporatist in this case. Summerwill has only spoken about top down authoritarian measures in ETC for months.\r\n\r\nAnd \"I am going to annoy you until you capitulate\", and the fact all people in ETC actually capitulate and rationalize their capitulation, is another way of introducing these negative changes.\r\n\r\nJust because ECIP-1000 was approved late in the life cycle of ETC (in 2019), that editors have not enforced the copyright/licensing section in new ECIPs, and that it is easy and comfortable to put a root license does not mean that can't be solved by using best practices from now on.\r\n\r\nETC is NOT Linux or Apache or any old OSS system. ETC is a system that needs to have the highest standards of trust minimization, unlike any other type of OSS system, to protect a global platform of money, property and agreements. This has nothing to do, or has anything in common, with other OSS systems, or private networks, that can be used in isolation or have no property and agreements inside, or are fine with top down trust maximization.\r\n\r\nThere is no reason to use a single root license and not do what Bitcoin already does ever since 2017 of using a portfolio of acceptable options. \"I am lazy\" and \"this bother me\", is not an argument. Therefore I oppose this action.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550445884/reactions",
+      "total_count": 5,
+      "+1": 3,
+      "-1": 1,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 1
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550477706.json b/.gh-issues/00165_550477706.json
new file mode 100644
index 0000000..d3bf018
--- /dev/null
+++ b/.gh-issues/00165_550477706.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550477706",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550477706",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550477706,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDQ3NzcwNg==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T20:03:04Z",
+    "updated_at": "2019-11-06T20:03:04Z",
+    "author_association": "MEMBER",
+    "body": "I would just highlight what @BelfordZ said here:\r\n\r\nhttps://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550028785\r\n\r\nApache 2.0 is not controversial at all, Donald, and is not authoritarian.   It protects users from the very real threat of copyright and patent lawsuits.  The real world exists.  We cannot wish it away.\r\n\r\nThis is not about laziness and rolling over to \"Corporate Communist Bob\".  Mandating Apache 2.0 for all future contributions, plus whatever we can do for previous commits would be an awesome step forward for ETC which would not be any kind of compromise.\r\n\r\n\"Real names\" a step too far?  Fine, so we don't do it.   I have NEVER proposed uncloaking anybody, by the way - just that having a real name requirement (which would have stopped precisely ZERO contributions which have been accepted to date on both ETC and ETH) would be a great deterrent to patent-trolls and other social attackers.\r\n\r\nTalking to lawyers is pragmatic when it comes to setting IP policy.  They are the experts.  If you think that is \"a crime\" then I don't know what to say.\r\n\r\n\"appealing to EF, EEA, Hyperledger, and other \"OSS foundations\" as authority of how ETC should proceed, which are all opposite to ETC ethos\"\r\n\r\nThey are not \"opposite\" - they are in some degrees parallel and in other degrees orthogonal.  This is not a zero sum game.  Open source best practice is not our enemy.  Linux Foundation is not our enemy.  They do not have \"censorship resistance\" in common, that is for sure, but on IP protection we are in complete alignment of needs.\r\n\r\nIf Bitcoin has gone another way (and Ethereum copied) that does not make what has happened there \"gospel\" any more than we need to slavishly follow what Ethereum have done in any way where we feel that was wrong.   Which is why the ECIP process is already better than EIP process, IMHO, with @sorpaas contributions on ECIP-1000 being particularly key.   And now we are kicking that up a notch again - cleaning up our existing ECIPs, and looking to what the best future policy should be.\r\n\r\nI am not your enemy, @TokenHash.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550477706/reactions",
+      "total_count": 2,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 1,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550493899.json b/.gh-issues/00165_550493899.json
new file mode 100644
index 0000000..86d5aee
--- /dev/null
+++ b/.gh-issues/00165_550493899.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550493899",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550493899",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550493899,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDQ5Mzg5OQ==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T20:48:15Z",
+    "updated_at": "2019-11-06T20:48:15Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "I, the real meowsbits, give permission to license my contributions, as an editor, creator, or contributor, and whether in whole or in part, to all pertinent documents contained in this repository under the Apache 2.0 License.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550493899/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550494245.json b/.gh-issues/00165_550494245.json
new file mode 100644
index 0000000..d8b94ad
--- /dev/null
+++ b/.gh-issues/00165_550494245.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550494245",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550494245",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550494245,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDQ5NDI0NQ==",
+    "user": {
+      "login": "whilei",
+      "id": 10228550,
+      "node_id": "MDQ6VXNlcjEwMjI4NTUw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/10228550?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/whilei",
+      "html_url": "https://github.com/whilei",
+      "followers_url": "https://api.github.com/users/whilei/followers",
+      "following_url": "https://api.github.com/users/whilei/following{/other_user}",
+      "gists_url": "https://api.github.com/users/whilei/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/whilei/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/whilei/subscriptions",
+      "organizations_url": "https://api.github.com/users/whilei/orgs",
+      "repos_url": "https://api.github.com/users/whilei/repos",
+      "events_url": "https://api.github.com/users/whilei/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/whilei/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T20:49:16Z",
+    "updated_at": "2019-11-06T20:49:16Z",
+    "author_association": "MEMBER",
+    "body": "Me too.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550494245/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550497827.json b/.gh-issues/00165_550497827.json
new file mode 100644
index 0000000..da1eb68
--- /dev/null
+++ b/.gh-issues/00165_550497827.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550497827",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550497827",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550497827,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDQ5NzgyNw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T20:59:22Z",
+    "updated_at": "2019-11-06T20:59:22Z",
+    "author_association": "MEMBER",
+    "body": "So we have a sea of green:\r\n\r\nhttps://docs.google.com/spreadsheets/d/14OlEk2MhsEr9vn5dqgVIw1h8mWqKymon3lbnwp1QwUY/edit?usp=sharing\r\n\r\nJust waiting on replies from @snaproII, @shanejonas, @bobthegrownup, @zmitton, @pyskell and @mikeyb and we will have clarity on everyone's position on this proposal.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550497827/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550503103.json b/.gh-issues/00165_550503103.json
new file mode 100644
index 0000000..793a5e2
--- /dev/null
+++ b/.gh-issues/00165_550503103.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550503103",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550503103",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550503103,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDUwMzEwMw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T21:14:24Z",
+    "updated_at": "2019-11-06T21:14:48Z",
+    "author_association": "MEMBER",
+    "body": "@BelfordZ One point you made above which I didn't reply to was \"Apache 2.0+\"\r\nI agree that that is not a good pattern.\r\nYou are trusting future Apache license authors to do the right thing.\r\nIt is a bad pattern just as n.n.n^ is a dangerous pattern for NPM modules.\r\nBetter to lock in specific versions, and make updates a conscious effort.\r\nIf there is an Apache 3.0 in the future which is even better then it should be a deliberate coordinated process to choose to update.\r\n\r\nExactly the same pattern as SHA256 -> SHA3 which you raised at ETC Summit, @antsankov, right?\r\n\r\nYou make a long-term decision, that gives all ecosystem participants certainty for a long time (maybe decades), and then if the facts-on-the-ground change (hash collisions, better license available, whatever) then you have to make a coordinated move to \"upgrade\", but that always needs to be a conscious and intentional choice.\r\n\r\nSame for the monetary policy.\r\n\r\nAnd I am starting to think that gaslimit is yet another example of that pattern, where we would also benefit from long-term certainty.\r\n\r\nThat was also my thinking behind this (if there is consensus on this and it is not seen as something which violates ETC philosophy).  I think that could just end up as a one-liner in ECIP-1000, or as a standalone ECIP in some other form.   Analogous to monetary policy, but providing a commitment on remaining with POW.  Maybe tied in with whatever ECIP we do on gaslimit, if we do one?\r\n\r\nhttps://ethereumclassic.org/blog/2019-10-06-pow-mining-explicit-social-contract/",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550503103/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550503263.json b/.gh-issues/00165_550503263.json
new file mode 100644
index 0000000..0e45b67
--- /dev/null
+++ b/.gh-issues/00165_550503263.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550503263",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550503263",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550503263,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDUwMzI2Mw==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T21:14:47Z",
+    "updated_at": "2019-11-06T21:15:36Z",
+    "author_association": "MEMBER",
+    "body": "@bobsummerwill you are a fallacy machine and, as expected, have responded by not addressing anything I wrote, using only straw mans.\r\n\r\nToo bad there are too many Ethereum paid people in ETC and the few ETC people are too lazy, weak, and mindless to resist these attacks.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550503263/reactions",
+      "total_count": 2,
+      "+1": 1,
+      "-1": 1,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550512034.json b/.gh-issues/00165_550512034.json
new file mode 100644
index 0000000..2e0170d
--- /dev/null
+++ b/.gh-issues/00165_550512034.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550512034",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550512034",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550512034,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDUxMjAzNA==",
+    "user": {
+      "login": "drd34d",
+      "id": 30156189,
+      "node_id": "MDQ6VXNlcjMwMTU2MTg5",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/30156189?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/drd34d",
+      "html_url": "https://github.com/drd34d",
+      "followers_url": "https://api.github.com/users/drd34d/followers",
+      "following_url": "https://api.github.com/users/drd34d/following{/other_user}",
+      "gists_url": "https://api.github.com/users/drd34d/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/drd34d/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/drd34d/subscriptions",
+      "organizations_url": "https://api.github.com/users/drd34d/orgs",
+      "repos_url": "https://api.github.com/users/drd34d/repos",
+      "events_url": "https://api.github.com/users/drd34d/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/drd34d/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T21:38:27Z",
+    "updated_at": "2019-11-06T21:44:11Z",
+    "author_association": "NONE",
+    "body": "A Crypto-Decentralist Manifesto\r\nJuly 11, 2016 by Arvicco\r\n\r\nhttps://ethereumclassic.org/blog/2016-07-11-manifesto/\r\n\r\nto which I'd like to highlight:\r\n\r\n**Openness is necessary**. It goes without saying that the rules of the game should be open for anyone to see and understand. **Anyone should be able to participate in any layer of the system without asking for any permission whatsoever**. Anyone should be able to use the network in accordance with its rules. Anyone should be able to create their own client implementing the open protocol. Anyone should be able to contribute to network security, and so on. **No registration, identification or other preconditions should limit participation. All such limitations prevent the network from scaling and their enforcement creates centralization risks.**\r\n\r\n**Neutrality is necessary**. It’s important for anyone participating in blockchain-enabled cooperation to be on an equal footing with everyone else. It doesn’t matter if you wield huge economic power or only a tiny amount. It doesn’t matter whether you’re a saintly Mother Theresa or a vicious drug dealer. It doesn’t matter whether you’re a human or a refrigerator. It doesn’t matter what you believe in, what political theory you subscribe to, or whether you’re a moral or immoral person. A participant’s ethnicity, age, sex, profession, social standing, friends or affiliations, make or model, goals, purposes or intentions — none of this matters to the blockchain even a bit. **The rules of the game are exactly the same for everyone, period.** Without neutrality, the system is skewed towards one set of participants at the expense of others. In that case, it’s less likely to gain universal acceptance and maximize network value for everyone.\r\n\r\nAs soon as Bob started this ecip I felt a reference to ProgPoW would eventually come, as it did. There's private agendas hiding behind every single action and we must maintain our values truthfull to the ETC manifesto. \r\n\r\nDon't trust, verify. If you think a contributor may have bad intentions, review the contributions extra carefully. Not being anonymous is not a synonym for good intentions either.\r\n\r\nAlso, what would you do if someone \"signs\" as John Doe? Require a government issued ID? \r\n\r\n@TokenHash  thank you for standing ground to this attack on ETC values.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550512034/reactions",
+      "total_count": 6,
+      "+1": 6,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550514394.json b/.gh-issues/00165_550514394.json
new file mode 100644
index 0000000..2857559
--- /dev/null
+++ b/.gh-issues/00165_550514394.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550514394",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550514394",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550514394,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDUxNDM5NA==",
+    "user": {
+      "login": "drd34d",
+      "id": 30156189,
+      "node_id": "MDQ6VXNlcjMwMTU2MTg5",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/30156189?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/drd34d",
+      "html_url": "https://github.com/drd34d",
+      "followers_url": "https://api.github.com/users/drd34d/followers",
+      "following_url": "https://api.github.com/users/drd34d/following{/other_user}",
+      "gists_url": "https://api.github.com/users/drd34d/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/drd34d/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/drd34d/subscriptions",
+      "organizations_url": "https://api.github.com/users/drd34d/orgs",
+      "repos_url": "https://api.github.com/users/drd34d/repos",
+      "events_url": "https://api.github.com/users/drd34d/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/drd34d/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T21:45:03Z",
+    "updated_at": "2019-11-06T22:10:52Z",
+    "author_association": "NONE",
+    "body": "straight out of the ETC manifesto:\r\n\r\n**No registration, identification or other preconditions should limit participation. All such limitations prevent the network from scaling and their enforcement creates centralization risks.**\r\n\r\n*edit*\r\nmaybe not a bad timing for some people to review (or read for the first time) the ETC declaration of independence too. \r\n\r\nhttps://ethereumclassic.org/assets/ETC_Declaration_of_Independence.pdf",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550514394/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550525921.json b/.gh-issues/00165_550525921.json
new file mode 100644
index 0000000..7fe8e40
--- /dev/null
+++ b/.gh-issues/00165_550525921.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550525921",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550525921",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550525921,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDUyNTkyMQ==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T22:16:38Z",
+    "updated_at": "2019-11-06T22:18:57Z",
+    "author_association": "MEMBER",
+    "body": "@drd34d thanks for highlighting the manifesto parts. If we consider ECIPs a layer, then this breaks the \r\n\r\n> Anyone should be able to participate in any layer of the system... -> No registration, identification **or other preconditions** should limit participation.\r\n\r\nOn the other hand, Apache 2 strengthens `Openness is necessary` for the ECIPs since they become 'free'/'open' by design.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550525921/reactions",
+      "total_count": 3,
+      "+1": 3,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550536197.json b/.gh-issues/00165_550536197.json
new file mode 100644
index 0000000..df60188
--- /dev/null
+++ b/.gh-issues/00165_550536197.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550536197",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550536197",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550536197,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDUzNjE5Nw==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T22:47:45Z",
+    "updated_at": "2019-11-06T22:47:45Z",
+    "author_association": "MEMBER",
+    "body": "Repeating my argument from Discord:\r\n\r\n> Anyone should be able to participate in any layer of the system... -> No registration, identification or other preconditions should limit participation.\r\n\r\nThe above quote is definitely a very good point, but, it also falls to the permissionless fallacy.\r\nSo what one should do is allows for maximum permissionlessness while protecting permissionlessness itself from harm. If it was any other license, I'd say it might be harming permissionlessness. But APACHE actually helps permissionlessness the most.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550536197/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550560138.json b/.gh-issues/00165_550560138.json
new file mode 100644
index 0000000..645b3fb
--- /dev/null
+++ b/.gh-issues/00165_550560138.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550560138",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550560138",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550560138,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDU2MDEzOA==",
+    "user": {
+      "login": "pyskell",
+      "id": 9665963,
+      "node_id": "MDQ6VXNlcjk2NjU5NjM=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/9665963?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/pyskell",
+      "html_url": "https://github.com/pyskell",
+      "followers_url": "https://api.github.com/users/pyskell/followers",
+      "following_url": "https://api.github.com/users/pyskell/following{/other_user}",
+      "gists_url": "https://api.github.com/users/pyskell/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/pyskell/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/pyskell/subscriptions",
+      "organizations_url": "https://api.github.com/users/pyskell/orgs",
+      "repos_url": "https://api.github.com/users/pyskell/repos",
+      "events_url": "https://api.github.com/users/pyskell/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/pyskell/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T00:13:41Z",
+    "updated_at": "2019-11-07T00:13:41Z",
+    "author_association": "MEMBER",
+    "body": "You can license my contributions to this repository however you want. Consider them all public domain/CC0.\r\n\r\nThis doesn't mean I'm making any claim or endorsement of the other topics being discussed here (which potentially should be split into separate issues).",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550560138/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550566925.json b/.gh-issues/00165_550566925.json
new file mode 100644
index 0000000..d5c2b71
--- /dev/null
+++ b/.gh-issues/00165_550566925.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550566925",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550566925",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550566925,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDU2NjkyNQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T00:41:10Z",
+    "updated_at": "2019-11-07T00:41:10Z",
+    "author_association": "MEMBER",
+    "body": "Hey @Dexaran and @splix!  ^^",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550566925/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550569920.json b/.gh-issues/00165_550569920.json
new file mode 100644
index 0000000..82c0364
--- /dev/null
+++ b/.gh-issues/00165_550569920.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550569920",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550569920",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550569920,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDU2OTkyMA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T00:54:18Z",
+    "updated_at": "2019-11-07T00:54:18Z",
+    "author_association": "MEMBER",
+    "body": "@meowsbits @BelfordZ Another trick which Eben Moglen told me during the cpp-ethereum relicensing attempt is that you can filter out contributors who you don't even need to talk to (like most of the EF people showing as contributors on this repo) by doing \"git blame\" on all of the files at the tip of your repo and then just making a list of the unique users.\r\n\r\nAnybody who contributed something which has since been deleted or rewritten can be ignored.   That cleans up the \"long tail\".   He also said that the rule of thumb he and RMS had established is that contributions under 50 lines are usually insufficient to contribute a claim, so can be \"lawyered away\" if necessary.\r\n\r\nThat is probably something which applies more to code than to specs, though.   Key algorithms might be very short, and are totally possible to claim as IP or patented content, so I think we need to consider everything, even one-liners, if they are in ECIPs themselves.  The README or other template files maybe less of a worry.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550569920/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550975359.json b/.gh-issues/00165_550975359.json
new file mode 100644
index 0000000..8ec4524
--- /dev/null
+++ b/.gh-issues/00165_550975359.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550975359",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550975359",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550975359,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDk3NTM1OQ==",
+    "user": {
+      "login": "developerkevin",
+      "id": 29807183,
+      "node_id": "MDQ6VXNlcjI5ODA3MTgz",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/29807183?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/developerkevin",
+      "html_url": "https://github.com/developerkevin",
+      "followers_url": "https://api.github.com/users/developerkevin/followers",
+      "following_url": "https://api.github.com/users/developerkevin/following{/other_user}",
+      "gists_url": "https://api.github.com/users/developerkevin/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/developerkevin/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/developerkevin/subscriptions",
+      "organizations_url": "https://api.github.com/users/developerkevin/orgs",
+      "repos_url": "https://api.github.com/users/developerkevin/repos",
+      "events_url": "https://api.github.com/users/developerkevin/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/developerkevin/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T08:27:12Z",
+    "updated_at": "2019-11-07T08:27:12Z",
+    "author_association": "MEMBER",
+    "body": "IF ITS NOT BROKEN, DON'T FIX IT. \r\n\r\nETC development has successfully used this process, modeled after Bitcoin's BIP, since inception. Why are these topics, and concerns great enough to create such a proposal just now coming up? \r\n\r\nAs a long time active contributor, I dissent from this proposal and hope others will come to understand the likely negative repercussions that this proposal may have on this open source blockchain project as a whole, and not just _ protecting users [**developers, contributors**] from the very real threat of copyright and patent lawsuits._ \r\n\r\nFrom the ETC Decentralist Manifesto \r\n\r\n> Anyone should be able to create their own client implementing the open protocol. Anyone should be able to contribute to network security, and so on. **No registration, identification or other preconditions should limit participation. All such limitations prevent the network from scaling and their enforcement creates centralization risks.**\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550975359/reactions",
+      "total_count": 5,
+      "+1": 5,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_550985428.json b/.gh-issues/00165_550985428.json
new file mode 100644
index 0000000..251fa90
--- /dev/null
+++ b/.gh-issues/00165_550985428.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550985428",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-550985428",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 550985428,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDk4NTQyOA==",
+    "user": {
+      "login": "kimisan",
+      "id": 8416967,
+      "node_id": "MDQ6VXNlcjg0MTY5Njc=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/8416967?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/kimisan",
+      "html_url": "https://github.com/kimisan",
+      "followers_url": "https://api.github.com/users/kimisan/followers",
+      "following_url": "https://api.github.com/users/kimisan/following{/other_user}",
+      "gists_url": "https://api.github.com/users/kimisan/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/kimisan/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/kimisan/subscriptions",
+      "organizations_url": "https://api.github.com/users/kimisan/orgs",
+      "repos_url": "https://api.github.com/users/kimisan/repos",
+      "events_url": "https://api.github.com/users/kimisan/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/kimisan/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T08:57:20Z",
+    "updated_at": "2019-11-07T08:57:37Z",
+    "author_association": "MEMBER",
+    "body": "I stand with @TokenHash , @drd34d and @developerkevin .\r\nMy viewpoint is \"ETC is not a Peace of Westphalia Era Product\".\r\nIt is belong to People not country/state/corps.\r\n\r\n1. ETC is NOT Linux or Apache or any old OSS system. ETC is a system that needs to have the highest standards of trust minimization\r\n2. Openness is necessary. It goes without saying that the rules of the game should be open for anyone to see and understand. Anyone should be able to participate in any layer of the system without asking for any permission whatsoever.\r\n3. IF ITS NOT BROKEN, DON'T FIX IT.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550985428/reactions",
+      "total_count": 4,
+      "+1": 4,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551108185.json b/.gh-issues/00165_551108185.json
new file mode 100644
index 0000000..00d57b3
--- /dev/null
+++ b/.gh-issues/00165_551108185.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551108185",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551108185",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551108185,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTEwODE4NQ==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T14:42:04Z",
+    "updated_at": "2019-11-07T14:42:15Z",
+    "author_association": "MEMBER",
+    "body": "> IF ITS NOT BROKEN, DON'T FIX IT.\r\n\r\nIT IS BROKEN! We got no licenses on ECIPs which is what we are fixing. BIPs have licenses but are a mess and scattered.\r\n\r\nIf the whole idea is that \"BTC doesn't do it, so we shouldn't\" then it's terrible reasoning. We follow the BTC conservative model, but it doesn't mean every part of BTC is good. Look at the centralization of BIP access as an example we should never adopt.\r\n\r\nApache license protects openness and permissionlessness. It's why all the developers who have experience agree with it in this thread and it's only the nondevs who are against licensing.\r\n\r\nThe quote about openness from  the ETC Manifesto by arvicco commits the Permissionless Fallacy. You can't be for both unrestricted openness while championing that we shouldn't commit the permissionless fallacy. Both are at odds with one another. \r\n\r\nAn open society should stop anything that makes it less open. Same with a permissionless system. APACHE license protects openness.\r\n\r\nIf you are angry about DCO and Anonymity, that's understandable but isn't part of this thread. Let's isolate those issues and debate them one by one for clarity.\r\n\r\nI like to fight as much as the next guy but fighting for no reason anytime someone proposes something is getting old.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551108185/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551113571.json b/.gh-issues/00165_551113571.json
new file mode 100644
index 0000000..e3eef79
--- /dev/null
+++ b/.gh-issues/00165_551113571.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551113571",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551113571",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551113571,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTExMzU3MQ==",
+    "user": {
+      "login": "drd34d",
+      "id": 30156189,
+      "node_id": "MDQ6VXNlcjMwMTU2MTg5",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/30156189?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/drd34d",
+      "html_url": "https://github.com/drd34d",
+      "followers_url": "https://api.github.com/users/drd34d/followers",
+      "following_url": "https://api.github.com/users/drd34d/following{/other_user}",
+      "gists_url": "https://api.github.com/users/drd34d/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/drd34d/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/drd34d/subscriptions",
+      "organizations_url": "https://api.github.com/users/drd34d/orgs",
+      "repos_url": "https://api.github.com/users/drd34d/repos",
+      "events_url": "https://api.github.com/users/drd34d/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/drd34d/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T14:54:52Z",
+    "updated_at": "2019-11-07T14:54:52Z",
+    "author_association": "NONE",
+    "body": "Who exactly would this hypothetic patent troll sue anyway?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551113571/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551115076.json b/.gh-issues/00165_551115076.json
new file mode 100644
index 0000000..0766edd
--- /dev/null
+++ b/.gh-issues/00165_551115076.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551115076",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551115076",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551115076,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTExNTA3Ng==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T14:58:19Z",
+    "updated_at": "2019-11-07T14:58:19Z",
+    "author_association": "MEMBER",
+    "body": "Any business or service utilizing the ETC network.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551115076/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551202945.json b/.gh-issues/00165_551202945.json
new file mode 100644
index 0000000..dcfdc44
--- /dev/null
+++ b/.gh-issues/00165_551202945.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551202945",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551202945",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551202945,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIwMjk0NQ==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T18:23:43Z",
+    "updated_at": "2019-11-07T18:23:43Z",
+    "author_association": "MEMBER",
+    "body": "I will use all the licensing permissions in this thread to update all corresponding ECIPs.\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551202945/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551204630.json b/.gh-issues/00165_551204630.json
new file mode 100644
index 0000000..5e47e1d
--- /dev/null
+++ b/.gh-issues/00165_551204630.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551204630",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551204630",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551204630,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIwNDYzMA==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T18:27:59Z",
+    "updated_at": "2019-11-07T18:29:21Z",
+    "author_association": "MEMBER",
+    "body": "Do I get it correct, if there is no license and there will be find bug(s) in the ETC network system software, which can lead to mlns/blns money in lost, then the developers / contributors of those softwares can be sued and be possibly penalized, regardless the fact, that ETC network is decentralized and everyone is free to use it or not?\r\n\r\nThen the whole point of a decentralized blockchain is missed.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551204630/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551221674.json b/.gh-issues/00165_551221674.json
new file mode 100644
index 0000000..c4c35d0
--- /dev/null
+++ b/.gh-issues/00165_551221674.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551221674",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551221674",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551221674,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIyMTY3NA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T19:12:36Z",
+    "updated_at": "2019-11-07T19:12:36Z",
+    "author_association": "MEMBER",
+    "body": "Not about bugs, @TheEnthusiasticAs.  About patents.\r\n\r\nRead https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-551098432.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551221674/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551221887.json b/.gh-issues/00165_551221887.json
new file mode 100644
index 0000000..63ec173
--- /dev/null
+++ b/.gh-issues/00165_551221887.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551221887",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551221887",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551221887,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIyMTg4Nw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T19:13:09Z",
+    "updated_at": "2019-11-07T19:13:09Z",
+    "author_association": "MEMBER",
+    "body": "Worse yet, without clear licensing you could even be in trouble related to copyright.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551221887/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551225101.json b/.gh-issues/00165_551225101.json
new file mode 100644
index 0000000..bf5f310
--- /dev/null
+++ b/.gh-issues/00165_551225101.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551225101",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551225101",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551225101,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIyNTEwMQ==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T19:21:16Z",
+    "updated_at": "2019-11-07T19:21:16Z",
+    "author_association": "MEMBER",
+    "body": "@TokenHash Please keep the topic restricted to the license in question. DCO/CLA is another topic, and a much more contentious one.\r\n\r\nThat being said, is there anything in your comment that you may want to reconsider or amend? \r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551225101/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551227970.json b/.gh-issues/00165_551227970.json
new file mode 100644
index 0000000..6255dc6
--- /dev/null
+++ b/.gh-issues/00165_551227970.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551227970",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551227970",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551227970,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIyNzk3MA==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T19:28:33Z",
+    "updated_at": "2019-11-07T19:30:12Z",
+    "author_association": "MEMBER",
+    "body": "@drd34d Given that **WE ARE NOT DISCUSSING DCO/RESTRICTIONS ON WHO CAN CONTRIBUTE**, would you care to reconsider?\r\n\r\nalso, I need to address something here. @drd34d is the only one who has opposed this proposal on reasonable grounds, given that he was under the assumption that this proposal included the DCO / real name crap. The rest of you, Ask yourself this:\r\n\r\n1. Have you ever started, maintained, or been a large part of a software project?\r\n1. Have you ever, before last week, educated yourself on open source software licensing?\r\n1. Do you think those who contribute code value your opinion?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551227970/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551231468.json b/.gh-issues/00165_551231468.json
new file mode 100644
index 0000000..9e70479
--- /dev/null
+++ b/.gh-issues/00165_551231468.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551231468",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551231468",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551231468,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIzMTQ2OA==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T19:37:29Z",
+    "updated_at": "2019-11-07T19:37:29Z",
+    "author_association": "MEMBER",
+    "body": "To me it seems the majority if not all who are against Apache never used it before or even wrote any amount of code or contributed code to an open source project.\r\n\r\nIt's fine, it should be a learning experience for all to read up on Apache and why it's the most favored by all who want to contribute to FOSS https://resources.whitesourcesoftware.com/blog-whitesource/top-10-apache-license-questions-answered",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551231468/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551231538.json b/.gh-issues/00165_551231538.json
new file mode 100644
index 0000000..38a57e9
--- /dev/null
+++ b/.gh-issues/00165_551231538.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551231538",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551231538",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551231538,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIzMTUzOA==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T19:37:40Z",
+    "updated_at": "2019-11-07T19:37:40Z",
+    "author_association": "MEMBER",
+    "body": "@TheEnthusiasticAs More or less. Like I've said, there is not a whole lot of legal precedence on this matter. In theory, yes, if an ECIP lead to a system-wide issue that lost people money, an author of said ECIP may be held liable. Whether or not the author would lose in court is unknown - why put ourselves in this position when we can just follow best practices, add a license that protects contributors. \r\n\r\nAnd before Donald comes in accusing me of using fear as a tactic, seriously dude go fuck yourself with that argument. I take it as a personal insult to my integrity, something which I do not appreciate given the honest efforts I've put forth. While skepticism is healthy, uneducated blabbering, conspiracy theories and perpetuating this dialog of 'we are under attack' is not helpful.\r\n\r\nCould you please suggest an alternative to this proposal which would give legal protection to contributors, waiving liability and warranty, without adding a root license?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551231538/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551231596.json b/.gh-issues/00165_551231596.json
new file mode 100644
index 0000000..cfd8310
--- /dev/null
+++ b/.gh-issues/00165_551231596.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551231596",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551231596",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551231596,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIzMTU5Ng==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T19:37:50Z",
+    "updated_at": "2019-11-07T19:39:56Z",
+    "author_association": "MEMBER",
+    "body": "@developerkevin @TokenHash @drd34d @kimisan \r\n\r\nYou might also be interested in The Satoshi Oath, which is like a Hippocratic Oath for blockchain ecosystem participants.\r\n\r\nhttps://twitter.com/BobSummerwill/status/1184260583752757248\r\nhttps://en.wikipedia.org/wiki/Hippocratic_Oath\r\n\r\nAs I say in my tweet here, this is not something which you can solve at the protocol level, because it is related to human behaviour.  Humans will always cheat and lie.  There is no technical solution to that.\r\n\r\nReal world IP law helps protect us from bad actors.  The alternative is to have no defences because of irrational fear.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551231596/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551232945.json b/.gh-issues/00165_551232945.json
new file mode 100644
index 0000000..7b3cbeb
--- /dev/null
+++ b/.gh-issues/00165_551232945.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551232945",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551232945",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551232945,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIzMjk0NQ==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T19:41:33Z",
+    "updated_at": "2019-11-07T19:41:33Z",
+    "author_association": "MEMBER",
+    "body": "\"I'm here, standing in front of a burning building, offering you free fire insurance\"\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551232945/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551234140.json b/.gh-issues/00165_551234140.json
new file mode 100644
index 0000000..6852ce0
--- /dev/null
+++ b/.gh-issues/00165_551234140.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551234140",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551234140",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551234140,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIzNDE0MA==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T19:44:47Z",
+    "updated_at": "2019-11-07T19:44:47Z",
+    "author_association": "MEMBER",
+    "body": "I understood the risks, @bobsummerwill, @BelfordZ, @TokenHash (https://twitter.com/TokenHash/status/1192464774241476608). \r\nThank you for clarifying. I need to think about it a night. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551234140/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551234278.json b/.gh-issues/00165_551234278.json
new file mode 100644
index 0000000..09e707c
--- /dev/null
+++ b/.gh-issues/00165_551234278.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551234278",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551234278",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551234278,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIzNDI3OA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T19:45:07Z",
+    "updated_at": "2019-11-07T19:45:16Z",
+    "author_association": "MEMBER",
+    "body": "@TheEnthusiasticAs Also, actually @BelfordZ is right.\r\n\r\nIn addition to the copyright and patent risks, the complete ABSENCE of a clear license could leave people exposed to liability issues which are covered in MIT, BSD, Apache, GPL and pretty much every license on the planet with that language they have like this (from MIT):\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551234278/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551235287.json b/.gh-issues/00165_551235287.json
new file mode 100644
index 0000000..cfb76c3
--- /dev/null
+++ b/.gh-issues/00165_551235287.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551235287",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551235287",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551235287,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIzNTI4Nw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T19:47:55Z",
+    "updated_at": "2019-11-07T19:48:37Z",
+    "author_association": "MEMBER",
+    "body": "In some countries that might be implicit anyway - but not in every country.\r\nHence the software licences existing.\r\nTo protect developers.\r\nTo protect individuals and businesses using ETC.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551235287/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551239088.json b/.gh-issues/00165_551239088.json
new file mode 100644
index 0000000..24216f7
--- /dev/null
+++ b/.gh-issues/00165_551239088.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551239088",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551239088",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551239088,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIzOTA4OA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T19:58:08Z",
+    "updated_at": "2019-11-07T19:58:08Z",
+    "author_association": "MEMBER",
+    "body": "There is 44 years worth of experience and learning which have gone into the creation of these software licenses, based on BAD THINGS which have happened in the real world and which we do not want to happen to us.\r\n\r\nIt started with Richard Stallman's creation of the GNU project and then founding of the FSF in 1984 and 1985 respectively:\r\n\r\nhttps://en.wikipedia.org/wiki/GNU\r\nhttps://en.wikipedia.org/wiki/Free_Software_Foundation\r\n\r\nThe \"best practice\" at the end of this process is Apache 2.0 (permissive) and GPLv3 (copyleft).  Everything else has weaknesses and loopholes which were patched up in these licenses, and these (generally) the best there is depending on whether or not you are in the Free Software (copyleft) or Open Source (permissive) camps.\r\n\r\nMost project with weaker licensing (GPLv2, MIT, BSD, or worse yet public domain) are that way because they were started before these new licenses existed (that is the same for Linux) and now it is impossible to get all the contributors to agree to a relicensing.   Or because they are made by corporations who want to screw you with patents.\r\n\r\nHere is a recent example from our friends at Facebook, over React, where they ended up buckling on their specially terrible BSD+Patents licensing, back down to MIT.   That was better than it had been, but is still to their benefit.   They should have gone \"up\" to Apache 2.0 instead, but MIT leaves the door open for them to abuse users later:\r\n\r\nhttps://www.freecodecamp.org/news/facebook-just-changed-the-license-on-react-heres-a-2-minute-explanation-why-5878478913b2/",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551239088/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551239483.json b/.gh-issues/00165_551239483.json
new file mode 100644
index 0000000..0fca267
--- /dev/null
+++ b/.gh-issues/00165_551239483.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551239483",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551239483",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551239483,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIzOTQ4Mw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T19:59:16Z",
+    "updated_at": "2019-11-07T19:59:16Z",
+    "author_association": "MEMBER",
+    "body": "See also https://en.wikipedia.org/wiki/License_compatibility, which is great.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551239483/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551243927.json b/.gh-issues/00165_551243927.json
new file mode 100644
index 0000000..b7b85f2
--- /dev/null
+++ b/.gh-issues/00165_551243927.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551243927",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551243927",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551243927,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTI0MzkyNw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T20:11:49Z",
+    "updated_at": "2019-11-07T20:11:49Z",
+    "author_association": "MEMBER",
+    "body": "The Mozilla Public License is interesting too.   You could consider that to be an equivalent alternative to the LGPL.   The language in the LGPL assumes a \"compilation unit\" model which was the only real model in the 1980s when the LGPL was first written.\r\n\r\nThe LGPL (Lesser GNU Public License) exists so that you can build proprietary software as layers on top of copyleft layers - as long as there is a clean boundary.   Specifically it exists so that you can compile applications with GCC which use the C runtime library (or C++ runtime library) which is considered part of the GNU System.\r\n\r\nIf everything you compiled which had a copyleft runtime libraries incorporated was \"infected\" with the GPL then you would only be able to run GPL software on Linux.   That was not Richard's goal.   He wanted people to use GPL software because they wanted to - not to compel them.   Also, this was just a pragmatic need.   There was no Linux ecosystem at that time - just UNIX - and he wanted UNIX applications to be able to run on top of GNU/Linux.\r\n\r\nSo, the LGPL says that the \"infection\" stops at the OS boundary as long as the application only uses dynamic libraries (DLLs, SOs) for its dependencies onto the runtime libraries.   The Linux distro ships with runtime libraries as DLLs.   Developers ship the application and is resolves those DLLs at runtime.    As long as you application can ship on unmodified runtime libraries you are golden.  Generally that is the case.   Business USE Linux - they don't modify it - so it is fine.\r\n\r\nIf you DO customize those runtime libraries then you are still under an obligation to publish your modifications, so others can benefit from them.   That is the LGPL deal.\r\n\r\nBut with web development, the \"compilation units\" language doesn't work anymore, because everything is interpreted (Javascript).   So MPL is like the LGPL, but the boundaries are files, not compilation units.    So you can ship a folder tree worth of JS, CSS, XML, etc.   Frameworks, libraries, whatever.   And you can incorporate those folders of stuff into your own project and use them without that \"infecting\" your whole web app.\r\n\r\nJust like the LGPL, if you modify them then you need to publish it, so that others can benefit from your work.   But yeah - MPL quite nice in that way.   Or, more commonly, you can have weaker permissive licensing (Apache 2.0, MIT, BSD) for web content too, so there is no compulsion to have to publish your \"secret sauce\".\r\n\r\nBut again - Apache 2.0 probably best for the permissive stream, and in that case MPL for the copyleft web stream (for frameworks) and GPLv3 (for web apps).",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551243927/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551248154.json b/.gh-issues/00165_551248154.json
new file mode 100644
index 0000000..b233557
--- /dev/null
+++ b/.gh-issues/00165_551248154.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551248154",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551248154",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551248154,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTI0ODE1NA==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T20:23:50Z",
+    "updated_at": "2019-11-07T20:29:53Z",
+    "author_association": "MEMBER",
+    "body": "All right. I agree, based on the stated experience values here, with the Apache 2.0 as it is the most suitable for ETC network and the contributors,\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551248154/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551250029.json b/.gh-issues/00165_551250029.json
new file mode 100644
index 0000000..7268393
--- /dev/null
+++ b/.gh-issues/00165_551250029.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551250029",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551250029",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551250029,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTI1MDAyOQ==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T20:28:50Z",
+    "updated_at": "2019-11-07T20:28:50Z",
+    "author_association": "MEMBER",
+    "body": "@TheEnthusiasticAs as @BelfordZ said already, this thread isn't about anonymity. It's about Apache 2.0 license.\r\n\r\nAnonymity and DCO are to be discussed in a different thread later.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551250029/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551250255.json b/.gh-issues/00165_551250255.json
new file mode 100644
index 0000000..8d42d60
--- /dev/null
+++ b/.gh-issues/00165_551250255.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551250255",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551250255",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551250255,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTI1MDI1NQ==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T20:29:24Z",
+    "updated_at": "2019-11-07T20:29:24Z",
+    "author_association": "MEMBER",
+    "body": "updated",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551250255/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551324511.json b/.gh-issues/00165_551324511.json
new file mode 100644
index 0000000..a30b056
--- /dev/null
+++ b/.gh-issues/00165_551324511.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551324511",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551324511",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551324511,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTMyNDUxMQ==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T00:09:44Z",
+    "updated_at": "2019-11-08T00:09:44Z",
+    "author_association": "MEMBER",
+    "body": "@BelfordZ I responded here: https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-551293674",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551324511/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551327888.json b/.gh-issues/00165_551327888.json
new file mode 100644
index 0000000..04bff2c
--- /dev/null
+++ b/.gh-issues/00165_551327888.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551327888",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551327888",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551327888,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTMyNzg4OA==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T00:22:51Z",
+    "updated_at": "2019-11-08T00:24:22Z",
+    "author_association": "MEMBER",
+    "body": "@BelfordZ \r\n\r\n> Could you please suggest an alternative to this proposal which would give legal protection to contributors, waiving liability and warranty, without adding a root license?\r\n\r\nTo my knowledge the list of possible accepted licenses to be used on a per ECIP basis (a thing that hasn't been enforced, but can perfectly be enforced by editors from now on) as per ECIP-1000 are ok for those purposes to the point that these issues are really unknown or unproven as you wrote above.\r\n\r\nOn the other hand the argument that was being used before was \"to protect users\" not \"contributors\". Apache 2.0 is fine, I used it in my repo about Spaaw wallet: https://github.com/TokenHash/Spaaw\r\n\r\nWhat is not fine, imo, is to restrict the list of options by establishing only one as a root license if it's not absolutely necessary.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551327888/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551332344.json b/.gh-issues/00165_551332344.json
new file mode 100644
index 0000000..7dc1010
--- /dev/null
+++ b/.gh-issues/00165_551332344.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551332344",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551332344",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551332344,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTMzMjM0NA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T00:42:45Z",
+    "updated_at": "2019-11-08T00:42:45Z",
+    "author_association": "MEMBER",
+    "body": "\"really unknown or unproven\"\r\n\r\nIP issues are not unknown or unproven.  They have been a plague on open source project for three decades, which is what has brought us to GPLv3 and Apache 2.0.   See everything I have written above.\r\n\r\nThese measures protect both contributors and end-users (whether individual or corporate, but especially corporations - as the most likely targets of IP claims).",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551332344/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551340974.json b/.gh-issues/00165_551340974.json
new file mode 100644
index 0000000..3ca16b1
--- /dev/null
+++ b/.gh-issues/00165_551340974.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551340974",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551340974",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551340974,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTM0MDk3NA==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T01:20:08Z",
+    "updated_at": "2019-11-08T01:21:49Z",
+    "author_association": "MEMBER",
+    "body": "What would make it absolutely necessary to you, @TokenHash ? A lawsuit?\r\n\r\nDoing nothing here is accepting a reactionary stance to these types of issues. Doing so knowingly in the face of a sound solution is how I would define lunacy. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551340974/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551344143.json b/.gh-issues/00165_551344143.json
new file mode 100644
index 0000000..8fca471
--- /dev/null
+++ b/.gh-issues/00165_551344143.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551344143",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551344143",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551344143,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTM0NDE0Mw==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T01:33:46Z",
+    "updated_at": "2019-11-08T01:35:55Z",
+    "author_association": "MEMBER",
+    "body": "@BelfordZ The alternative is not 'doing nothing' and nobody wants a lawsuit. I think it is agreed, even ECIP-1000 expresses it, that all ECIPs need to have a license. \r\n\r\nThe list of licenses are five options, Apache 2.0 included, extensible with eight more as \"not recommended, but acceptable\".\r\n\r\nAs establishing one of those, Apache 2.0, as a root license in the repo would restrict the list to only one, the question is if it is absolutely necessary to do that or if it a \"nice to have\".\r\n\r\nAnother way of asking is are all the licenses in ECIP-1000, except Apache 2.0, all bad and risky options both for contributors and users? If so, can you cite the sources of that opinion?\r\n\r\nPS: and I am volunteering to seek authors and add licenses to all existing 41 ECIP retroactively, going forward editors can enforce that all have to have one as well. ETC can even explicitly say it has a preference for Apache 2.0, but not necessarily eliminating all other options in ECIP-1000.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551344143/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551794125.json b/.gh-issues/00165_551794125.json
new file mode 100644
index 0000000..03af3fe
--- /dev/null
+++ b/.gh-issues/00165_551794125.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551794125",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551794125",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551794125,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTc5NDEyNQ==",
+    "user": {
+      "login": "kimisan",
+      "id": 8416967,
+      "node_id": "MDQ6VXNlcjg0MTY5Njc=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/8416967?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/kimisan",
+      "html_url": "https://github.com/kimisan",
+      "followers_url": "https://api.github.com/users/kimisan/followers",
+      "following_url": "https://api.github.com/users/kimisan/following{/other_user}",
+      "gists_url": "https://api.github.com/users/kimisan/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/kimisan/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/kimisan/subscriptions",
+      "organizations_url": "https://api.github.com/users/kimisan/orgs",
+      "repos_url": "https://api.github.com/users/kimisan/repos",
+      "events_url": "https://api.github.com/users/kimisan/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/kimisan/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T13:29:10Z",
+    "updated_at": "2019-11-08T13:29:10Z",
+    "author_association": "MEMBER",
+    "body": "For ECIPs you can select whatever license(or no license) as you like.\r\nFor me, I will use 「木蘭寬鬆許可證」（MulanPSL).\r\nIt is the first China Permissive software license and better than Apache 2.0 .\r\nAnd It already be used by Huawei.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551794125/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551822854.json b/.gh-issues/00165_551822854.json
new file mode 100644
index 0000000..2d95f9a
--- /dev/null
+++ b/.gh-issues/00165_551822854.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551822854",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551822854",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551822854,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTgyMjg1NA==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T13:49:04Z",
+    "updated_at": "2019-11-08T13:49:04Z",
+    "author_association": "MEMBER",
+    "body": "@kimisan if that is true, then maybe it should be included in the list of options in ECIP-1000.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551822854/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551841775.json b/.gh-issues/00165_551841775.json
new file mode 100644
index 0000000..d887385
--- /dev/null
+++ b/.gh-issues/00165_551841775.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551841775",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551841775",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551841775,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTg0MTc3NQ==",
+    "user": {
+      "login": "kimisan",
+      "id": 8416967,
+      "node_id": "MDQ6VXNlcjg0MTY5Njc=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/8416967?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/kimisan",
+      "html_url": "https://github.com/kimisan",
+      "followers_url": "https://api.github.com/users/kimisan/followers",
+      "following_url": "https://api.github.com/users/kimisan/following{/other_user}",
+      "gists_url": "https://api.github.com/users/kimisan/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/kimisan/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/kimisan/subscriptions",
+      "organizations_url": "https://api.github.com/users/kimisan/orgs",
+      "repos_url": "https://api.github.com/users/kimisan/repos",
+      "events_url": "https://api.github.com/users/kimisan/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/kimisan/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T14:10:32Z",
+    "updated_at": "2019-11-08T14:10:32Z",
+    "author_association": "MEMBER",
+    "body": "> @kimisan if that is true, then maybe it should be included in the list of options in ECIP-1000.\r\n\r\nIt should be included in the list of options in ECIP-1000.\r\nThat we will have West (Apache Software Foundation) and China(China Open Source Cloud League) together.\r\nIt is better for ETC as we have West and China community ^^\r\n\r\n1. The Apache Software Foundation (ASF) is an American non-profit corporation (classified as a \r\n organization in the United States)\r\n\r\n2. COSCL, China Open Source Cloud League run by Ministry of Industry and Information Technology (MIIT) of the Chinese government and CHINA Electronics Standardization Institute（CESI).\r\n中國開源雲聯盟（COSCL, China Open Source Cloud League）成立於2012年8月，在工業和信息化部信息化和軟件服務業司指導下，挂靠在中國電子技術標準化研究院.\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551841775/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551851451.json b/.gh-issues/00165_551851451.json
new file mode 100644
index 0000000..8203392
--- /dev/null
+++ b/.gh-issues/00165_551851451.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551851451",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551851451",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551851451,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTg1MTQ1MQ==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T14:36:23Z",
+    "updated_at": "2019-11-08T14:36:23Z",
+    "author_association": "MEMBER",
+    "body": "I created a PR for the MulanPSL license: https://github.com/ethereumclassic/ECIPs/pull/178",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551851451/reactions",
+      "total_count": 5,
+      "+1": 5,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551875772.json b/.gh-issues/00165_551875772.json
new file mode 100644
index 0000000..4468f2f
--- /dev/null
+++ b/.gh-issues/00165_551875772.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551875772",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551875772",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551875772,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTg3NTc3Mg==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T15:38:53Z",
+    "updated_at": "2019-11-08T15:40:02Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "I'm personally no expert, but (I think) I would like for my stuff to be public domain. @bobsummerwill would this still be possible?\r\n\r\nWhat are the major drawbacks of having a set of acceptable licenses from which the author may pick one?\r\n\r\nThanks",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551875772/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551889563.json b/.gh-issues/00165_551889563.json
new file mode 100644
index 0000000..3418adc
--- /dev/null
+++ b/.gh-issues/00165_551889563.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551889563",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551889563",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551889563,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTg4OTU2Mw==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T16:13:20Z",
+    "updated_at": "2019-11-09T00:04:03Z",
+    "author_association": "MEMBER",
+    "body": "I will add in my table all those who asked for \"public domain\" (@zmitton @soc1c @cseberino ) as CC0.\r\n\r\nAll who consented to Apache 2.0 will do correspondingly.\r\n\r\nHi @cseberino, just to clarify, are yours CC-BY-SA-4.0? (that is also acceptable in ECIP-1000)\r\n\r\nThen I will update their corresponding ECIPs putting the selected license in the \"meta\" section and in the footer.\r\n\r\nI will post here the table before updating ECIPs so authors can check its correct.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551889563/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551936744.json b/.gh-issues/00165_551936744.json
new file mode 100644
index 0000000..5997e9c
--- /dev/null
+++ b/.gh-issues/00165_551936744.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551936744",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551936744",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551936744,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTkzNjc0NA==",
+    "user": {
+      "login": "OmniEdge",
+      "id": 7707354,
+      "node_id": "MDQ6VXNlcjc3MDczNTQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/7707354?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/OmniEdge",
+      "html_url": "https://github.com/OmniEdge",
+      "followers_url": "https://api.github.com/users/OmniEdge/followers",
+      "following_url": "https://api.github.com/users/OmniEdge/following{/other_user}",
+      "gists_url": "https://api.github.com/users/OmniEdge/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/OmniEdge/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/OmniEdge/subscriptions",
+      "organizations_url": "https://api.github.com/users/OmniEdge/orgs",
+      "repos_url": "https://api.github.com/users/OmniEdge/repos",
+      "events_url": "https://api.github.com/users/OmniEdge/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/OmniEdge/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T18:21:31Z",
+    "updated_at": "2019-11-08T18:21:31Z",
+    "author_association": "NONE",
+    "body": "I am not a dev and definitely not a lawyer so FWIW I would still like to express the same as what others have mentioned. Zac's question states it perfectly: What are the major drawbacks of having a set of acceptable licenses from which the author may pick one?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551936744/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551948963.json b/.gh-issues/00165_551948963.json
new file mode 100644
index 0000000..3fc8f28
--- /dev/null
+++ b/.gh-issues/00165_551948963.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551948963",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551948963",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551948963,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTk0ODk2Mw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T18:57:19Z",
+    "updated_at": "2019-11-08T18:57:31Z",
+    "author_association": "MEMBER",
+    "body": "See everything I have written above.  I have already answered all of these questions.\r\n\r\nSee especially https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551239088.\r\n\r\n\"What are the major drawbacks of having a set of acceptable licenses from which the author may pick one?\"\r\n\r\nThat it leaves all users of ETC open to patents, copyright claims and even liability from damages caused by bugs.\r\n\r\nFor no practical win other than thinking that public domain is better than Apache 2.0 for ideological reasons which do not hold water.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551948963/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551949483.json b/.gh-issues/00165_551949483.json
new file mode 100644
index 0000000..7ccf19a
--- /dev/null
+++ b/.gh-issues/00165_551949483.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551949483",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551949483",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551949483,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTk0OTQ4Mw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T18:58:54Z",
+    "updated_at": "2019-11-08T18:58:54Z",
+    "author_association": "MEMBER",
+    "body": "@TokenHash soc1c expressed a preference for CC0.  It was not a hard line for him. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551949483/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551952025.json b/.gh-issues/00165_551952025.json
new file mode 100644
index 0000000..d15da43
--- /dev/null
+++ b/.gh-issues/00165_551952025.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551952025",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551952025",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551952025,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTk1MjAyNQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T19:06:00Z",
+    "updated_at": "2019-11-08T19:06:00Z",
+    "author_association": "MEMBER",
+    "body": "@kimisan You point on that new license is fascinating.  I will talk to the OSI (https://opensource.org/) about that and see if it is on their radar.\r\n\r\nThe downside to allowing such a new license (like cryptography) is that new things are unproven, and there may be issues with that license which are not time-tested in the way that Apache 2.0 and GPLv3 are.\r\n\r\nBut in principle I don't have any objection to exploring that option, if it provides equivalent patent-protection and does not provide any LESS protections than Apache 2.0.\r\n\r\nApache 2.0 is not the end of the story any more than SHA256 or SHA3 are the end of the story.  Indeed, those are not the story at all in China, right?   They are the output of NIST, which, unsurprisingly is probably not trusted in China, being a defacto arm of the US government.\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551952025/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551954165.json b/.gh-issues/00165_551954165.json
new file mode 100644
index 0000000..19b193a
--- /dev/null
+++ b/.gh-issues/00165_551954165.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551954165",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551954165",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551954165,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTk1NDE2NQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T19:12:20Z",
+    "updated_at": "2019-11-08T19:12:20Z",
+    "author_association": "MEMBER",
+    "body": "I started working with \"Kirill from Sberbank\" along those lines in 2017.\r\nThey were building Masterchain - a permissioned Ethereum variant for the Russian banking sector.\r\nThey needed GOST cryptography - as mandated in Russian for regulated industries.\r\n\r\nAnd they did the most fabulous changes to Geth, to make all the cryptography \"pluggable\":\r\n\r\nhttps://twitter.com/BobSummerwill/status/983593836071960576\r\n\r\nI would suggesting that Cryptape, who were building CITA, a similar permissioned Ethereum for Taiwan banking, would contribute to that effort with matching Chinese cryptography, and that would get upstreamed first into Quorum and then into Geth (and so into the EIPs process).\r\n\r\nKirill had the most marvellous idea of how an Ethereum node could run with multiple cryptographies in parallel, and you could do something like an Internet gateway - to connect these network or networks together.\r\n\r\nThe \"world Ethereum network\" would be on SHA* cryptography, but you could have SM* cyphers for a Chinese Ethereum:\r\nhttps://en.wikipedia.org/wiki/SM4_(cipher)\r\n\r\nOr indeed, you could have parallel world Ethereum instances running over all of these different cryptographies, with gateways between them.\r\n\r\nUltimately we need some cryptographic association which is NOT associated with any governments, but which is neutral - like web and internet standards aim to be - but that does not exist yet - so we have to trust these state bodies - which is itself a bad assumption!\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551954165/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551954543.json b/.gh-issues/00165_551954543.json
new file mode 100644
index 0000000..b54263e
--- /dev/null
+++ b/.gh-issues/00165_551954543.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551954543",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551954543",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551954543,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTk1NDU0Mw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T19:13:35Z",
+    "updated_at": "2019-11-08T19:13:35Z",
+    "author_association": "MEMBER",
+    "body": "But I have no objection out of the box to looking at Chinese open source licensing.\r\nJust fear that they are not battle-tested yet in the same way.\r\nBut anything is better than the status quo.\r\nAnd anything is better than even clear licensing labelling, but that being public domain.\r\nBecause that is ZERO protection from the bad actors.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551954543/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551954653.json b/.gh-issues/00165_551954653.json
new file mode 100644
index 0000000..478fe65
--- /dev/null
+++ b/.gh-issues/00165_551954653.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551954653",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551954653",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551954653,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTk1NDY1Mw==",
+    "user": {
+      "login": "MadeofTin",
+      "id": 1226869,
+      "node_id": "MDQ6VXNlcjEyMjY4Njk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1226869?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/MadeofTin",
+      "html_url": "https://github.com/MadeofTin",
+      "followers_url": "https://api.github.com/users/MadeofTin/followers",
+      "following_url": "https://api.github.com/users/MadeofTin/following{/other_user}",
+      "gists_url": "https://api.github.com/users/MadeofTin/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/MadeofTin/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/MadeofTin/subscriptions",
+      "organizations_url": "https://api.github.com/users/MadeofTin/orgs",
+      "repos_url": "https://api.github.com/users/MadeofTin/repos",
+      "events_url": "https://api.github.com/users/MadeofTin/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/MadeofTin/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T19:13:54Z",
+    "updated_at": "2019-11-08T19:13:54Z",
+    "author_association": "NONE",
+    "body": "Just for some clarification and to avoid miss-information, saying EIPs\ncopied BIPs is incomplete. BIPs copied Python Improvement Proposals\ndirectly and Ethereum copied BIPs with almost no changes (ERC is the\nexception)\n\nThe Python system was designed for a very different ecosystem with very\ndifferent constraints. One notable example is the complete lack of\ndecentralization.\n\nFor what it is worth, the system hasn’t been reexamined from a principals\nand design perspective since the change of scenery.\n\nCheers,\nJames\n\n\nOn Fri, Nov 8, 2019 at 11:58 AM Bob Summerwill <notifications@github.com>\nwrote:\n\n> @TokenHash <https://github.com/TokenHash> soc1c expressed a preference\n> for CC0. It was not a hard line for him.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereumclassic/ECIPs/issues/165?email_source=notifications&email_token=AAJLQ5MZBZLBEGPR62NZWVTQSWZHBA5CNFSM4JI7EFL2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEDTBJKY#issuecomment-551949483>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAJLQ5JHFSYJNRQ6JSP5LGLQSWZHBANCNFSM4JI7EFLQ>\n> .\n>\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551954653/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_551989761.json b/.gh-issues/00165_551989761.json
new file mode 100644
index 0000000..9692f20
--- /dev/null
+++ b/.gh-issues/00165_551989761.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551989761",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-551989761",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 551989761,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTk4OTc2MQ==",
+    "user": {
+      "login": "cseberino",
+      "id": 4721990,
+      "node_id": "MDQ6VXNlcjQ3MjE5OTA=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/4721990?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/cseberino",
+      "html_url": "https://github.com/cseberino",
+      "followers_url": "https://api.github.com/users/cseberino/followers",
+      "following_url": "https://api.github.com/users/cseberino/following{/other_user}",
+      "gists_url": "https://api.github.com/users/cseberino/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/cseberino/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/cseberino/subscriptions",
+      "organizations_url": "https://api.github.com/users/cseberino/orgs",
+      "repos_url": "https://api.github.com/users/cseberino/repos",
+      "events_url": "https://api.github.com/users/cseberino/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/cseberino/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T21:06:44Z",
+    "updated_at": "2019-11-08T21:06:44Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Apache 2 is fine for me\n\nOn Fri, Nov 8, 2019, 10:13 AM Donald McIntyre <notifications@github.com>\nwrote:\n\n> I will add in my table all those who asked for \"public domain\" (@zmitton\n> <https://github.com/zmitton> @soc1c <https://github.com/soc1c> @cseberino\n> <https://github.com/cseberino> ) as CC0.\n>\n> All who consented to Apache 2.0 will do correspondingly.\n>\n> Hi @cseberino <https://github.com/cseberino>, just to clarify, are yours\n> CC-BY-SA-4.0? (that is also acceptable in ECIP-1000)\n>\n> Then I will update their corresponding ECIPs putting the selected license\n> in the \"meta\" section and in the footer.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereumclassic/ECIPs/issues/165?email_source=notifications&email_token=ABEA2RUP3NGIRHMZBTPLWITQSWF2HA5CNFSM4JI7EFL2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEDSSVGY#issuecomment-551889563>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ABEA2RSXIWTTYU7VXVQB57DQSWF2HANCNFSM4JI7EFLQ>\n> .\n>\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551989761/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_552197925.json b/.gh-issues/00165_552197925.json
new file mode 100644
index 0000000..113ab79
--- /dev/null
+++ b/.gh-issues/00165_552197925.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552197925",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-552197925",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 552197925,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjE5NzkyNQ==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-10T14:05:48Z",
+    "updated_at": "2019-11-10T14:05:48Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "In order to play nice and move everything along, I hereby agree to Apache 2 for my previous and future ECIPs (unless otherwise stated).\r\n\r\nThe one last thing that I would like us all to consider @bobsummerwill is that *it may not always be necessary to have an explicit license*. So in the rare case that we cannot attain a license, it would be wise to consider the content before outright rejecting it. \r\n\r\nFor example, @pyskell had a proposal to [reduce the gas limit to 1,000,000](https://github.com/ethereumclassic/ECIPs/issues/14). It doesn't require code changes and I don't see how copyright would even be relevant. That's all.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552197925/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00165_552224292.json b/.gh-issues/00165_552224292.json
new file mode 100644
index 0000000..7098a25
--- /dev/null
+++ b/.gh-issues/00165_552224292.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552224292",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/165#issuecomment-552224292",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/165",
+    "id": 552224292,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjIyNDI5Mg==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-10T19:15:14Z",
+    "updated_at": "2019-11-10T19:15:14Z",
+    "author_association": "MEMBER",
+    "body": "Thanks, @zmitton.\r\n\r\nMy counter to your \"no explicit license\" point is that having the ability for proposals to be submitted without any explicit license just introduces subjectivity into the process with no practical upside whatsoever.   Even CC0 is better than \"not specified\" in terms of managing potential legal risk to ETC end-users and businesses using ETC network.\r\n\r\nBeyond \"protest\", I see no practical reason whatsoever why even for information proposals like Anthony's that you would not want an explicit license.\r\n\r\nIt is just a loophole.   And somebody will exploit it someday, or try to, and then we will have to expend time and effort on that.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552224292/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00169.json b/.gh-issues/00169.json
new file mode 100644
index 0000000..d41b9d2
--- /dev/null
+++ b/.gh-issues/00169.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/169",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/169/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/169/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/169/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/169",
+    "id": 518712950,
+    "node_id": "MDU6SXNzdWU1MTg3MTI5NTA=",
+    "number": 169,
+    "title": "ECIP-1040: Generalized Account Versioning Scheme",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-06T20:23:14Z",
+    "updated_at": "2019-11-08T23:00:49Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "Discussion page for ECIP-1040.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/169/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00172.json b/.gh-issues/00172.json
new file mode 100644
index 0000000..4b9d96b
--- /dev/null
+++ b/.gh-issues/00172.json
@@ -0,0 +1,68 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/172",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/172/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/172/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/172/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/172",
+    "id": 519000325,
+    "node_id": "MDU6SXNzdWU1MTkwMDAzMjU=",
+    "number": 172,
+    "title": "ECIP-1070: ProgPoW for ETC Discussions",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785127,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20core",
+        "name": "type: core",
+        "color": "d73a4a",
+        "default": false,
+        "description": "Requires consensus consideration"
+      }
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 6,
+    "created_at": "2019-11-07T02:24:24Z",
+    "updated_at": "2019-11-08T21:14:28Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "Discussions for ProgPoW for ETC Discussions concerning this Pull Request: https://github.com/ethereumclassic/ECIPs/pull/171",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/172/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00172_550956635.json b/.gh-issues/00172_550956635.json
new file mode 100644
index 0000000..db593f7
--- /dev/null
+++ b/.gh-issues/00172_550956635.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550956635",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/172#issuecomment-550956635",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/172",
+    "id": 550956635,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDk1NjYzNQ==",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T07:21:44Z",
+    "updated_at": "2019-11-07T07:21:44Z",
+    "author_association": "MEMBER",
+    "body": "Conclusion of hardware and software security audits.\r\nhttps://medium.com/ethereum-cat-herders/progpow-audits-released-ed4973ebe073",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550956635/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00172_550958236.json b/.gh-issues/00172_550958236.json
new file mode 100644
index 0000000..00c3136
--- /dev/null
+++ b/.gh-issues/00172_550958236.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550958236",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/172#issuecomment-550958236",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/172",
+    "id": 550958236,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDk1ODIzNg==",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T07:27:34Z",
+    "updated_at": "2019-11-07T07:27:34Z",
+    "author_association": "MEMBER",
+    "body": "**Former home of gangnum testnet**. https://github.com/greerso/testnet\r\nStatus Dashboard: http://boot.gangnam.ethdevops.io/\r\nBlock Explorer: https://gangnam.etherchain.org/\r\nMining Pool: https://gangnam.wattpool.net/\r\nGitter Support: https://gitter.im/ifdefelse/community/",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550958236/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00172_551099002.json b/.gh-issues/00172_551099002.json
new file mode 100644
index 0000000..d7522f3
--- /dev/null
+++ b/.gh-issues/00172_551099002.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551099002",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/172#issuecomment-551099002",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/172",
+    "id": 551099002,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTA5OTAwMg==",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T14:20:25Z",
+    "updated_at": "2019-11-07T14:20:25Z",
+    "author_association": "MEMBER",
+    "body": "Current Trello of ProgPoW hype/fud https://trello.com/b/KrD25QI5/progpow",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551099002/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00172_551374490.json b/.gh-issues/00172_551374490.json
new file mode 100644
index 0000000..636760a
--- /dev/null
+++ b/.gh-issues/00172_551374490.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551374490",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/172#issuecomment-551374490",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/172",
+    "id": 551374490,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTM3NDQ5MA==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T03:58:50Z",
+    "updated_at": "2019-11-08T04:01:03Z",
+    "author_association": "MEMBER",
+    "body": "gonna post the same comment I wrote for the sha3 ticket:\r\nhttps://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-551256069",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551374490/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 1
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00172_551868772.json b/.gh-issues/00172_551868772.json
new file mode 100644
index 0000000..48c137a
--- /dev/null
+++ b/.gh-issues/00172_551868772.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551868772",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/172#issuecomment-551868772",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/172",
+    "id": 551868772,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTg2ODc3Mg==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T15:20:35Z",
+    "updated_at": "2019-11-08T15:21:23Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "The asymmetry between mining and verifying is still problematic (too low). It has the same issue as Ethash: Extremely expensive verification (compared to sha256, for instance). This is because of a pseudo-random changing of params per epoch (every ~5 days). This prevents the ability to have a   [pure function](https://en.wikipedia.org/wiki/Pure_function) for verification. Verification requires a much more expensive _context_: The full historic datasets that resulted in particular epoch params.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551868772/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00172_551991972.json b/.gh-issues/00172_551991972.json
new file mode 100644
index 0000000..f5aa098
--- /dev/null
+++ b/.gh-issues/00172_551991972.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551991972",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/172#issuecomment-551991972",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/172",
+    "id": 551991972,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTk5MTk3Mg==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T21:14:28Z",
+    "updated_at": "2019-11-08T21:14:28Z",
+    "author_association": "MEMBER",
+    "body": "Yeah, that's why I believe SHA3 is the most elegant solution.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551991972/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174.json b/.gh-issues/00174.json
new file mode 100644
index 0000000..4b42bb5
--- /dev/null
+++ b/.gh-issues/00174.json
@@ -0,0 +1,68 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174",
+    "id": 519388971,
+    "node_id": "MDU6SXNzdWU1MTkzODg5NzE=",
+    "number": 174,
+    "title": "Core Devs Call: Mining Algorithm Upgrade",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785127,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20core",
+        "name": "type: core",
+        "color": "d73a4a",
+        "default": false,
+        "description": "Requires consensus consideration"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 25,
+    "created_at": "2019-11-07T16:52:20Z",
+    "updated_at": "2019-11-22T06:16:33Z",
+    "closed_at": "2019-11-21T14:21:38Z",
+    "author_association": "MEMBER",
+    "body": "### ETC Core Devs Call - Mining Algorithm Upgrade\r\n\r\nWhen: **Thursday, November 21, 2019, 1pm UTC**, 60 minutes max.\r\n\r\nWhere: **Ethereum Classic Discord** https://discord.gg/dwxb6nf `#ecips` channel. Will use/create a voice channel _ad hoc._\r\n\r\n### Agenda\r\n\r\n- Quick client teams check-in\r\n  - Parity Ethereum / Parity Tech\r\n  - Geth Classic / ChainSafe, ETC Labs Core\r\n  - Multi-Geth / Multi-Geth, ETCLabs Core \r\n  - Hyperledger Besu / ChainSafe, PegaSys\r\n- Defining a process\r\n  - keeping the call technical?\r\n  - ECBP-1076 \"algo change process\" ref #187\r\n- Discuss options for mining algorithms\r\n  - ECIP-1049 \"SHA-3\" @p3c-bot ref #8 #13\r\n  - ECIP-1070 \"ProgPOW\" @YazzyYaz ref #171 #172 \r\n  - Status Quo: \"Ethash\" ...\r\n- Agree on a joint way forward on the three proposals above\r\n- Commit to a timeline\r\n- Focus on a testnet\r\n- Discuss anything else related to Mining\r\n- Bonus: \r\n  - ECIP-1043 \"DAG Size Limit\" @realcodywburns @Wolf-Linzhi ref #11 #138\r\n  - ECIP-1047 \"Block Gas Limit\" @pyskell @zmitton ref #6 #14\r\n\r\nPlease comment to add items to the agenda",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_551172615.json b/.gh-issues/00174_551172615.json
new file mode 100644
index 0000000..f5be883
--- /dev/null
+++ b/.gh-issues/00174_551172615.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551172615",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-551172615",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 551172615,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTE3MjYxNQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T17:06:57Z",
+    "updated_at": "2019-11-07T17:06:57Z",
+    "author_association": "MEMBER",
+    "body": "We need to discuss gaslimit too:\r\n\r\n@pyskell has submitted this proposal - https://ecips.ethereumclassic.org/ECIPs/ecip-1047.\r\n@zmitton has indicated he has an alternative\r\nAnd I will create an alternative ECIP as well.\r\n\r\nI would argue that gaslimit and DAG are more important to tackle first, and algorithm options second.\r\n\r\nThe gaslimit and DAG are immediate issues with the current setup.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551172615/reactions",
+      "total_count": 2,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 1
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_551177759.json b/.gh-issues/00174_551177759.json
new file mode 100644
index 0000000..3e7444b
--- /dev/null
+++ b/.gh-issues/00174_551177759.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551177759",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-551177759",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 551177759,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTE3Nzc1OQ==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T17:19:18Z",
+    "updated_at": "2019-11-07T17:20:00Z",
+    "author_association": "MEMBER",
+    "body": "\"Agree on a joint way forward on the **four** proposals above\"\r\n\r\nmeaning, that \"status quo\" is also a way forward\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551177759/reactions",
+      "total_count": 4,
+      "+1": 3,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 1
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_551179805.json b/.gh-issues/00174_551179805.json
new file mode 100644
index 0000000..72e30e9
--- /dev/null
+++ b/.gh-issues/00174_551179805.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551179805",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-551179805",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 551179805,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTE3OTgwNQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T17:24:10Z",
+    "updated_at": "2019-11-07T17:24:10Z",
+    "author_association": "MEMBER",
+    "body": "Updated agenda\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551179805/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_551224286.json b/.gh-issues/00174_551224286.json
new file mode 100644
index 0000000..5996c7f
--- /dev/null
+++ b/.gh-issues/00174_551224286.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551224286",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-551224286",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 551224286,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIyNDI4Ng==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T19:19:22Z",
+    "updated_at": "2019-11-07T19:20:10Z",
+    "author_association": "MEMBER",
+    "body": "Yes, @TokenHash.\r\n\r\nI would suggest:\r\n\r\nBLOCK 1:\r\n- Status quo on gas, or impose gas limit\r\n- Status quo on DAG, or introduce DAG size limit\r\n\r\nBLOCK 2:\r\n- Status quo on Ethash, or SHA3 or ProgPOW\r\n\r\nAnother radical option which we should put on the table in BLOCK 2 is reverting to \"One CPU One Vote\" using RandomX from Monero, and maybe there are other options.    I don't think that is a good choice myself, because it would likely impact security horribly, but that is a \"fair market\" approach.  Better for decentralization, worse for security.\r\n\r\nAny of these transitions are \"central planning\", but might be the best thing for ETC if they lead to long-term stability.   Same as the Monetary Policy.\r\n\r\nBut, IMHO, we should be aiming to set policy here to something we think can stick for decades, and then we lock things down BEFORE THE MASSES ARRIVE.\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551224286/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_551225415.json b/.gh-issues/00174_551225415.json
new file mode 100644
index 0000000..78f0586
--- /dev/null
+++ b/.gh-issues/00174_551225415.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551225415",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-551225415",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 551225415,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIyNTQxNQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T19:22:04Z",
+    "updated_at": "2019-11-07T19:22:04Z",
+    "author_association": "MEMBER",
+    "body": "Also, the thing you hate :-)\r\n\r\nhttps://ethereumclassic.org/blog/2019-10-06-pow-mining-explicit-social-contract/\r\n\r\nSo is this proposal a Constitution?  Not really. It would just consist of a single sentence. Something like:\r\n\r\n“Adoption of this proposal by the ECIP authors is an explicit social contact between the Ethereum Classic ecosystem and the POW mining ecosystem that ETC intends to stay with POW mining (not merged mining) into the indefinite future.”",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551225415/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_551226123.json b/.gh-issues/00174_551226123.json
new file mode 100644
index 0000000..e3038f4
--- /dev/null
+++ b/.gh-issues/00174_551226123.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551226123",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-551226123",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 551226123,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIyNjEyMw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T19:23:51Z",
+    "updated_at": "2019-11-07T19:23:51Z",
+    "author_association": "MEMBER",
+    "body": "That one-liner would probably be its own ECIP.\r\nTo be adopted or rejected.\r\nJust as we are doing with ProgPOW.\r\nLet me create an ECIP for that too.\r\n\r\nI would advocate for that in BLOCK 1, because it applies whatever the hash algorithm is, and, like the gaslimit and DAG points is related to long-term certainty for miners.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551226123/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_551227943.json b/.gh-issues/00174_551227943.json
new file mode 100644
index 0000000..e80c12b
--- /dev/null
+++ b/.gh-issues/00174_551227943.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551227943",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-551227943",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 551227943,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIyNzk0Mw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T19:28:28Z",
+    "updated_at": "2019-11-07T19:28:28Z",
+    "author_association": "MEMBER",
+    "body": "It is kind of the opposite to creating an ECIP proposing a transition to POS and then rejecting it.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551227943/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_551374583.json b/.gh-issues/00174_551374583.json
new file mode 100644
index 0000000..a9674ce
--- /dev/null
+++ b/.gh-issues/00174_551374583.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551374583",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-551374583",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 551374583,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTM3NDU4Mw==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T03:59:24Z",
+    "updated_at": "2019-11-08T04:00:41Z",
+    "author_association": "MEMBER",
+    "body": "Im going to post my comment from the sha3 ecip discussion issue:\r\nhttps://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-551256069",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551374583/reactions",
+      "total_count": 3,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 3,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_552330153.json b/.gh-issues/00174_552330153.json
new file mode 100644
index 0000000..bbde997
--- /dev/null
+++ b/.gh-issues/00174_552330153.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552330153",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-552330153",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 552330153,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjMzMDE1Mw==",
+    "user": {
+      "login": "hitchcott",
+      "id": 1696942,
+      "node_id": "MDQ6VXNlcjE2OTY5NDI=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/1696942?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/hitchcott",
+      "html_url": "https://github.com/hitchcott",
+      "followers_url": "https://api.github.com/users/hitchcott/followers",
+      "following_url": "https://api.github.com/users/hitchcott/following{/other_user}",
+      "gists_url": "https://api.github.com/users/hitchcott/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/hitchcott/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/hitchcott/subscriptions",
+      "organizations_url": "https://api.github.com/users/hitchcott/orgs",
+      "repos_url": "https://api.github.com/users/hitchcott/repos",
+      "events_url": "https://api.github.com/users/hitchcott/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/hitchcott/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-11T07:46:25Z",
+    "updated_at": "2019-11-11T07:46:25Z",
+    "author_association": "MEMBER",
+    "body": "Wanted to mention an idea for switching algos inspired by grin.\r\n\r\nInstead of having one specific block to do an instant switch, which could have weird economic, security and centralization implications (especially if miners are developing ASICs in secret waiting for a 'new algo switch block'), it might be safer to do a gradual switch over the course of X blocks.\r\n\r\nFor example;\r\n\r\n- 10/10 blocks Ethash (now)\r\n- *initialize algo change*\r\n- 9/10 block Ethash, 1/10 blocks SHA3 (for 100,000 blocks)\r\n- 8/10 block Ethash, 2/10 blocks SHA3 (for 100,000 blocks)\r\n- ...\r\n- 1/10 block Ethash, 9/10 blocks SHA3 (for 100,000 blocks)\r\n- *algo switch complete* (total 1M blocks)\r\n- 10/10 blocks SHA3 (going forward)\r\n\r\nI assume this is probably more complicated to implement, but it provides some safety features (and gives time to fork if something goes wrong with the new algorithm)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552330153/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_552345774.json b/.gh-issues/00174_552345774.json
new file mode 100644
index 0000000..afbd9d6
--- /dev/null
+++ b/.gh-issues/00174_552345774.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552345774",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-552345774",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 552345774,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjM0NTc3NA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-11T08:40:14Z",
+    "updated_at": "2019-11-11T08:40:14Z",
+    "author_association": "MEMBER",
+    "body": "> I assume this is probably more complicated to implement\r\n\r\nUnfortunately, this is true. However, you could reduce complexity by allowing both - an Ethash proof and a SHA3 proof - as valid block hash for a certain range of blocks without defining a ration.\r\n\r\nIn general, switching a consensus engine is unprecedented for EVM based chains as far as I know and all clients that have to implement it, would require some substantial work.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552345774/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_552681101.json b/.gh-issues/00174_552681101.json
new file mode 100644
index 0000000..88b977b
--- /dev/null
+++ b/.gh-issues/00174_552681101.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552681101",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-552681101",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 552681101,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjY4MTEwMQ==",
+    "user": {
+      "login": "stevanlohja",
+      "id": 10556209,
+      "node_id": "MDQ6VXNlcjEwNTU2MjA5",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/10556209?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/stevanlohja",
+      "html_url": "https://github.com/stevanlohja",
+      "followers_url": "https://api.github.com/users/stevanlohja/followers",
+      "following_url": "https://api.github.com/users/stevanlohja/following{/other_user}",
+      "gists_url": "https://api.github.com/users/stevanlohja/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/stevanlohja/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/stevanlohja/subscriptions",
+      "organizations_url": "https://api.github.com/users/stevanlohja/orgs",
+      "repos_url": "https://api.github.com/users/stevanlohja/repos",
+      "events_url": "https://api.github.com/users/stevanlohja/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/stevanlohja/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-12T00:38:24Z",
+    "updated_at": "2019-11-12T00:38:24Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Rejecting Sha3 for the following reason posted on the Sha3 ECIP https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-552680753",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552681101/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_553184368.json b/.gh-issues/00174_553184368.json
new file mode 100644
index 0000000..95f7827
--- /dev/null
+++ b/.gh-issues/00174_553184368.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553184368",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-553184368",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 553184368,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzE4NDM2OA==",
+    "user": {
+      "login": "developerkevin",
+      "id": 29807183,
+      "node_id": "MDQ6VXNlcjI5ODA3MTgz",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/29807183?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/developerkevin",
+      "html_url": "https://github.com/developerkevin",
+      "followers_url": "https://api.github.com/users/developerkevin/followers",
+      "following_url": "https://api.github.com/users/developerkevin/following{/other_user}",
+      "gists_url": "https://api.github.com/users/developerkevin/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/developerkevin/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/developerkevin/subscriptions",
+      "organizations_url": "https://api.github.com/users/developerkevin/orgs",
+      "repos_url": "https://api.github.com/users/developerkevin/repos",
+      "events_url": "https://api.github.com/users/developerkevin/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/developerkevin/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-13T00:42:46Z",
+    "updated_at": "2019-11-19T07:43:32Z",
+    "author_association": "MEMBER",
+    "body": "My opinion is to consider and prioritize the essential (needed, time sensitive) before the non-essential (desired, wanted, not time sensitive) changes to the network. In general, my view about adding changes via hard fork is do it as least as necessary.\r\n\r\nMy priority of changes.\r\n\r\n1. Keep Ethash (for now) - my opinion is to keep it as is. \r\n\r\n2.  [Restrict DAG Limit (ECIP-1043)](https://github.com/ethereumclassic/ECIPs/issues/11) DAG limit was used to incentivize miners to stop mining on ethereum. Just like the \"Difficulty Bomb\" removal to continue PoW mining or ETC miners, ECIP-1043 is the same. ETC must retain as many miners as possible and removing this limit should have been considered years ago. The larger the DAG gets the more miners will leave the network. We need more not less.\r\n \r\n- [Linzhi ECIP-1043 PR: Provided data points, risk considerations, implementation options, references](https://github.com/ethereumclassic/ECIPs/pull/149/commits/dde5c8f4c3c6d33cafe9897862335b468afea29e)\r\n\r\n3. [Gas Limit (ECIP-1047)](https://ecips.ethereumclassic.org/ECIPs/ecip-1047) (or via soft fork @pyskell)\r\n- [Info on Gas-Limit by MyEtherPlan](https://etherplan.com/2019/09/22/the-ethereum-classic-gas-system-and-the-miner-tragedy-of-the-commons/8789/)\r\n\r\n4. [SHA3 Implementation](https://github.com/ethereumclassic/ECIPs/issues/13) SHA3 is objectively better than Ethash, and if I were designing ETC from scratch I would implement it no question, but this late in the game I don't think is the right time to make such a change, (**yet?**) . I think this change could have a place in ETC's future. In my opinion, there's just more important changes to be completed before forcing desired features on the network.\r\n\r\n5. ProgPoW - **Hell No** ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553184368/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_554650134.json b/.gh-issues/00174_554650134.json
new file mode 100644
index 0000000..54fb563
--- /dev/null
+++ b/.gh-issues/00174_554650134.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554650134",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-554650134",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 554650134,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDY1MDEzNA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-16T16:05:01Z",
+    "updated_at": "2019-11-16T16:05:01Z",
+    "author_association": "MEMBER",
+    "body": "please review before the next call\r\n- ecbp-1076: mining algorithm change process #187\r\n\r\nI want to propose keeping the call on a technical level and adhere to a strictly defined, neutral, and open process. ecbp-1076 is what I believe our best shot.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554650134/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 1
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_557064663.json b/.gh-issues/00174_557064663.json
new file mode 100644
index 0000000..bf62840
--- /dev/null
+++ b/.gh-issues/00174_557064663.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557064663",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-557064663",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 557064663,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzA2NDY2Mw==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-21T12:32:26Z",
+    "updated_at": "2019-11-21T12:32:26Z",
+    "author_association": "MEMBER",
+    "body": "Starting in 30 minutes.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557064663/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_557106181.json b/.gh-issues/00174_557106181.json
new file mode 100644
index 0000000..b9cb540
--- /dev/null
+++ b/.gh-issues/00174_557106181.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557106181",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-557106181",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 557106181,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzEwNjE4MQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-21T14:21:38Z",
+    "updated_at": "2019-11-22T06:16:33Z",
+    "author_association": "MEMBER",
+    "body": "Attendees\r\n- BTCLovera\r\n- Bwana\r\n- Classic_Kevin_IOHK\r\n- Craig[Bot]\r\n- donsyang\r\n- foenix\r\n- GregTheGreek\r\n- isaac\r\n- Kimi Sian-Yu Chen\r\n- Liz\r\n- mikers\r\n- MikO\r\n- OmniEdge\r\n- Roy Zou\r\n- soc1c\r\n- sorpaas\r\n- stev\r\n- Tj\r\n- tzdybal\r\n- wolf_li\r\n- yaz\r\n- Yebisu\r\n- zacmitton\r\n- zcstarr\r\n\r\nClient team checked in\r\n- [x] ChainSafe\r\n- [x] ETCLabs Core\r\n- [x] Multi-Geth\r\n\r\nECIP-1076 **\"ECBP\" mining change process**?\r\n- Alex: can we add testnet stage?\r\n- Afri: gives ECBP 1076 Overview\r\n- Tomek: only miners decision, is that good?\r\n- Zac: agrees with Tomek\r\n- Terry: Has this been used before?\r\n- Zac: Yes, all Bitcoin softforks\r\n- Problem: this is a hardfork not a softfork\r\n- Alex: But 51% attack can manipulate the signal\r\n- Greg: We did no analysis on client performance\r\n- Afri: increase block range to mitigate 51% attack\r\n- Alex: Core devs should provide defaults \r\n- Zac: agrees, security benefits\r\n- Alex: miners might be invested in certain interests\r\n- Isaac: supports miner voting, proposes 5 million block range?\r\n- Isaac: miners not only service providers, rather the life blood in this space\r\n- Afri: not programmatically enforced but we should stick to the process\r\n- Yaz: Extradata is a good way of signaling\r\n- Kevin: What's our timeline?\r\n- Afri: 5 million blocks are ~ 2 years\r\n- Kevin: asks for delay\r\n- Afri: is confused\r\n- Zac: Do we have rough consensus on miner signaling?\r\n- Bwana: Problem is clearly the decision stage. Signal yes, but not have this binding trigger.\r\n- Afri: proposes to just use the signal and not commit to the binding decision.\r\n- Zac: 5 years is too much\r\n- Afri: proposes 6 months - 1 million blocks\r\n- **rough consensus on the ECBP without binding decision trigger and longer signaling range (1m blocks?)\r\n\r\nECIP-1070: **ProgPOW**\r\n- Yaz: let's reject it\r\n- Greg: let's not jump conclusion\r\n- Greg: upstream clients have it, so we should consider it at least\r\n- Alex: ProgPOW has to be continously tweaked, enormouse security hole\r\n- Greg: but what about Asic resistance?\r\n- Alex: but the quality of the SHA-3 hashing algorithm, disagree with Asic resistance\r\n- Yaz: ProgPOW Asic is easily possible\r\n- Zac: ProgPOW is cool but not for blockchain, we dont want to tweak this over and over again\r\n- Afri: does anyone really want ProgPOW? does anyone disagree with rejecting it?\r\n- Greg disagrees\r\n- Alex: someone has to champion it then\r\n- Yaz: we should send a clear signal to ETH and reject it\r\n- Wei: But we should have an open process to allow it in future\r\n- **rough consensus to reject it but open to put it back in draft if someone champions it**\r\n\r\nECIP-1049: **Keccak-256**\r\n- Alex: introduction and motivation on SHA-3\r\n- Wei: has reservations, SHA-3 needs some work done\r\n- Wei: good way of liberation, high performant\r\n- Alex: we want Asics on the network\r\n- Wei: we should have Asics first\r\n- Tomek: without Asics we don't know efficiency, security concerns\r\n- Zac: we won't get Asics unless we change the algorithm\r\n- Mike: GPU and FPGA performance for SHA3 is very good and energy efficient\r\n- Terry: technical benefits are not clear enough to do such a drastic change \r\n- Alex: What's not clear, security or benefits?\r\n- Stev: we need more research and data, how can we be sure not being 51% attacked\r\n- Yaz: consider security of Nakamoto consensus\r\n- Yaz: Ethash was just designed for Ethereum to sustain ETH till PoS\r\n- Afri: states his opinion\r\n- **no conclusion yet**\r\n- _next call to be announced_ for the remaining decisions (probably Jan/2020)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557106181/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_557152805.json b/.gh-issues/00174_557152805.json
new file mode 100644
index 0000000..18620e8
--- /dev/null
+++ b/.gh-issues/00174_557152805.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557152805",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-557152805",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 557152805,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzE1MjgwNQ==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-21T16:04:47Z",
+    "updated_at": "2019-11-21T16:04:47Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "@soc1c I think we have agreed to go forward with your 1076 process. The issue I see now (with the process), is that we now need approval of *all* the contentious EIPs before we can even _move forward_ with this *one* (as defined in the [\"tech stage\" section](https://github.com/ethereumclassic/ECIPs/blob/da1b5fc7cc7432ed3e561ea9bdf64896dfb517b0/_specs/ecip-1076.md#process)). \r\n\r\nSince we have agreed not to make activation automatic, I think we should make the small adjustment that we do steps 1 and 2 in parallel. This will also allow miners a longer time period for signaling.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557152805/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_557178417.json b/.gh-issues/00174_557178417.json
new file mode 100644
index 0000000..5a69ab3
--- /dev/null
+++ b/.gh-issues/00174_557178417.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557178417",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-557178417",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 557178417,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzE3ODQxNw==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-21T17:01:03Z",
+    "updated_at": "2019-11-21T17:01:03Z",
+    "author_association": "MEMBER",
+    "body": "@zmitton that's how I understood this. I will update the ECBP accordingly.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557178417/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_557179731.json b/.gh-issues/00174_557179731.json
new file mode 100644
index 0000000..faac244
--- /dev/null
+++ b/.gh-issues/00174_557179731.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557179731",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-557179731",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 557179731,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzE3OTczMQ==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-21T17:04:08Z",
+    "updated_at": "2019-11-21T17:04:08Z",
+    "author_association": "MEMBER",
+    "body": "Regarding signaling -- I don't think we even have any \"rough consensus\" of ECBP-1076 yet. There're several alternative proposals, which IMO is much better in many retrospective in terms of automation and process. For example, ECIP-1022 https://ecips.ethereumclassic.org/ECIPs/ecip-1022 and 36-STATEVOTE https://specs.that.world/36-statevote/\r\nThere're also many unresolved issues -- for example, even if we go all in for MINERVOTE, there's still the issue that the vote signaling will always be using the old mining algorithm, which is, in some sense, biased.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557179731/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_557180213.json b/.gh-issues/00174_557180213.json
new file mode 100644
index 0000000..4c7f74f
--- /dev/null
+++ b/.gh-issues/00174_557180213.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557180213",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-557180213",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 557180213,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzE4MDIxMw==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-21T17:05:11Z",
+    "updated_at": "2019-11-21T17:05:11Z",
+    "author_association": "MEMBER",
+    "body": "@zmitton @soc1c I disagree. I don't think we can move forward with 1076 at all, for reasons stated above.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557180213/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_557182004.json b/.gh-issues/00174_557182004.json
new file mode 100644
index 0000000..5c30223
--- /dev/null
+++ b/.gh-issues/00174_557182004.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557182004",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-557182004",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 557182004,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzE4MjAwNA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-21T17:09:29Z",
+    "updated_at": "2019-11-21T17:09:29Z",
+    "author_association": "MEMBER",
+    "body": "the decision was made. please review https://github.com/ethereumclassic/ECIPs/pull/194\r\n\r\nit's only an ECBP and the results are non-binding.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557182004/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_557183152.json b/.gh-issues/00174_557183152.json
new file mode 100644
index 0000000..961fb7c
--- /dev/null
+++ b/.gh-issues/00174_557183152.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557183152",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-557183152",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 557183152,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzE4MzE1Mg==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-21T17:12:13Z",
+    "updated_at": "2019-11-21T17:12:13Z",
+    "author_association": "MEMBER",
+    "body": "@soc1c The decision was not made properly at all. In all sense, it's rushed. Currently there's no reason to move forward with ECBP-1076 at all.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557183152/reactions",
+      "total_count": 2,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 1,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_557256428.json b/.gh-issues/00174_557256428.json
new file mode 100644
index 0000000..aea3ca0
--- /dev/null
+++ b/.gh-issues/00174_557256428.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557256428",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-557256428",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 557256428,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzI1NjQyOA==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-21T20:22:01Z",
+    "updated_at": "2019-11-21T20:22:01Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "@sorpaas did you not mention any of that on the call",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557256428/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_557264592.json b/.gh-issues/00174_557264592.json
new file mode 100644
index 0000000..38cd64a
--- /dev/null
+++ b/.gh-issues/00174_557264592.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557264592",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-557264592",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 557264592,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzI2NDU5Mg==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-21T20:45:21Z",
+    "updated_at": "2019-11-21T20:45:57Z",
+    "author_association": "MEMBER",
+    "body": "@zmitton I wasn't available for the call in the first 45 minutes.\r\n\r\nLet's put aside the issue that the decision was most likely interpreted and framed incorrectly by Afri. Consider, would you be *really sure* that you want to put forward a decision just because someone who has objections wasn't on the call?\r\n\r\nIn an imaginary scenario, Afri or other meeting moderators can arrange a meeting to move ProgPoW forward, and put the date/time of the meeting specifically that none of the ProgPoW opponents could attend. Then the decision of adopting ProgPoW can be easily reached. Would you move forward with ProgPoW just because of that? No. The same applies to 1076.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557264592/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_557340088.json b/.gh-issues/00174_557340088.json
new file mode 100644
index 0000000..18c6a3c
--- /dev/null
+++ b/.gh-issues/00174_557340088.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557340088",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-557340088",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 557340088,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzM0MDA4OA==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-22T00:57:56Z",
+    "updated_at": "2019-11-22T00:57:56Z",
+    "author_association": "CONTRIBUTOR",
+    "body": " - we had a call\r\n - @sorpaas was on the call\r\n - none of the above objections were raised on the call\r\n - the proposal is process only (not pertaining to consensus or fork)\r\n\r\nThat's \"properly\" from any reasonable interpretation. Raising a concern after everyone has disbursed is however, not proper.\r\n\r\nThis proposal is _itself_ a very watered down compromise to the actual options at hand (the first of which was proposed already 1 full year ago).",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557340088/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00174_557347596.json b/.gh-issues/00174_557347596.json
new file mode 100644
index 0000000..f94cacf
--- /dev/null
+++ b/.gh-issues/00174_557347596.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557347596",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-557347596",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/174",
+    "id": 557347596,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzM0NzU5Ng==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-22T01:31:41Z",
+    "updated_at": "2019-11-22T01:32:19Z",
+    "author_association": "MEMBER",
+    "body": "* We had a call but the call was rushed, and the moderator tried to frame the discussion improperly.\r\n* @sorpaas wasn't on the call when 1076 was discussed.\r\n* None of the objections were raised on the call because everyone who said objections weren't present, not only me. Those objections, however, can be clearly seen in Github issues and PRs. \r\n* The proposal is regarding an non-ECIP process only so there's no point in rushing it forward. Afri and you can just carry it out or whatever. You don't need \"community's permission\".\r\n\r\nThe logic you're presenting is improper. The goal for a meeting is to determine the rough consensus, and the process of the meeting should be designed as such. If the meeting failed to determine the rough consensus or the process was tricked to push forward personal agendas by some people, then we should reflect on whether we can improve the process.\r\n\r\nIf you want to play politics, go find some other coins who are happy to play politics with you. In Ethereum Classic, we should aim at adopting the proposal with the best technical merits.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557347596/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00175.json b/.gh-issues/00175.json
new file mode 100644
index 0000000..1094126
--- /dev/null
+++ b/.gh-issues/00175.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/175",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/175/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/175/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/175/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/175",
+    "id": 519389400,
+    "node_id": "MDU6SXNzdWU1MTkzODk0MDA=",
+    "number": 175,
+    "title": "Core Devs Call: ECIP-1056 Agharta Finalization",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 3,
+    "created_at": "2019-11-07T16:53:08Z",
+    "updated_at": "2019-11-10T12:58:32Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "Ref [ECIP-1056](https://github.com/ethereumclassic/ECIPs/blob/master/_specs/ecip-1056.md) #75 #131 #135 \r\n\r\n### ETC Core Devs Call - Agharta Final Finalization\r\n\r\nWhen: **Thursday, December 12, 2019, 1pm UTC**, 60 minutes max.\r\n\r\nWhere: **Ethereum Classic Discord** https://discord.gg/dwxb6nf `#ecips` channel. Will use/create a voice channel _ad hoc._\r\n\r\n### Agenda\r\n\r\n- Quick client teams check-in\r\n  - Parity Ethereum / Parity Tech\r\n  - Geth Classic / ChainSafe, ETCLabs Core\r\n  - Multi-Geth / Multi-Geth, ETCLabs Core \r\n  - Hyperledger Besu / ChainSafe, PegaSys\r\n- Agharta (ECIP-1056) is in _\"last call\"_ state\r\n  - ECIP-1056 needs to be **accepted**\r\n    - evaluate testing on morden testnet\r\n    - evaluate testing on mordor testnet\r\n    - evaluate testing on kotti testnet\r\n  - discuss a timeline for the protocol upgrade\r\n    - **agree on a block number for mainnet**\r\n\r\nPlease comment to add items to the agenda",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/175/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00175_551315327.json b/.gh-issues/00175_551315327.json
new file mode 100644
index 0000000..087983f
--- /dev/null
+++ b/.gh-issues/00175_551315327.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551315327",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/175#issuecomment-551315327",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/175",
+    "id": 551315327,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTMxNTMyNw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T23:34:54Z",
+    "updated_at": "2019-11-07T23:34:54Z",
+    "author_association": "MEMBER",
+    "body": "ETCLabs Core -> ETC Core :-)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551315327/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00175_552188293.json b/.gh-issues/00175_552188293.json
new file mode 100644
index 0000000..395aa00
--- /dev/null
+++ b/.gh-issues/00175_552188293.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552188293",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/175#issuecomment-552188293",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/175",
+    "id": 552188293,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjE4ODI5Mw==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-10T12:01:51Z",
+    "updated_at": "2019-11-10T12:01:51Z",
+    "author_association": "MEMBER",
+    "body": "Moved to 12/12 as I'm on a conference on 12/5.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552188293/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00175_552192373.json b/.gh-issues/00175_552192373.json
new file mode 100644
index 0000000..d0ac4f4
--- /dev/null
+++ b/.gh-issues/00175_552192373.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552192373",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/175#issuecomment-552192373",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/175",
+    "id": 552192373,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjE5MjM3Mw==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-10T12:57:43Z",
+    "updated_at": "2019-11-10T12:58:32Z",
+    "author_association": "MEMBER",
+    "body": "Please, participants, confirm the new date, so can I update it on twitter",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552192373/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177.json b/.gh-issues/00177.json
new file mode 100644
index 0000000..dec2173
--- /dev/null
+++ b/.gh-issues/00177.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177",
+    "id": 519405348,
+    "node_id": "MDU6SXNzdWU1MTk0MDUzNDg=",
+    "number": 177,
+    "title": "Core Devs Call: ECIP-1061 Aztlán Upgrade",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 4,
+    "created_at": "2019-11-07T17:22:16Z",
+    "updated_at": "2019-11-10T12:04:02Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "Ref [ECIP-1061](https://github.com/ethereumclassic/ECIPs/blob/master/_specs/ecip-1061.md) #81 #157 #176 \r\n\r\n### ETC Core Devs Call - Aztlán Finalization\r\n\r\nWhen: **Wednesday, November 27, 2019, 1pm UTC**, 60 minutes max.\r\n\r\nWhere: **Ethereum Classic Discord** https://discord.gg/dwxb6nf `#ecips` channel. Will use/create a voice channel _ad hoc._\r\n\r\n### Agenda\r\n\r\n- Quick client teams check-in\r\n  - Parity Ethereum / Parity Tech\r\n  - Geth Classic / ChainSafe, ETCLabs Core\r\n  - Multi-Geth / Multi-Geth, ETCLabs Core \r\n  - Hyperledger Besu / ChainSafe, PegaSys\r\n- Aztlán (ECIP-1061) needs to be either **accepted** or _updated_ (or _rejected_)\r\n  - discuss included EIPs\r\n  - discuss a timeline for the protocol upgrade\r\n    - Mordor Classic and Kotti Classic testnet (February?)\r\n    - Ethereum Classic mainnet (March?)\r\n- anything else related to Aztlán\r\n\r\nPlease comment to add items to the agenda",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_551315383.json b/.gh-issues/00177_551315383.json
new file mode 100644
index 0000000..b3eccf2
--- /dev/null
+++ b/.gh-issues/00177_551315383.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551315383",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-551315383",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 551315383,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTMxNTM4Mw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T23:35:10Z",
+    "updated_at": "2019-11-07T23:35:10Z",
+    "author_association": "MEMBER",
+    "body": "ETCLabs Core -> ETC Core :-)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551315383/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_551317526.json b/.gh-issues/00177_551317526.json
new file mode 100644
index 0000000..7df993d
--- /dev/null
+++ b/.gh-issues/00177_551317526.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551317526",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-551317526",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 551317526,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTMxNzUyNg==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T23:42:58Z",
+    "updated_at": "2019-11-07T23:42:58Z",
+    "author_association": "MEMBER",
+    "body": "Please can I suggest that we move the timelines up on the Aztlán Upgrade meeting, @soc1c?\r\n\r\nCore Devs Call: Mining Algorithm Upgrade\r\nNov 21st is fine, I think.  Two weeks time.\r\n\r\nCore Devs Call: ECIP-1061 Aztlán Upgrade\r\nI suggest that we move this to Nov 28th, because we can be starting to talk about this before Agharta is finalized.  Versus Dec 19th as currently planned.   The main critical path here will NOT be technical, but gathering social consensus, so having this 3 weeks earlier would be very helpful.   Also, by Dec 19th a number of people will be having Christmas plans.\r\n\r\nCore Devs Call: ECIP-1056 Agharta Finalization\r\nDec 5th\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551317526/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_551323452.json b/.gh-issues/00177_551323452.json
new file mode 100644
index 0000000..216c7d3
--- /dev/null
+++ b/.gh-issues/00177_551323452.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551323452",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-551323452",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 551323452,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTMyMzQ1Mg==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T00:05:32Z",
+    "updated_at": "2019-11-08T00:05:32Z",
+    "author_association": "MEMBER",
+    "body": "It has been pointed out that Nov 28th is US Thanksgiving, so maybe Dec 12th instead?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551323452/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_552188433.json b/.gh-issues/00177_552188433.json
new file mode 100644
index 0000000..b67dabd
--- /dev/null
+++ b/.gh-issues/00177_552188433.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552188433",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-552188433",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 552188433,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjE4ODQzMw==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-10T12:03:50Z",
+    "updated_at": "2019-11-10T12:03:50Z",
+    "author_association": "MEMBER",
+    "body": "Moved to 11/27 (Wednesday!) to avoid Thanksgiving and start talking about Aztlan early.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552188433/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 1,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00182.json b/.gh-issues/00182.json
new file mode 100644
index 0000000..4482b35
--- /dev/null
+++ b/.gh-issues/00182.json
@@ -0,0 +1,98 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/182",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/182/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/182/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/182/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/182",
+    "id": 521901596,
+    "node_id": "MDU6SXNzdWU1MjE5MDE1OTY=",
+    "number": 182,
+    "title": "Reject \"ASIC resistance\" myth",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "assignees": [
+      {
+        "login": "bobsummerwill",
+        "id": 3788156,
+        "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+        "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/bobsummerwill",
+        "html_url": "https://github.com/bobsummerwill",
+        "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+        "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+        "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+        "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+        "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+        "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+        "type": "User",
+        "site_admin": false
+      }
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2019-11-13T01:34:32Z",
+    "updated_at": "2019-11-13T01:45:03Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "Discussion related to https://github.com/ethereumclassic/ECIPs/pull/183.\r\n\r\n**\"ASIC resistance\" is a myth.  The ETC ecosystem rejects this myth.**",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/182/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00182_553198972.json b/.gh-issues/00182_553198972.json
new file mode 100644
index 0000000..1ad5112
--- /dev/null
+++ b/.gh-issues/00182_553198972.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553198972",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/182#issuecomment-553198972",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/182",
+    "id": 553198972,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzE5ODk3Mg==",
+    "user": {
+      "login": "drd34d",
+      "id": 30156189,
+      "node_id": "MDQ6VXNlcjMwMTU2MTg5",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/30156189?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/drd34d",
+      "html_url": "https://github.com/drd34d",
+      "followers_url": "https://api.github.com/users/drd34d/followers",
+      "following_url": "https://api.github.com/users/drd34d/following{/other_user}",
+      "gists_url": "https://api.github.com/users/drd34d/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/drd34d/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/drd34d/subscriptions",
+      "organizations_url": "https://api.github.com/users/drd34d/orgs",
+      "repos_url": "https://api.github.com/users/drd34d/repos",
+      "events_url": "https://api.github.com/users/drd34d/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/drd34d/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-13T01:45:03Z",
+    "updated_at": "2019-11-13T01:45:03Z",
+    "author_association": "NONE",
+    "body": "I think you got the wrong url. You're probably looking for \"Twitter.com\"",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553198972/reactions",
+      "total_count": 3,
+      "+1": 0,
+      "-1": 3,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00188.json b/.gh-issues/00188.json
new file mode 100644
index 0000000..c54055d
--- /dev/null
+++ b/.gh-issues/00188.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/188",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/188/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/188/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/188/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/188",
+    "id": 523862955,
+    "node_id": "MDU6SXNzdWU1MjM4NjI5NTU=",
+    "number": 188,
+    "title": "ECIP-1075 points to the various Aztlán editions",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-16T16:08:17Z",
+    "updated_at": "2019-11-16T16:08:17Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "Discussion for https://github.com/ethereumclassic/ECIPs/pull/186",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/188/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00190.json b/.gh-issues/00190.json
new file mode 100644
index 0000000..029ba8e
--- /dev/null
+++ b/.gh-issues/00190.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/190",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/190/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/190/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/190/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/190",
+    "id": 524014244,
+    "node_id": "MDU6SXNzdWU1MjQwMTQyNDQ=",
+    "number": 190,
+    "title": "ECIP-1022: Generalized Version Bits Voting for Consensus Soft and Hard Forks",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-17T17:07:31Z",
+    "updated_at": "2019-11-17T17:07:31Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/190/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00195.json b/.gh-issues/00195.json
new file mode 100644
index 0000000..d765bff
--- /dev/null
+++ b/.gh-issues/00195.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/195",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/195/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/195/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/195/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/195",
+    "id": 526736915,
+    "node_id": "MDU6SXNzdWU1MjY3MzY5MTU=",
+    "number": 195,
+    "title": "Core Devs Call: Signaling Process",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 4,
+    "created_at": "2019-11-21T17:25:34Z",
+    "updated_at": "2019-11-21T18:07:06Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "* When: To be decided.\r\n* Where: **Ethereum Classic Discord** https://discord.gg/dwxb6nf `#ecips` channel. Will use/create a voice channel _ad hoc._\r\n\r\nDiscuss several signaling proposals, as this is not resolved since last call. cc @soc1c ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/195/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00195_557189510.json b/.gh-issues/00195_557189510.json
new file mode 100644
index 0000000..da8fce0
--- /dev/null
+++ b/.gh-issues/00195_557189510.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557189510",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/195#issuecomment-557189510",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/195",
+    "id": 557189510,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzE4OTUxMA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-21T17:27:24Z",
+    "updated_at": "2019-11-21T17:27:24Z",
+    "author_association": "MEMBER",
+    "body": "Are you suggesting the 20+ people on the last call were incompetent making decisions?\r\n\r\nI mean, you are free to have as many calls as you want to. I believe a non-binding signaling process does not need much governance.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557189510/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00195_557193614.json b/.gh-issues/00195_557193614.json
new file mode 100644
index 0000000..0032432
--- /dev/null
+++ b/.gh-issues/00195_557193614.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557193614",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/195#issuecomment-557193614",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/195",
+    "id": 557193614,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzE5MzYxNA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-21T17:37:18Z",
+    "updated_at": "2019-11-21T17:37:18Z",
+    "author_association": "MEMBER",
+    "body": "I believe it's your fault as a moderator to frame it improperly. From my listening of the call, there's only a rough consensus on having miner to participate in the signaling process, but there's no consensus on the actual specification for the signaling.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557193614/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00195_557195252.json b/.gh-issues/00195_557195252.json
new file mode 100644
index 0000000..8930e0b
--- /dev/null
+++ b/.gh-issues/00195_557195252.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557195252",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/195#issuecomment-557195252",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/195",
+    "id": 557195252,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzE5NTI1Mg==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-21T17:41:34Z",
+    "updated_at": "2019-11-21T17:41:34Z",
+    "author_association": "MEMBER",
+    "body": "maybe it's your fault not joining the call? diminishing my efforts to move forward is really poor and offensive.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557195252/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00195_557205129.json b/.gh-issues/00195_557205129.json
new file mode 100644
index 0000000..048ab3d
--- /dev/null
+++ b/.gh-issues/00195_557205129.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557205129",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/195#issuecomment-557205129",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/195",
+    "id": 557205129,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzIwNTEyOQ==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-21T18:07:06Z",
+    "updated_at": "2019-11-21T18:07:06Z",
+    "author_association": "MEMBER",
+    "body": "@soc1c Sure, I did not join the call on time, but I listened to the call afterwards carefully. I believe that you're trying to trick the community by framing the community's decision in an improper way, as said above, and you have not disputed my claim.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557205129/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/.state b/.gh-pullrequests/.state
new file mode 100644
index 0000000..dbe61b7
--- /dev/null
+++ b/.gh-pullrequests/.state
@@ -0,0 +1 @@
+2019-11-22T12:21:34Z
diff --git a/.gh-pullrequests/00008.json b/.gh-pullrequests/00008.json
new file mode 100644
index 0000000..62d8324
--- /dev/null
+++ b/.gh-pullrequests/00008.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/8",
+    "id": 396774235,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQyODc0NjMw",
+    "number": 8,
+    "title": "ECIP-1049: Change the ETC Proof of Work Algorithm to Keccak256",
+    "user": {
+      "login": "p3c-bot",
+      "id": 40745785,
+      "node_id": "MDQ6VXNlcjQwNzQ1Nzg1",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/40745785?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/p3c-bot",
+      "html_url": "https://github.com/p3c-bot",
+      "followers_url": "https://api.github.com/users/p3c-bot/followers",
+      "following_url": "https://api.github.com/users/p3c-bot/following{/other_user}",
+      "gists_url": "https://api.github.com/users/p3c-bot/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/p3c-bot/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/p3c-bot/subscriptions",
+      "organizations_url": "https://api.github.com/users/p3c-bot/orgs",
+      "repos_url": "https://api.github.com/users/p3c-bot/repos",
+      "events_url": "https://api.github.com/users/p3c-bot/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/p3c-bot/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 18,
+    "created_at": "2019-01-08T06:59:46Z",
+    "updated_at": "2019-10-28T19:36:24Z",
+    "closed_at": "2019-01-17T04:06:11Z",
+    "author_association": "CONTRIBUTOR",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/8",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/8",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/8.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/8.patch"
+    },
+    "body": "# THIS PROPOSAL IS MERGED DISCUSSION HAS BEEN MOVED TO [HERE](https://github.com/ethereumclassic/ECIPs/issues/13)\r\n\r\n\r\n### What is an ECIP?\r\n\r\n    ECIP: 1049\r\n    Title: Change the ETC Proof of Work Algorithm to Keccak256\r\n    Status: Draft\r\n    Type: Network\r\n    Discussion: https://github.com/ethereumclassic/ECIPs/pull/8\r\n    Author: Alexander Tsankov (alexander.tsankov@colorado.edu)\r\n    Created: 2019-01-08\r\n\r\n### Abstract\r\nA proposal to replace the current Ethereum Classic proof of work algorithm with Keccak-256.\r\n\r\n### Motivation\r\n* A response to the recent double-spend attacks against Ethereum Classic. Most of this hashpower was rented or came from other chains, specfically Ethereum (ETH). A seperate proof of work algorithm would encourage the development of a specialized Ethereum Classic mining community, and blunt the ability for attackers to purchase mercenary hash power on the open-market. \r\n\r\n* As a secondary benefit, deployed smart contracts and dapps running on chain are currently able to use `keccak256()` in their code. This ECIP could open the possibility of smart contracts being able to evaluate chain state, and simplify second layer (L2) development.\r\n\r\n### Specification\r\n\r\n### Reason 1: Similarity to Bitcoin\r\nThe Bitcoin network currently uses the CPU-intensive SHA256 Algorithm to evaluate blocks. When Ethereum was deployed it used a different algorithm, Dagger-Hashimoto, which eventually became Ethash on 1.0 launch. Dagger-Hashimoto was explicitly designed to be memory-intensive with the goal of ASIC resistance [1]. It has been provably unsuccessful at this goal, with Ethash ASICs currently easily availalble on the market.\r\n\r\nKeccak256 (aka SHA3) is the product of decades of research and the winner of a multi-year contest held by NIST that has rigorously verified its robustness and quality as a hashing algorithm. It is one of the only hashing algorithms besides SHA256 that is allowed for military and scientific-grade applications, and can provide sufficient hashing entropy for a proof of work system. This algorithm would position Ethereum Classic at an advantage in mission-critical blockchain applications that are required to use provably high-strength algorithms. [2]\r\n\r\nA CPU-intensive algorithm like Keccak256 would allow both the uniqueness of a fresh PoW algorithm that has not had ASICs developed against it, while at the same time allowing for organic optimization of a dedicated and financially commited miner base, much the way Bitcoin did with its own SHA256 algorithm.\r\n\r\nIf Ethereum Classic is to succeed as a project, we need to take what we have learned from Bitcoin and move towards CPU-hard PoW algorithms.\r\n\r\n> At first, most users would run network nodes, but as the network grows beyond a certain point, it would be left more and more to specialists with server farms of specialized hardware. - Satoshi Nakamoto (2008-11-03) [3]\r\n\r\n*Note: Please consider this is from 2008, and the Bitcoin community at that time did not differentiate between node operators and miners. I interpret \"network nodes\" in this quote to refer to miners, and \"server farms of specialized hardware\" to refer to mining farms.*\r\n\r\n\r\n### Reason 2: Value to Smart Contract Developers\r\nIn Solidity, developers have access to the `keccak256()` function, which allows a smart contract to efficiently calculate the hash of a given input. This has been used in a number of interesting projects launched on both Ethereum and Ethereum-Classic. Most Specifcally a project called 0xBitcoin [4] - which the ERC-918 spec was based on.\r\n\r\n0xBitcoin is a security-audited [5] dapp that allows users to submit a proof of work hash directly to a smart contract running on the Ethereum blockchain. If the sent hash matches the given requirements, a token reward is trustlessly dispensed to the sender, along with the contract reevaluating difficulty parameters. This project has run successfully for over 10 months, and has minted over 3 million tokens [6].\r\n\r\nWith the direction that Ethereum Classic is taking: a focus on Layer-2 solutions and cross-chain compatibility; being able to evaluate proof of work on chain, will be tremendously valuable to developers of both smart-contracts and node software writers. This could greatly simplify interoperability. \r\n\r\n### Implementation\r\n\r\nWork in Progress:\r\n\r\nExample of a Smart contract hashing being able to trustlessly Keccak hash a hypothetical block header.\r\n![example](https://i.imgur.com/xh3WgCF.png)\r\n\r\nHere is an analysis of Monero's nonce-distribution for \"cryptonight\", an algorithm similar to Ethash, which also attempts to be \"ASIC-Resistant\" it is very clear in the picture that before the hashing algorithm is changed there is a clear nonce-pattern. This is indicative of a major failure in a hashing algorithm, and should illustrate the dangers of disregarding proper cryptographic security. Finding a hashing pattern would be far harder using a proven system like Keccak:\r\n\r\n![example](https://i.imgur.com/vVdmzm9.jpg)\r\n\r\nBased on analysis of the EVM architecture [here](https://cdn.discordapp.com/attachments/223675625334898688/534597157693685760/eth.jpg) there are two main pieces that need to be changed:\r\n\r\n1. The Proof of work function needs to be replaced with Keccak256\r\n1. The Function that checks the nonce-header  in the block needs to know to accept Keccak256 hashes as valid for a block.\r\n\r\n![example](https://i.imgur.com/2hobqOL.png)\r\n\r\nAfter doing further analysis it the best way forward to begin work is to implement this change in [Multi-Geth](https://github.com/ethoxy/multi-geth) instead of any other client. This is because Multi-geth is organized for multi-chain development, it seems to be more recently updated than classic-geth, and it is designed to be used with alternative consensus methods- which is necessary for implementing ECIP-1049.\r\n\r\nThe area where most of the changes will be in `multi-geth/consensus`\r\n\r\n### References: \r\n\r\n1. https://github.com/ethereum/wiki/wiki/Dagger-Hashimoto#introduction\r\n1. https://en.wikipedia.org/wiki/SHA-3\r\n1. https://satoshi.nakamotoinstitute.org/emails/cryptography/2/\r\n1. https://github.com/0xbitcoin/white-paper\r\n1. https://github.com/EthereumCommonwealth/Auditing/issues/102\r\n1. https://etherscan.io/address/0xb6ed7644c69416d67b522e20bc294a9a9b405b31",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8/reactions",
+      "total_count": 3,
+      "+1": 0,
+      "-1": 3,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00008.patch b/.gh-pullrequests/00008.patch
new file mode 100644
index 0000000..a424012
--- /dev/null
+++ b/.gh-pullrequests/00008.patch
@@ -0,0 +1,294 @@
+From b036a6b1691020ea389d5557931d9aa081036d79 Mon Sep 17 00:00:00 2001
+From: p3c-bot <40745785+p3c-bot@users.noreply.github.com>
+Date: Tue, 8 Jan 2019 01:56:48 -0500
+Subject: [PATCH 1/7] Create ECIP-1049.md
+
+---
+ ECIPs/ECIP-1049.md | 50 ++++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 50 insertions(+)
+ create mode 100644 ECIPs/ECIP-1049.md
+
+diff --git a/ECIPs/ECIP-1049.md b/ECIPs/ECIP-1049.md
+new file mode 100644
+index 0000000..9e0cf49
+--- /dev/null
++++ b/ECIPs/ECIP-1049.md
+@@ -0,0 +1,50 @@
++### What is an ECIP?
++
++    ECIP: 1049
++    Title: Change the ETC Proof of Work Algorithm to Keccak256
++    Status: Draft
++    Type: Meta
++    Author: Alexander Tsankov (alexander.tsankov@colorado.edu)
++    Created: 2017-01-08
++
++### Abstract
++A proposal to replace the current Ethereum Classic proof of work algorithm with Keccak-256.
++
++### Motivation
++* A response to the recent double-spend attacks against Ethereum Classic. Most of this hashpower was rented or came from other chains, specfically Ethereum (ETH). A seperate proof of work algorithm would encourage the development of a specialized Ethereum Classic mining community, and blunt the ability for attackers to purchase mercenary hash power on the open-market. 
++
++* As a secondary benefit, deployed smart contracts and dapps running on chain are currently able to use `keccak256()` in their code. This ECIP could open the possibility of smart contracts being able to evaluate chain state, and simplify second layer (L2) development.
++
++### Specification
++
++### Reason 1: Similarity to Bitcoin
++The Bitcoin network currently uses the CPU-intensive SHA256 Algorithm to evaluate blocks. When Ethereum was deployed it used a different algorithm, Dagger-Hashimoto, which eventually became Ethash on 1.0 launch. Dagger-Hashimoto was explicitly designed to be memory-resistant with the goal of ASIC resistance [1]. It has been provably unsuccessful at this goal, with Ethash ASICs currently easily availalble on the market.
++
++A CPU-intensive algorithm like Keccak256 would allow both the uniquness of a fresh PoW algorithm that has not had ASICs developed against it, while at the same time allowing for organic optimization of a dedicated and financially commited miner base, much the way Bitcoin did with its own SHA256 algorithm.
++
++If Ethereum Classic is to succeed as a project, we need to take what we have learned from Bitcoin and move towards CPU-hard PoW algorithms.
++
++> At first, most users would run network nodes, but as the network grows beyond a certain point, it would be left more and more to specialists with server farms of specialized hardware. - Satoshi Nakamoto (2008-11-03) [2]
++
++*Note: Please consider this is from 2008, and the Bitcoin community at that time did not differentiate between node operators and miners. I interpret "network nodes" in this quote to refer to miners, and "server farms of specialized hardware" to refer to mining farms.*
++
++
++### Reason 2: Value to Smart Contract Developers
++In Solidity, developers have access to the `keccak256()` function, which allows a smart contract to efficiently calculate the hash of a given input. This has been used in a number of interesting projects launched on both Ethereum and Ethereum-Classic. Most Specifcally a project called OxBitcoin [3] - which the ERC-918 spec was based on.
++
++0xBitcoin is a security-audited [4] dapp that allows users to submit a proof of work hash directly to a smart contract running on the Ethereum blockchain. If the sent hash matches the given requirements, a token reward is trustlessly dispensed to the sender, along with the contract reevaulating difficulty parameters. This project has run successfully for over 10 months, and has minted over 3 million tokens [5].
++
++With the direction that Ethereum Classic is taking: a focus on Layer-2 solutions and cross-chain compatability; being able to evaluate proof of work on chain, will be tremendously valuable to developers of both smart-contracts and node software writers. This could greatly simplify interoperability. 
++
++### Implementation
++
++Work in Progress
++
++
++### References: 
++
++1. https://github.com/ethereum/wiki/wiki/Dagger-Hashimoto#introduction
++1. https://satoshi.nakamotoinstitute.org/emails/cryptography/2/
++1. https://github.com/0xbitcoin/white-paper
++1. https://github.com/EthereumCommonwealth/Auditing/issues/102
++1. https://etherscan.io/address/0xb6ed7644c69416d67b522e20bc294a9a9b405b31
+
+From cc1465a4f7409fed620c822148fddfefcc1c8fb5 Mon Sep 17 00:00:00 2001
+From: p3c-bot <40745785+p3c-bot@users.noreply.github.com>
+Date: Tue, 8 Jan 2019 02:03:47 -0500
+Subject: [PATCH 2/7] Date
+
+---
+ ECIPs/ECIP-1049.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/ECIPs/ECIP-1049.md b/ECIPs/ECIP-1049.md
+index 9e0cf49..f68da5d 100644
+--- a/ECIPs/ECIP-1049.md
++++ b/ECIPs/ECIP-1049.md
+@@ -5,7 +5,7 @@
+     Status: Draft
+     Type: Meta
+     Author: Alexander Tsankov (alexander.tsankov@colorado.edu)
+-    Created: 2017-01-08
++    Created: 2019-01-08
+ 
+ ### Abstract
+ A proposal to replace the current Ethereum Classic proof of work algorithm with Keccak-256.
+
+From 360cd2f15e61c31e62234e288109d81be6409499 Mon Sep 17 00:00:00 2001
+From: p3c-bot <40745785+p3c-bot@users.noreply.github.com>
+Date: Tue, 8 Jan 2019 02:46:04 -0500
+Subject: [PATCH 3/7] Update ECIP-1049.md
+
+---
+ ECIPs/ECIP-1049.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/ECIPs/ECIP-1049.md b/ECIPs/ECIP-1049.md
+index f68da5d..97a6646 100644
+--- a/ECIPs/ECIP-1049.md
++++ b/ECIPs/ECIP-1049.md
+@@ -18,7 +18,7 @@ A proposal to replace the current Ethereum Classic proof of work algorithm with
+ ### Specification
+ 
+ ### Reason 1: Similarity to Bitcoin
+-The Bitcoin network currently uses the CPU-intensive SHA256 Algorithm to evaluate blocks. When Ethereum was deployed it used a different algorithm, Dagger-Hashimoto, which eventually became Ethash on 1.0 launch. Dagger-Hashimoto was explicitly designed to be memory-resistant with the goal of ASIC resistance [1]. It has been provably unsuccessful at this goal, with Ethash ASICs currently easily availalble on the market.
++The Bitcoin network currently uses the CPU-intensive SHA256 Algorithm to evaluate blocks. When Ethereum was deployed it used a different algorithm, Dagger-Hashimoto, which eventually became Ethash on 1.0 launch. Dagger-Hashimoto was explicitly designed to be memory-hard with the goal of ASIC resistance [1]. It has been provably unsuccessful at this goal, with Ethash ASICs currently easily availalble on the market.
+ 
+ A CPU-intensive algorithm like Keccak256 would allow both the uniquness of a fresh PoW algorithm that has not had ASICs developed against it, while at the same time allowing for organic optimization of a dedicated and financially commited miner base, much the way Bitcoin did with its own SHA256 algorithm.
+ 
+
+From 5b351fca9916068b89d1b4954f40fff0bb81efee Mon Sep 17 00:00:00 2001
+From: p3c-bot <40745785+p3c-bot@users.noreply.github.com>
+Date: Tue, 8 Jan 2019 02:48:45 -0500
+Subject: [PATCH 4/7] Update ECIP-1049.md
+
+---
+ ECIPs/ECIP-1049.md | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/ECIPs/ECIP-1049.md b/ECIPs/ECIP-1049.md
+index 97a6646..a7b2579 100644
+--- a/ECIPs/ECIP-1049.md
++++ b/ECIPs/ECIP-1049.md
+@@ -18,7 +18,7 @@ A proposal to replace the current Ethereum Classic proof of work algorithm with
+ ### Specification
+ 
+ ### Reason 1: Similarity to Bitcoin
+-The Bitcoin network currently uses the CPU-intensive SHA256 Algorithm to evaluate blocks. When Ethereum was deployed it used a different algorithm, Dagger-Hashimoto, which eventually became Ethash on 1.0 launch. Dagger-Hashimoto was explicitly designed to be memory-hard with the goal of ASIC resistance [1]. It has been provably unsuccessful at this goal, with Ethash ASICs currently easily availalble on the market.
++The Bitcoin network currently uses the CPU-intensive SHA256 Algorithm to evaluate blocks. When Ethereum was deployed it used a different algorithm, Dagger-Hashimoto, which eventually became Ethash on 1.0 launch. Dagger-Hashimoto was explicitly designed to be memory-intensive with the goal of ASIC resistance [1]. It has been provably unsuccessful at this goal, with Ethash ASICs currently easily availalble on the market.
+ 
+ A CPU-intensive algorithm like Keccak256 would allow both the uniquness of a fresh PoW algorithm that has not had ASICs developed against it, while at the same time allowing for organic optimization of a dedicated and financially commited miner base, much the way Bitcoin did with its own SHA256 algorithm.
+ 
+@@ -30,7 +30,7 @@ If Ethereum Classic is to succeed as a project, we need to take what we have lea
+ 
+ 
+ ### Reason 2: Value to Smart Contract Developers
+-In Solidity, developers have access to the `keccak256()` function, which allows a smart contract to efficiently calculate the hash of a given input. This has been used in a number of interesting projects launched on both Ethereum and Ethereum-Classic. Most Specifcally a project called OxBitcoin [3] - which the ERC-918 spec was based on.
++In Solidity, developers have access to the `keccak256()` function, which allows a smart contract to efficiently calculate the hash of a given input. This has been used in a number of interesting projects launched on both Ethereum and Ethereum-Classic. Most Specifcally a project called 0xBitcoin [3] - which the ERC-918 spec was based on.
+ 
+ 0xBitcoin is a security-audited [4] dapp that allows users to submit a proof of work hash directly to a smart contract running on the Ethereum blockchain. If the sent hash matches the given requirements, a token reward is trustlessly dispensed to the sender, along with the contract reevaulating difficulty parameters. This project has run successfully for over 10 months, and has minted over 3 million tokens [5].
+ 
+
+From 5401b263bdf69fcfe4cc076efe6da518fcfedf1c Mon Sep 17 00:00:00 2001
+From: p3c-bot <40745785+p3c-bot@users.noreply.github.com>
+Date: Tue, 8 Jan 2019 22:08:17 -0500
+Subject: [PATCH 5/7] Update ECIP-1049.md
+
+---
+ ECIPs/ECIP-1049.md | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
+
+diff --git a/ECIPs/ECIP-1049.md b/ECIPs/ECIP-1049.md
+index a7b2579..15d299b 100644
+--- a/ECIPs/ECIP-1049.md
++++ b/ECIPs/ECIP-1049.md
+@@ -38,8 +38,10 @@ With the direction that Ethereum Classic is taking: a focus on Layer-2 solutions
+ 
+ ### Implementation
+ 
+-Work in Progress
++Work in Progress:
+ 
++Example of a Smart contract hashing being able to trustlessly Keccak hash a hypothetical block header.
++![example](https://i.imgur.com/Rt1n35s.png)
+ 
+ ### References: 
+ 
+
+From a431091ecf1baba3c79367c46cda2c13d35b9e45 Mon Sep 17 00:00:00 2001
+From: p3c-bot <40745785+p3c-bot@users.noreply.github.com>
+Date: Mon, 14 Jan 2019 15:28:51 -0500
+Subject: [PATCH 6/7] Update ECIP-1049.md
+
+---
+ ECIPs/ECIP-1049.md | 23 ++++++++++++++++-------
+ 1 file changed, 16 insertions(+), 7 deletions(-)
+
+diff --git a/ECIPs/ECIP-1049.md b/ECIPs/ECIP-1049.md
+index 15d299b..2f90e3a 100644
+--- a/ECIPs/ECIP-1049.md
++++ b/ECIPs/ECIP-1049.md
+@@ -3,7 +3,8 @@
+     ECIP: 1049
+     Title: Change the ETC Proof of Work Algorithm to Keccak256
+     Status: Draft
+-    Type: Meta
++    Type: Network
++    Discussion: https://github.com/ethereumclassic/ECIPs/pull/8
+     Author: Alexander Tsankov (alexander.tsankov@colorado.edu)
+     Created: 2019-01-08
+ 
+@@ -20,32 +21,40 @@ A proposal to replace the current Ethereum Classic proof of work algorithm with
+ ### Reason 1: Similarity to Bitcoin
+ The Bitcoin network currently uses the CPU-intensive SHA256 Algorithm to evaluate blocks. When Ethereum was deployed it used a different algorithm, Dagger-Hashimoto, which eventually became Ethash on 1.0 launch. Dagger-Hashimoto was explicitly designed to be memory-intensive with the goal of ASIC resistance [1]. It has been provably unsuccessful at this goal, with Ethash ASICs currently easily availalble on the market.
+ 
+-A CPU-intensive algorithm like Keccak256 would allow both the uniquness of a fresh PoW algorithm that has not had ASICs developed against it, while at the same time allowing for organic optimization of a dedicated and financially commited miner base, much the way Bitcoin did with its own SHA256 algorithm.
++Keccak256 (aka SHA3) is the product of decades of research and the winner of a multi-year contest held by NIST that has rigorously verified its robustness and quality as a hashing algorithm. It is one of the only hashing algorithms besides SHA256 that is allowed for military and scientific-grade applications, and can provide sufficient hashing entropy for a proof of work system. This algorithm would position Ethereum Classic at an advantage in mission-critical blockchain applications that are required to use provably high-strength algorithms. [2]
++
++A CPU-intensive algorithm like Keccak256 would allow both the uniqueness of a fresh PoW algorithm that has not had ASICs developed against it, while at the same time allowing for organic optimization of a dedicated and financially commited miner base, much the way Bitcoin did with its own SHA256 algorithm.
+ 
+ If Ethereum Classic is to succeed as a project, we need to take what we have learned from Bitcoin and move towards CPU-hard PoW algorithms.
+ 
+-> At first, most users would run network nodes, but as the network grows beyond a certain point, it would be left more and more to specialists with server farms of specialized hardware. - Satoshi Nakamoto (2008-11-03) [2]
++> At first, most users would run network nodes, but as the network grows beyond a certain point, it would be left more and more to specialists with server farms of specialized hardware. - Satoshi Nakamoto (2008-11-03) [3]
+ 
+ *Note: Please consider this is from 2008, and the Bitcoin community at that time did not differentiate between node operators and miners. I interpret "network nodes" in this quote to refer to miners, and "server farms of specialized hardware" to refer to mining farms.*
+ 
+ 
+ ### Reason 2: Value to Smart Contract Developers
+-In Solidity, developers have access to the `keccak256()` function, which allows a smart contract to efficiently calculate the hash of a given input. This has been used in a number of interesting projects launched on both Ethereum and Ethereum-Classic. Most Specifcally a project called 0xBitcoin [3] - which the ERC-918 spec was based on.
++In Solidity, developers have access to the `keccak256()` function, which allows a smart contract to efficiently calculate the hash of a given input. This has been used in a number of interesting projects launched on both Ethereum and Ethereum-Classic. Most Specifcally a project called 0xBitcoin [4] - which the ERC-918 spec was based on.
+ 
+-0xBitcoin is a security-audited [4] dapp that allows users to submit a proof of work hash directly to a smart contract running on the Ethereum blockchain. If the sent hash matches the given requirements, a token reward is trustlessly dispensed to the sender, along with the contract reevaulating difficulty parameters. This project has run successfully for over 10 months, and has minted over 3 million tokens [5].
++0xBitcoin is a security-audited [5] dapp that allows users to submit a proof of work hash directly to a smart contract running on the Ethereum blockchain. If the sent hash matches the given requirements, a token reward is trustlessly dispensed to the sender, along with the contract reevaluating difficulty parameters. This project has run successfully for over 10 months, and has minted over 3 million tokens [6].
+ 
+-With the direction that Ethereum Classic is taking: a focus on Layer-2 solutions and cross-chain compatability; being able to evaluate proof of work on chain, will be tremendously valuable to developers of both smart-contracts and node software writers. This could greatly simplify interoperability. 
++With the direction that Ethereum Classic is taking: a focus on Layer-2 solutions and cross-chain compatibility; being able to evaluate proof of work on chain, will be tremendously valuable to developers of both smart-contracts and node software writers. This could greatly simplify interoperability. 
+ 
+ ### Implementation
+ 
+ Work in Progress:
+ 
+ Example of a Smart contract hashing being able to trustlessly Keccak hash a hypothetical block header.
+-![example](https://i.imgur.com/Rt1n35s.png)
++![example](https://i.imgur.com/xh3WgCF.png)
++
++Here is an analysis of Monero's nonce-distribution for "cryptonight", an algorithm similar to Ethash, which also attempts to be "ASIC-Resistant" it is very clear in the picture that before the hashing algorithm is changed there is a clear nonce-pattern. This is indicative of a major failure in a hashing algorithm, and should illustrate the dangers of disregarding proper cryptographic security. Finding a hashing pattern would be far harder using a proven system like Keccak:
++
++![example](https://i.imgur.com/vVdmzm9.jpg)
++
+ 
+ ### References: 
+ 
+ 1. https://github.com/ethereum/wiki/wiki/Dagger-Hashimoto#introduction
++1. https://en.wikipedia.org/wiki/SHA-3
+ 1. https://satoshi.nakamotoinstitute.org/emails/cryptography/2/
+ 1. https://github.com/0xbitcoin/white-paper
+ 1. https://github.com/EthereumCommonwealth/Auditing/issues/102
+
+From b5829b167e126fd51ff467ae72d3ed99a26c7e00 Mon Sep 17 00:00:00 2001
+From: p3c-bot <40745785+p3c-bot@users.noreply.github.com>
+Date: Wed, 16 Jan 2019 12:29:47 -0500
+Subject: [PATCH 7/7] Update ECIP-1049.md
+
+---
+ ECIPs/ECIP-1049.md | 16 +++++++++++++---
+ 1 file changed, 13 insertions(+), 3 deletions(-)
+
+diff --git a/ECIPs/ECIP-1049.md b/ECIPs/ECIP-1049.md
+index 2f90e3a..42ec544 100644
+--- a/ECIPs/ECIP-1049.md
++++ b/ECIPs/ECIP-1049.md
+@@ -1,10 +1,10 @@
+-### What is an ECIP?
++### Change the ETC Proof of Work Algorithm to Keccak256
+ 
+     ECIP: 1049
+     Title: Change the ETC Proof of Work Algorithm to Keccak256
+     Status: Draft
+     Type: Network
+-    Discussion: https://github.com/ethereumclassic/ECIPs/pull/8
++    Discussion: https://github.com/ethereumclassic/ECIPs/issues/13
+     Author: Alexander Tsankov (alexander.tsankov@colorado.edu)
+     Created: 2019-01-08
+ 
+@@ -16,7 +16,7 @@ A proposal to replace the current Ethereum Classic proof of work algorithm with
+ 
+ * As a secondary benefit, deployed smart contracts and dapps running on chain are currently able to use `keccak256()` in their code. This ECIP could open the possibility of smart contracts being able to evaluate chain state, and simplify second layer (L2) development.
+ 
+-### Specification
++### Rationale
+ 
+ ### Reason 1: Similarity to Bitcoin
+ The Bitcoin network currently uses the CPU-intensive SHA256 Algorithm to evaluate blocks. When Ethereum was deployed it used a different algorithm, Dagger-Hashimoto, which eventually became Ethash on 1.0 launch. Dagger-Hashimoto was explicitly designed to be memory-intensive with the goal of ASIC resistance [1]. It has been provably unsuccessful at this goal, with Ethash ASICs currently easily availalble on the market.
+@@ -50,6 +50,16 @@ Here is an analysis of Monero's nonce-distribution for "cryptonight", an algorit
+ 
+ ![example](https://i.imgur.com/vVdmzm9.jpg)
+ 
++Based on analysis of the EVM architecture [here](https://cdn.discordapp.com/attachments/223675625334898688/534597157693685760/eth.jpg) there are two main pieces that need to be changed:
++
++1. The Proof of work function needs to be replaced with Keccak256
++1. The Function that checks the nonce-header  in the block needs to know to accept Keccak256 hashes as valid for a block.
++
++![example](https://i.imgur.com/2hobqOL.png)
++
++After doing further analysis it the best way forward to begin work is to implement this change in [Multi-Geth](https://github.com/ethoxy/multi-geth) instead of any other client. This is because Multi-geth is organized for multi-chain development, it seems to be more recently updated than classic-geth, and it is designed to be used with alternative consensus methods- which is necessary for implementing ECIP-1049.
++
++The area where most of the changes will be in `multi-geth/consensus`
+ 
+ ### References: 
+ 
diff --git a/.gh-pullrequests/00008_452259834.json b/.gh-pullrequests/00008_452259834.json
new file mode 100644
index 0000000..a45cf35
--- /dev/null
+++ b/.gh-pullrequests/00008_452259834.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452259834",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/8#issuecomment-452259834",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8",
+    "id": 452259834,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjI1OTgzNA==",
+    "user": {
+      "login": "saturn-network",
+      "id": 44673408,
+      "node_id": "MDQ6VXNlcjQ0NjczNDA4",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/44673408?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/saturn-network",
+      "html_url": "https://github.com/saturn-network",
+      "followers_url": "https://api.github.com/users/saturn-network/followers",
+      "following_url": "https://api.github.com/users/saturn-network/following{/other_user}",
+      "gists_url": "https://api.github.com/users/saturn-network/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/saturn-network/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/saturn-network/subscriptions",
+      "organizations_url": "https://api.github.com/users/saturn-network/orgs",
+      "repos_url": "https://api.github.com/users/saturn-network/repos",
+      "events_url": "https://api.github.com/users/saturn-network/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/saturn-network/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-08T11:03:05Z",
+    "updated_at": "2019-01-08T11:03:05Z",
+    "author_association": "NONE",
+    "body": "IMO ProgPow would be a better option.\r\n\r\n1. SHA3 is super easy to develop FPGA and ASIC miners for.\r\n2. Another hashing function is trivial to add to EVM as a precompiled contract provided there is need for it.\r\n3. \r\n> This ECIP could open the possibility of smart contracts being able to evaluate chain state, and simplify second layer (L2) development.\r\n\r\nThis is [already possible](https://peacerelay.io/) and has nothing to do with choosing hashing functions for PoW consensus. What matters is which hashing function was used to link to previous block (block `N+1` must contain hash of block `N`) which is already `keccak256` and can remain `keccak256` even if you change the hashing function used for PoW in Nakamoto consensus.\r\n\r\nIf ETH changes to ProgPow IMO ETC should change as well in order to be better positioned to absorb Ethereum's hashrate once ETH switches to PoS.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452259834/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00008_452283600.json b/.gh-pullrequests/00008_452283600.json
new file mode 100644
index 0000000..94b5a62
--- /dev/null
+++ b/.gh-pullrequests/00008_452283600.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452283600",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/8#issuecomment-452283600",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8",
+    "id": 452283600,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjI4MzYwMA==",
+    "user": {
+      "login": "drd34d",
+      "id": 30156189,
+      "node_id": "MDQ6VXNlcjMwMTU2MTg5",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/30156189?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/drd34d",
+      "html_url": "https://github.com/drd34d",
+      "followers_url": "https://api.github.com/users/drd34d/followers",
+      "following_url": "https://api.github.com/users/drd34d/following{/other_user}",
+      "gists_url": "https://api.github.com/users/drd34d/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/drd34d/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/drd34d/subscriptions",
+      "organizations_url": "https://api.github.com/users/drd34d/orgs",
+      "repos_url": "https://api.github.com/users/drd34d/repos",
+      "events_url": "https://api.github.com/users/drd34d/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/drd34d/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-08T12:37:12Z",
+    "updated_at": "2019-01-08T12:37:12Z",
+    "author_association": "NONE",
+    "body": "@saturn-network I used to be supportive of ProgPoW too but come to realize that if the algo can be programmatic, then so will the next gen of ASIC's. Like an hybrid of FPGA and ASIC. Thus, ProgPoW would be a temporary solution. ETH adopting progpow will definatelly be the necessary incentive for R&D of such hybrid.\r\n\r\nAlso, @saturn-network I wouldn't trust ETH chain as a verification point, for obvious reasons. Apparently there's a similar application on the Komodo network which used the BTC chain but I haven't read it properly yet.\r\n\r\n@p3c-bot - SHA3 ASIC design from 2012 \r\n - http://rijndael.ece.vt.edu/sha3/publications/DATE2012SHA3.pdf\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452283600/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00008_452305311.json b/.gh-pullrequests/00008_452305311.json
new file mode 100644
index 0000000..79b2465
--- /dev/null
+++ b/.gh-pullrequests/00008_452305311.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452305311",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/8#issuecomment-452305311",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8",
+    "id": 452305311,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjMwNTMxMQ==",
+    "user": {
+      "login": "saturn-network",
+      "id": 44673408,
+      "node_id": "MDQ6VXNlcjQ0NjczNDA4",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/44673408?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/saturn-network",
+      "html_url": "https://github.com/saturn-network",
+      "followers_url": "https://api.github.com/users/saturn-network/followers",
+      "following_url": "https://api.github.com/users/saturn-network/following{/other_user}",
+      "gists_url": "https://api.github.com/users/saturn-network/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/saturn-network/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/saturn-network/subscriptions",
+      "organizations_url": "https://api.github.com/users/saturn-network/orgs",
+      "repos_url": "https://api.github.com/users/saturn-network/repos",
+      "events_url": "https://api.github.com/users/saturn-network/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/saturn-network/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-08T13:52:22Z",
+    "updated_at": "2019-01-08T13:52:22Z",
+    "author_association": "NONE",
+    "body": "@drd34d the whole point of ProgPow was to design an algo that uses so many of the GPU features that efficiency gains from a specialized ASIC (that you need to invent and manufacture) would be so little that it would not pay off.\r\n\r\nIn bitcoin's case, it came out with SHA256 and people developed ASICs for it. In progpow's case it's all upside down - it is an algorithm developed for an already existing \"ASIC\" chip. The best ASIC for it is a consumer GPU.\r\n\r\nKomodo's consensus algorithm is too different to bring it up in this discussion.\r\n\r\nWhat are the obvious reasons to distrust ETH as a \"verification point\" for how well a mining algorithm performs in the wild?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452305311/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00008_452306778.json b/.gh-pullrequests/00008_452306778.json
new file mode 100644
index 0000000..ac919fc
--- /dev/null
+++ b/.gh-pullrequests/00008_452306778.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452306778",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/8#issuecomment-452306778",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8",
+    "id": 452306778,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjMwNjc3OA==",
+    "user": {
+      "login": "saturn-network",
+      "id": 44673408,
+      "node_id": "MDQ6VXNlcjQ0NjczNDA4",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/44673408?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/saturn-network",
+      "html_url": "https://github.com/saturn-network",
+      "followers_url": "https://api.github.com/users/saturn-network/followers",
+      "following_url": "https://api.github.com/users/saturn-network/following{/other_user}",
+      "gists_url": "https://api.github.com/users/saturn-network/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/saturn-network/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/saturn-network/subscriptions",
+      "organizations_url": "https://api.github.com/users/saturn-network/orgs",
+      "repos_url": "https://api.github.com/users/saturn-network/repos",
+      "events_url": "https://api.github.com/users/saturn-network/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/saturn-network/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-08T13:56:55Z",
+    "updated_at": "2019-01-08T13:56:55Z",
+    "author_association": "NONE",
+    "body": "A good counter-point to ProgPow is that since it's relatively easy to own/rent more GPU hashpower (i.e. a botnet or mining pools) then any ProgPow chain will become more vulnerable to 51% than before - and thus ProgPow is a trojan horse.\r\n\r\nPerhaps we should embrace ASICs, but make manufacturing them so easy that no one company gets a monopoly on them. If all three of\r\n\r\n* ETC picks an easily ASIC'able algo\r\n* ASICs are manufactured my many competing companies without price fixing and are easy to buy and run\r\n* ETC is the top coin on this algo measured by hashrate\r\n\r\nthen we may consider it secure.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452306778/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00008_452420847.json b/.gh-pullrequests/00008_452420847.json
new file mode 100644
index 0000000..3b6310a
--- /dev/null
+++ b/.gh-pullrequests/00008_452420847.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452420847",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/8#issuecomment-452420847",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8",
+    "id": 452420847,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjQyMDg0Nw==",
+    "user": {
+      "login": "oberondelafay",
+      "id": 44259757,
+      "node_id": "MDQ6VXNlcjQ0MjU5NzU3",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/44259757?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/oberondelafay",
+      "html_url": "https://github.com/oberondelafay",
+      "followers_url": "https://api.github.com/users/oberondelafay/followers",
+      "following_url": "https://api.github.com/users/oberondelafay/following{/other_user}",
+      "gists_url": "https://api.github.com/users/oberondelafay/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/oberondelafay/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/oberondelafay/subscriptions",
+      "organizations_url": "https://api.github.com/users/oberondelafay/orgs",
+      "repos_url": "https://api.github.com/users/oberondelafay/repos",
+      "events_url": "https://api.github.com/users/oberondelafay/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/oberondelafay/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-08T19:24:06Z",
+    "updated_at": "2019-01-08T19:24:06Z",
+    "author_association": "NONE",
+    "body": "Or ya know.  Ditch proof of work all together and go with literally anything else.\r\nASICs are natural for PoW but problematic because they mean the variable in the marginal cost of production eventually becomes cost of electricity.  Ergo mining centralizes rapidly like a neutron star collapsing into a black hole.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452420847/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00008_452421390.json b/.gh-pullrequests/00008_452421390.json
new file mode 100644
index 0000000..9f63191
--- /dev/null
+++ b/.gh-pullrequests/00008_452421390.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452421390",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/8#issuecomment-452421390",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8",
+    "id": 452421390,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjQyMTM5MA==",
+    "user": {
+      "login": "oberondelafay",
+      "id": 44259757,
+      "node_id": "MDQ6VXNlcjQ0MjU5NzU3",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/44259757?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/oberondelafay",
+      "html_url": "https://github.com/oberondelafay",
+      "followers_url": "https://api.github.com/users/oberondelafay/followers",
+      "following_url": "https://api.github.com/users/oberondelafay/following{/other_user}",
+      "gists_url": "https://api.github.com/users/oberondelafay/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/oberondelafay/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/oberondelafay/subscriptions",
+      "organizations_url": "https://api.github.com/users/oberondelafay/orgs",
+      "repos_url": "https://api.github.com/users/oberondelafay/repos",
+      "events_url": "https://api.github.com/users/oberondelafay/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/oberondelafay/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-08T19:25:48Z",
+    "updated_at": "2019-01-08T19:25:48Z",
+    "author_association": "NONE",
+    "body": "As for this particular algo, there's already FPGAs and likely ASICs, plus changing at this point would leave us at the mercy of thin pool of miners.  Hence my thumbs down",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452421390/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00008_452432584.json b/.gh-pullrequests/00008_452432584.json
new file mode 100644
index 0000000..e44451e
--- /dev/null
+++ b/.gh-pullrequests/00008_452432584.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452432584",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/8#issuecomment-452432584",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8",
+    "id": 452432584,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjQzMjU4NA==",
+    "user": {
+      "login": "p3c-bot",
+      "id": 40745785,
+      "node_id": "MDQ6VXNlcjQwNzQ1Nzg1",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/40745785?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/p3c-bot",
+      "html_url": "https://github.com/p3c-bot",
+      "followers_url": "https://api.github.com/users/p3c-bot/followers",
+      "following_url": "https://api.github.com/users/p3c-bot/following{/other_user}",
+      "gists_url": "https://api.github.com/users/p3c-bot/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/p3c-bot/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/p3c-bot/subscriptions",
+      "organizations_url": "https://api.github.com/users/p3c-bot/orgs",
+      "repos_url": "https://api.github.com/users/p3c-bot/repos",
+      "events_url": "https://api.github.com/users/p3c-bot/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/p3c-bot/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-08T20:02:03Z",
+    "updated_at": "2019-01-08T20:02:03Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "I accept ASIC development to be an inevitability of a proof of work algorithm. Ethash was intended to be ASIC resistance and it was a failure. In my opinion, that means this approach of ASIC-resistance is prone to failure. Bitcoin has had no double-spends in its entire 10-year existence. For Ethereum Classic to grow in the future I believe:\r\n\r\n1. It needs to be the most profitable coin on the Keccak256 algorithm, which it would easily.\r\n2. ASICs need to be decentralized and easy to fabricate to ensure rapid decentralization. This is exactly like how Bitcoin's SHA-256 is very simple for many manufacturers to compete against each other.\r\n\r\nThe problem with a overly-engineered \"ASIC-Resistant\" algorithm, like ProgPoW, for example is that we have no idea that it is actually ASIC-resistant, and it's complicated, so if there is a bug in it, the company behind it would have an unfair advantage in producing it and stealth mining. \r\n\r\nA few individual responses:\r\n\r\n@drd34d - That design, of an ASIC is SHA-3, not Keccak256. I have observed the 0xBitcoin community work on Keccak256 miners, like [Cosmic](\"https://www.reddit.com/r/0xbitcoin/comments/8ttg2a/cosmic_miner_v401t_update_windows_64bit_nvidiacuda/\"). They do not have ASICs and they only have begun research on FPGAs.\r\n\r\n@oberondelafay - This ECIP is not about changing the consensus algorithm of the system (PoW vs. PoS). ETC is Proof of work right now, this proposal is about how we actually administer the mining algorithm.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452432584/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00008_452443302.json b/.gh-pullrequests/00008_452443302.json
new file mode 100644
index 0000000..dbef4ed
--- /dev/null
+++ b/.gh-pullrequests/00008_452443302.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452443302",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/8#issuecomment-452443302",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8",
+    "id": 452443302,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjQ0MzMwMg==",
+    "user": {
+      "login": "saturn-network",
+      "id": 44673408,
+      "node_id": "MDQ6VXNlcjQ0NjczNDA4",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/44673408?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/saturn-network",
+      "html_url": "https://github.com/saturn-network",
+      "followers_url": "https://api.github.com/users/saturn-network/followers",
+      "following_url": "https://api.github.com/users/saturn-network/following{/other_user}",
+      "gists_url": "https://api.github.com/users/saturn-network/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/saturn-network/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/saturn-network/subscriptions",
+      "organizations_url": "https://api.github.com/users/saturn-network/orgs",
+      "repos_url": "https://api.github.com/users/saturn-network/repos",
+      "events_url": "https://api.github.com/users/saturn-network/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/saturn-network/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-08T20:38:53Z",
+    "updated_at": "2019-01-08T20:38:53Z",
+    "author_association": "NONE",
+    "body": "@p3c-bot SHA3 and Keccak256 are basically [same thing](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).\r\n\r\nFurthermore, FPGA keccak256 mining will definitely be a thing if ETC decides to adopt it before you can say \"hard fork\". This is not necessarily a bad thing, but the community needs to be aware before the decision is made.\r\n\r\n@oberondelafay if you have ideas of what consensus algorithm can guarantee uninterrupted decentralized operation of *code is law* smart contract platform I'm sure this community would love to hear that. I don't think that we can do better than PoW in this aspect though.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452443302/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00008_452447368.json b/.gh-pullrequests/00008_452447368.json
new file mode 100644
index 0000000..7897c96
--- /dev/null
+++ b/.gh-pullrequests/00008_452447368.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452447368",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/8#issuecomment-452447368",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8",
+    "id": 452447368,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjQ0NzM2OA==",
+    "user": {
+      "login": "p3c-bot",
+      "id": 40745785,
+      "node_id": "MDQ6VXNlcjQwNzQ1Nzg1",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/40745785?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/p3c-bot",
+      "html_url": "https://github.com/p3c-bot",
+      "followers_url": "https://api.github.com/users/p3c-bot/followers",
+      "following_url": "https://api.github.com/users/p3c-bot/following{/other_user}",
+      "gists_url": "https://api.github.com/users/p3c-bot/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/p3c-bot/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/p3c-bot/subscriptions",
+      "organizations_url": "https://api.github.com/users/p3c-bot/orgs",
+      "repos_url": "https://api.github.com/users/p3c-bot/repos",
+      "events_url": "https://api.github.com/users/p3c-bot/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/p3c-bot/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-08T20:53:01Z",
+    "updated_at": "2019-01-08T22:08:13Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "@saturn-network - when it comes to ASICs, even the smallest difference can cause a complete redesign of a chip. Please read the article below, to see exactly what the differences between SHA3 and Keccak256 are (has to do with padding of the input):\r\n\r\nhttps://ethereum.stackexchange.com/questions/550/which-cryptographic-hash-function-does-ethereum-use\r\n\r\nECIP-1049 is for Keccak256 to be adopted, not SHA3. I fully expect FPGA mining to become a thing, but believe that it will be at parity with graphics card for at leas 12 months, more likely closer to 24. If we do nothing right now, Ethash is already ASIC'd as it is.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452447368/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00008_452459302.json b/.gh-pullrequests/00008_452459302.json
new file mode 100644
index 0000000..36f3fd4
--- /dev/null
+++ b/.gh-pullrequests/00008_452459302.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452459302",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/8#issuecomment-452459302",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8",
+    "id": 452459302,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjQ1OTMwMg==",
+    "user": {
+      "login": "oberondelafay",
+      "id": 44259757,
+      "node_id": "MDQ6VXNlcjQ0MjU5NzU3",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/44259757?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/oberondelafay",
+      "html_url": "https://github.com/oberondelafay",
+      "followers_url": "https://api.github.com/users/oberondelafay/followers",
+      "following_url": "https://api.github.com/users/oberondelafay/following{/other_user}",
+      "gists_url": "https://api.github.com/users/oberondelafay/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/oberondelafay/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/oberondelafay/subscriptions",
+      "organizations_url": "https://api.github.com/users/oberondelafay/orgs",
+      "repos_url": "https://api.github.com/users/oberondelafay/repos",
+      "events_url": "https://api.github.com/users/oberondelafay/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/oberondelafay/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-08T21:32:50Z",
+    "updated_at": "2019-01-08T21:32:50Z",
+    "author_association": "NONE",
+    "body": "@saturn-network I have ideas.  I'm just trying to hammer them into something cohesive and digestible.  \r\n\r\nI'm trying to sort out this ECIP process and the right way to present things to you guys for discussion and approval.  I'm just a user, not a dev.  But I use ALOT of currencies and have be doing so since 2009.  In that time I've learned a lot of lessons.\r\n\r\nWhat you're doing here is trying to put a bandaid on a broken leg.  It won't work, you're only covering up a symptom and not dealing with the fundamental disease.\r\n\r\nIf ETC remains PoW regardless of algo, it is forever going to have these issues.  Changing the algo might have a short term effect, but in the long run these attacks are because it's more profitable to use it as a tool to rape people unawares than to mine it properly and honestly  \r\n\r\nEven changing from PoW to something else would only be covering a symptom and maybe making it harder to get sicker.\r\n\r\nA quick fix to the problem is to add something to official clients so that they do not show coins as received until they are past the longest known re-org and don't show them as confirmed until 2x the longest re-org.  If exchanges don't see the coins come in until it's too late for them to re-org out and be double spent, then this pushes the attacker's costs through the roof and makes it untenable to sustain, although they still might be able to pull it off for short bursts with exchanges using custom clients.\r\n\r\nHowever the real problem, the disease so to speak is the price.  \r\nIt's too low to sustain mining at current reward levels and there aren't enough users using the coin to compensate by using up the vast amount of gas available.\r\n\r\nIf we want the current attacks to stop immediately and not resume for a long time, it is sufficient to change the block reward by a factor of somewhere between 10x and 100x in order to allow huge quantities of honest miners to come here and be profitable.  The number isn't important, just make it higher in dollar terms than ETH is paying.\r\n\r\nThis will result in higher rates of inflation, thereby pushing down the price overall in the long run.  But that inflation is going to be diluted by the number of coins already in circulation.  Furthermore, the increased miner presence does translate to increased users and increased decentralization.  In short, pay your miners a living wage so they aren't forced to rent out their pickaxes to the bad guys in order to make ends meet.\r\n\r\nThe second thing to do is start working on bringing more users to the platform.  The more users we have the more valuable it is.  I'm working that angle, and there aren't any blocking issues on my end so long as gas prices remain reasonable and predictable.  Things in the pipeline include a trading card game, an MMORPG, a stablecoin and something I can't discuss right now, but there's nothing like it on ETH or anywhere else for that matter.\r\n\r\nBut there could easily be more like me, you need to work on getting the word out that ETC is a stable and economical platform for people to build mission critical applications on top of.  I can help you with some of that writing because I'm in the trenches and know what challenges they face.  But if the blockchain is being used correctly, there isn't any good reason for a company to choose ETH over ETC even with the current attacks.\r\n\r\nFinal note: \r\nIt would be helpful to have equivalents of oraclize and infura if anyone is looking for things to build that would help bring users.\r\n\r\nNone of this is really relevant to this ECIP though.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/452459302/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00008_453086727.json b/.gh-pullrequests/00008_453086727.json
new file mode 100644
index 0000000..a7376e4
--- /dev/null
+++ b/.gh-pullrequests/00008_453086727.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/453086727",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/8#issuecomment-453086727",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8",
+    "id": 453086727,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzA4NjcyNw==",
+    "user": {
+      "login": "saturn-network",
+      "id": 44673408,
+      "node_id": "MDQ6VXNlcjQ0NjczNDA4",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/44673408?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/saturn-network",
+      "html_url": "https://github.com/saturn-network",
+      "followers_url": "https://api.github.com/users/saturn-network/followers",
+      "following_url": "https://api.github.com/users/saturn-network/following{/other_user}",
+      "gists_url": "https://api.github.com/users/saturn-network/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/saturn-network/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/saturn-network/subscriptions",
+      "organizations_url": "https://api.github.com/users/saturn-network/orgs",
+      "repos_url": "https://api.github.com/users/saturn-network/repos",
+      "events_url": "https://api.github.com/users/saturn-network/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/saturn-network/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-10T12:56:20Z",
+    "updated_at": "2019-01-10T12:56:20Z",
+    "author_association": "NONE",
+    "body": "I think the best path forward with this ECIP would be to launch a keccak256 testnet and invite miners to try it out.\r\n\r\nAs far as production launch goes, if the testnet works out fine, some sort of public vote should be set up to propose algo switch. If the vote results with a `YES` answer, then a hard fork date should be set somewhat far into the future, probably 12 months.\r\n\r\nIn the meantime ASIC manufacturers should be invited to develop keccak256 ASICs. ETC should only switch to the new hashing algo if there are plenty of easy-to-buy, commercially available ASICs that cost roughly as much as a desktop GPU ($300 - $500). Launching without commercial ASICs will most likely result in lots of miners abandoning the chain, and at this low-hashrate moment ETC cannot make mistakes. I also heard that when it comes to keccak256 and GPUs, this algo heavily favors NVidia cards, which is also less than ideal.\r\n\r\nOtherwise, changing hashing algorithms is just playing favorites - you favor one group of miners over another without much thought put in.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/453086727/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00008_453095320.json b/.gh-pullrequests/00008_453095320.json
new file mode 100644
index 0000000..b12637a
--- /dev/null
+++ b/.gh-pullrequests/00008_453095320.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/453095320",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/8#issuecomment-453095320",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8",
+    "id": 453095320,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzA5NTMyMA==",
+    "user": {
+      "login": "xaoyaolee",
+      "id": 42575759,
+      "node_id": "MDQ6VXNlcjQyNTc1NzU5",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/42575759?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/xaoyaolee",
+      "html_url": "https://github.com/xaoyaolee",
+      "followers_url": "https://api.github.com/users/xaoyaolee/followers",
+      "following_url": "https://api.github.com/users/xaoyaolee/following{/other_user}",
+      "gists_url": "https://api.github.com/users/xaoyaolee/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/xaoyaolee/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/xaoyaolee/subscriptions",
+      "organizations_url": "https://api.github.com/users/xaoyaolee/orgs",
+      "repos_url": "https://api.github.com/users/xaoyaolee/repos",
+      "events_url": "https://api.github.com/users/xaoyaolee/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/xaoyaolee/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-10T13:27:25Z",
+    "updated_at": "2019-01-10T13:27:25Z",
+    "author_association": "NONE",
+    "body": "There is no keccak256 ASIC so far.\r\nWe can switch the algo every half year, just like XMR.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/453095320/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00008_453134244.json b/.gh-pullrequests/00008_453134244.json
new file mode 100644
index 0000000..5a0a21e
--- /dev/null
+++ b/.gh-pullrequests/00008_453134244.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/453134244",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/8#issuecomment-453134244",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8",
+    "id": 453134244,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzEzNDI0NA==",
+    "user": {
+      "login": "p3c-bot",
+      "id": 40745785,
+      "node_id": "MDQ6VXNlcjQwNzQ1Nzg1",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/40745785?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/p3c-bot",
+      "html_url": "https://github.com/p3c-bot",
+      "followers_url": "https://api.github.com/users/p3c-bot/followers",
+      "following_url": "https://api.github.com/users/p3c-bot/following{/other_user}",
+      "gists_url": "https://api.github.com/users/p3c-bot/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/p3c-bot/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/p3c-bot/subscriptions",
+      "organizations_url": "https://api.github.com/users/p3c-bot/orgs",
+      "repos_url": "https://api.github.com/users/p3c-bot/repos",
+      "events_url": "https://api.github.com/users/p3c-bot/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/p3c-bot/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-10T15:24:07Z",
+    "updated_at": "2019-01-10T15:24:48Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "@xaoyaolee - agreed, I have researched and currently do not see any Keccak256 ASICs.\r\n\r\n@saturn-network - I agree with that approach, we should begin creating a Keccak256 testnet for interested users and miners to start testing on. To do this, I suggest we fork classic-geth and replace Ethash with Keccak256. There are a few next steps:\r\n\r\n1. Research Keccak256 Algorithm ( I am currently still working on this)\r\n2. Replace Ethash in classic-geth with Keccak256.\r\n3. Create a testnet for miners to come and use.\r\n4. Monitor progress on testnet and collect data.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/453134244/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00008_453714749.json b/.gh-pullrequests/00008_453714749.json
new file mode 100644
index 0000000..8c7fb7c
--- /dev/null
+++ b/.gh-pullrequests/00008_453714749.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/453714749",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/8#issuecomment-453714749",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8",
+    "id": 453714749,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzcxNDc0OQ==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-12T03:10:57Z",
+    "updated_at": "2019-01-12T03:10:57Z",
+    "author_association": "MEMBER",
+    "body": "Thanks for opening the ECIP!\r\nI'm personally against changing the mining algorithm because it doesn't resolve the issue in the long run meaning we have to become resilient in some other way. I also wouldn't want to be switching algorithms frequently.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/453714749/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00008_453716507.json b/.gh-pullrequests/00008_453716507.json
new file mode 100644
index 0000000..fbd6461
--- /dev/null
+++ b/.gh-pullrequests/00008_453716507.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/453716507",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/8#issuecomment-453716507",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8",
+    "id": 453716507,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzcxNjUwNw==",
+    "user": {
+      "login": "p3c-bot",
+      "id": 40745785,
+      "node_id": "MDQ6VXNlcjQwNzQ1Nzg1",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/40745785?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/p3c-bot",
+      "html_url": "https://github.com/p3c-bot",
+      "followers_url": "https://api.github.com/users/p3c-bot/followers",
+      "following_url": "https://api.github.com/users/p3c-bot/following{/other_user}",
+      "gists_url": "https://api.github.com/users/p3c-bot/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/p3c-bot/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/p3c-bot/subscriptions",
+      "organizations_url": "https://api.github.com/users/p3c-bot/orgs",
+      "repos_url": "https://api.github.com/users/p3c-bot/repos",
+      "events_url": "https://api.github.com/users/p3c-bot/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/p3c-bot/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-01-12T03:45:15Z",
+    "updated_at": "2019-01-12T03:45:15Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "@phyro There are two points you are making, one I agree with and one I disagree with:\r\n\r\n1. I agree that switching algorithms frequently is a bad idea. Every-time we do this it is very disruptive to the entire community, and changes need to be thoroughly tested in lab conditions before we make a drastic switch. Research has definitively proven that Keccak256 is currently the best hashing algorithm available, hence why it is SHA3 certified. I would trust SHA3 with my life. I am very skeptical Ethash is even safe against a determined opponent like a nationstate.\r\n\r\n2. The issue in the long run as I see it, is that friendly miners were not able to have more hashpower than hostile miners. With a more transparent mining algorithm, the market is on a much more level playing field. What Ethash has created is a market where incumbent manufacturers take advantage of poor documentation and confusion to gain a competitive advantage.\r\n\r\nKeccak 256 Documentation: https://keccak.team/files/Keccak-implementation-3.2.pdf\r\nEthash Documentation: https://github.com/ethereum/wiki/wiki/Ethash",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/453716507/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00008_461321539.json b/.gh-pullrequests/00008_461321539.json
new file mode 100644
index 0000000..7194712
--- /dev/null
+++ b/.gh-pullrequests/00008_461321539.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/461321539",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/8#issuecomment-461321539",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8",
+    "id": 461321539,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTMyMTUzOQ==",
+    "user": {
+      "login": "stevanlohja",
+      "id": 10556209,
+      "node_id": "MDQ6VXNlcjEwNTU2MjA5",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/10556209?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/stevanlohja",
+      "html_url": "https://github.com/stevanlohja",
+      "followers_url": "https://api.github.com/users/stevanlohja/followers",
+      "following_url": "https://api.github.com/users/stevanlohja/following{/other_user}",
+      "gists_url": "https://api.github.com/users/stevanlohja/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/stevanlohja/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/stevanlohja/subscriptions",
+      "organizations_url": "https://api.github.com/users/stevanlohja/orgs",
+      "repos_url": "https://api.github.com/users/stevanlohja/repos",
+      "events_url": "https://api.github.com/users/stevanlohja/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/stevanlohja/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-02-07T08:02:10Z",
+    "updated_at": "2019-02-07T08:02:10Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "I think the intent of this ECIP is to just respond with an ECIP because the ECIP knowingly isn't trying to solve the problems of the claimed catalyst (51 attack). ETC can change it's underwear in some way but it has to have some type of super power than 'just cause'. I reject.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/461321539/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00008_509382935.json b/.gh-pullrequests/00008_509382935.json
new file mode 100644
index 0000000..c3fabaf
--- /dev/null
+++ b/.gh-pullrequests/00008_509382935.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/509382935",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/8#issuecomment-509382935",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8",
+    "id": 509382935,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTM4MjkzNQ==",
+    "user": {
+      "login": "pyskell",
+      "id": 9665963,
+      "node_id": "MDQ6VXNlcjk2NjU5NjM=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/9665963?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/pyskell",
+      "html_url": "https://github.com/pyskell",
+      "followers_url": "https://api.github.com/users/pyskell/followers",
+      "following_url": "https://api.github.com/users/pyskell/following{/other_user}",
+      "gists_url": "https://api.github.com/users/pyskell/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/pyskell/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/pyskell/subscriptions",
+      "organizations_url": "https://api.github.com/users/pyskell/orgs",
+      "repos_url": "https://api.github.com/users/pyskell/repos",
+      "events_url": "https://api.github.com/users/pyskell/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/pyskell/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-07-08T20:39:22Z",
+    "updated_at": "2019-07-08T20:39:22Z",
+    "author_association": "MEMBER",
+    "body": "SHA-3, having a faster less memory intensive algorithm might make ASICs run up against transistor limits sooner, really simplifies the chip, more production. I only have a naive knowledge of this but the maximum speed of CPUs seems to be running up against limits faster than RAM.\r\n\r\nI'm personally iffy about changing the PoW algorithm at all (unless an exploit is found) but it's worth noting.\r\n\r\nAlso in this vein SHA-3 would be much less likely to be exploitable than Ethash due to its long period of development and analysis.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/509382935/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00008_547107733.json b/.gh-pullrequests/00008_547107733.json
new file mode 100644
index 0000000..06e78f6
--- /dev/null
+++ b/.gh-pullrequests/00008_547107733.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/547107733",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/8#issuecomment-547107733",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/8",
+    "id": 547107733,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzEwNzczMw==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-28T19:26:35Z",
+    "updated_at": "2019-10-28T19:36:23Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "I have a low-level optimization for the ECIP. It would be preferable to use the specific format (mentioned to Alex at the summit)\r\n```\r\n// unsealedBlockheader is the blockheader with a null nonce\r\ndigest = keccak256(concat(keccak256(unsealedBlockheader),32ByteNonce))\r\n// a \"winning\" digest is of course the thing that must start with lots of leading zeros\r\n// the \"sealed\" header is then made by inserting the nonce and re-RLP-encoding\r\n```\r\n - This optimizes the size of a PoW to be 64 bytes instead of the current 400+ bytes (because the PoW verification only requires the 2 items that were concatenated above)\r\n - It also ensures that the dedicated hardware/software is optimizing _specifically_ keccak, because creating each new \"guess\" requires the minimal number of \"non-keccak\" steps (swapping the 32 byte nonce of a 64 byte bytearray). If the nonce was instead just 1 of the rlp items in the header, then creating another guess would entail a new RLP encoding step (of 400+ bytes) *for each additional guess*. ASICS would have to design RLP into the hardware to compete. Also selfish mining could become an advantage strategy since block headers can vary in size and larger headers would then take longer to mine on.\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/547107733/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00081.json b/.gh-pullrequests/00081.json
new file mode 100644
index 0000000..918c45d
--- /dev/null
+++ b/.gh-pullrequests/00081.json
@@ -0,0 +1,74 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/81",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/81/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/81/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/81/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/81",
+    "id": 452952794,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg1NzM5NDI1",
+    "number": 81,
+    "title": "ECIP-1061: Atzlán Hardfork Meta",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1428838937,
+        "node_id": "MDU6TGFiZWwxNDI4ODM4OTM3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/editor:%20looks-good",
+        "name": "editor: looks-good",
+        "color": "71ad0a",
+        "default": false,
+        "description": "This PR is generally fine to be merged."
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 4,
+    "created_at": "2019-06-06T10:25:51Z",
+    "updated_at": "2019-07-12T01:36:21Z",
+    "closed_at": "2019-07-12T01:36:21Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/81",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/81",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/81.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/81.patch"
+    },
+    "body": "### Atzlán Hardfork Meta\r\n\r\nEnable the outstanding Ethereum Foundation _Istanbul_ network protocol upgrades on the Ethereum\r\nClassic network in a hard-fork code-named _Atzlán_ to enable maximum compatibility across these networks.\r\n\r\n![Aztlan-Legendary-Aztec-Land](https://user-images.githubusercontent.com/47772477/59256364-14671a00-8c34-11e9-90e7-610186e268cc.jpg)\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/81/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00081.patch b/.gh-pullrequests/00081.patch
new file mode 100644
index 0000000..2468cb0
--- /dev/null
+++ b/.gh-pullrequests/00081.patch
@@ -0,0 +1,138 @@
+From e3dd9d6208fdcc52afeddd7763e33605dad9878b Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Thu, 6 Jun 2019 12:24:25 +0200
+Subject: [PATCH 1/3] Create ECIP-1061.md
+
+---
+ ECIPs/ECIP-1061.md | 63 ++++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 63 insertions(+)
+ create mode 100644 ECIPs/ECIP-1061.md
+
+diff --git a/ECIPs/ECIP-1061.md b/ECIPs/ECIP-1061.md
+new file mode 100644
+index 0000000..d1bbad2
+--- /dev/null
++++ b/ECIPs/ECIP-1061.md
+@@ -0,0 +1,63 @@
++### ECIP-1061: Atzlán EVM and Protocol Upgrades
++
++    ECIP: 1061
++    Title: Atzlán EVM and Protocol Upgrades
++    Status: Draft
++    Type: Standards Track
++    Author: Talha Cross (@soc1c)
++    Created: 2019-06-06
++
++### Simple Summary
++
++Enable the outstanding Ethereum Foundation _Istanbul_ network protocol upgrades on the Ethereum
++Classic network in a hard-fork code-named _Atzlán_ to enable maximum compatibility across these networks.
++
++### Abstract
++
++Add support for a subset of protocol-impacting changes introduced in the Ethereum Foundation (ETH) network via the
++_Istanbul_ hardforks. The proposed changes for Ethereum Classic's _Atzlán_ upgrade include:
++
++- TBD
++
++This document proposes the following blocks at which to implement these changes in the Classic networks:
++
++- `TBD` on Kotti Classic PoA-testnet (TBD 2020)
++- `TBD` on Morden Classic PoW-testnet (TBD 2020)
++- `TBD` on Ethereum Classic PoW-mainnet (TBD 2020)
++
++For more information on the opcodes and their respective EIPs and implementations, please see the _Specification_
++section of this document.
++
++### Motivation
++
++To enhance the Ethereum Virtual Machine's (EVM) capabilities, various opcodes shall be added to the Ethereum Classic
++networks, all of which have been in use on the Ethereum Foundation networks since late 2019.
++
++### Specification
++
++Technical specifications for each EIP can be found at those documents respectively:
++
++- TBD
++
++### Rationale
++
++__Interoperability__: Establishing and maintaining interoperable behavior between Ethereum clients is essential for
++developers and end-user adoption, yielding benefits for all participating chains (e.g., ETH and ETC, Ropsten and Morden,
++Görli and Kotti).
++
++__Immutability__: None of the introduced new opcodes in the EVM has the potential to change the behavior of existing
++contracts; in the case where previously an arbitrary invalid bytecode would have been deployed to the network, none of
++them would be able to modify the state of the Ethereum Classic networks retrospectively. Adding opcodes to the EVM
++increases its functionality and should be considered a feature upgrade rather than a modification.
++
++### Implementation
++
++Adoption of the content of this ECIP requires a hard fork as it introduces changes that are not backward compatible.
++
++The following clients with Ethereum Classic support implement the _Istanbul_ features currently:
++
++- TBD
++
++## Copyright
++
++Copyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).
+
+From 3dd1e9474680ad7edccd1ca8b4bece4de6dcf0fb Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Tue, 11 Jun 2019 10:30:03 +0200
+Subject: [PATCH 2/3] Add discussions-to header
+
+---
+ ECIPs/ECIP-1061.md | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/ECIPs/ECIP-1061.md b/ECIPs/ECIP-1061.md
+index d1bbad2..7df6f79 100644
+--- a/ECIPs/ECIP-1061.md
++++ b/ECIPs/ECIP-1061.md
+@@ -6,6 +6,7 @@
+     Type: Standards Track
+     Author: Talha Cross (@soc1c)
+     Created: 2019-06-06
++    Discussions-To: https://github.com/ethereumclassic/ECIPs/issues/81
+ 
+ ### Simple Summary
+ 
+
+From c9a4190a8f6f6402292e9cc7bc243b2460e827d4 Mon Sep 17 00:00:00 2001
+From: Wei Tang <accounts@that.world>
+Date: Sat, 29 Jun 2019 20:22:40 +0200
+Subject: [PATCH 3/3] Use new preamble style
+
+---
+ _specs/ecip-1061.md | 19 ++++++++++---------
+ 1 file changed, 10 insertions(+), 9 deletions(-)
+
+diff --git a/_specs/ecip-1061.md b/_specs/ecip-1061.md
+index 7df6f79..8052678 100644
+--- a/_specs/ecip-1061.md
++++ b/_specs/ecip-1061.md
+@@ -1,12 +1,13 @@
+-### ECIP-1061: Atzlán EVM and Protocol Upgrades
+-
+-    ECIP: 1061
+-    Title: Atzlán EVM and Protocol Upgrades
+-    Status: Draft
+-    Type: Standards Track
+-    Author: Talha Cross (@soc1c)
+-    Created: 2019-06-06
+-    Discussions-To: https://github.com/ethereumclassic/ECIPs/issues/81
++---
++lang: en
++ecip: 1061
++title: Atzlán EVM and Protocol Upgrades
++status: Draft
++type: Meta
++author: Talha Cross (@soc1c)
++created: 2019-06-06
++discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
++---
+ 
+ ### Simple Summary
+ 
diff --git a/.gh-pullrequests/00081_499916493.json b/.gh-pullrequests/00081_499916493.json
new file mode 100644
index 0000000..d67963b
--- /dev/null
+++ b/.gh-pullrequests/00081_499916493.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499916493",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/81#issuecomment-499916493",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/81",
+    "id": 499916493,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTkxNjQ5Mw==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-07T14:53:54Z",
+    "updated_at": "2019-06-07T14:53:54Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "These names sound all a bit sound too similar. how about _Indus_, an ancient civilization and one of the longest rivers through china, india and pakistan.\r\n\r\nI think we should oppose the following EIPs from Istanbul:\r\n  - EIP-1057: ProgPoW, a Programmatic Proof-of-Work\r\n  - EIP-2029 and EIP-2031 State Rent\r\n\r\nEthereum has not finalized which of the EIPs will make it in to Istanbul, but other than the above, I think we should implement whichever ones they end up implementing.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/499916493/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00081_500184764.json b/.gh-pullrequests/00081_500184764.json
new file mode 100644
index 0000000..5e92304
--- /dev/null
+++ b/.gh-pullrequests/00081_500184764.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/500184764",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/81#issuecomment-500184764",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/81",
+    "id": 500184764,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDE4NDc2NA==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-09T04:47:49Z",
+    "updated_at": "2019-06-09T04:47:49Z",
+    "author_association": "MEMBER",
+    "body": "If Agharta will be in ~Dec 2019, I propose Atzlán for September 2020.\r\n\r\nRationale: To minimize risks and expanding the \"argument surface\".\r\n\r\nSeparately, I agree with @zmitton re: \r\n\r\n`I think we should oppose the following EIPs from Istanbul:\r\n\r\nEIP-1057: ProgPoW, a Programmatic Proof-of-Work\r\nEIP-2029 and EIP-2031 State Rent`\r\n\r\nFinally, I propose to consider adding:\r\n\r\nECIP-1043: Fixed DAG limit restriction\r\nECIP-1046: NiPoPoW*\r\nECIP-1047: Reduce gas limit\r\nECIP-1053: Add OpenRPC Service Discovery To JSON-RPC Services (unless these are already integrated)\r\n\r\n*During this time we can debate whether to not do NiPoPoWs and do flyClient as per @zmitton.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/500184764/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00081_500742531.json b/.gh-pullrequests/00081_500742531.json
new file mode 100644
index 0000000..3b25099
--- /dev/null
+++ b/.gh-pullrequests/00081_500742531.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/500742531",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/81#issuecomment-500742531",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/81",
+    "id": 500742531,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDc0MjUzMQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-11T08:31:08Z",
+    "updated_at": "2019-06-11T08:31:08Z",
+    "author_association": "MEMBER",
+    "body": "I think it's too early to discuss timing and proposals. Let's focus on Atlantis and Agharta",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/500742531/reactions",
+      "total_count": 3,
+      "+1": 3,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00081_506971077.json b/.gh-pullrequests/00081_506971077.json
new file mode 100644
index 0000000..9353613
--- /dev/null
+++ b/.gh-pullrequests/00081_506971077.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506971077",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/81#issuecomment-506971077",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/81",
+    "id": 506971077,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjk3MTA3Nw==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-06-29T16:46:31Z",
+    "updated_at": "2019-06-29T16:47:08Z",
+    "author_association": "MEMBER",
+    "body": "(Waiting on either #101 or #102 before getting this merged.)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/506971077/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00086.json b/.gh-pullrequests/00086.json
new file mode 100644
index 0000000..84eced7
--- /dev/null
+++ b/.gh-pullrequests/00086.json
@@ -0,0 +1,83 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/86",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/86/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/86/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/86/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/86",
+    "id": 459503939,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MjkwODQzMTkx",
+    "number": 86,
+    "title": "Use account versioning for Agharta hard fork",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785139,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTM5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/status:%20draft",
+        "name": "status: draft",
+        "color": "ffffff",
+        "default": false,
+        "description": "draft stage - can be assigned ecip number and merged, but requires new PR to be Accepted"
+      },
+      {
+        "id": 1154785127,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20core",
+        "name": "type: core",
+        "color": "d73a4a",
+        "default": false,
+        "description": "Requires consensus consideration"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-06-22T19:25:45Z",
+    "updated_at": "2019-07-12T11:22:35Z",
+    "closed_at": "2019-07-12T11:22:25Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/86",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/86",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/86.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/86.patch"
+    },
+    "body": "This uses account versioning for Agharta hard fork, as defined in EIP-1702. All three features enabled at Constantinople are new opcodes, thus they cannot be used by existing contracts anyway. By using account versioning, we can preserve a much stronger guarantee of immutability and backward compatibility.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/86/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00086.patch b/.gh-pullrequests/00086.patch
new file mode 100644
index 0000000..959ef78
--- /dev/null
+++ b/.gh-pullrequests/00086.patch
@@ -0,0 +1,64 @@
+From 4d227a254e69cd1def7765c0d5da91a6606050f1 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sat, 22 Jun 2019 21:23:50 +0200
+Subject: [PATCH 1/2] Use account versioning for Agharta hard fork
+
+---
+ ECIPs/ECIP-1056.md | 10 ++++++++--
+ 1 file changed, 8 insertions(+), 2 deletions(-)
+
+diff --git a/ECIPs/ECIP-1056.md b/ECIPs/ECIP-1056.md
+index 5cb72f7..c94654e 100644
+--- a/ECIPs/ECIP-1056.md
++++ b/ECIPs/ECIP-1056.md
+@@ -4,7 +4,7 @@
+     Title: Agharta EVM and Protocol Upgrades
+     Status: Draft
+     Type: Standards Track
+-    Author: Isaac Ardis <isaac.a@etclabs.org>
++    Author: Isaac Ardis <isaac.a@etclabs.org>, Wei Tang <hi@that.world>
+     Created: 2019-03-25
+ 
+ ### Simple Summary
+@@ -37,12 +37,18 @@ networks, all of which have been in use on the Ethereum Foundation networks sinc
+ 
+ ### Specification
+ 
+-Technical specifications for each EIP can be found at those documents respectively:
++Enable the following three hard fork features via a new account version `0x1`, as specified in [EIP-1702](https://eips.ethereum.org/EIPS/eip-1702) "Specification" section (commonly known as EIP-1702 variant I):
+ 
+ - [EIP 145](https://eips.ethereum.org/EIPS/eip-145) (Bitwise shifting instructions)
+ - [EIP 1014](https://eips.ethereum.org/EIPS/eip-1014) (Skinny `CREATE2` opcode)
+ - [EIP 1052](https://eips.ethereum.org/EIPS/eip-1052) (`EXTCODEHASH` opcode)
+ 
++Specifically with definition from EIP-1702 "Usage Template" section:
++
++- **Version**: `0x1`.
++- **Parent version**: `0x0`.
++- **Features**: EIP 145, EIP 1014 and EIP 1052.
++
+ ### Rationale
+ 
+ __Atomicity__: This protocol specification notably merges the scheduled features of the anticipated _Petersburg_
+
+From bb452417c485fb4172bc5c6a5c794ab8071c0813 Mon Sep 17 00:00:00 2001
+From: soc1c <soc1c@users.noreply.github.com>
+Date: Fri, 12 Jul 2019 13:21:33 +0200
+Subject: [PATCH 2/2] fix formatting
+
+---
+ _specs/ecip-1056.md | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/_specs/ecip-1056.md b/_specs/ecip-1056.md
+index d373e41..f36023d 100644
+--- a/_specs/ecip-1056.md
++++ b/_specs/ecip-1056.md
+@@ -43,6 +43,7 @@ Enable the following three hard fork features via a new account version `0x1`, a
+ - [EIP 145](https://eips.ethereum.org/EIPS/eip-145) (Bitwise shifting instructions)
+ - [EIP 1014](https://eips.ethereum.org/EIPS/eip-1014) (Skinny `CREATE2` opcode)
+ - [EIP 1052](https://eips.ethereum.org/EIPS/eip-1052) (`EXTCODEHASH` opcode)
++
+ Specifically with definition from EIP-1702 "Usage Template" section:
+ 
+ - **Version**: `0x1`.
diff --git a/.gh-pullrequests/00103.json b/.gh-pullrequests/00103.json
new file mode 100644
index 0000000..a48f095
--- /dev/null
+++ b/.gh-pullrequests/00103.json
@@ -0,0 +1,74 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/103",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/103/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/103/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/103/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/103",
+    "id": 462326829,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MjkzMDU0NTky",
+    "number": 103,
+    "title": "Re-open ECIP-69769: Submit Block RPC",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1428838937,
+        "node_id": "MDU6TGFiZWwxNDI4ODM4OTM3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/editor:%20looks-good",
+        "name": "editor: looks-good",
+        "color": "71ad0a",
+        "default": false,
+        "description": "This PR is generally fine to be merged."
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-06-29T18:17:50Z",
+    "updated_at": "2019-07-12T11:27:51Z",
+    "closed_at": "2019-07-12T11:27:33Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/103",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/103",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/103.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/103.patch"
+    },
+    "body": "cc @BelfordZ. Originally PR #90. My mistake.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/103/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00103.patch b/.gh-pullrequests/00103.patch
new file mode 100644
index 0000000..0d12be7
--- /dev/null
+++ b/.gh-pullrequests/00103.patch
@@ -0,0 +1,179 @@
+From b5606f8c72af1992f60a6cc31a02033d03d21284 Mon Sep 17 00:00:00 2001
+From: Zachary Belford <belfordz66@gmail.com>
+Date: Wed, 26 Jun 2019 14:18:43 -0700
+Subject: [PATCH 1/5] ECIP-69769: Submit Block RPC
+
+---
+ ECIPs/ECIP-69769.md | 57 +++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 57 insertions(+)
+ create mode 100644 ECIPs/ECIP-69769.md
+
+diff --git a/ECIPs/ECIP-69769.md b/ECIPs/ECIP-69769.md
+new file mode 100644
+index 0000000..f86b94a
+--- /dev/null
++++ b/ECIPs/ECIP-69769.md
+@@ -0,0 +1,57 @@
++### Title
++
++    ECIP: 69769
++    Title: Submit Block RPC
++    Author: Zachary Belford, zachary.b@etclabs.org
++    Discussions-To: Community Discord #ecips
++    Status: Draft
++    Type: Standards Track
++    Created: 2019-06-26
++
++### Abstract
++
++Add an RPC method to submit a new block, instead of having to use submitWork.
++
++### Motivation
++
++I would like to be able to submitWork, but have the address used be one other than the etherbase of the node the work is being submitted by.
++
++### Specification
++
++```json
++{
++  "openrpc": "1.1.8",
++  "info": {
++    "version": "1.0.0",
++    "title": "Example submitBlock"
++  },
++  "methods": [
++    {
++      "name": "eth_submitBlock",
++      "summary": "Submit a new block proposal",
++      "description": "Given a new block, it will validate the block, and broadcast it to connected peers.",
++      "params": [
++        { "$ref": "https://raw.githubusercontent.com/etclabscore/ethereum-json-rpc-specification/master/openrpc.json#/components/contentDescriptors/Block" }
++      ],
++      "result": {
++        "name": "isBlockAccepted",
++        "schema": {
++          "type": "boolean"
++        }
++      }
++    }
++  ]
++}
++```
++
++### Rationale
++
++This removes the dependency for miners to have a geth node with accounts that need to be unlocked. Miners would be able to better isolate their private keys from the world, yeilding better security potential.
++
++### Implementation
++
++I think it's pretty straight forward. Looking at the above specification, we would be adding a eth_submitBlock rpc method. It's similar to eth_submitWork, except with fewer steps before broadcasting the block. 
++
++
++
++**NOTE: I am extremely open to suggestions for this. Please be liberal in your feedback. Thank you.**
+
+From 271f4002cf243caac84225f159df071e25424453 Mon Sep 17 00:00:00 2001
+From: Zachary Belford <belfordz66@gmail.com>
+Date: Fri, 28 Jun 2019 09:24:09 -0700
+Subject: [PATCH 2/5] fix: update ecip number
+
+Co-Authored-By: Talha Cross <47772477+soc1c@users.noreply.github.com>
+---
+ ECIPs/ECIP-69769.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/ECIPs/ECIP-69769.md b/ECIPs/ECIP-69769.md
+index f86b94a..57d8698 100644
+--- a/ECIPs/ECIP-69769.md
++++ b/ECIPs/ECIP-69769.md
+@@ -1,6 +1,6 @@
+ ### Title
+ 
+-    ECIP: 69769
++    ECIP: 1062
+     Title: Submit Block RPC
+     Author: Zachary Belford, zachary.b@etclabs.org
+     Discussions-To: Community Discord #ecips
+
+From 9ad56f4d112df56be9528d2c55159087f45950be Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sat, 29 Jun 2019 20:18:55 +0200
+Subject: [PATCH 3/5] Use new preamble style
+
+---
+ _specs/ecip-1062.md | 20 +++++++++++---------
+ 1 file changed, 11 insertions(+), 9 deletions(-)
+
+diff --git a/_specs/ecip-1062.md b/_specs/ecip-1062.md
+index 57d8698..1deb2b0 100644
+--- a/_specs/ecip-1062.md
++++ b/_specs/ecip-1062.md
+@@ -1,12 +1,14 @@
+-### Title
+-
+-    ECIP: 1062
+-    Title: Submit Block RPC
+-    Author: Zachary Belford, zachary.b@etclabs.org
+-    Discussions-To: Community Discord #ecips
+-    Status: Draft
+-    Type: Standards Track
+-    Created: 2019-06-26
++---
++lang: en
++ecip: 1062
++title: Submit Block RPC
++author: Zachary Belford, zachary.b@etclabs.org
++discussions-to: Community Discord #ecips
++status: Draft
++type: Standards Track
++category: Interface
++created: 2019-06-26
++---
+ 
+ ### Abstract
+ 
+
+From e4ad4d338c4354eab911d6845be52c9f0549fe28 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sat, 29 Jun 2019 20:46:21 +0200
+Subject: [PATCH 4/5] Address grumbles
+
+---
+ _specs/ecip-1062.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1062.md b/_specs/ecip-1062.md
+index 1deb2b0..eb47800 100644
+--- a/_specs/ecip-1062.md
++++ b/_specs/ecip-1062.md
+@@ -52,7 +52,7 @@ This removes the dependency for miners to have a geth node with accounts that ne
+ 
+ ### Implementation
+ 
+-I think it's pretty straight forward. Looking at the above specification, we would be adding a eth_submitBlock rpc method. It's similar to eth_submitWork, except with fewer steps before broadcasting the block. 
++I think it's pretty straight forward. Looking at the above specification, we would be adding an `eth_submitBlock` RPC method. It's similar to `eth_submitWork`, except with fewer steps before broadcasting the block. 
+ 
+ 
+ 
+
+From dc127c81a3615dbeeef3946d6826146e07954d23 Mon Sep 17 00:00:00 2001
+From: Yaz Khoury <yaz.khoury@gmail.com>
+Date: Tue, 2 Jul 2019 13:50:39 -0400
+Subject: [PATCH 5/5] style: Delete unnecessary comment
+
+---
+ _specs/ecip-1062.md | 4 ----
+ 1 file changed, 4 deletions(-)
+
+diff --git a/_specs/ecip-1062.md b/_specs/ecip-1062.md
+index eb47800..d215a9d 100644
+--- a/_specs/ecip-1062.md
++++ b/_specs/ecip-1062.md
+@@ -53,7 +53,3 @@ This removes the dependency for miners to have a geth node with accounts that ne
+ ### Implementation
+ 
+ I think it's pretty straight forward. Looking at the above specification, we would be adding an `eth_submitBlock` RPC method. It's similar to `eth_submitWork`, except with fewer steps before broadcasting the block. 
+-
+-
+-
+-**NOTE: I am extremely open to suggestions for this. Please be liberal in your feedback. Thank you.**
diff --git a/.gh-pullrequests/00108.json b/.gh-pullrequests/00108.json
new file mode 100644
index 0000000..7f30e18
--- /dev/null
+++ b/.gh-pullrequests/00108.json
@@ -0,0 +1,74 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/108",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/108/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/108/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/108/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/108",
+    "id": 464405979,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk0NjkyNDE0",
+    "number": 108,
+    "title": "Fixed links and status terms",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1428838937,
+        "node_id": "MDU6TGFiZWwxNDI4ODM4OTM3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/editor:%20looks-good",
+        "name": "editor: looks-good",
+        "color": "71ad0a",
+        "default": false,
+        "description": "This PR is generally fine to be merged."
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-07-04T22:24:26Z",
+    "updated_at": "2019-07-12T11:49:22Z",
+    "closed_at": "2019-07-12T03:05:27Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/108",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/108",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/108.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/108.patch"
+    },
+    "body": "Fixed links to ECIP-1000 and markdown template in the \"Contributing\" section.\r\n\r\nAdded status terms:\r\n\r\n• \"WIP\" for early stage ECIPs with a lot of activity.\r\n• \"Active\" for \"Informational\" and \"Process\" ECIPs which do not go to \"Final\" status because they are generally always works in progress.\r\n\r\nIf these changes are merged, then I will correct the \"process.png\" and ECIP-1000.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/108/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00108.patch b/.gh-pullrequests/00108.patch
new file mode 100644
index 0000000..42bf7f8
--- /dev/null
+++ b/.gh-pullrequests/00108.patch
@@ -0,0 +1,106 @@
+From ab621af62b22b51cea01054a56cf95cc91311794 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 4 Jul 2019 16:24:19 -0600
+Subject: [PATCH 1/3] Fixed links, Added "WIP" and "Active" status terms
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+Fixed links to ECIP-1000 and markdown template in the "Contributing" section.
+
+Added status terms:
+
+• "WIP" for early stage ECIPs with a lot of activity.
+• "Active" for "Informational" and "Process" ECIPs which do not go to "Final" status because they are generally always works in progress.
+
+If these changes are merged, then I will correct the "process.png" and ECIP-1000.
+---
+ README.md | 8 +++++---
+ 1 file changed, 5 insertions(+), 3 deletions(-)
+
+diff --git a/README.md b/README.md
+index 71dec91..bd17757 100644
+--- a/README.md
++++ b/README.md
+@@ -22,9 +22,9 @@ As you will see by reading this summary and the other documents suggested above,
+ 
+ ### Steps
+ 
+- 1. Review [ECIP-1](./ECIP-1.sample.md).
++ 1. Review [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000).
+  2. Fork the repository by clicking "Fork" in the top right.
+- 3. Add your ECIP to your fork of the repository. There is a [template ECIP here](ECIP-number.template.md).
++ 3. Add your ECIP to your fork of the repository. There is a [ECIP markdown template](./ecip-X.md).
+  4. Submit a Pull Request to Ethereum Classic's [ECIPs repository](https://github.com/ethereumclassic/ECIPs).
+ 
+ ### Format and Numbering
+@@ -43,7 +43,8 @@ When you believe your ECIP is mature and ready to progress past the draft phase,
+  - **For all other ECIPs**, open a PR changing the state of your ECIP to 'Final'. An editor will review your draft and ask if anyone objects to its finalization. If the editor decides there is no rough consensus - for instance, because contributors point out significant issues with the ECIP - they may close the PR and request that you fix the issues in the draft before trying again.
+ 
+ # ECIP Status Terms
+-* **Draft** - An ECIP that is undergoing rapid iteration and changes.
++* **Work in progress (WIP)** -- An ECIP where the author has asked the Ethereum Classic community whether an idea has any chance of support, he/she will write a draft ECIP as a pull request. However, if the idea is still in a very early stage, and will have a lot of commints and changes by the author, editors or contributors, it may be better to enter it as a WIP. Make sure to add [WIP] in the title (example: [WIP] ECIP-X) of the early stage ECIP so other members can mute it if they are not interested in participating at this stage. 
++* **Draft** - An ECIP that is still undergoing iteration and changes, but is ready for general review. Make sure to remove [WIP] from the title so those who have muted the ECIP get the new status and can participate. 
+ * **Last Call** - An ECIP that is done with its initial iteration and ready for review by a wider audience.
+ * **Accepted** - An ECIP that has been in Last Call for at least 2 weeks and any technical changes that were requested have been addressed by the author.
+ * **Final** - An ECIP that was accepted, implemented, and no longer can be modified without submitting a new proposal, e.g., it has been released in a hard fork.
+@@ -51,6 +52,7 @@ When you believe your ECIP is mature and ready to progress past the draft phase,
+ * **Replaced** - When a Final ECIP is no longer relevant, its status may be changed to Replaced or Obsolete.
+ * **Rejected** - Reasons for rejecting ECIPs include duplication of effort, disregard for formatting rules, unfocused or too broad, being technically unsound, not providing proper motivation, or obvious popular disapproval.
+ * **Withdrawn** - ECIP authors may decide to change the status between Draft, Deferred, or Withdrawn. The ECIP editor may also change the status to Deferred if no progress is being made on the ECIP.
++* **Active** -- Some Informational and Process EIPs may also be moved to a status of “Active” instead of "Finald" if they are never meant to be completed. E.g. [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000).
+ 
+ ## ECIP List
+ 
+
+From 5d5b78eeedcb57277f112a2acaacfd8f7342a273 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 4 Jul 2019 16:44:33 -0600
+Subject: [PATCH 2/3] Update README.md
+
+---
+ README.md | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/README.md b/README.md
+index bd17757..8d8ccbe 100644
+--- a/README.md
++++ b/README.md
+@@ -47,12 +47,12 @@ When you believe your ECIP is mature and ready to progress past the draft phase,
+ * **Draft** - An ECIP that is still undergoing iteration and changes, but is ready for general review. Make sure to remove [WIP] from the title so those who have muted the ECIP get the new status and can participate. 
+ * **Last Call** - An ECIP that is done with its initial iteration and ready for review by a wider audience.
+ * **Accepted** - An ECIP that has been in Last Call for at least 2 weeks and any technical changes that were requested have been addressed by the author.
+-* **Final** - An ECIP that was accepted, implemented, and no longer can be modified without submitting a new proposal, e.g., it has been released in a hard fork.
++* **Final** - An ECIP that was accepted, implemented, and no longer can be modified without submitting a new proposal, e.g. it has been released in a hard fork.
+ * **Deferred** - An ECIP that is not being considered for immediate adoption. May be reconsidered in the future for a subsequent hard fork.
+ * **Replaced** - When a Final ECIP is no longer relevant, its status may be changed to Replaced or Obsolete.
+ * **Rejected** - Reasons for rejecting ECIPs include duplication of effort, disregard for formatting rules, unfocused or too broad, being technically unsound, not providing proper motivation, or obvious popular disapproval.
+ * **Withdrawn** - ECIP authors may decide to change the status between Draft, Deferred, or Withdrawn. The ECIP editor may also change the status to Deferred if no progress is being made on the ECIP.
+-* **Active** -- Some Informational and Process EIPs may also be moved to a status of “Active” instead of "Finald" if they are never meant to be completed. E.g. [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000).
++* **Active** -- Some Informational and Process EIPs may also be moved to a status of “Active” instead of "Final" if they are never meant to be completed, e.g. [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000).
+ 
+ ## ECIP List
+ 
+
+From 0f1fb987155f2d448cc5aaff1c8c7c10723959d5 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 11 Jul 2019 20:36:57 -0600
+Subject: [PATCH 3/3] Update README.md
+
+---
+ README.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/README.md b/README.md
+index 8d8ccbe..7addc01 100644
+--- a/README.md
++++ b/README.md
+@@ -43,7 +43,7 @@ When you believe your ECIP is mature and ready to progress past the draft phase,
+  - **For all other ECIPs**, open a PR changing the state of your ECIP to 'Final'. An editor will review your draft and ask if anyone objects to its finalization. If the editor decides there is no rough consensus - for instance, because contributors point out significant issues with the ECIP - they may close the PR and request that you fix the issues in the draft before trying again.
+ 
+ # ECIP Status Terms
+-* **Work in progress (WIP)** -- An ECIP where the author has asked the Ethereum Classic community whether an idea has any chance of support, he/she will write a draft ECIP as a pull request. However, if the idea is still in a very early stage, and will have a lot of commints and changes by the author, editors or contributors, it may be better to enter it as a WIP. Make sure to add [WIP] in the title (example: [WIP] ECIP-X) of the early stage ECIP so other members can mute it if they are not interested in participating at this stage. 
++* **Work in progress (WIP)** -- An ECIP where the author has asked the Ethereum Classic community whether an idea has any chance of support, he/she will write a draft ECIP as a pull request. However, if the idea is still in a very early stage, and will have a lot of commits and changes by the author, editors or contributors, it may be better to enter it as a WIP. Make sure to add [WIP] in the title (example: [WIP] ECIP-X) of the early stage ECIP so other members can mute it if they are not interested in participating at this stage. 
+ * **Draft** - An ECIP that is still undergoing iteration and changes, but is ready for general review. Make sure to remove [WIP] from the title so those who have muted the ECIP get the new status and can participate. 
+ * **Last Call** - An ECIP that is done with its initial iteration and ready for review by a wider audience.
+ * **Accepted** - An ECIP that has been in Last Call for at least 2 weeks and any technical changes that were requested have been addressed by the author.
diff --git a/.gh-pullrequests/00110.json b/.gh-pullrequests/00110.json
new file mode 100644
index 0000000..9384334
--- /dev/null
+++ b/.gh-pullrequests/00110.json
@@ -0,0 +1,74 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/110",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/110/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/110/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/110/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/110",
+    "id": 469887106,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk5MDA5OTky",
+    "number": 110,
+    "title": "Correcting EIP -> ECIP typo",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1428838937,
+        "node_id": "MDU6TGFiZWwxNDI4ODM4OTM3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/editor:%20looks-good",
+        "name": "editor: looks-good",
+        "color": "71ad0a",
+        "default": false,
+        "description": "This PR is generally fine to be merged."
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-07-18T17:07:48Z",
+    "updated_at": "2019-07-24T14:50:18Z",
+    "closed_at": "2019-07-24T14:50:13Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/110",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/110",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/110.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/110.patch"
+    },
+    "body": "Corrected EIP to ECIP under `Active` status term.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/110/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00110.patch b/.gh-pullrequests/00110.patch
new file mode 100644
index 0000000..2607cfe
--- /dev/null
+++ b/.gh-pullrequests/00110.patch
@@ -0,0 +1,23 @@
+From 251d2e219b519790776ab7cd7158bcd07a449b19 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 18 Jul 2019 11:07:39 -0600
+Subject: [PATCH] Correcting EIP -> ECIP typo
+
+Corrected EIP to ECIP under `Active` status term.
+---
+ README.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/README.md b/README.md
+index 7addc01..6c19b80 100644
+--- a/README.md
++++ b/README.md
+@@ -52,7 +52,7 @@ When you believe your ECIP is mature and ready to progress past the draft phase,
+ * **Replaced** - When a Final ECIP is no longer relevant, its status may be changed to Replaced or Obsolete.
+ * **Rejected** - Reasons for rejecting ECIPs include duplication of effort, disregard for formatting rules, unfocused or too broad, being technically unsound, not providing proper motivation, or obvious popular disapproval.
+ * **Withdrawn** - ECIP authors may decide to change the status between Draft, Deferred, or Withdrawn. The ECIP editor may also change the status to Deferred if no progress is being made on the ECIP.
+-* **Active** -- Some Informational and Process EIPs may also be moved to a status of “Active” instead of "Final" if they are never meant to be completed, e.g. [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000).
++* **Active** -- Some Informational and Process ECIPs may also be moved to a status of “Active” instead of "Final" if they are never meant to be completed, e.g. [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000).
+ 
+ ## ECIP List
+ 
diff --git a/.gh-pullrequests/00111.json b/.gh-pullrequests/00111.json
new file mode 100644
index 0000000..f291dbf
--- /dev/null
+++ b/.gh-pullrequests/00111.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/111",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/111/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/111/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/111/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/111",
+    "id": 469891411,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk5MDEyOTY0",
+    "number": 111,
+    "title": "Adjusting ECIP types to the ECIP site format",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-07-18T17:16:25Z",
+    "updated_at": "2019-07-24T14:52:22Z",
+    "closed_at": "2019-07-24T14:52:18Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/111",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/111",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/111.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/111.patch"
+    },
+    "body": "To adjust to the new ecips.ethereumclassic.org website:\r\n\r\nI changed the old ECIP types which were \"Standard Track\", \"Process\" and \"Informational\" to the new ones which are:\r\n\r\n• Standard Track\r\n   -- Core\r\n   -- Networking\r\n   -- Interface\r\n   -- ECBP (analogous to \"ERC\" in Ethereum)\r\n• Meta\r\n• Informational\r\n\r\nI also added status terms `WIP` and `Active` to adjust them to our ECIP status reality, e.g. ECIP-1000 is `Active`.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/111/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00111.patch b/.gh-pullrequests/00111.patch
new file mode 100644
index 0000000..2375ad9
--- /dev/null
+++ b/.gh-pullrequests/00111.patch
@@ -0,0 +1,145 @@
+From 4f5ddec59ef7d2a12f78526dc3cdbf102961258a Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 18 Jul 2019 11:16:21 -0600
+Subject: [PATCH 1/2] Adjusting ECIP types to the ECIP site format
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+The old ECIP types are "Standard Track", "Process" and "Informational" the new ones are:
+
+• Standard Track
+   - Core
+   - Networking
+   - Interface
+   - ECBP (analogous to "ERC" in Ethereum)
+• Meta
+• Informational
+
+I also added status terms `WIP` and `Active` to adjust to our ECIP status reality, e.g. ECIP-1000.
+---
+ _specs/ecip-1000.md | 22 +++++++++++++++++-----
+ 1 file changed, 17 insertions(+), 5 deletions(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index 86d6e09..e82674f 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -162,13 +162,21 @@ ECIPs may also have a `Superseded-By` header indicating that a ECIP has been ren
+ 
+ ECIPs may include auxiliary files such as diagrams. If if requires images, the image files should be included in a subdirectory of the `assets` folder for that ECIP as follow: `assets/ecip-X`. When linking to an image in the ECIP, use the related links such as `./assets/ecip-X/image.png`.
+ 
+-# ECIP types
++## ECIP Types
+ 
+-There are three kinds of ECIP:
++There are three types of ECIP:
+ 
+-- **A Standards Track ECIP** describes any change that affects most or all Ethereum Classic implementations, such as a change to the network protocol, a change in block or transaction validity rules, or any change or addition that affects the interoperability of applications using Ethereum Classic. Standards Track ECIPs consist of two parts, a design document and a reference implementation.
+-- **An Informational ECIP** describes a Ethereum Classic design issue, or provides general guidelines or information to the Ethereum Classic community, but does not propose a new feature. Informational ECIPs do not necessarily represent a Ethereum Classic community consensus or recommendation, so users and implementors are free to ignore Informational ECIPs or follow their advice.
+-- **A Process ECIP** describes a process surrounding Ethereum Classic, or proposes a change to (or an event in) a process. Process ECIPs are like Standards Track ECIPs but apply to areas other than the Ethereum Classic protocol itself. They may propose an implementation, but not to Ethereum Classic's codebase; they often require community consensus; unlike Informational ECIPs, they are more than recommendations, and users are typically not free to ignore them. Examples include procedures, guidelines, changes to the decision-making process, and changes to the tools or environment used in Ethereum Classic development. Any meta-ECIP is also considered a Process ECIP.
++- A **Standard Track ECIP** describes any change that affects most or all Ethereum Classic implementations, such as a change to the network protocol, a change in block or transaction validity rules, proposed application standards/conventions, or any change or addition that affects the interoperability of applications using Ethereum Classic. Furthermore, Standard Track ECIPs can be broken down into the following categories:
++  - **Core** - improvements requiring a consensus fork, as well as changes that are not necessarily consensus critical but may be relevant to core developer discussions.
++  - **Networking** - improvements to networking protocol specifications.
++  - **Interface** - improvements around client [API/RPC] specifications and standards, and also certain language-level standards like method names  and contract ABIs.
++  - **ECBP (Ethereum Classic Best Practice)** - application-level standards and conventions, including contract standards such as token standards, name registries, URI schemes, library/package formats, and wallet formats.
++- A **Meta ECIP** describes a **process** surrounding Ethereum Classic or proposes a change to (or an event in) a process. Process ECIPs are like Standard Track ECIPs, but apply to areas other than the Ethereum Classic protocol itself. They may propose an implementation, but not to Ethereum Classic's codebase; they often require community consensus; unlike Informational ECIPs, they are more than recommendations, and users are typically not free to ignore them. Examples include procedures, guidelines, changes to the decision-making process (e.g. this ECIP-1000 process document), and changes to the tools or environment used in Ethereum Classic development. *Any meta-ECIP is also considered a Process ECIP.*
++- An **Informational ECIP** describes an Ethereum Classic design issue, or provides general guidelines or information to the Ethereum Classic community, but does not propose a new feature. Informational ECIPs do not necessarily represent Ethereum Classic community consensus or a recommendation, so users and implementors are free to ignore Informational ECIPs or follow their advice.
++
++It is highly recommended that a single ECIP contain a single key proposal or new idea. The more focused the ECIP, the more successful it tends to be. A change to one client doesn't require an ECIP; a change that affects multiple clients, or defines a standard for multiple apps to use, does.
++
++An ECIP must meet certain minimum criteria. It must be a clear and complete description of the proposed enhancement. The enhancement must represent a net improvement. The proposed implementation, if applicable, must be solid and must not complicate the protocol unduly.
+ 
+ # ECIP status field
+ 
+@@ -190,6 +198,10 @@ An `Accepted` ECIP may progress to `Final` only when specific criteria reflectin
+ 
+ When a `Final` ECIP is no longer relevant, its status may be changed to `Replaced`. This change must also be **objectively verifiable** and/or discussed.
+ 
++Some Informational ECIPs, which are considered process ECIPs, may also be moved to a status of `Active` instead of `Final` if they are never meant to be completed, e.g. this [ECIP-1000.](./ecip-1000.md)
++
++`Draft` ECIPs which may be in a very early stage may be entered as `WIP` ECIPs, which means they are a work in progress.
++
+ A process ECIP may change status from `Draft` to `Final` when it achieves rough consensus on the discussion process. Such a proposal is said to have rough consensus if it has been open to discussion on the development calls, Discord channel, other groups or the mailing list for at least one month, and no person maintains any unaddressed substantiated objections to it. Addressed or obstructive objections may be ignored/overruled by general agreement that they have been sufficiently addressed, but clear reasoning must be given in such circumstances.
+ 
+ ### Progression to Final status
+
+From 9b6a5f2227b5f3e4739d4212445bd3ed6eb8836a Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 18 Jul 2019 16:09:43 -0600
+Subject: [PATCH 2/2] Subjective line and format
+
+Deleted "The proposed implementation, if applicable, must be solid and must not complicate the protocol unduly." because it is a subjective consideration and not the responsibility of editors.
+
+Adjusted indentation.
+---
+ _specs/ecip-1000.md | 18 +++++++++---------
+ 1 file changed, 9 insertions(+), 9 deletions(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index e82674f..d5d5e72 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -22,7 +22,7 @@ Because the ECIPs are maintained as text files in a versioned repository, their
+ 
+ This ECIP is licensed Apache-2, originally by [Luke Dashjr](https://github.com/luke-jr) under BSD 2-clause license.
+ 
+-# ECIP workflow
++# ECIP Workflow
+ 
+ ## Introduction
+ 
+@@ -102,7 +102,7 @@ ECIP editors are intended to fulfill administrative and editorial responsibiliti
+ * Merge the pull request when it is ready.
+ * List the ECIP in [[README.mediawiki]]
+ 
+-# ECIP format and structure
++# ECIP Format and Structure
+ 
+ ## Specification
+ 
+@@ -119,7 +119,7 @@ Each ECIP should have the following parts:
+ - **Backwards compatibility** -- All ECIPs that introduce backwards incompatibilities must include a section describing these incompatibilities and their severity. The ECIP must explain how the author proposes to deal with these incompatibilities.
+ - **Reference implementation** -- The reference implementation must be completed before any ECIP is given **"Final"** status, but it need not be completed before the ECIP is **"Accepted"**. It is better to finish the specification and rationale first and reach consensus on it before writing code. The final implementation must include test code and documentation appropriate for the Ethereum Classic protocol.
+ 
+-### ECIP header preamble
++### ECIP Header Preamble
+ 
+ Each ECIP must begin with an RFC 822 style header preamble. The headers must appear in the following order. Headers marked with "*" are optional and are described below. All other headers are required.
+ 
+@@ -176,11 +176,11 @@ There are three types of ECIP:
+ 
+ It is highly recommended that a single ECIP contain a single key proposal or new idea. The more focused the ECIP, the more successful it tends to be. A change to one client doesn't require an ECIP; a change that affects multiple clients, or defines a standard for multiple apps to use, does.
+ 
+-An ECIP must meet certain minimum criteria. It must be a clear and complete description of the proposed enhancement. The enhancement must represent a net improvement. The proposed implementation, if applicable, must be solid and must not complicate the protocol unduly.
++An ECIP must meet certain minimum criteria. It must be a clear and complete description of the proposed enhancement. The enhancement must represent a net improvement.
+ 
+-# ECIP status field
++## ECIP Status Field
+ 
+-## Specification
++### Specification
+ 
+ The typical paths of the status of ECIPs are as follows:
+ 
+@@ -233,9 +233,9 @@ These criteria are considered objective ways to observe the de facto adoption of
+ 
+ - The ECIP process exists for standardisation between independent projects. If something only affects one project, it should be done through that project's own internal processes, and never be proposed as a ECIP in the first place.
+ 
+-# ECIP comments
++## ECIP comments
+ 
+-## Specification
++### Specification
+ 
+ Each ECIP should, in its preamble, link to a public wiki page with a summary tone of the comments on that page.
+ 
+@@ -289,7 +289,7 @@ To avoid doubt: comments and status are unrelated metrics to judge an ECIP, and
+ 
+ - Participants should freely refrain from commenting outside of their area of knowledge or expertise. However, comments should not be censored, and participation should be open to the public.
+ 
+-## ECIP licensing
++## ECIP Licensing
+ 
+ ### Specification
+ 
diff --git a/.gh-pullrequests/00112.json b/.gh-pullrequests/00112.json
new file mode 100644
index 0000000..10ddda9
--- /dev/null
+++ b/.gh-pullrequests/00112.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/112",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/112/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/112/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/112/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/112",
+    "id": 470852378,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk5Njg1Mjc5",
+    "number": 112,
+    "title": "ECIP-1063.md",
+    "user": {
+      "login": "26jesse",
+      "id": 52479948,
+      "node_id": "MDQ6VXNlcjUyNDc5OTQ4",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/52479948?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/26jesse",
+      "html_url": "https://github.com/26jesse",
+      "followers_url": "https://api.github.com/users/26jesse/followers",
+      "following_url": "https://api.github.com/users/26jesse/following{/other_user}",
+      "gists_url": "https://api.github.com/users/26jesse/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/26jesse/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/26jesse/subscriptions",
+      "organizations_url": "https://api.github.com/users/26jesse/orgs",
+      "repos_url": "https://api.github.com/users/26jesse/repos",
+      "events_url": "https://api.github.com/users/26jesse/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/26jesse/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 2,
+    "created_at": "2019-07-22T01:28:19Z",
+    "updated_at": "2019-08-14T21:33:07Z",
+    "closed_at": "2019-08-14T21:33:07Z",
+    "author_association": "CONTRIBUTOR",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/112",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/112",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/112.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/112.patch"
+    },
+    "body": "What do you guys think of this idea? I like the idea of having decentralized oracles and smart contracts for Ethereum Classic.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/112/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00112.patch b/.gh-pullrequests/00112.patch
new file mode 100644
index 0000000..2222e38
--- /dev/null
+++ b/.gh-pullrequests/00112.patch
@@ -0,0 +1,11254 @@
+From ae55631a4f4930f551c4593fedd10ba06e8b7e74 Mon Sep 17 00:00:00 2001
+From: 26jesse <52479948+26jesse@users.noreply.github.com>
+Date: Sun, 21 Jul 2019 18:27:18 -0700
+Subject: [PATCH 01/16] Create 1063
+
+---
+ 1063 | 26 ++++++++++++++++++++++++++
+ 1 file changed, 26 insertions(+)
+ create mode 100644 1063
+
+diff --git a/1063 b/1063
+new file mode 100644
+index 0000000..278d541
+--- /dev/null
++++ b/1063
+@@ -0,0 +1,26 @@
++ECIP: <1063>
++Title: <Ethereum Classic Integrated Decentralized Oracles and Smart Contracts>
++Author: <Jesse>
++Discussions-To: <email address>
++Status: <Draft>
++Type: <Standards Track | Informational | Process>
++Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>
++Replaces: <ECIP number>
++Superseded-By: <ECIP number>
++Resolution: <url>
++---
++# Abstract
++Imagine how we can use  ETC having oracle features which can assist Dapps and ERC-223 tokens to accomplish their goals. Although decentralized oracles rely on a source of information, it does not have to be from a centralized source. If an oracle is able to rely on multiple sources and is able to verify which information is the correct one, wouldn't it still work in a manner that is decentralized as possibly can? An example would be academia sources for a research paper, we have multiple sources that cannot be used for reliable information such as journals and memoirs.  However, with a decentralized oracle, it can then verify the reliability of an information and check if the sources have a track history of reliability such as from an academic institute. Information that is considered unreliable such as a  journal or memoir can be verified to be reliable if the journalist has a history of accuracy and reliability.  If the person who wrote the memoir is the primary source and has the evidence through other reliable sources that he is there, then the oracle can consider his memoir as a reliable source of information. Afterwards, then feed it to the smart contract to come with a reliable answer of what actually happened
++# Motivation
++To make better smart contracts even smarter than they are. The decentralized oracle can feed reliable information to the smart contract. A integrated decentralized oracle is useful for the Ethereum Classic network because relying on a third party for oracles means they can modify the code to suit the output. Integrated decentralized oracles create a tool that can better assist in problem solving beyond just academia, but has real life use cases that can be used for derivatives markets, gambling, accounting, and finance. An Ethereum Classic Decentralized oracle can be used not only for ETC projects, but can be used for other smart projects. Ethereum Classic's precedent as the first to integrate oracles and smart contracts means other smart contract platforms would look for an oracle solution that specifically address their issues
++# Specification
++## Decentralized Oracle Dapp
++By becoming a Dapp, the decentralized Oracle can work independent of the network. This can be off-chain and help assist the smart contract
++# Oracle Function as Part of ETC Network
++Ethereum Classic can run the oracle within the limitations of its network and the smart contract. The oracle becomes just a tool of a smart contract to decide the information to input to the smart contract
++## The Oracle as a Separate Layer or Separate Network
++The oracle can act as a network, similar to the Lightening Network for Bitcoin, but instead the oracle network would act to make smart contracts more efficient and cheaper. The oracle network gwei rate would differ from the smart contract gwei rate
++# Rationale
++To further provide reliable information to the smart contract and to solve real world problems. This would create a greater decentralized network that provides reliable answers
++# Implementation
++All these examples of how we can use a decentralized oracle can be run with ETC gwei. Whether it will be a dapp or as a part of the ETC or as a separate network/layer, they will use ETC gwei power the oracle
+
+From 46c36fcaa73c2636e11e471829fb454848a70a4b Mon Sep 17 00:00:00 2001
+From: 26jesse <52479948+26jesse@users.noreply.github.com>
+Date: Wed, 7 Aug 2019 22:12:47 -0700
+Subject: [PATCH 02/16] Update 1063
+
+---
+ 1063 | 48 +++++++++++++++++++++++++++++++++---------------
+ 1 file changed, 33 insertions(+), 15 deletions(-)
+
+diff --git a/1063 b/1063
+index 278d541..1bec2c5 100644
+--- a/1063
++++ b/1063
+@@ -1,26 +1,44 @@
+-ECIP: <1063>
+-Title: <Ethereum Classic Integrated Decentralized Oracles and Smart Contracts>
+-Author: <Jesse>
+-Discussions-To: <email address>
+-Status: <Draft>
+-Type: <Standards Track | Informational | Process>
+-Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>
++Lang: EN
++ECIP: 1063
++Title: Ethereum Classic Integrated Decentralized Oracles and Smart Contracts
++Author: Jesse Nguyen <jessebaotruong@gmail.com>
++Discussions-To: jessebaotruong@gmail.com
++Status: Draft
++Type: Standard Track
++Created: 2019-07-21
+ Replaces: <ECIP number>
+ Superseded-By: <ECIP number>
+ Resolution: <url>
+----
++Ethereum Classic Integrated Decentralized Oracles and Smart Contracts
+ # Abstract
+-Imagine how we can use  ETC having oracle features which can assist Dapps and ERC-223 tokens to accomplish their goals. Although decentralized oracles rely on a source of information, it does not have to be from a centralized source. If an oracle is able to rely on multiple sources and is able to verify which information is the correct one, wouldn't it still work in a manner that is decentralized as possibly can? An example would be academia sources for a research paper, we have multiple sources that cannot be used for reliable information such as journals and memoirs.  However, with a decentralized oracle, it can then verify the reliability of an information and check if the sources have a track history of reliability such as from an academic institute. Information that is considered unreliable such as a  journal or memoir can be verified to be reliable if the journalist has a history of accuracy and reliability.  If the person who wrote the memoir is the primary source and has the evidence through other reliable sources that he is there, then the oracle can consider his memoir as a reliable source of information. Afterwards, then feed it to the smart contract to come with a reliable answer of what actually happened
++Imagine how we can use  ETC having oracle features which can assist Dapps and ERC-223 tokens to accomplish their goals.
++Although decentralized oracles rely on a source of information, it does not have to be from a centralized source.
++If an oracle is able to rely on multiple sources and is able to verify which information is the correct one, wouldn't it still work in a manner that is decentralized as possibly can?
++An example would be academia sources for a research paper, we have multiple sources that cannot be used for reliable information such as journals and memoirs.
++However, with a decentralized oracle, it can then verify the reliability of an information and check if the sources have a track history of reliability such as from an academic institute.
++Information that is considered unreliable such as a  journal or memoir can be verified to be reliable if the journalist has a history of accuracy and reliability.
++If the person who wrote the memoir is the primary source and has the evidence through other reliable sources that he is there, then the oracle can consider his memoir as a reliable source of information.
++Afterwards, then feed it to the smart contract to come with a reliable answer of what actually happened.
+ # Motivation
+-To make better smart contracts even smarter than they are. The decentralized oracle can feed reliable information to the smart contract. A integrated decentralized oracle is useful for the Ethereum Classic network because relying on a third party for oracles means they can modify the code to suit the output. Integrated decentralized oracles create a tool that can better assist in problem solving beyond just academia, but has real life use cases that can be used for derivatives markets, gambling, accounting, and finance. An Ethereum Classic Decentralized oracle can be used not only for ETC projects, but can be used for other smart projects. Ethereum Classic's precedent as the first to integrate oracles and smart contracts means other smart contract platforms would look for an oracle solution that specifically address their issues
++To make better smart contracts even smarter than they are, the decentralized oracle can feed reliable information to the smart contract.
++A integrated decentralized oracle is useful for the Ethereum Classic network because relying on a third party for oracles means they can modify the code to suit the output.
++Integrated decentralized oracles create a tool that can better assist in problem solving beyond just academia, but has real life use cases that can be used for derivatives markets, gambling, accounting, and finance.
++An Ethereum Classic Decentralized oracle can be used not only for ETC projects, but can be used for other smart projects.
++Ethereum Classic's precedent as the first to integrate oracles and smart contracts means other smart contract platforms would look for an oracle solution that specifically address their issues.
+ # Specification
+ ## Decentralized Oracle Dapp
+-By becoming a Dapp, the decentralized Oracle can work independent of the network. This can be off-chain and help assist the smart contract
++By becoming a Dapp, the decentralized Oracle can work independent of the network.
++This can be off-chain and help assist the smart contract.
+ # Oracle Function as Part of ETC Network
+-Ethereum Classic can run the oracle within the limitations of its network and the smart contract. The oracle becomes just a tool of a smart contract to decide the information to input to the smart contract
++Ethereum Classic can run the oracle within the limitations of its network and the smart contract.
++The oracle becomes just a tool of a smart contract to decide the information to input to the smart contract.
+ ## The Oracle as a Separate Layer or Separate Network
+-The oracle can act as a network, similar to the Lightening Network for Bitcoin, but instead the oracle network would act to make smart contracts more efficient and cheaper. The oracle network gwei rate would differ from the smart contract gwei rate
++The oracle can act as a network, similar to the Lightening Network for Bitcoin, but instead the oracle network would act to make smart contracts more efficient and cheaper.
++By using the dentralized oracle, less waste of transactions on the Ethereum Classic network would occur.
++Because information is sorted from the decentralized oracle, the smart contract can function more efficiently.
+ # Rationale
+-To further provide reliable information to the smart contract and to solve real world problems. This would create a greater decentralized network that provides reliable answers
++To further provide reliable information to the smart contract and to solve real world problems.
++This would create a greater decentralized network that provides reliable answers.
+ # Implementation
+-All these examples of how we can use a decentralized oracle can be run with ETC gwei. Whether it will be a dapp or as a part of the ETC or as a separate network/layer, they will use ETC gwei power the oracle
++All these examples of how we can use a decentralized oracle can be run with ETC gwei.
++Whether it will be a dapp or as a part of the ETC or as a separate network/layer, they will use ETC gwei power the decentralized oracle.
+
+From 8120e1731ca40f4dbae49c1a25dcbb5954c826e0 Mon Sep 17 00:00:00 2001
+From: 26jesse <52479948+26jesse@users.noreply.github.com>
+Date: Wed, 7 Aug 2019 22:17:32 -0700
+Subject: [PATCH 03/16] Update 1063
+
+---
+ 1063 | 15 ++++++---------
+ 1 file changed, 6 insertions(+), 9 deletions(-)
+
+diff --git a/1063 b/1063
+index 1bec2c5..bcebbae 100644
+--- a/1063
++++ b/1063
+@@ -6,12 +6,9 @@ Discussions-To: jessebaotruong@gmail.com
+ Status: Draft
+ Type: Standard Track
+ Created: 2019-07-21
+-Replaces: <ECIP number>
+-Superseded-By: <ECIP number>
+-Resolution: <url>
+ Ethereum Classic Integrated Decentralized Oracles and Smart Contracts
+ # Abstract
+-Imagine how we can use  ETC having oracle features which can assist Dapps and ERC-223 tokens to accomplish their goals.
++Imagine how we can use ETC having oracle features which can assist Dapps and ERC-223 tokens to accomplish their goals.
+ Although decentralized oracles rely on a source of information, it does not have to be from a centralized source.
+ If an oracle is able to rely on multiple sources and is able to verify which information is the correct one, wouldn't it still work in a manner that is decentralized as possibly can?
+ An example would be academia sources for a research paper, we have multiple sources that cannot be used for reliable information such as journals and memoirs.
+@@ -19,20 +16,20 @@ However, with a decentralized oracle, it can then verify the reliability of an i
+ Information that is considered unreliable such as a  journal or memoir can be verified to be reliable if the journalist has a history of accuracy and reliability.
+ If the person who wrote the memoir is the primary source and has the evidence through other reliable sources that he is there, then the oracle can consider his memoir as a reliable source of information.
+ Afterwards, then feed it to the smart contract to come with a reliable answer of what actually happened.
+-# Motivation
++## Motivation
+ To make better smart contracts even smarter than they are, the decentralized oracle can feed reliable information to the smart contract.
+ A integrated decentralized oracle is useful for the Ethereum Classic network because relying on a third party for oracles means they can modify the code to suit the output.
+ Integrated decentralized oracles create a tool that can better assist in problem solving beyond just academia, but has real life use cases that can be used for derivatives markets, gambling, accounting, and finance.
+ An Ethereum Classic Decentralized oracle can be used not only for ETC projects, but can be used for other smart projects.
+ Ethereum Classic's precedent as the first to integrate oracles and smart contracts means other smart contract platforms would look for an oracle solution that specifically address their issues.
+-# Specification
+-## Decentralized Oracle Dapp
++## Specification
++### Decentralized Oracle Dapp
+ By becoming a Dapp, the decentralized Oracle can work independent of the network.
+ This can be off-chain and help assist the smart contract.
+-# Oracle Function as Part of ETC Network
++## Oracle Function as Part of ETC Network
+ Ethereum Classic can run the oracle within the limitations of its network and the smart contract.
+ The oracle becomes just a tool of a smart contract to decide the information to input to the smart contract.
+-## The Oracle as a Separate Layer or Separate Network
++### The Oracle as a Separate Layer or Separate Network
+ The oracle can act as a network, similar to the Lightening Network for Bitcoin, but instead the oracle network would act to make smart contracts more efficient and cheaper.
+ By using the dentralized oracle, less waste of transactions on the Ethereum Classic network would occur.
+ Because information is sorted from the decentralized oracle, the smart contract can function more efficiently.
+
+From 71cc5693dbbd1d882257ee5f08165fc16127be58 Mon Sep 17 00:00:00 2001
+From: 26jesse <52479948+26jesse@users.noreply.github.com>
+Date: Wed, 7 Aug 2019 22:18:51 -0700
+Subject: [PATCH 04/16] Update 1063
+
+---
+ 1063 | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/1063 b/1063
+index bcebbae..b13c2aa 100644
+--- a/1063
++++ b/1063
+@@ -38,4 +38,4 @@ To further provide reliable information to the smart contract and to solve real
+ This would create a greater decentralized network that provides reliable answers.
+ # Implementation
+ All these examples of how we can use a decentralized oracle can be run with ETC gwei.
+-Whether it will be a dapp or as a part of the ETC or as a separate network/layer, they will use ETC gwei power the decentralized oracle.
++Whether it will be a dapp or as a part of the ETC or as a separate network/layer, they will use ETC gwei to power the decentralized oracle.
+
+From 954157f446160ce412d8d8e7f024adcdee629bcb Mon Sep 17 00:00:00 2001
+From: 26jesse <52479948+26jesse@users.noreply.github.com>
+Date: Wed, 7 Aug 2019 22:19:40 -0700
+Subject: [PATCH 05/16] Update 1063
+
+---
+ 1063 | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/1063 b/1063
+index b13c2aa..010b342 100644
+--- a/1063
++++ b/1063
+@@ -31,7 +31,7 @@ Ethereum Classic can run the oracle within the limitations of its network and th
+ The oracle becomes just a tool of a smart contract to decide the information to input to the smart contract.
+ ### The Oracle as a Separate Layer or Separate Network
+ The oracle can act as a network, similar to the Lightening Network for Bitcoin, but instead the oracle network would act to make smart contracts more efficient and cheaper.
+-By using the dentralized oracle, less waste of transactions on the Ethereum Classic network would occur.
++By using the decentralized oracle, less waste of transactions on the Ethereum Classic network would occur.
+ Because information is sorted from the decentralized oracle, the smart contract can function more efficiently.
+ # Rationale
+ To further provide reliable information to the smart contract and to solve real world problems.
+
+From 9df6420b1d1c59cb9cff7653105dc9ce17dc490b Mon Sep 17 00:00:00 2001
+From: 26jesse <52479948+26jesse@users.noreply.github.com>
+Date: Wed, 7 Aug 2019 22:20:07 -0700
+Subject: [PATCH 06/16] Update 1063
+
+---
+ 1063 | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/1063 b/1063
+index 010b342..b7ab71e 100644
+--- a/1063
++++ b/1063
+@@ -38,4 +38,4 @@ To further provide reliable information to the smart contract and to solve real
+ This would create a greater decentralized network that provides reliable answers.
+ # Implementation
+ All these examples of how we can use a decentralized oracle can be run with ETC gwei.
+-Whether it will be a dapp or as a part of the ETC or as a separate network/layer, they will use ETC gwei to power the decentralized oracle.
++Whether it will be a Dapp or as a part of the ETC or as a separate network/layer, they will use ETC gwei to power the decentralized oracle.
+
+From b26abd68c78a7319cb14c34a15dca49389408469 Mon Sep 17 00:00:00 2001
+From: 26jesse <52479948+26jesse@users.noreply.github.com>
+Date: Wed, 7 Aug 2019 22:21:05 -0700
+Subject: [PATCH 07/16] Update 1063
+
+---
+ 1063 | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/1063 b/1063
+index b7ab71e..32661ba 100644
+--- a/1063
++++ b/1063
+@@ -2,7 +2,7 @@ Lang: EN
+ ECIP: 1063
+ Title: Ethereum Classic Integrated Decentralized Oracles and Smart Contracts
+ Author: Jesse Nguyen <jessebaotruong@gmail.com>
+-Discussions-To: jessebaotruong@gmail.com
++Discussions-To: https://github.com/ethereumclassic/ECIPs/pull/112
+ Status: Draft
+ Type: Standard Track
+ Created: 2019-07-21
+
+From 5dff6a1dce6a93ee51002519a5194048f72b7eee Mon Sep 17 00:00:00 2001
+From: 26jesse <52479948+26jesse@users.noreply.github.com>
+Date: Fri, 9 Aug 2019 02:02:08 -0700
+Subject: [PATCH 08/16] Update 1063
+
+---
+ 1063 | 20 ++++++++++----------
+ 1 file changed, 10 insertions(+), 10 deletions(-)
+
+diff --git a/1063 b/1063
+index 32661ba..8f12948 100644
+--- a/1063
++++ b/1063
+@@ -1,13 +1,13 @@
++---
+ Lang: EN
+ ECIP: 1063
+ Title: Ethereum Classic Integrated Decentralized Oracles and Smart Contracts
+ Author: Jesse Nguyen <jessebaotruong@gmail.com>
+-Discussions-To: https://github.com/ethereumclassic/ECIPs/pull/112
+ Status: Draft
+ Type: Standard Track
+ Created: 2019-07-21
+-Ethereum Classic Integrated Decentralized Oracles and Smart Contracts
+-# Abstract
++---
++ # Abstract
+ Imagine how we can use ETC having oracle features which can assist Dapps and ERC-223 tokens to accomplish their goals.
+ Although decentralized oracles rely on a source of information, it does not have to be from a centralized source.
+ If an oracle is able to rely on multiple sources and is able to verify which information is the correct one, wouldn't it still work in a manner that is decentralized as possibly can?
+@@ -16,26 +16,26 @@ However, with a decentralized oracle, it can then verify the reliability of an i
+ Information that is considered unreliable such as a  journal or memoir can be verified to be reliable if the journalist has a history of accuracy and reliability.
+ If the person who wrote the memoir is the primary source and has the evidence through other reliable sources that he is there, then the oracle can consider his memoir as a reliable source of information.
+ Afterwards, then feed it to the smart contract to come with a reliable answer of what actually happened.
+-## Motivation
++  ## Motivation
+ To make better smart contracts even smarter than they are, the decentralized oracle can feed reliable information to the smart contract.
+ A integrated decentralized oracle is useful for the Ethereum Classic network because relying on a third party for oracles means they can modify the code to suit the output.
+ Integrated decentralized oracles create a tool that can better assist in problem solving beyond just academia, but has real life use cases that can be used for derivatives markets, gambling, accounting, and finance.
+ An Ethereum Classic Decentralized oracle can be used not only for ETC projects, but can be used for other smart projects.
+ Ethereum Classic's precedent as the first to integrate oracles and smart contracts means other smart contract platforms would look for an oracle solution that specifically address their issues.
+-## Specification
+-### Decentralized Oracle Dapp
++  ## Specification
++   ### Decentralized Oracle Dapp
+ By becoming a Dapp, the decentralized Oracle can work independent of the network.
+ This can be off-chain and help assist the smart contract.
+-## Oracle Function as Part of ETC Network
++ ## Oracle Function as Part of ETC Network
+ Ethereum Classic can run the oracle within the limitations of its network and the smart contract.
+ The oracle becomes just a tool of a smart contract to decide the information to input to the smart contract.
+-### The Oracle as a Separate Layer or Separate Network
++   ### The Oracle as a Separate Layer or Separate Network
+ The oracle can act as a network, similar to the Lightening Network for Bitcoin, but instead the oracle network would act to make smart contracts more efficient and cheaper.
+ By using the decentralized oracle, less waste of transactions on the Ethereum Classic network would occur.
+ Because information is sorted from the decentralized oracle, the smart contract can function more efficiently.
+-# Rationale
++ # Rationale
+ To further provide reliable information to the smart contract and to solve real world problems.
+ This would create a greater decentralized network that provides reliable answers.
+-# Implementation
++ # Implementation
+ All these examples of how we can use a decentralized oracle can be run with ETC gwei.
+ Whether it will be a Dapp or as a part of the ETC or as a separate network/layer, they will use ETC gwei to power the decentralized oracle.
+
+From 87519996cd103a70d230f1faa7d095282064d78f Mon Sep 17 00:00:00 2001
+From: 26jesse <52479948+26jesse@users.noreply.github.com>
+Date: Fri, 9 Aug 2019 17:24:48 -0700
+Subject: [PATCH 09/16] Update 1063
+
+---
+ 1063 | 14 +++++++-------
+ 1 file changed, 7 insertions(+), 7 deletions(-)
+
+diff --git a/1063 b/1063
+index 8f12948..655fe35 100644
+--- a/1063
++++ b/1063
+@@ -1,11 +1,11 @@
+ ---
+-Lang: EN
+-ECIP: 1063
+-Title: Ethereum Classic Integrated Decentralized Oracles and Smart Contracts
+-Author: Jesse Nguyen <jessebaotruong@gmail.com>
+-Status: Draft
+-Type: Standard Track
+-Created: 2019-07-21
++lang: en
++ecip: 1063
++title: Ethereum Classic Integrated Decentralized Oracles and Smart Contracts
++author: Jesse Nguyen <jessebaotruong@gmail.com>
++status: Draft
++type: Standard Track
++created: 2019-07-21
+ ---
+  # Abstract
+ Imagine how we can use ETC having oracle features which can assist Dapps and ERC-223 tokens to accomplish their goals.
+
+From b0a1e514e41982d62ebdf86ca3db1d49277a4193 Mon Sep 17 00:00:00 2001
+From: 26jesse <52479948+26jesse@users.noreply.github.com>
+Date: Fri, 9 Aug 2019 17:25:41 -0700
+Subject: [PATCH 10/16] Rename 1063 to ecip-1063
+
+---
+ 1063 => ecip-1063 | 0
+ 1 file changed, 0 insertions(+), 0 deletions(-)
+ rename 1063 => ecip-1063 (100%)
+
+diff --git a/1063 b/ecip-1063
+similarity index 100%
+rename from 1063
+rename to ecip-1063
+
+From c92a41a66aa7534b6d82713a1c4c53bc22fd7d2a Mon Sep 17 00:00:00 2001
+From: 26jesse <52479948+26jesse@users.noreply.github.com>
+Date: Fri, 9 Aug 2019 17:30:01 -0700
+Subject: [PATCH 11/16] Rename ecip-1063 to ecip-1063.md
+
+---
+ ecip-1063 => ecip-1063.md | 0
+ 1 file changed, 0 insertions(+), 0 deletions(-)
+ rename ecip-1063 => ecip-1063.md (100%)
+
+diff --git a/ecip-1063 b/ecip-1063.md
+similarity index 100%
+rename from ecip-1063
+rename to ecip-1063.md
+
+From 5f824c4957a56023e9d5691c8624180e228be5d4 Mon Sep 17 00:00:00 2001
+From: 26jesse <52479948+26jesse@users.noreply.github.com>
+Date: Fri, 9 Aug 2019 18:15:04 -0700
+Subject: [PATCH 12/16] Update ecip-1063.md
+
+---
+ ecip-1063.md | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/ecip-1063.md b/ecip-1063.md
+index 655fe35..5d1a5da 100644
+--- a/ecip-1063.md
++++ b/ecip-1063.md
+@@ -3,6 +3,7 @@ lang: en
+ ecip: 1063
+ title: Ethereum Classic Integrated Decentralized Oracles and Smart Contracts
+ author: Jesse Nguyen <jessebaotruong@gmail.com>
++discussions-to: Community Discord #ecips
+ status: Draft
+ type: Standard Track
+ created: 2019-07-21
+
+From 207e9d47874c1c4610601b077409795a195322d1 Mon Sep 17 00:00:00 2001
+From: 26jesse <52479948+26jesse@users.noreply.github.com>
+Date: Fri, 9 Aug 2019 18:16:53 -0700
+Subject: [PATCH 13/16] Update ecip-1063.md
+
+---
+ ecip-1063.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/ecip-1063.md b/ecip-1063.md
+index 5d1a5da..eccf6d5 100644
+--- a/ecip-1063.md
++++ b/ecip-1063.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1063
+ title: Ethereum Classic Integrated Decentralized Oracles and Smart Contracts
+-author: Jesse Nguyen <jessebaotruong@gmail.com>
++author: Jesse Nguyen, <jessebaotruong@gmail.com>
+ discussions-to: Community Discord #ecips
+ status: Draft
+ type: Standard Track
+
+From 2c357bf56ae0a20ec5343cf115b5e7163e8cdab1 Mon Sep 17 00:00:00 2001
+From: 26jesse <52479948+26jesse@users.noreply.github.com>
+Date: Fri, 9 Aug 2019 21:50:17 -0700
+Subject: [PATCH 14/16] Add files via upload
+
+---
+ _specs/ECIPs-master.zip | Bin 0 -> 285270 bytes
+ 1 file changed, 0 insertions(+), 0 deletions(-)
+ create mode 100644 _specs/ECIPs-master.zip
+
+diff --git a/_specs/ECIPs-master.zip b/_specs/ECIPs-master.zip
+new file mode 100644
+index 0000000000000000000000000000000000000000..9e7e633e450c3543606172dcc9f9715f1f1c243b
+GIT binary patch
+literal 285270
+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
+zFmVwe=%0D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%0Dbk(j_&Ol{UF@0Pl4u
+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
+LPIfjnQ`Y|n8BX5y
+
+literal 0
+HcmV?d00001
+
+
+From 233d71ee1c444f96d24480a1352069297b6dca21 Mon Sep 17 00:00:00 2001
+From: 26jesse <52479948+26jesse@users.noreply.github.com>
+Date: Fri, 9 Aug 2019 21:57:07 -0700
+Subject: [PATCH 15/16] Delete ECIPs-master.zip
+
+---
+ _specs/ECIPs-master.zip | Bin 285270 -> 0 bytes
+ 1 file changed, 0 insertions(+), 0 deletions(-)
+ delete mode 100644 _specs/ECIPs-master.zip
+
+diff --git a/_specs/ECIPs-master.zip b/_specs/ECIPs-master.zip
+deleted file mode 100644
+index 9e7e633e450c3543606172dcc9f9715f1f1c243b..0000000000000000000000000000000000000000
+GIT binary patch
+literal 0
+HcmV?d00001
+
+literal 285270
+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
+zFmVwe=%0D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%0Dbk(j_&Ol{UF@0Pl4u
+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
+LPIfjnQ`Y|n8BX5y
+
+
+From 273bcc1c4a660f97c025975b2caf7848c78fa1a6 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sat, 10 Aug 2019 11:01:24 +0200
+Subject: [PATCH 16/16] Fix formatting issues
+
+---
+ ecip-1063.md => _specs/ecip-1063.md | 37 ++++++++++++++++++++++-------
+ 1 file changed, 29 insertions(+), 8 deletions(-)
+ rename ecip-1063.md => _specs/ecip-1063.md (94%)
+
+diff --git a/ecip-1063.md b/_specs/ecip-1063.md
+similarity index 94%
+rename from ecip-1063.md
+rename to _specs/ecip-1063.md
+index eccf6d5..46fb8e8 100644
+--- a/ecip-1063.md
++++ b/_specs/ecip-1063.md
+@@ -8,35 +8,56 @@ status: Draft
+ type: Standard Track
+ created: 2019-07-21
+ ---
+- # Abstract
++
++# Abstract
+ Imagine how we can use ETC having oracle features which can assist Dapps and ERC-223 tokens to accomplish their goals.
++
+ Although decentralized oracles rely on a source of information, it does not have to be from a centralized source.
++
+ If an oracle is able to rely on multiple sources and is able to verify which information is the correct one, wouldn't it still work in a manner that is decentralized as possibly can?
++
+ An example would be academia sources for a research paper, we have multiple sources that cannot be used for reliable information such as journals and memoirs.
++
+ However, with a decentralized oracle, it can then verify the reliability of an information and check if the sources have a track history of reliability such as from an academic institute.
++
+ Information that is considered unreliable such as a  journal or memoir can be verified to be reliable if the journalist has a history of accuracy and reliability.
++
+ If the person who wrote the memoir is the primary source and has the evidence through other reliable sources that he is there, then the oracle can consider his memoir as a reliable source of information.
++
+ Afterwards, then feed it to the smart contract to come with a reliable answer of what actually happened.
+-  ## Motivation
++
++## Motivation
+ To make better smart contracts even smarter than they are, the decentralized oracle can feed reliable information to the smart contract.
++
+ A integrated decentralized oracle is useful for the Ethereum Classic network because relying on a third party for oracles means they can modify the code to suit the output.
++
+ Integrated decentralized oracles create a tool that can better assist in problem solving beyond just academia, but has real life use cases that can be used for derivatives markets, gambling, accounting, and finance.
++
+ An Ethereum Classic Decentralized oracle can be used not only for ETC projects, but can be used for other smart projects.
+ Ethereum Classic's precedent as the first to integrate oracles and smart contracts means other smart contract platforms would look for an oracle solution that specifically address their issues.
+-  ## Specification
+-   ### Decentralized Oracle Dapp
++
++## Specification
++
++### Decentralized Oracle Dapp
++
+ By becoming a Dapp, the decentralized Oracle can work independent of the network.
+ This can be off-chain and help assist the smart contract.
+- ## Oracle Function as Part of ETC Network
++
++### Oracle Function as Part of ETC Network
+ Ethereum Classic can run the oracle within the limitations of its network and the smart contract.
+ The oracle becomes just a tool of a smart contract to decide the information to input to the smart contract.
+-   ### The Oracle as a Separate Layer or Separate Network
++
++### The Oracle as a Separate Layer or Separate Network
++
+ The oracle can act as a network, similar to the Lightening Network for Bitcoin, but instead the oracle network would act to make smart contracts more efficient and cheaper.
++
+ By using the decentralized oracle, less waste of transactions on the Ethereum Classic network would occur.
+ Because information is sorted from the decentralized oracle, the smart contract can function more efficiently.
+- # Rationale
++
++# Rationale
+ To further provide reliable information to the smart contract and to solve real world problems.
+ This would create a greater decentralized network that provides reliable answers.
+- # Implementation
++
++# Implementation
+ All these examples of how we can use a decentralized oracle can be run with ETC gwei.
+ Whether it will be a Dapp or as a part of the ETC or as a separate network/layer, they will use ETC gwei to power the decentralized oracle.
diff --git a/.gh-pullrequests/00112_513608398.json b/.gh-pullrequests/00112_513608398.json
new file mode 100644
index 0000000..5465983
--- /dev/null
+++ b/.gh-pullrequests/00112_513608398.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/513608398",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/112#issuecomment-513608398",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/112",
+    "id": 513608398,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzYwODM5OA==",
+    "user": {
+      "login": "26jesse",
+      "id": 52479948,
+      "node_id": "MDQ6VXNlcjUyNDc5OTQ4",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/52479948?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/26jesse",
+      "html_url": "https://github.com/26jesse",
+      "followers_url": "https://api.github.com/users/26jesse/followers",
+      "following_url": "https://api.github.com/users/26jesse/following{/other_user}",
+      "gists_url": "https://api.github.com/users/26jesse/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/26jesse/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/26jesse/subscriptions",
+      "organizations_url": "https://api.github.com/users/26jesse/orgs",
+      "repos_url": "https://api.github.com/users/26jesse/repos",
+      "events_url": "https://api.github.com/users/26jesse/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/26jesse/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-07-22T01:29:56Z",
+    "updated_at": "2019-08-10T01:17:16Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "---\r\nlang: en\r\necip: 1063\r\ntitle: Ethereum Classic Integrated Decentralized Oracles and Smart Contracts\r\nauthor: Jesse Nguyen, <jessebaotruong@gmail.com>\r\ndiscussions-to: Community Discord #ecips\r\nstatus: Draft\r\ntype: Standard Track\r\ncreated: 2019-07-21\r\n---\r\n # Abstract\r\nImagine how we can use ETC having oracle features which can assist Dapps and ERC-223 tokens to accomplish their goals.\r\nAlthough decentralized oracles rely on a source of information, it does not have to be from a centralized source.\r\nIf an oracle is able to rely on multiple sources and is able to verify which information is the correct one, wouldn't it still work in a manner that is decentralized as possibly can?\r\nAn example would be academia sources for a research paper, we have multiple sources that cannot be used for reliable information such as journals and memoirs.\r\nHowever, with a decentralized oracle, it can then verify the reliability of an information and check if the sources have a track history of reliability such as from an academic institute.\r\nInformation that is considered unreliable such as a  journal or memoir can be verified to be reliable if the journalist has a history of accuracy and reliability.\r\nIf the person who wrote the memoir is the primary source and has the evidence through other reliable sources that he is there, then the oracle can consider his memoir as a reliable source of information.\r\nAfterwards, then feed it to the smart contract to come with a reliable answer of what actually happened.\r\n  ## Motivation\r\nTo make better smart contracts even smarter than they are, the decentralized oracle can feed reliable information to the smart contract.\r\nA integrated decentralized oracle is useful for the Ethereum Classic network because relying on a third party for oracles means they can modify the code to suit the output.\r\nIntegrated decentralized oracles create a tool that can better assist in problem solving beyond just academia, but has real life use cases that can be used for derivatives markets, gambling, accounting, and finance.\r\nAn Ethereum Classic Decentralized oracle can be used not only for ETC projects, but can be used for other smart projects.\r\nEthereum Classic's precedent as the first to integrate oracles and smart contracts means other smart contract platforms would look for an oracle solution that specifically address their issues.\r\n  ## Specification\r\n   ### Decentralized Oracle Dapp\r\nBy becoming a Dapp, the decentralized Oracle can work independent of the network.\r\nThis can be off-chain and help assist the smart contract.\r\n ## Oracle Function as Part of ETC Network\r\nEthereum Classic can run the oracle within the limitations of its network and the smart contract.\r\nThe oracle becomes just a tool of a smart contract to decide the information to input to the smart contract.\r\n   ### The Oracle as a Separate Layer or Separate Network\r\nThe oracle can act as a network, similar to the Lightening Network for Bitcoin, but instead the oracle network would act to make smart contracts more efficient and cheaper.\r\nBy using the decentralized oracle, less waste of transactions on the Ethereum Classic network would occur.\r\nBecause information is sorted from the decentralized oracle, the smart contract can function more efficiently.\r\n # Rationale\r\nTo further provide reliable information to the smart contract and to solve real world problems.\r\nThis would create a greater decentralized network that provides reliable answers.\r\n # Implementation\r\nAll these examples of how we can use a decentralized oracle can be run with ETC gwei.\r\nWhether it will be a Dapp or as a part of the ETC or as a separate network/layer, they will use ETC gwei to power the decentralized oracle.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/513608398/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00112_519483906.json b/.gh-pullrequests/00112_519483906.json
new file mode 100644
index 0000000..a950980
--- /dev/null
+++ b/.gh-pullrequests/00112_519483906.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/519483906",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/112#issuecomment-519483906",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/112",
+    "id": 519483906,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTQ4MzkwNg==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-08-08T11:43:51Z",
+    "updated_at": "2019-08-08T11:43:51Z",
+    "author_association": "MEMBER",
+    "body": "Things left to do:\r\n1) Add a space between each section as well. \r\n2) Fix the preamble by following our format. I give an example in a comment above, but here is it again as a reminder.\r\n```\r\n---\r\nlang: en\r\necip: 1044\r\ntitle: Formalize IPFS hash into ECNS (Ethereum Classic Name Service) resolver\r\nauthor: Phyrex Tsai <phyrex@portal.network>, Portal Network Team\r\nstatus: Draft\r\ntype: Standards Track\r\ncategory: ERC\r\ncreated: 2018-05-12\r\n---\r\n```\r\n3) Rename the file `1063` to `ecip-1063.md` and move it to the `_specs` folder.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/519483906/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00113.json b/.gh-pullrequests/00113.json
new file mode 100644
index 0000000..b476080
--- /dev/null
+++ b/.gh-pullrequests/00113.json
@@ -0,0 +1,74 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/113",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/113/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/113/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/113/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/113",
+    "id": 473155751,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxMzc5MTA0",
+    "number": 113,
+    "title": "Added Work-in-Progress status",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1428838937,
+        "node_id": "MDU6TGFiZWwxNDI4ODM4OTM3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/editor:%20looks-good",
+        "name": "editor: looks-good",
+        "color": "71ad0a",
+        "default": false,
+        "description": "This PR is generally fine to be merged."
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-07-26T03:10:09Z",
+    "updated_at": "2019-08-14T21:34:45Z",
+    "closed_at": "2019-08-14T21:34:40Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/113",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/113",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/113.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/113.patch"
+    },
+    "body": "Added `WIP` status.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/113/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00113.patch b/.gh-pullrequests/00113.patch
new file mode 100644
index 0000000..8a6ab9d
--- /dev/null
+++ b/.gh-pullrequests/00113.patch
@@ -0,0 +1,19 @@
+From 4a58fd4d92da45a0cec11e59c27f9f6efd1b1f92 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 25 Jul 2019 21:09:55 -0600
+Subject: [PATCH] Added WIP
+
+Added `WIP` status.
+---
+ _data/statuses.yaml | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/_data/statuses.yaml b/_data/statuses.yaml
+index 095f8db..dca2885 100644
+--- a/_data/statuses.yaml
++++ b/_data/statuses.yaml
+@@ -1,3 +1,4 @@
++- WIP
+ - Draft
+ - Last call
+ - Accepted
diff --git a/.gh-pullrequests/00114.json b/.gh-pullrequests/00114.json
new file mode 100644
index 0000000..3636a18
--- /dev/null
+++ b/.gh-pullrequests/00114.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/114",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/114/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/114/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/114/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/114",
+    "id": 473160372,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxMzgyNDU4",
+    "number": 114,
+    "title": "Changed category to ECBP",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-07-26T03:31:33Z",
+    "updated_at": "2019-07-27T01:34:10Z",
+    "closed_at": "2019-07-27T01:34:10Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/114",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/114",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/114.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/114.patch"
+    },
+    "body": "From ERC to ECBP.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/114/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00114.patch b/.gh-pullrequests/00114.patch
new file mode 100644
index 0000000..5a8e1b9
--- /dev/null
+++ b/.gh-pullrequests/00114.patch
@@ -0,0 +1,23 @@
+From 85e461c8959631cc9768b1cbac1c4d193392a407 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 25 Jul 2019 21:31:28 -0600
+Subject: [PATCH] Changed category to ECBP
+
+From ERC to ECBP.
+---
+ _specs/ecip-1013.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1013.md b/_specs/ecip-1013.md
+index 1adda79..7c4813d 100644
+--- a/_specs/ecip-1013.md
++++ b/_specs/ecip-1013.md
+@@ -4,7 +4,7 @@ ecip: 1013
+ title: ETC On-Chain Cryptographic Signing and Authentication Protocol
+ status: Draft
+ type: Standards Track
+-category: ERC
++category: ECBP
+ author: Cody W Burns <cody.w.burns@ethereumclassic.org>
+ created: 2016-10-10
+ ---
diff --git a/.gh-pullrequests/00115.json b/.gh-pullrequests/00115.json
new file mode 100644
index 0000000..d456267
--- /dev/null
+++ b/.gh-pullrequests/00115.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/115",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/115/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/115/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/115/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/115",
+    "id": 473160589,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxMzgyNjA3",
+    "number": 115,
+    "title": "Changed category to ECBP",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-07-26T03:32:30Z",
+    "updated_at": "2019-07-27T01:34:10Z",
+    "closed_at": "2019-07-27T01:34:10Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/115",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/115",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/115.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/115.patch"
+    },
+    "body": "From ERC to ECBP.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/115/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00115.patch b/.gh-pullrequests/00115.patch
new file mode 100644
index 0000000..a6b9538
--- /dev/null
+++ b/.gh-pullrequests/00115.patch
@@ -0,0 +1,23 @@
+From a2a55e6b34713dec0aa74cbafc8bed266a9dde0c Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 25 Jul 2019 21:32:26 -0600
+Subject: [PATCH] Changed category to ECBP
+
+From ERC to ECBP.
+---
+ _specs/ecip-1021.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1021.md b/_specs/ecip-1021.md
+index 6dfe0bb..f1a5c02 100644
+--- a/_specs/ecip-1021.md
++++ b/_specs/ecip-1021.md
+@@ -5,7 +5,7 @@ title: Token standard
+ author: Dexaran, <dexaran820@gmail.com>
+ status: Draft
+ type: Standards Track
+-category: ERC
++category: ECBP
+ created: 2017-03-07
+ resolution: https://github.com/Dexaran/ERC23-tokens
+ ---
diff --git a/.gh-pullrequests/00116.json b/.gh-pullrequests/00116.json
new file mode 100644
index 0000000..a15f909
--- /dev/null
+++ b/.gh-pullrequests/00116.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/116",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/116/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/116/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/116/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/116",
+    "id": 473160794,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxMzgyNzQy",
+    "number": 116,
+    "title": "Changed category to ECBP",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-07-26T03:33:22Z",
+    "updated_at": "2019-07-27T01:34:11Z",
+    "closed_at": "2019-07-27T01:34:11Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/116",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/116",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/116.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/116.patch"
+    },
+    "body": "From ERC to ECBP.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/116/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00116.patch b/.gh-pullrequests/00116.patch
new file mode 100644
index 0000000..ce82016
--- /dev/null
+++ b/.gh-pullrequests/00116.patch
@@ -0,0 +1,23 @@
+From e46a2c9a333b6163c3446ee78a72ef81c36a6a90 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 25 Jul 2019 21:33:18 -0600
+Subject: [PATCH] Changed category to ECBP
+
+From ERC to ECBP.
+---
+ _specs/ecip-1044.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1044.md b/_specs/ecip-1044.md
+index 4824653..a1cf7aa 100644
+--- a/_specs/ecip-1044.md
++++ b/_specs/ecip-1044.md
+@@ -5,7 +5,7 @@ title: Formalize IPFS hash into ECNS (Ethereum Classic Name Service) resolver
+ author: Phyrex Tsai <phyrex@portal.network>, Portal Network Team
+ status: Draft
+ type: Standards Track
+-category: ERC
++category: ECBP
+ created: 2018-05-12
+ ---
+ 
diff --git a/.gh-pullrequests/00117.json b/.gh-pullrequests/00117.json
new file mode 100644
index 0000000..12b9929
--- /dev/null
+++ b/.gh-pullrequests/00117.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/117",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/117/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/117/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/117/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/117",
+    "id": 473161828,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxMzgzNTQx",
+    "number": 117,
+    "title": "Added header_pages: networking.html and changed erc.html",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-07-26T03:38:32Z",
+    "updated_at": "2019-07-27T01:34:11Z",
+    "closed_at": "2019-07-27T01:34:11Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/117",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/117",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/117.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/117.patch"
+    },
+    "body": "Added header_pages: \r\n\r\nnetworking.html \r\n\r\nand changed:\r\n\r\nerc.html\r\n\r\nto:\r\n\r\necbp.html\r\n\r\nto align to ECIP-1000 process types.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/117/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00117.patch b/.gh-pullrequests/00117.patch
new file mode 100644
index 0000000..c0bae5e
--- /dev/null
+++ b/.gh-pullrequests/00117.patch
@@ -0,0 +1,35 @@
+From d1590128ef502818714cfa6b65054c12146a08f1 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 25 Jul 2019 21:38:04 -0600
+Subject: [PATCH] Added header_pages: networking.html and changed erc.html
+
+Added header_pages:
+
+networking.html
+
+and changed:
+
+erc.html
+
+to:
+
+ecbp.html
+---
+ _config.yml | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
+
+diff --git a/_config.yml b/_config.yml
+index 41b5879..588c4fa 100644
+--- a/_config.yml
++++ b/_config.yml
+@@ -13,8 +13,9 @@ include: [".well-known"]
+ header_pages:
+  - all.html
+  - core.html
++ - networking.html
+  - interface.html
+- - erc.html
++ - ecbp.html
+  - meta.html
+  - informational.html
+ 
diff --git a/.gh-pullrequests/00118.json b/.gh-pullrequests/00118.json
new file mode 100644
index 0000000..dbd7322
--- /dev/null
+++ b/.gh-pullrequests/00118.json
@@ -0,0 +1,74 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/118",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/118/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/118/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/118/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/118",
+    "id": 473162544,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxMzg0MDgy",
+    "number": 118,
+    "title": "Changed to ECBP",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1428838937,
+        "node_id": "MDU6TGFiZWwxNDI4ODM4OTM3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/editor:%20looks-good",
+        "name": "editor: looks-good",
+        "color": "71ad0a",
+        "default": false,
+        "description": "This PR is generally fine to be merged."
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 3,
+    "created_at": "2019-07-26T03:42:09Z",
+    "updated_at": "2019-08-07T18:23:59Z",
+    "closed_at": "2019-08-07T18:23:55Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/118",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/118",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/118.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/118.patch"
+    },
+    "body": "Changed file name from `erc.html` to `ecbp.html`\r\n\r\nChanged title from `ERC` to `ECBP`.\r\n\r\nChanged string `where:\"category\",\"ERC\" %}` to `where:\"category\",\"ECBP\" %}`",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/118/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00118.patch b/.gh-pullrequests/00118.patch
new file mode 100644
index 0000000..0b57171
--- /dev/null
+++ b/.gh-pullrequests/00118.patch
@@ -0,0 +1,208 @@
+From 85e461c8959631cc9768b1cbac1c4d193392a407 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 25 Jul 2019 21:31:28 -0600
+Subject: [PATCH 1/7] Changed category to ECBP
+
+From ERC to ECBP.
+---
+ _specs/ecip-1013.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1013.md b/_specs/ecip-1013.md
+index 1adda79..7c4813d 100644
+--- a/_specs/ecip-1013.md
++++ b/_specs/ecip-1013.md
+@@ -4,7 +4,7 @@ ecip: 1013
+ title: ETC On-Chain Cryptographic Signing and Authentication Protocol
+ status: Draft
+ type: Standards Track
+-category: ERC
++category: ECBP
+ author: Cody W Burns <cody.w.burns@ethereumclassic.org>
+ created: 2016-10-10
+ ---
+
+From a2a55e6b34713dec0aa74cbafc8bed266a9dde0c Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 25 Jul 2019 21:32:26 -0600
+Subject: [PATCH 2/7] Changed category to ECBP
+
+From ERC to ECBP.
+---
+ _specs/ecip-1021.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1021.md b/_specs/ecip-1021.md
+index 6dfe0bb..f1a5c02 100644
+--- a/_specs/ecip-1021.md
++++ b/_specs/ecip-1021.md
+@@ -5,7 +5,7 @@ title: Token standard
+ author: Dexaran, <dexaran820@gmail.com>
+ status: Draft
+ type: Standards Track
+-category: ERC
++category: ECBP
+ created: 2017-03-07
+ resolution: https://github.com/Dexaran/ERC23-tokens
+ ---
+
+From e46a2c9a333b6163c3446ee78a72ef81c36a6a90 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 25 Jul 2019 21:33:18 -0600
+Subject: [PATCH 3/7] Changed category to ECBP
+
+From ERC to ECBP.
+---
+ _specs/ecip-1044.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1044.md b/_specs/ecip-1044.md
+index 4824653..a1cf7aa 100644
+--- a/_specs/ecip-1044.md
++++ b/_specs/ecip-1044.md
+@@ -5,7 +5,7 @@ title: Formalize IPFS hash into ECNS (Ethereum Classic Name Service) resolver
+ author: Phyrex Tsai <phyrex@portal.network>, Portal Network Team
+ status: Draft
+ type: Standards Track
+-category: ERC
++category: ECBP
+ created: 2018-05-12
+ ---
+ 
+
+From d1590128ef502818714cfa6b65054c12146a08f1 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 25 Jul 2019 21:38:04 -0600
+Subject: [PATCH 4/7] Added header_pages: networking.html and changed erc.html
+
+Added header_pages:
+
+networking.html
+
+and changed:
+
+erc.html
+
+to:
+
+ecbp.html
+---
+ _config.yml | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
+
+diff --git a/_config.yml b/_config.yml
+index 41b5879..588c4fa 100644
+--- a/_config.yml
++++ b/_config.yml
+@@ -13,8 +13,9 @@ include: [".well-known"]
+ header_pages:
+  - all.html
+  - core.html
++ - networking.html
+  - interface.html
+- - erc.html
++ - ecbp.html
+  - meta.html
+  - informational.html
+ 
+
+From 03463959389e609f268f6a9f6c205ac259ee1459 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 25 Jul 2019 21:41:29 -0600
+Subject: [PATCH 5/7] Chaged to ECBP
+
+Changed file name from erc.html to ecbp.html
+
+Changed title from ERC to ECBP.
+
+Changed string `where:"category","ERC" %}` to `where:"category","ECBP" %}`
+---
+ erc.html => ecbp.html | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+ rename erc.html => ecbp.html (71%)
+
+diff --git a/erc.html b/ecbp.html
+similarity index 71%
+rename from erc.html
+rename to ecbp.html
+index 68fb025..bac0059 100644
+--- a/erc.html
++++ b/ecbp.html
+@@ -1,7 +1,7 @@
+ ---
+ layout: page
+-title: ERC
++title: ECBP
+ ---
+ 
+-{% assign eips=site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","ERC" %}
++{% assign eips=site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","ECBP" %}
+ {% include eiptable.html eips=eips %}
+
+From ef1735619e2056b0a6acb430da2734839509b4e6 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 25 Jul 2019 21:52:27 -0600
+Subject: [PATCH 6/7] Update index.html
+
+Changed string:
+
+`<h4><a href="{{"erc"|relative_url}}">ERC</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","ERC"|size}})</h4>`
+
+to:
+
+`<h4><a href="{{"ecbp"|relative_url}}">ECBP</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","ECBP"|size}})</h4>`
+
+Note: I am adding also a string for `networking` but I don't know if that will break the site. Please check before merging.
+
+This is the new string I added (2 lines):
+
+`<h4><a href="{{"networking"|relative_url}}">Networking</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","Networking"|size}})</h4>
+<p>Improvements to networking protocol specifications.</p>`
+---
+ index.html | 5 ++++-
+ 1 file changed, 4 insertions(+), 1 deletion(-)
+
+diff --git a/index.html b/index.html
+index ef3d8bc..e35857e 100644
+--- a/index.html
++++ b/index.html
+@@ -19,10 +19,13 @@ <h3>Standard Track ({{site.specs|where:"lang","en"|where:"type","Standards Track
+ <h4><a href="{{"core"|relative_url}}">Core</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","Core"|size}})</h4>
+ <p>Improvements requiring a consensus fork, as well as changes that are not necessarily consensus critical but may be relevant to “core dev” discussions.</p>
+ 
++<h4><a href="{{"networking"|relative_url}}">Networking</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","Networking"|size}})</h4>
++<p>Improvements to networking protocol specifications.</p>
++
+ <h4><a href="{{"interface"|relative_url}}">Interface</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","Interface"|size}})</h4>
+ <p>Includes improvements around client API/RPC specifications and standards, and also certain language-level standards like method names and contract ABIs. The label “interface” aligns with the interfaces repo and discussion should primarily occur in that repository before an ECIP is submitted to the ECIPs repository.</p>
+ 
+-<h4><a href="{{"erc"|relative_url}}">ERC</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","ERC"|size}})</h4>
++<h4><a href="{{"ecbp"|relative_url}}">ECBP</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","ECBP"|size}})</h4>
+ <p>Application-level standards and conventions, including contract standards such as token standards, name registries, URI schemes, library/package formats, and wallet formats.</p>
+ 
+ <h3><a href="{{"meta"|relative_url}}">Meta</a> ({{site.specs|where:"lang","en"|where:"type","Meta"|size}})</h3>
+
+From 4b3d21f054307db96987951bb6b3ce197e89526f Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Sat, 27 Jul 2019 09:41:34 -0600
+Subject: [PATCH 7/7] Creating networking.html file
+
+It was a file missing to complete ECIP types.
+---
+ networking.html | 7 +++++++
+ 1 file changed, 7 insertions(+)
+ create mode 100644 networking.html
+
+diff --git a/networking.html b/networking.html
+new file mode 100644
+index 0000000..0aad2d4
+--- /dev/null
++++ b/networking.html
+@@ -0,0 +1,7 @@
++---
++layout: page
++title: Networking
++---
++
++{% assign eips=site.specs|where:"lang","en"|where:"type","Networking" %}
++{% include eiptable.html eips=eips %}
diff --git a/.gh-pullrequests/00118_515313926.json b/.gh-pullrequests/00118_515313926.json
new file mode 100644
index 0000000..53cf59f
--- /dev/null
+++ b/.gh-pullrequests/00118_515313926.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/515313926",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/118#issuecomment-515313926",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/118",
+    "id": 515313926,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTMxMzkyNg==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-07-26T05:25:38Z",
+    "updated_at": "2019-07-26T05:26:29Z",
+    "author_association": "MEMBER",
+    "body": "Would appreciate it if we can move #119, #117, #116, #115, #114 to this PR. Those needs to be merged together, otherwise the site generation will break.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/515313926/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00118_515641078.json b/.gh-pullrequests/00118_515641078.json
new file mode 100644
index 0000000..017b5b4
--- /dev/null
+++ b/.gh-pullrequests/00118_515641078.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/515641078",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/118#issuecomment-515641078",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/118",
+    "id": 515641078,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTY0MTA3OA==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-07-27T01:32:28Z",
+    "updated_at": "2019-07-27T01:32:28Z",
+    "author_association": "MEMBER",
+    "body": "If Everything went right I think I merged #119 + #117 + #116 + #115 + #114 all into #118.\r\n\r\nI don't know why the PRs are still individually listed in the PR tab, but maybe the have to be closed.\r\n\r\nAll should be inside this one which is #118>\r\n\r\nThanks @BelfordZ for explaining how to merge the PRs! (I hope I did it right!)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/515641078/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00118_515641213.json b/.gh-pullrequests/00118_515641213.json
new file mode 100644
index 0000000..6e8120f
--- /dev/null
+++ b/.gh-pullrequests/00118_515641213.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/515641213",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/118#issuecomment-515641213",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/118",
+    "id": 515641213,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTY0MTIxMw==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-07-27T01:34:46Z",
+    "updated_at": "2019-07-27T01:34:46Z",
+    "author_association": "MEMBER",
+    "body": "I closed  #119 + #117 + #116 + #115 + #114.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/515641213/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00119.json b/.gh-pullrequests/00119.json
new file mode 100644
index 0000000..f79144b
--- /dev/null
+++ b/.gh-pullrequests/00119.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/119",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/119/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/119/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/119/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/119",
+    "id": 473164830,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxMzg1ODE1",
+    "number": 119,
+    "title": "Update index.html to change to ECBP and add Networking type",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-07-26T03:53:28Z",
+    "updated_at": "2019-07-27T01:34:11Z",
+    "closed_at": "2019-07-27T01:34:11Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/119",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/119",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/119.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/119.patch"
+    },
+    "body": "Changed string:\r\n\r\n`<h4><a href=\"{{\"erc\"|relative_url}}\">ERC</a> ({{site.specs|where:\"lang\",\"en\"|where:\"type\",\"Standards Track\"|where:\"category\",\"ERC\"|size}})</h4>`\r\n\r\nto:\r\n\r\n`<h4><a href=\"{{\"ecbp\"|relative_url}}\">ECBP</a> ({{site.specs|where:\"lang\",\"en\"|where:\"type\",\"Standards Track\"|where:\"category\",\"ECBP\"|size}})</h4>`\r\n\r\nNote: I am adding also a string for `networking` but I don't know if that will break the site. Please check before merging.\r\n\r\nThis is the new string I added (2 lines):\r\n\r\n`<h4><a href=\"{{\"networking\"|relative_url}}\">Networking</a> ({{site.specs|where:\"lang\",\"en\"|where:\"type\",\"Standards Track\"|where:\"category\",\"Networking\"|size}})</h4>`\r\n`<p>Improvements to networking protocol specifications.</p>`",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/119/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00119.patch b/.gh-pullrequests/00119.patch
new file mode 100644
index 0000000..f1ea393
--- /dev/null
+++ b/.gh-pullrequests/00119.patch
@@ -0,0 +1,42 @@
+From ef1735619e2056b0a6acb430da2734839509b4e6 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 25 Jul 2019 21:52:27 -0600
+Subject: [PATCH] Update index.html
+
+Changed string:
+
+`<h4><a href="{{"erc"|relative_url}}">ERC</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","ERC"|size}})</h4>`
+
+to:
+
+`<h4><a href="{{"ecbp"|relative_url}}">ECBP</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","ECBP"|size}})</h4>`
+
+Note: I am adding also a string for `networking` but I don't know if that will break the site. Please check before merging.
+
+This is the new string I added (2 lines):
+
+`<h4><a href="{{"networking"|relative_url}}">Networking</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","Networking"|size}})</h4>
+<p>Improvements to networking protocol specifications.</p>`
+---
+ index.html | 5 ++++-
+ 1 file changed, 4 insertions(+), 1 deletion(-)
+
+diff --git a/index.html b/index.html
+index ef3d8bc..e35857e 100644
+--- a/index.html
++++ b/index.html
+@@ -19,10 +19,13 @@ <h3>Standard Track ({{site.specs|where:"lang","en"|where:"type","Standards Track
+ <h4><a href="{{"core"|relative_url}}">Core</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","Core"|size}})</h4>
+ <p>Improvements requiring a consensus fork, as well as changes that are not necessarily consensus critical but may be relevant to “core dev” discussions.</p>
+ 
++<h4><a href="{{"networking"|relative_url}}">Networking</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","Networking"|size}})</h4>
++<p>Improvements to networking protocol specifications.</p>
++
+ <h4><a href="{{"interface"|relative_url}}">Interface</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","Interface"|size}})</h4>
+ <p>Includes improvements around client API/RPC specifications and standards, and also certain language-level standards like method names and contract ABIs. The label “interface” aligns with the interfaces repo and discussion should primarily occur in that repository before an ECIP is submitted to the ECIPs repository.</p>
+ 
+-<h4><a href="{{"erc"|relative_url}}">ERC</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","ERC"|size}})</h4>
++<h4><a href="{{"ecbp"|relative_url}}">ECBP</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","ECBP"|size}})</h4>
+ <p>Application-level standards and conventions, including contract standards such as token standards, name registries, URI schemes, library/package formats, and wallet formats.</p>
+ 
+ <h3><a href="{{"meta"|relative_url}}">Meta</a> ({{site.specs|where:"lang","en"|where:"type","Meta"|size}})</h3>
diff --git a/.gh-pullrequests/00120.json b/.gh-pullrequests/00120.json
new file mode 100644
index 0000000..e3e64d3
--- /dev/null
+++ b/.gh-pullrequests/00120.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/120",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/120/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/120/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/120/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/120",
+    "id": 473583971,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxNzIzNTU2",
+    "number": 120,
+    "title": "Update index.html",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-07-27T01:23:58Z",
+    "updated_at": "2019-07-27T01:24:19Z",
+    "closed_at": "2019-07-27T01:24:19Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/120",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/120",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/120.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/120.patch"
+    },
+    "body": "Changed string:\r\n\r\n`<h4><a href=\"{{\"erc\"|relative_url}}\">ERC</a> ({{site.specs|where:\"lang\",\"en\"|where:\"type\",\"Standards Track\"|where:\"category\",\"ERC\"|size}})</h4>`\r\n\r\nto:\r\n\r\n`<h4><a href=\"{{\"ecbp\"|relative_url}}\">ECBP</a> ({{site.specs|where:\"lang\",\"en\"|where:\"type\",\"Standards Track\"|where:\"category\",\"ECBP\"|size}})</h4>`\r\n\r\nNote: I am adding also a string for `networking` but I don't know if that will break the site. Please check before merging.\r\n\r\nThis is the new string I added (2 lines):\r\n\r\n`<h4><a href=\"{{\"networking\"|relative_url}}\">Networking</a> ({{site.specs|where:\"lang\",\"en\"|where:\"type\",\"Standards Track\"|where:\"category\",\"Networking\"|size}})</h4>\r\n<p>Improvements to networking protocol specifications.</p>`",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/120/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00120.patch b/.gh-pullrequests/00120.patch
new file mode 100644
index 0000000..f1ea393
--- /dev/null
+++ b/.gh-pullrequests/00120.patch
@@ -0,0 +1,42 @@
+From ef1735619e2056b0a6acb430da2734839509b4e6 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 25 Jul 2019 21:52:27 -0600
+Subject: [PATCH] Update index.html
+
+Changed string:
+
+`<h4><a href="{{"erc"|relative_url}}">ERC</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","ERC"|size}})</h4>`
+
+to:
+
+`<h4><a href="{{"ecbp"|relative_url}}">ECBP</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","ECBP"|size}})</h4>`
+
+Note: I am adding also a string for `networking` but I don't know if that will break the site. Please check before merging.
+
+This is the new string I added (2 lines):
+
+`<h4><a href="{{"networking"|relative_url}}">Networking</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","Networking"|size}})</h4>
+<p>Improvements to networking protocol specifications.</p>`
+---
+ index.html | 5 ++++-
+ 1 file changed, 4 insertions(+), 1 deletion(-)
+
+diff --git a/index.html b/index.html
+index ef3d8bc..e35857e 100644
+--- a/index.html
++++ b/index.html
+@@ -19,10 +19,13 @@ <h3>Standard Track ({{site.specs|where:"lang","en"|where:"type","Standards Track
+ <h4><a href="{{"core"|relative_url}}">Core</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","Core"|size}})</h4>
+ <p>Improvements requiring a consensus fork, as well as changes that are not necessarily consensus critical but may be relevant to “core dev” discussions.</p>
+ 
++<h4><a href="{{"networking"|relative_url}}">Networking</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","Networking"|size}})</h4>
++<p>Improvements to networking protocol specifications.</p>
++
+ <h4><a href="{{"interface"|relative_url}}">Interface</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","Interface"|size}})</h4>
+ <p>Includes improvements around client API/RPC specifications and standards, and also certain language-level standards like method names and contract ABIs. The label “interface” aligns with the interfaces repo and discussion should primarily occur in that repository before an ECIP is submitted to the ECIPs repository.</p>
+ 
+-<h4><a href="{{"erc"|relative_url}}">ERC</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","ERC"|size}})</h4>
++<h4><a href="{{"ecbp"|relative_url}}">ECBP</a> ({{site.specs|where:"lang","en"|where:"type","Standards Track"|where:"category","ECBP"|size}})</h4>
+ <p>Application-level standards and conventions, including contract standards such as token standards, name registries, URI schemes, library/package formats, and wallet formats.</p>
+ 
+ <h3><a href="{{"meta"|relative_url}}">Meta</a> ({{site.specs|where:"lang","en"|where:"type","Meta"|size}})</h3>
diff --git a/.gh-pullrequests/00121.json b/.gh-pullrequests/00121.json
new file mode 100644
index 0000000..f8161b2
--- /dev/null
+++ b/.gh-pullrequests/00121.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/121",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/121/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/121/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/121/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/121",
+    "id": 473584169,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxNzIzNzE1",
+    "number": 121,
+    "title": "Added header_pages: networking.html and changed erc.html",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-07-27T01:26:05Z",
+    "updated_at": "2019-07-27T01:26:28Z",
+    "closed_at": "2019-07-27T01:26:28Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/121",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/121",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/121.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/121.patch"
+    },
+    "body": "Added header_pages: \r\n\r\nnetworking.html \r\n\r\nand changed:\r\n\r\nerc.html\r\n\r\nto:\r\n\r\necbp.html",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/121/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00121.patch b/.gh-pullrequests/00121.patch
new file mode 100644
index 0000000..c0bae5e
--- /dev/null
+++ b/.gh-pullrequests/00121.patch
@@ -0,0 +1,35 @@
+From d1590128ef502818714cfa6b65054c12146a08f1 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 25 Jul 2019 21:38:04 -0600
+Subject: [PATCH] Added header_pages: networking.html and changed erc.html
+
+Added header_pages:
+
+networking.html
+
+and changed:
+
+erc.html
+
+to:
+
+ecbp.html
+---
+ _config.yml | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
+
+diff --git a/_config.yml b/_config.yml
+index 41b5879..588c4fa 100644
+--- a/_config.yml
++++ b/_config.yml
+@@ -13,8 +13,9 @@ include: [".well-known"]
+ header_pages:
+  - all.html
+  - core.html
++ - networking.html
+  - interface.html
+- - erc.html
++ - ecbp.html
+  - meta.html
+  - informational.html
+ 
diff --git a/.gh-pullrequests/00122.json b/.gh-pullrequests/00122.json
new file mode 100644
index 0000000..1c1ca00
--- /dev/null
+++ b/.gh-pullrequests/00122.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/122",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/122/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/122/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/122/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/122",
+    "id": 473584257,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxNzIzNzgz",
+    "number": 122,
+    "title": "Changed category to ECBP",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-07-27T01:27:05Z",
+    "updated_at": "2019-07-27T01:27:14Z",
+    "closed_at": "2019-07-27T01:27:14Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/122",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/122",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/122.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/122.patch"
+    },
+    "body": "From ERC to ECBP.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/122/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00122.patch b/.gh-pullrequests/00122.patch
new file mode 100644
index 0000000..ce82016
--- /dev/null
+++ b/.gh-pullrequests/00122.patch
@@ -0,0 +1,23 @@
+From e46a2c9a333b6163c3446ee78a72ef81c36a6a90 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 25 Jul 2019 21:33:18 -0600
+Subject: [PATCH] Changed category to ECBP
+
+From ERC to ECBP.
+---
+ _specs/ecip-1044.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1044.md b/_specs/ecip-1044.md
+index 4824653..a1cf7aa 100644
+--- a/_specs/ecip-1044.md
++++ b/_specs/ecip-1044.md
+@@ -5,7 +5,7 @@ title: Formalize IPFS hash into ECNS (Ethereum Classic Name Service) resolver
+ author: Phyrex Tsai <phyrex@portal.network>, Portal Network Team
+ status: Draft
+ type: Standards Track
+-category: ERC
++category: ECBP
+ created: 2018-05-12
+ ---
+ 
diff --git a/.gh-pullrequests/00123.json b/.gh-pullrequests/00123.json
new file mode 100644
index 0000000..4f16726
--- /dev/null
+++ b/.gh-pullrequests/00123.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/123",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/123/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/123/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/123/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/123",
+    "id": 473584329,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxNzIzODM1",
+    "number": 123,
+    "title": "Changed category to ECBP",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-07-27T01:28:06Z",
+    "updated_at": "2019-07-27T01:28:14Z",
+    "closed_at": "2019-07-27T01:28:14Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/123",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/123",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/123.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/123.patch"
+    },
+    "body": "From ERC to ECBP.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/123/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00123.patch b/.gh-pullrequests/00123.patch
new file mode 100644
index 0000000..a6b9538
--- /dev/null
+++ b/.gh-pullrequests/00123.patch
@@ -0,0 +1,23 @@
+From a2a55e6b34713dec0aa74cbafc8bed266a9dde0c Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 25 Jul 2019 21:32:26 -0600
+Subject: [PATCH] Changed category to ECBP
+
+From ERC to ECBP.
+---
+ _specs/ecip-1021.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1021.md b/_specs/ecip-1021.md
+index 6dfe0bb..f1a5c02 100644
+--- a/_specs/ecip-1021.md
++++ b/_specs/ecip-1021.md
+@@ -5,7 +5,7 @@ title: Token standard
+ author: Dexaran, <dexaran820@gmail.com>
+ status: Draft
+ type: Standards Track
+-category: ERC
++category: ECBP
+ created: 2017-03-07
+ resolution: https://github.com/Dexaran/ERC23-tokens
+ ---
diff --git a/.gh-pullrequests/00124.json b/.gh-pullrequests/00124.json
new file mode 100644
index 0000000..e8222de
--- /dev/null
+++ b/.gh-pullrequests/00124.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/124",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/124/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/124/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/124/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/124",
+    "id": 473584405,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxNzIzODg4",
+    "number": 124,
+    "title": "Changed category to ECBP",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-07-27T01:29:04Z",
+    "updated_at": "2019-07-27T01:29:13Z",
+    "closed_at": "2019-07-27T01:29:13Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/124",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/124",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/124.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/124.patch"
+    },
+    "body": "From ERC to ECBP.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/124/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00124.patch b/.gh-pullrequests/00124.patch
new file mode 100644
index 0000000..5a8e1b9
--- /dev/null
+++ b/.gh-pullrequests/00124.patch
@@ -0,0 +1,23 @@
+From 85e461c8959631cc9768b1cbac1c4d193392a407 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Thu, 25 Jul 2019 21:31:28 -0600
+Subject: [PATCH] Changed category to ECBP
+
+From ERC to ECBP.
+---
+ _specs/ecip-1013.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1013.md b/_specs/ecip-1013.md
+index 1adda79..7c4813d 100644
+--- a/_specs/ecip-1013.md
++++ b/_specs/ecip-1013.md
+@@ -4,7 +4,7 @@ ecip: 1013
+ title: ETC On-Chain Cryptographic Signing and Authentication Protocol
+ status: Draft
+ type: Standards Track
+-category: ERC
++category: ECBP
+ author: Cody W Burns <cody.w.burns@ethereumclassic.org>
+ created: 2016-10-10
+ ---
diff --git a/.gh-pullrequests/00125.json b/.gh-pullrequests/00125.json
new file mode 100644
index 0000000..f0230e5
--- /dev/null
+++ b/.gh-pullrequests/00125.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/125",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/125/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/125/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/125/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/125",
+    "id": 473650254,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxNzY3Mjcz",
+    "number": 125,
+    "title": "Creating networking.html file",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-07-27T15:42:18Z",
+    "updated_at": "2019-07-27T15:42:27Z",
+    "closed_at": "2019-07-27T15:42:27Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/125",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/125",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/125.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/125.patch"
+    },
+    "body": "It was a file missing to complete ECIP types.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/125/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00125.patch b/.gh-pullrequests/00125.patch
new file mode 100644
index 0000000..888a5f9
--- /dev/null
+++ b/.gh-pullrequests/00125.patch
@@ -0,0 +1,24 @@
+From 4b3d21f054307db96987951bb6b3ce197e89526f Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Sat, 27 Jul 2019 09:41:34 -0600
+Subject: [PATCH] Creating networking.html file
+
+It was a file missing to complete ECIP types.
+---
+ networking.html | 7 +++++++
+ 1 file changed, 7 insertions(+)
+ create mode 100644 networking.html
+
+diff --git a/networking.html b/networking.html
+new file mode 100644
+index 0000000..0aad2d4
+--- /dev/null
++++ b/networking.html
+@@ -0,0 +1,7 @@
++---
++layout: page
++title: Networking
++---
++
++{% assign eips=site.specs|where:"lang","en"|where:"type","Networking" %}
++{% include eiptable.html eips=eips %}
diff --git a/.gh-pullrequests/00126.json b/.gh-pullrequests/00126.json
new file mode 100644
index 0000000..708bc85
--- /dev/null
+++ b/.gh-pullrequests/00126.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/126",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/126/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/126/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/126/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/126",
+    "id": 477277848,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzA0NjMzMzYx",
+    "number": 126,
+    "title": "ECIP for Communicating with 3rd parties",
+    "user": {
+      "login": "bobthegrownup",
+      "id": 47165999,
+      "node_id": "MDQ6VXNlcjQ3MTY1OTk5",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47165999?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobthegrownup",
+      "html_url": "https://github.com/bobthegrownup",
+      "followers_url": "https://api.github.com/users/bobthegrownup/followers",
+      "following_url": "https://api.github.com/users/bobthegrownup/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobthegrownup/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobthegrownup/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobthegrownup/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobthegrownup/orgs",
+      "repos_url": "https://api.github.com/users/bobthegrownup/repos",
+      "events_url": "https://api.github.com/users/bobthegrownup/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobthegrownup/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2019-08-06T09:43:25Z",
+    "updated_at": "2019-08-06T09:58:48Z",
+    "closed_at": "2019-08-06T09:54:51Z",
+    "author_association": "CONTRIBUTOR",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/126",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/126",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/126.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/126.patch"
+    },
+    "body": "This proposal is a framework for 3rd party communications in decentralized systems",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/126/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00126.patch b/.gh-pullrequests/00126.patch
new file mode 100644
index 0000000..b3a2367
--- /dev/null
+++ b/.gh-pullrequests/00126.patch
@@ -0,0 +1,200 @@
+From 62a0ffac9e70d5f70cabcc5203bf3e7dd863e970 Mon Sep 17 00:00:00 2001
+From: bobthegrownup <47165999+bobthegrownup@users.noreply.github.com>
+Date: Tue, 6 Aug 2019 17:32:08 +0800
+Subject: [PATCH 1/2] Update ecip-X.md
+
+---
+ ecip-X.md | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/ecip-X.md b/ecip-X.md
+index 6a29026..d4ba59f 100644
+--- a/ecip-X.md
++++ b/ecip-X.md
+@@ -21,3 +21,4 @@ resolution: <url>
+ 
+ ### Implementation
+ 
++
+
+From 4e03774fc3c0a09ab60d9753a726f780a9cf6b9d Mon Sep 17 00:00:00 2001
+From: bobthegrownup <47165999+bobthegrownup@users.noreply.github.com>
+Date: Tue, 6 Aug 2019 17:36:52 +0800
+Subject: [PATCH 2/2] Update and rename ecip-X.md to ecip-dean-comms.md
+
+---
+ ecip-X.md          |  24 --------
+ ecip-dean-comms.md | 133 +++++++++++++++++++++++++++++++++++++++++++++
+ 2 files changed, 133 insertions(+), 24 deletions(-)
+ delete mode 100644 ecip-X.md
+ create mode 100644 ecip-dean-comms.md
+
+diff --git a/ecip-X.md b/ecip-X.md
+deleted file mode 100644
+index d4ba59f..0000000
+--- a/ecip-X.md
++++ /dev/null
+@@ -1,24 +0,0 @@
+----
+-ecip: <ECIP number>
+-title: <ECIP title>
+-author: <list of authors' real names and optionally, email addrs>
+-discussions-to: <email address>
+-status: <Draft | Active | Accepted | Deferred | Rejected | Withdrawn | Final | Superseded>
+-type: <Standards Track | Informational | Process>
+-created: <date created on, in ISO 8601 (yyyy-mm-dd) format>
+-replaces: <ECIP number>
+-superseded-by: <ECIP number>
+-resolution: <url>
+----
+-
+-### Abstract
+-
+-### Motivation
+-
+-### Specification
+-
+-### Rationale
+-
+-### Implementation
+-
+-
+diff --git a/ecip-dean-comms.md b/ecip-dean-comms.md
+new file mode 100644
+index 0000000..36deac7
+--- /dev/null
++++ b/ecip-dean-comms.md
+@@ -0,0 +1,133 @@
++# Communicating with 3rd parties
++
++    ECIP: ?
++    Author: Dean Pappas, deancpappas@gmail.com
++    Status: Draft
++    Type: Informational
++    Created: 2019-08-06
++
++## Abstract
++
++A process for communicating high priority updates and events to 3rd parties 
++
++## Motivation
++
++One of the biggest issues for coordinated decentralized network upgrades (ie hard fork) is disseminating this information to 3rd parties. As it stands, multiple entities can be contacting 3rd party organizations as “official” representatives, recommending different clients and actions, or even publishing conflicting information that can lead to centralization, network splitting, and other systemic issues caused by this lack of coordination. 
++
++There can also be new processes that come out as a result of this, ie a “safe list” of 3rd party organizations. It is not the purpose of this ECIP to outline these.
++
++
++## Specification
++
++This process is comprised of 3 parts
++
++1) Representative Selection
++2) Message Construction
++3) Channels
++
++### Representative Selection
++
++Each Client (geth/multigeth/parity/mantis) should have 1 representative selected to help in the outreach process.  In addition, there should be 2 representatives voted by the Client representatives that are unaffiliated with any of the Organizations.
++
++This selection happens at the “Final Call” of the event.
++
++*For example, at the Final Call of Atlantis, the following representatives are selected:*
++1. ETCLabs – Christian
++2. ETCCoop – Yaz
++3. Parity – Wei
++4. IOHK – Kevin
++5. Community 1 – Donald
++6. Community 2 – Roy
++
++
++### Message Construction
++
++During Final Call, the author for the message will be assigned to one of the unaffiliated representatives. There will also be a send date agreed upon. The recommended send date is 6 weeks before the event. The draft will be submitted to the representatives no later than 1 week before the send date. 
++
++*Example Message: Initial Communications Setup*
++
++*Hi [Contact Name]*
++
++*I wanted to reach out and setup a technical contact at [Org] for Ethereum Classic. We are gearing up for our Atlantis Hardfork and want to ensure a smooth upgrade with all of our [OrgType] partners.* 
++
++*I'll be sending you the official announcement details within the next couple of weeks, but I wanted to make sure this is your best contact detail and see if there is anyone else on your team that needs to be involved.*
++
++*Looking forward to our continued work together and a successful hard fork!*
++
++### Channels
++
++A channel is defined as a contact name and contact medium, with a very high likelihood of response within 48 hours. 
++
++2 spreadsheets are required: **Contact List** and **Update Status** 
++
++**Contact List**: the official communications channels for all 3rd parties. This must remain semi-private to protect  3rd parties from spam. The entries are updated by the last contact to have a successful response from the Organization. 
++
++*The suggested spreadsheet format* 
++
++`Org | OrgType | Contact Name | Contact Medium | Last Contact | Last Contact By`
++
++*OrgTypes:*
++- Exchange
++- Miner
++- Node
++- Wallet
++- Publication
++
++*Example entry*
++
++- F2Pool | Miner | Thomas | Wechat - @thomasf2pool | 7/30/2019 | Community 1 – Donald
++- Coinbase | Exchange | Bill | Email – bill@coinbase.com | 7/25/2019 | IOHK – Kevin
++- Coineal | Exchange | None | None | 7/20/2019 | ETCCoop - Yaz
++
++
++**Update Status:** a temporary spreadsheet used to coordinate communications for a specific update/event
++
++*The suggested spreadsheet format*
++
++`Org | Rep 1 | Rep 2 | Status` 
++
++*Status Types*
++
++- Complete: acknowledged receipt of the communication
++- InProgress1: 1st 2 weeks of attempts, handled by Rep 1
++- InProgress2: 2nd 2 weeks of attempts, handled by Rep 2
++- Failed: no response after 4 weeks of attempts
++
++*Example entry*
++
++- F2Pool | Community 1 – Donald | ETCLabs – Christian | Complete
++- Coinbase | IOHK – Kevin | Community 2 – Roy | InProgress1 
++
++
++
++#### Channel Use
++
++After message construction, a “Update Status” spreadsheet is created. Each Representative fills in their name under *Rep1* for every “Org” they are the “Last Contact By”. Rep 2 is assigned by *Rep1* or done on a volunteer basis, whichever occurs first. 
++
++Outreach begins using the last established channel and Status becomes *InProgress1*. During this phase, outreach can extend to different mediums if there is no response within the 1st week.  At the end of the 2nd week, if there is no successful response, status moves to *InProgress2* and *Rep2* begins outreach process, following the same protocol. After 4 weeks of attempts with no response, the status is set to *Failed* and the “Contact List” entry is updated to “No Contact” and “Last Contact” is set to last attempt date and “Contact By” is set to *Rep2*.
++
++Every outreach will include another representative
++
++*Example*
++
++- Email: cc’ing another Rep
++- WeChat: group chat
++- Ticket: cc’ing and including another Rep’s contact details in the submission
++
++Successful responses are marked as “Success” in the “Update Status” sheet and the “Contact List” is updated.
++
++
++#### Channel Maintenance
++
++To prevent out of date information in the contact list, the contacts will be refreshed with a generic outreach every month. This outreach will be handled by the last Contact By on the contact list. Adding new contacts would organically occur and there is no need to remove old ones.
++
++
++### Implementation
++
++The first iteration of this process is the most difficult, as the Contact List is being formed from scratch. 
++
++Representatives are selected once this ECIP is accepted
++
++Once a message has been constructed, the steps would emulate the normal process. Any existing contact list can act as a starting point, with the Representatives filling in information to the best of their abilities.  
++
++
diff --git a/.gh-pullrequests/00126_518596232.json b/.gh-pullrequests/00126_518596232.json
new file mode 100644
index 0000000..8f4b566
--- /dev/null
+++ b/.gh-pullrequests/00126_518596232.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/518596232",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/126#issuecomment-518596232",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/126",
+    "id": 518596232,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODU5NjIzMg==",
+    "user": {
+      "login": "bobthegrownup",
+      "id": 47165999,
+      "node_id": "MDQ6VXNlcjQ3MTY1OTk5",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47165999?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobthegrownup",
+      "html_url": "https://github.com/bobthegrownup",
+      "followers_url": "https://api.github.com/users/bobthegrownup/followers",
+      "following_url": "https://api.github.com/users/bobthegrownup/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobthegrownup/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobthegrownup/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobthegrownup/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobthegrownup/orgs",
+      "repos_url": "https://api.github.com/users/bobthegrownup/repos",
+      "events_url": "https://api.github.com/users/bobthegrownup/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobthegrownup/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-08-06T09:45:31Z",
+    "updated_at": "2019-08-06T09:45:31Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "I'm pretty sure i made a mistake and submitted to update ecip-x.md instead of create a new file.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/518596232/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00127.json b/.gh-pullrequests/00127.json
new file mode 100644
index 0000000..ba54239
--- /dev/null
+++ b/.gh-pullrequests/00127.json
@@ -0,0 +1,74 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/127",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/127/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/127/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/127/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/127",
+    "id": 477293745,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzA0NjQ2MjAx",
+    "number": 127,
+    "title": "ECIP for Communicating with 3rd parties",
+    "user": {
+      "login": "bobthegrownup",
+      "id": 47165999,
+      "node_id": "MDQ6VXNlcjQ3MTY1OTk5",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47165999?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobthegrownup",
+      "html_url": "https://github.com/bobthegrownup",
+      "followers_url": "https://api.github.com/users/bobthegrownup/followers",
+      "following_url": "https://api.github.com/users/bobthegrownup/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobthegrownup/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobthegrownup/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobthegrownup/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobthegrownup/orgs",
+      "repos_url": "https://api.github.com/users/bobthegrownup/repos",
+      "events_url": "https://api.github.com/users/bobthegrownup/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobthegrownup/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1488234618,
+        "node_id": "MDU6TGFiZWwxNDg4MjM0NjE4",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/editor:%20grumble",
+        "name": "editor: grumble",
+        "color": "8fb6d8",
+        "default": false,
+        "description": "This PR has minor issues that should be addressed before merging."
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 2,
+    "created_at": "2019-08-06T10:15:57Z",
+    "updated_at": "2019-08-12T14:31:49Z",
+    "closed_at": "2019-08-12T14:31:49Z",
+    "author_association": "CONTRIBUTOR",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/127",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/127",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/127.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/127.patch"
+    },
+    "body": "This proposal is a framework for 3rd party communications in decentralized systems",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/127/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00127.patch b/.gh-pullrequests/00127.patch
new file mode 100644
index 0000000..cc1e88f
--- /dev/null
+++ b/.gh-pullrequests/00127.patch
@@ -0,0 +1,358 @@
+From 001fd74d601ef7905ce52eddc5fa0b5e2f37307e Mon Sep 17 00:00:00 2001
+From: bobthegrownup <47165999+bobthegrownup@users.noreply.github.com>
+Date: Tue, 6 Aug 2019 18:14:00 +0800
+Subject: [PATCH 1/8] Create ECIP-dean-comms
+
+---
+ ECIP-dean-comms | 133 ++++++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 133 insertions(+)
+ create mode 100644 ECIP-dean-comms
+
+diff --git a/ECIP-dean-comms b/ECIP-dean-comms
+new file mode 100644
+index 0000000..36deac7
+--- /dev/null
++++ b/ECIP-dean-comms
+@@ -0,0 +1,133 @@
++# Communicating with 3rd parties
++
++    ECIP: ?
++    Author: Dean Pappas, deancpappas@gmail.com
++    Status: Draft
++    Type: Informational
++    Created: 2019-08-06
++
++## Abstract
++
++A process for communicating high priority updates and events to 3rd parties 
++
++## Motivation
++
++One of the biggest issues for coordinated decentralized network upgrades (ie hard fork) is disseminating this information to 3rd parties. As it stands, multiple entities can be contacting 3rd party organizations as “official” representatives, recommending different clients and actions, or even publishing conflicting information that can lead to centralization, network splitting, and other systemic issues caused by this lack of coordination. 
++
++There can also be new processes that come out as a result of this, ie a “safe list” of 3rd party organizations. It is not the purpose of this ECIP to outline these.
++
++
++## Specification
++
++This process is comprised of 3 parts
++
++1) Representative Selection
++2) Message Construction
++3) Channels
++
++### Representative Selection
++
++Each Client (geth/multigeth/parity/mantis) should have 1 representative selected to help in the outreach process.  In addition, there should be 2 representatives voted by the Client representatives that are unaffiliated with any of the Organizations.
++
++This selection happens at the “Final Call” of the event.
++
++*For example, at the Final Call of Atlantis, the following representatives are selected:*
++1. ETCLabs – Christian
++2. ETCCoop – Yaz
++3. Parity – Wei
++4. IOHK – Kevin
++5. Community 1 – Donald
++6. Community 2 – Roy
++
++
++### Message Construction
++
++During Final Call, the author for the message will be assigned to one of the unaffiliated representatives. There will also be a send date agreed upon. The recommended send date is 6 weeks before the event. The draft will be submitted to the representatives no later than 1 week before the send date. 
++
++*Example Message: Initial Communications Setup*
++
++*Hi [Contact Name]*
++
++*I wanted to reach out and setup a technical contact at [Org] for Ethereum Classic. We are gearing up for our Atlantis Hardfork and want to ensure a smooth upgrade with all of our [OrgType] partners.* 
++
++*I'll be sending you the official announcement details within the next couple of weeks, but I wanted to make sure this is your best contact detail and see if there is anyone else on your team that needs to be involved.*
++
++*Looking forward to our continued work together and a successful hard fork!*
++
++### Channels
++
++A channel is defined as a contact name and contact medium, with a very high likelihood of response within 48 hours. 
++
++2 spreadsheets are required: **Contact List** and **Update Status** 
++
++**Contact List**: the official communications channels for all 3rd parties. This must remain semi-private to protect  3rd parties from spam. The entries are updated by the last contact to have a successful response from the Organization. 
++
++*The suggested spreadsheet format* 
++
++`Org | OrgType | Contact Name | Contact Medium | Last Contact | Last Contact By`
++
++*OrgTypes:*
++- Exchange
++- Miner
++- Node
++- Wallet
++- Publication
++
++*Example entry*
++
++- F2Pool | Miner | Thomas | Wechat - @thomasf2pool | 7/30/2019 | Community 1 – Donald
++- Coinbase | Exchange | Bill | Email – bill@coinbase.com | 7/25/2019 | IOHK – Kevin
++- Coineal | Exchange | None | None | 7/20/2019 | ETCCoop - Yaz
++
++
++**Update Status:** a temporary spreadsheet used to coordinate communications for a specific update/event
++
++*The suggested spreadsheet format*
++
++`Org | Rep 1 | Rep 2 | Status` 
++
++*Status Types*
++
++- Complete: acknowledged receipt of the communication
++- InProgress1: 1st 2 weeks of attempts, handled by Rep 1
++- InProgress2: 2nd 2 weeks of attempts, handled by Rep 2
++- Failed: no response after 4 weeks of attempts
++
++*Example entry*
++
++- F2Pool | Community 1 – Donald | ETCLabs – Christian | Complete
++- Coinbase | IOHK – Kevin | Community 2 – Roy | InProgress1 
++
++
++
++#### Channel Use
++
++After message construction, a “Update Status” spreadsheet is created. Each Representative fills in their name under *Rep1* for every “Org” they are the “Last Contact By”. Rep 2 is assigned by *Rep1* or done on a volunteer basis, whichever occurs first. 
++
++Outreach begins using the last established channel and Status becomes *InProgress1*. During this phase, outreach can extend to different mediums if there is no response within the 1st week.  At the end of the 2nd week, if there is no successful response, status moves to *InProgress2* and *Rep2* begins outreach process, following the same protocol. After 4 weeks of attempts with no response, the status is set to *Failed* and the “Contact List” entry is updated to “No Contact” and “Last Contact” is set to last attempt date and “Contact By” is set to *Rep2*.
++
++Every outreach will include another representative
++
++*Example*
++
++- Email: cc’ing another Rep
++- WeChat: group chat
++- Ticket: cc’ing and including another Rep’s contact details in the submission
++
++Successful responses are marked as “Success” in the “Update Status” sheet and the “Contact List” is updated.
++
++
++#### Channel Maintenance
++
++To prevent out of date information in the contact list, the contacts will be refreshed with a generic outreach every month. This outreach will be handled by the last Contact By on the contact list. Adding new contacts would organically occur and there is no need to remove old ones.
++
++
++### Implementation
++
++The first iteration of this process is the most difficult, as the Contact List is being formed from scratch. 
++
++Representatives are selected once this ECIP is accepted
++
++Once a message has been constructed, the steps would emulate the normal process. Any existing contact list can act as a starting point, with the Representatives filling in information to the best of their abilities.  
++
++
+
+From 56d29084a21e692408f0c47ea7b8fef6b4ae3124 Mon Sep 17 00:00:00 2001
+From: bobthegrownup <47165999+bobthegrownup@users.noreply.github.com>
+Date: Wed, 7 Aug 2019 07:15:23 +0800
+Subject: [PATCH 2/8] Update ECIP-dean-comms
+
+Co-Authored-By: Talha Cross <47772477+soc1c@users.noreply.github.com>
+---
+ ECIP-dean-comms | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/ECIP-dean-comms b/ECIP-dean-comms
+index 36deac7..64150b3 100644
+--- a/ECIP-dean-comms
++++ b/ECIP-dean-comms
+@@ -1,6 +1,6 @@
+ # Communicating with 3rd parties
+ 
+-    ECIP: ?
++    ECIP: 1064
+     Author: Dean Pappas, deancpappas@gmail.com
+     Status: Draft
+     Type: Informational
+
+From d47afa0289b910a5925bdce1222a36f6ae0dee97 Mon Sep 17 00:00:00 2001
+From: Wei Tang <accounts@that.world>
+Date: Wed, 7 Aug 2019 08:33:21 +0200
+Subject: [PATCH 3/8] Use frontmatter header format
+
+---
+ ECIP-dean-comms | 16 +++++++++-------
+ 1 file changed, 9 insertions(+), 7 deletions(-)
+
+diff --git a/ECIP-dean-comms b/ECIP-dean-comms
+index 64150b3..9c41b5e 100644
+--- a/ECIP-dean-comms
++++ b/ECIP-dean-comms
+@@ -1,10 +1,12 @@
+-# Communicating with 3rd parties
+-
+-    ECIP: 1064
+-    Author: Dean Pappas, deancpappas@gmail.com
+-    Status: Draft
+-    Type: Informational
+-    Created: 2019-08-06
++---
++lang: en
++ecip: 1064
++title: Communicating with 3rd parties
++status: Draft
++type: Informational
++author: Dean Pappas (deancpappas@gmail.com)
++created: 2019-08-06
++---
+ 
+ ## Abstract
+ 
+
+From c89ddc049c385922045d8becb69b2fb531132344 Mon Sep 17 00:00:00 2001
+From: Wei Tang <accounts@that.world>
+Date: Wed, 7 Aug 2019 08:34:24 +0200
+Subject: [PATCH 4/8] Rename ECIP-dean-comms to _specs/ecip-1064.md
+
+---
+ ECIP-dean-comms => _specs/ecip-1064.md | 0
+ 1 file changed, 0 insertions(+), 0 deletions(-)
+ rename ECIP-dean-comms => _specs/ecip-1064.md (100%)
+
+diff --git a/ECIP-dean-comms b/_specs/ecip-1064.md
+similarity index 100%
+rename from ECIP-dean-comms
+rename to _specs/ecip-1064.md
+
+From 37b9a0151cd1e327f7000d7e09bae95781cc469d Mon Sep 17 00:00:00 2001
+From: bobthegrownup <47165999+bobthegrownup@users.noreply.github.com>
+Date: Wed, 7 Aug 2019 23:41:33 +0800
+Subject: [PATCH 5/8] Update _specs/ecip-1064.md
+
+Co-Authored-By: Wei Tang <accounts@that.world>
+---
+ _specs/ecip-1064.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1064.md b/_specs/ecip-1064.md
+index 9c41b5e..d33c2aa 100644
+--- a/_specs/ecip-1064.md
++++ b/_specs/ecip-1064.md
+@@ -3,7 +3,7 @@ lang: en
+ ecip: 1064
+ title: Communicating with 3rd parties
+ status: Draft
+-type: Informational
++type: Meta
+ author: Dean Pappas (deancpappas@gmail.com)
+ created: 2019-08-06
+ ---
+
+From ad41fdb315d0e46fd9cbfabdf9f6b63fce9f58c6 Mon Sep 17 00:00:00 2001
+From: bobthegrownup <47165999+bobthegrownup@users.noreply.github.com>
+Date: Fri, 9 Aug 2019 22:15:24 +0800
+Subject: [PATCH 6/8] Update ecip-1064.md
+
+---
+ _specs/ecip-1064.md | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/_specs/ecip-1064.md b/_specs/ecip-1064.md
+index d33c2aa..7bbc266 100644
+--- a/_specs/ecip-1064.md
++++ b/_specs/ecip-1064.md
+@@ -5,6 +5,7 @@ title: Communicating with 3rd parties
+ status: Draft
+ type: Meta
+ author: Dean Pappas (deancpappas@gmail.com)
++discussions-to: Community Discord #ecips
+ created: 2019-08-06
+ ---
+ 
+
+From 1a386162edf15e29193e982773b5295522081e0c Mon Sep 17 00:00:00 2001
+From: bobthegrownup <47165999+bobthegrownup@users.noreply.github.com>
+Date: Fri, 9 Aug 2019 22:18:53 +0800
+Subject: [PATCH 7/8] Update ecip-1064.md
+
+---
+ _specs/ecip-1064.md | 14 +++++++-------
+ 1 file changed, 7 insertions(+), 7 deletions(-)
+
+diff --git a/_specs/ecip-1064.md b/_specs/ecip-1064.md
+index 7bbc266..a9fd681 100644
+--- a/_specs/ecip-1064.md
++++ b/_specs/ecip-1064.md
+@@ -30,15 +30,15 @@ This process is comprised of 3 parts
+ 
+ ### Representative Selection
+ 
+-Each Client (geth/multigeth/parity/mantis) should have 1 representative selected to help in the outreach process.  In addition, there should be 2 representatives voted by the Client representatives that are unaffiliated with any of the Organizations.
++Each Client (geth/multigeth/parity/mantis) should have 1 representative selected to help in the outreach process.  In addition, there should be 2 representatives voted by the Client representatives that are unaffiliated with any of the Clients.
+ 
+ This selection happens at the “Final Call” of the event.
+ 
+ *For example, at the Final Call of Atlantis, the following representatives are selected:*
+-1. ETCLabs – Christian
+-2. ETCCoop – Yaz
++1. Geth – Christian
++2. Multigeth – Yaz
+ 3. Parity – Wei
+-4. IOHK – Kevin
++4. Mantis – Kevin
+ 5. Community 1 – Donald
+ 6. Community 2 – Roy
+ 
+@@ -79,7 +79,7 @@ A channel is defined as a contact name and contact medium, with a very high like
+ *Example entry*
+ 
+ - F2Pool | Miner | Thomas | Wechat - @thomasf2pool | 7/30/2019 | Community 1 – Donald
+-- Coinbase | Exchange | Bill | Email – bill@coinbase.com | 7/25/2019 | IOHK – Kevin
++- Coinbase | Exchange | Bill | Email – bill@coinbase.com | 7/25/2019 | Mantis – Kevin
+ - Coineal | Exchange | None | None | 7/20/2019 | ETCCoop - Yaz
+ 
+ 
+@@ -98,8 +98,8 @@ A channel is defined as a contact name and contact medium, with a very high like
+ 
+ *Example entry*
+ 
+-- F2Pool | Community 1 – Donald | ETCLabs – Christian | Complete
+-- Coinbase | IOHK – Kevin | Community 2 – Roy | InProgress1 
++- F2Pool | Community 1 – Donald | Geth – Christian | Complete
++- Coinbase | Mantis – Kevin | Community 2 – Roy | InProgress1 
+ 
+ 
+ 
+
+From dd196bfa70707359ff2c1d5fa4c48abbfffe1ed8 Mon Sep 17 00:00:00 2001
+From: bobthegrownup <47165999+bobthegrownup@users.noreply.github.com>
+Date: Mon, 12 Aug 2019 02:52:51 +0800
+Subject: [PATCH 8/8] Update ecip-1064.md
+
+---
+ _specs/ecip-1064.md | 9 +++++++--
+ 1 file changed, 7 insertions(+), 2 deletions(-)
+
+diff --git a/_specs/ecip-1064.md b/_specs/ecip-1064.md
+index a9fd681..e1661f4 100644
+--- a/_specs/ecip-1064.md
++++ b/_specs/ecip-1064.md
+@@ -32,7 +32,12 @@ This process is comprised of 3 parts
+ 
+ Each Client (geth/multigeth/parity/mantis) should have 1 representative selected to help in the outreach process.  In addition, there should be 2 representatives voted by the Client representatives that are unaffiliated with any of the Clients.
+ 
+-This selection happens at the “Final Call” of the event.
++This selection happens during Final Call of Hard Fork Meta ECIP or when a "Black Swan" event occurs. 
++
++*Examples of "Black Swan" events are:*
++
++- 51% attack
++- SHA256 breaking
+ 
+ *For example, at the Final Call of Atlantis, the following representatives are selected:*
+ 1. Geth – Christian
+@@ -45,7 +50,7 @@ This selection happens at the “Final Call” of the event.
+ 
+ ### Message Construction
+ 
+-During Final Call, the author for the message will be assigned to one of the unaffiliated representatives. There will also be a send date agreed upon. The recommended send date is 6 weeks before the event. The draft will be submitted to the representatives no later than 1 week before the send date. 
++The author for the message will be assigned to one of the unaffiliated representatives. There will also be a send date agreed upon. The recommended send date for a Hard Fork is 6 weeks, and immediately for a "Black Swan" event.  The draft will be submitted to the representatives no later than 1 week before the send date. 
+ 
+ *Example Message: Initial Communications Setup*
+ 
diff --git a/.gh-pullrequests/00127_518961000.json b/.gh-pullrequests/00127_518961000.json
new file mode 100644
index 0000000..58f944d
--- /dev/null
+++ b/.gh-pullrequests/00127_518961000.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/518961000",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/127#issuecomment-518961000",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/127",
+    "id": 518961000,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODk2MTAwMA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-08-07T06:35:23Z",
+    "updated_at": "2019-08-07T06:35:23Z",
+    "author_association": "MEMBER",
+    "body": "@bobthegrownup Fixed some formatting issues for you. Haven't yet finished reading it!",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/518961000/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00127_520447584.json b/.gh-pullrequests/00127_520447584.json
new file mode 100644
index 0000000..b8190ce
--- /dev/null
+++ b/.gh-pullrequests/00127_520447584.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/520447584",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/127#issuecomment-520447584",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/127",
+    "id": 520447584,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDQ0NzU4NA==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-08-12T14:26:44Z",
+    "updated_at": "2019-08-12T14:26:44Z",
+    "author_association": "MEMBER",
+    "body": "Approving since I'm satisfied with the \"Black Swan\" choice of words.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/520447584/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00128.json b/.gh-pullrequests/00128.json
new file mode 100644
index 0000000..37bbe94
--- /dev/null
+++ b/.gh-pullrequests/00128.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/128",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/128/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/128/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/128/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/128",
+    "id": 478023220,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzA1MjI1NjEx",
+    "number": 128,
+    "title": "fix: Change URLs to point to ethereumclassic repo",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-08-07T16:18:35Z",
+    "updated_at": "2019-08-07T17:31:42Z",
+    "closed_at": "2019-08-07T17:31:41Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/128",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/128",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/128.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/128.patch"
+    },
+    "body": "Some were on ethereumproject, updated to point to correct repo.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/128/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00128.patch b/.gh-pullrequests/00128.patch
new file mode 100644
index 0000000..7c48069
--- /dev/null
+++ b/.gh-pullrequests/00128.patch
@@ -0,0 +1,50 @@
+From d0004352f731fd158d76d6140b94f02975ed2a6a Mon Sep 17 00:00:00 2001
+From: Yaz Khoury <yaz.khoury@gmail.com>
+Date: Wed, 7 Aug 2019 12:16:28 -0400
+Subject: [PATCH] fix: Change URLs to point to ethereumclassic repo
+
+Some were on ethereumproject, updated to point to correct repo.
+---
+ _specs/ecip-1000.md | 8 ++++----
+ 1 file changed, 4 insertions(+), 4 deletions(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index d5d5e72..1debd53 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -44,7 +44,7 @@ Asking the Ethereum Classic community first if an idea is original helps prevent
+ 
+ It also helps to make sure the idea is applicable to the entire community and not just the author. Just because an idea sounds good to the author does not mean it will work for most people in most areas where Ethereum Classic is used.
+ 
+-**2:** Once the champion has asked the Ethereum Classic community as to whether an idea has any chance of acceptance, a **draft ECIP** should be submitted to the [ECIPs git repository](https://github.com/ethereumproject/ECIPs) as a pull request. This gives the author a chance to flesh out the draft ECIP to make it properly formatted, of high quality, and to address additional concerns about the proposal. This draft must be written in ECIP style as described below, and named with an alias such as "ecip-johndoe-infinitecoins" until an editor has assigned it an ECIP number (authors MUST NOT self-assign ECIP numbers).
++**2:** Once the champion has asked the Ethereum Classic community as to whether an idea has any chance of acceptance, a **draft ECIP** should be submitted to the [ECIPs git repository](https://github.com/ethereumclassic/ECIPs) as a pull request. This gives the author a chance to flesh out the draft ECIP to make it properly formatted, of high quality, and to address additional concerns about the proposal. This draft must be written in ECIP style as described below, and named with an alias such as "ecip-johndoe-infinitecoins" until an editor has assigned it an ECIP number (authors MUST NOT self-assign ECIP numbers).
+ 
+ ECIP authors **are responsible for collecting community feedback** on both the initial idea and the ECIP before submitting it for review. However, wherever possible, long open-ended discussions on public groups or mailing lists should be avoided. Strategies to keep the discussions efficient include: setting up a separate SIG mailing list for the topic, having the ECIP author accept private comments in the early design phases, setting up a wiki page or git repository, etc. ECIP authors should use their discretion here.
+ 
+@@ -86,7 +86,7 @@ ECIP editors are intended to fulfill administrative and editorial responsibiliti
+ 
+ ### Steps
+ 
+-**1:** Each new ECIP should first be submitted as a **"pull request"** to the [ECIPs git repository](https://github.com/ethereumproject/ECIPs). Then, an editor does the following:
++**1:** Each new ECIP should first be submitted as a **"pull request"** to the [ECIPs git repository](https://github.com/ethereumclassic/ECIPs). Then, an editor does the following:
+ 
+ * Read the ECIP to check if it is ready: sound and complete. The ideas must make technical sense, even if it doesn't seem likely to be accepted.
+ * The title should accurately describe the content.
+@@ -251,7 +251,7 @@ Pages must be named after the full ECIP number (eg, "ECIP 0001") and placed in t
+ 
+ For example, the link for ECIP 1 will be:
+ 
+-	https://github.com/ethereumproject/ECIPs/wiki/Comments:ECIP-0001 .
++	https://github.com/ethereumclassic/ECIPs/wiki/Comments:ECIP-0001 .
+ 
+ Comments posted to this wiki should use the following format:
+ 
+@@ -272,7 +272,7 @@ Summary tones may be chosen from the following, but this ECIP does not intend to
+ For example, the preamble to ECIP 1 might be updated to include the line:
+ 
+     Comments-Summary: No comments yet.
+-    Comments-URI: https://github.com/ethereumproject/ECIPs/wiki/Comments:ECIP-1000
++    Comments-URI: https://github.com/ethereumclassic/ECIPs/wiki/Comments:ECIP-1000
+                   https://some-other-wiki.org/ECIP_1_Comments
+ 
+ These fields must follow the **Discussions-To** header defined in ECIP 1 (if that header is not present, it should follow the position where it would be present; generally this is immediately above the **Status** header).
diff --git a/.gh-pullrequests/00129.json b/.gh-pullrequests/00129.json
new file mode 100644
index 0000000..118f981
--- /dev/null
+++ b/.gh-pullrequests/00129.json
@@ -0,0 +1,74 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/129",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/129/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/129/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/129/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/129",
+    "id": 478079164,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzA1MjcwNzc1",
+    "number": 129,
+    "title": "Changed type to ECBP",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1428838937,
+        "node_id": "MDU6TGFiZWwxNDI4ODM4OTM3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/editor:%20looks-good",
+        "name": "editor: looks-good",
+        "color": "71ad0a",
+        "default": false,
+        "description": "This PR is generally fine to be merged."
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-08-07T18:35:13Z",
+    "updated_at": "2019-08-11T19:46:10Z",
+    "closed_at": "2019-08-11T19:46:07Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/129",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/129",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/129.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/129.patch"
+    },
+    "body": "Changed type from 'ERC' to 'ECBP'.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/129/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00129.patch b/.gh-pullrequests/00129.patch
new file mode 100644
index 0000000..f1ad61f
--- /dev/null
+++ b/.gh-pullrequests/00129.patch
@@ -0,0 +1,23 @@
+From fbf986b1a299f330c0f43f40bac40e92bbcc9823 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Wed, 7 Aug 2019 12:35:09 -0600
+Subject: [PATCH] Changed type to ECBP
+
+Changed type from 'ERC' to 'ECBP'.
+---
+ _specs/ecip-1050.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1050.md b/_specs/ecip-1050.md
+index 50b759c..fccb15e 100644
+--- a/_specs/ecip-1050.md
++++ b/_specs/ecip-1050.md
+@@ -6,7 +6,7 @@ author: Brooklyn Zelenka [@expede](https://github.com/expede), [Boris Mann](http
+ discussions-to: https://fission.codes/blockchain/ethclassic
+ status: Draft
+ type: Standars Track
+-category: ERC
++category: ECBP
+ created: 2018-12-03
+ ---
+ 
diff --git a/.gh-pullrequests/00132.json b/.gh-pullrequests/00132.json
new file mode 100644
index 0000000..60e0a29
--- /dev/null
+++ b/.gh-pullrequests/00132.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/132",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/132/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/132/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/132/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/132",
+    "id": 485780067,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzExMzU5Mzg3",
+    "number": 132,
+    "title": "Add discussions link for ECIP-1056",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-08-27T12:29:26Z",
+    "updated_at": "2019-08-27T15:39:12Z",
+    "closed_at": "2019-08-27T15:39:08Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/132",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/132",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/132.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/132.patch"
+    },
+    "body": "",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/132/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00132.patch b/.gh-pullrequests/00132.patch
new file mode 100644
index 0000000..bc4fe89
--- /dev/null
+++ b/.gh-pullrequests/00132.patch
@@ -0,0 +1,21 @@
+From 3cc13d1a8b9a825df1e278e06fdc44434c7626b6 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Tue, 27 Aug 2019 14:29:09 +0200
+Subject: [PATCH] Add discussions link for ECIP-1056
+
+---
+ _specs/ecip-1056.md | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/_specs/ecip-1056.md b/_specs/ecip-1056.md
+index f36023d..b349a3e 100644
+--- a/_specs/ecip-1056.md
++++ b/_specs/ecip-1056.md
+@@ -5,6 +5,7 @@ title: Agharta EVM and Protocol Upgrades
+ status: Draft
+ type: Meta
+ author: Isaac Ardis <isaac.a@etclabs.org>, Wei Tang <hi@that.world>
++discussions-to: https://github.com/ethereumclassic/ECIPs/issues/131
+ created: 2019-03-25
+ ---
+ 
diff --git a/.gh-pullrequests/00134.json b/.gh-pullrequests/00134.json
new file mode 100644
index 0000000..f4305fa
--- /dev/null
+++ b/.gh-pullrequests/00134.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/134",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/134/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/134/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/134/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/134",
+    "id": 493198434,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE3MjIyMzQ0",
+    "number": 134,
+    "title": "[ECIP-1054] Move Atlantis to Final, Add EIP-684",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 5,
+    "created_at": "2019-09-13T08:25:45Z",
+    "updated_at": "2019-10-07T06:48:31Z",
+    "closed_at": "2019-10-07T06:48:26Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/134",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/134",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/134.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/134.patch"
+    },
+    "body": "Moves Atlantis to FINAL, closes #67 \r\n\r\nAdds missing EIP-684, ref https://github.com/ethereum/EIPs/issues/2220 and https://github.com/ethereum/EIPs/pull/2252",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/134/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00134.patch b/.gh-pullrequests/00134.patch
new file mode 100644
index 0000000..7a7b99a
--- /dev/null
+++ b/.gh-pullrequests/00134.patch
@@ -0,0 +1,52 @@
+From a954e250a510499c043c95b9a858e800db684337 Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Fri, 13 Sep 2019 10:24:50 +0200
+Subject: [PATCH 1/2] Update ecip-1054.md
+
+---
+ _specs/ecip-1054.md | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1054.md b/_specs/ecip-1054.md
+index 310e165..e8aadfe 100644
+--- a/_specs/ecip-1054.md
++++ b/_specs/ecip-1054.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1054
+ title: Atlantis EVM and Protocol Upgrades
+-status: Accepted
++status: Final
+ type: Meta
+ author: Isaac Ardis <isaac.a@etclabs.org>
+ created: 2019-02-11
+@@ -62,6 +62,7 @@ Technical specifications for each EIP can be found at those documents respective
+ - [EIP 211](https://eips.ethereum.org/EIPS/eip-211) (New opcodes `RETURNDATASIZE` and `RETURNDATACOPY`)
+ - [EIP 214](https://eips.ethereum.org/EIPS/eip-214) (New opcode `STATICCALL`)
+ - [EIP 658](https://eips.ethereum.org/EIPS/eip-658) (Embedding transaction status code in receipts)
++- [EIP 684](https://github.com/ethereum/EIPs/issues/684) (Prevent overwriting contracts)
+ 
+ In case any of the before mentioned proposals define a variable similar to the pattern `*_FORK_BLKNUM` named after _Spurious Dragon_ or _Byzantium_, it shall be replaced by a `ATLANTIS_FORK_BLKNUM`.
+ 
+
+From 1f05c9c748fde952d86c7c6c958369d53aec942c Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Mon, 7 Oct 2019 15:47:59 +0900
+Subject: [PATCH 2/2] move 684 to 1066
+
+---
+ _specs/ecip-1054.md | 1 -
+ 1 file changed, 1 deletion(-)
+
+diff --git a/_specs/ecip-1054.md b/_specs/ecip-1054.md
+index e8aadfe..d4c96f0 100644
+--- a/_specs/ecip-1054.md
++++ b/_specs/ecip-1054.md
+@@ -62,7 +62,6 @@ Technical specifications for each EIP can be found at those documents respective
+ - [EIP 211](https://eips.ethereum.org/EIPS/eip-211) (New opcodes `RETURNDATASIZE` and `RETURNDATACOPY`)
+ - [EIP 214](https://eips.ethereum.org/EIPS/eip-214) (New opcode `STATICCALL`)
+ - [EIP 658](https://eips.ethereum.org/EIPS/eip-658) (Embedding transaction status code in receipts)
+-- [EIP 684](https://github.com/ethereum/EIPs/issues/684) (Prevent overwriting contracts)
+ 
+ In case any of the before mentioned proposals define a variable similar to the pattern `*_FORK_BLKNUM` named after _Spurious Dragon_ or _Byzantium_, it shall be replaced by a `ATLANTIS_FORK_BLKNUM`.
+ 
diff --git a/.gh-pullrequests/00134_536342773.json b/.gh-pullrequests/00134_536342773.json
new file mode 100644
index 0000000..0feeb0f
--- /dev/null
+++ b/.gh-pullrequests/00134_536342773.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/536342773",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/134#issuecomment-536342773",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/134",
+    "id": 536342773,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNjM0Mjc3Mw==",
+    "user": {
+      "login": "GregTheGreek",
+      "id": 16929357,
+      "node_id": "MDQ6VXNlcjE2OTI5MzU3",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/16929357?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/GregTheGreek",
+      "html_url": "https://github.com/GregTheGreek",
+      "followers_url": "https://api.github.com/users/GregTheGreek/followers",
+      "following_url": "https://api.github.com/users/GregTheGreek/following{/other_user}",
+      "gists_url": "https://api.github.com/users/GregTheGreek/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/GregTheGreek/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/GregTheGreek/subscriptions",
+      "organizations_url": "https://api.github.com/users/GregTheGreek/orgs",
+      "repos_url": "https://api.github.com/users/GregTheGreek/repos",
+      "events_url": "https://api.github.com/users/GregTheGreek/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/GregTheGreek/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-09-29T21:26:17Z",
+    "updated_at": "2019-09-29T21:26:32Z",
+    "author_association": "NONE",
+    "body": "> EIP 684 applies retroactively starting from genesis. It should not has a hard fork number, and thus I don't believe it belongs here.\r\n\r\nWhere would it go? This is an ongoing discussion on ETH - it should definitely be added to the Atlantis META. Similarly it should be added to the Byzantium META",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/536342773/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00134_538822293.json b/.gh-pullrequests/00134_538822293.json
new file mode 100644
index 0000000..2ebc5f2
--- /dev/null
+++ b/.gh-pullrequests/00134_538822293.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/538822293",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/134#issuecomment-538822293",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/134",
+    "id": 538822293,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODgyMjI5Mw==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-07T02:53:00Z",
+    "updated_at": "2019-10-07T02:53:00Z",
+    "author_association": "MEMBER",
+    "body": "@GregTheGreek I still don't quite believe that 684 was the impact for the previous Classic Geth bug. The issue is that it shouldn't really affect anything before `CREATE2`. I think some information might have been mixed up in the process of that bug fix.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/538822293/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00134_538843790.json b/.gh-pullrequests/00134_538843790.json
new file mode 100644
index 0000000..18b096e
--- /dev/null
+++ b/.gh-pullrequests/00134_538843790.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/538843790",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/134#issuecomment-538843790",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/134",
+    "id": 538843790,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODg0Mzc5MA==",
+    "user": {
+      "login": "GregTheGreek",
+      "id": 16929357,
+      "node_id": "MDQ6VXNlcjE2OTI5MzU3",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/16929357?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/GregTheGreek",
+      "html_url": "https://github.com/GregTheGreek",
+      "followers_url": "https://api.github.com/users/GregTheGreek/followers",
+      "following_url": "https://api.github.com/users/GregTheGreek/following{/other_user}",
+      "gists_url": "https://api.github.com/users/GregTheGreek/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/GregTheGreek/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/GregTheGreek/subscriptions",
+      "organizations_url": "https://api.github.com/users/GregTheGreek/orgs",
+      "repos_url": "https://api.github.com/users/GregTheGreek/repos",
+      "events_url": "https://api.github.com/users/GregTheGreek/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/GregTheGreek/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-07T05:22:12Z",
+    "updated_at": "2019-10-07T05:22:12Z",
+    "author_association": "NONE",
+    "body": "I do agree, I don't think it was the root of the bug.\r\nNonetheless this still should be in the Atlantis meta, we don't need to follow the ETH eip process 1-for-1.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/538843790/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00134_538847421.json b/.gh-pullrequests/00134_538847421.json
new file mode 100644
index 0000000..392bbfe
--- /dev/null
+++ b/.gh-pullrequests/00134_538847421.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/538847421",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/134#issuecomment-538847421",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/134",
+    "id": 538847421,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODg0NzQyMQ==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-07T05:41:11Z",
+    "updated_at": "2019-10-07T05:41:11Z",
+    "author_association": "MEMBER",
+    "body": "@GregTheGreek If we agree that 684 wasn't the cause for any consensus bugs, then I believe my original argument stands. This is something that retroactively applies to genesis, and it does not fit into a Meta ECIP with a hard fork number. However, we should use a separate documentation to note that 684 is in effect.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/538847421/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00134_538853176.json b/.gh-pullrequests/00134_538853176.json
new file mode 100644
index 0000000..472670f
--- /dev/null
+++ b/.gh-pullrequests/00134_538853176.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/538853176",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/134#issuecomment-538853176",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/134",
+    "id": 538853176,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODg1MzE3Ng==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-07T06:09:27Z",
+    "updated_at": "2019-10-07T06:09:27Z",
+    "author_association": "MEMBER",
+    "body": "I created https://github.com/ethereumclassic/ECIPs/pull/142 to address the issue of 684.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/538853176/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00136.json b/.gh-pullrequests/00136.json
new file mode 100644
index 0000000..ba29351
--- /dev/null
+++ b/.gh-pullrequests/00136.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/136",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/136/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/136/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/136/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/136",
+    "id": 493772693,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE3NjYxODgy",
+    "number": 136,
+    "title": "Change status to final",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-09-15T18:52:47Z",
+    "updated_at": "2019-09-15T23:17:58Z",
+    "closed_at": "2019-09-15T23:17:58Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/136",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/136",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/136.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/136.patch"
+    },
+    "body": "Given Atlantis hard fork is executed, this PR is changing the status of ECIP-1054 to `final` according to the process on ECIP-1000.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/136/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00136.patch b/.gh-pullrequests/00136.patch
new file mode 100644
index 0000000..ca88434
--- /dev/null
+++ b/.gh-pullrequests/00136.patch
@@ -0,0 +1,23 @@
+From 7d3799cd4d77ddf4f18a9a5d7cf15a3c4b54e82a Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Sun, 15 Sep 2019 12:51:40 -0600
+Subject: [PATCH] Change status to final
+
+Changing status to final according to ECIP-1000.
+---
+ _specs/ecip-1054.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1054.md b/_specs/ecip-1054.md
+index 310e165..d4c96f0 100644
+--- a/_specs/ecip-1054.md
++++ b/_specs/ecip-1054.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1054
+ title: Atlantis EVM and Protocol Upgrades
+-status: Accepted
++status: Final
+ type: Meta
+ author: Isaac Ardis <isaac.a@etclabs.org>
+ created: 2019-02-11
diff --git a/.gh-pullrequests/00137.json b/.gh-pullrequests/00137.json
new file mode 100644
index 0000000..3adf33d
--- /dev/null
+++ b/.gh-pullrequests/00137.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/137",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/137/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/137/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/137/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/137",
+    "id": 493798387,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE3Njc5NTE0",
+    "number": 137,
+    "title": "Correct 'St. Petersburg' on ecip-1056.md",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 2,
+    "created_at": "2019-09-15T23:16:29Z",
+    "updated_at": "2019-09-18T19:07:28Z",
+    "closed_at": "2019-09-16T13:53:44Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/137",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/137",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/137.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/137.patch"
+    },
+    "body": "Correcting from _Petersburg_ to _St. Petersburg_.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/137/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00137.patch b/.gh-pullrequests/00137.patch
new file mode 100644
index 0000000..9559863
--- /dev/null
+++ b/.gh-pullrequests/00137.patch
@@ -0,0 +1,47 @@
+From 2f2372324eca4d2c9066a73c37a26a36ef7848b4 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Sun, 15 Sep 2019 17:15:35 -0600
+Subject: [PATCH] Update ecip-1056.md
+
+---
+ _specs/ecip-1056.md | 8 ++++----
+ 1 file changed, 4 insertions(+), 4 deletions(-)
+
+diff --git a/_specs/ecip-1056.md b/_specs/ecip-1056.md
+index b349a3e..3aa9e26 100644
+--- a/_specs/ecip-1056.md
++++ b/_specs/ecip-1056.md
+@@ -11,13 +11,13 @@ created: 2019-03-25
+ 
+ ### Simple Summary
+ 
+-Enable the outstanding Ethereum Foundation _Constaninople_ and _Petersburg_ network protocol upgrades on the Ethereum
++Enable the outstanding Ethereum Foundation _Constaninople_ and _St. Petersburg_ network protocol upgrades on the Ethereum
+ Classic network in a hard-fork code-named _Agharta_ to enable maximum compatibility across these networks.
+ 
+ ### Abstract
+ 
+ Add support for a subset of protocol-impacting changes introduced in the Ethereum Foundation (ETH) network via the
+-_Constaninople_ and _Petersburg_ hardforks. The proposed changes for Ethereum Classic's _Agharta_ upgrade include:
++_Constaninople_ and _St. Petersburg_ hardforks. The proposed changes for Ethereum Classic's _Agharta_ upgrade include:
+ 
+ - Constantinople bitwise shifting instructions
+ - Constantinople skinny `CREATE2` opcode
+@@ -53,7 +53,7 @@ Specifically with definition from EIP-1702 "Usage Template" section:
+ 
+ ### Rationale
+ 
+-__Atomicity__: This protocol specification notably merges the scheduled features of the anticipated _Petersburg_
++__Atomicity__: This protocol specification notably merges the scheduled features of the anticipated _St. Petersburg_
+ protocol upgrade, which would removes the buggy proposal `SSTORE` net-gas metering.
+ 
+ __Interoperability__: Establishing and maintaining interoperable behavior between Ethereum clients is essential for
+@@ -69,7 +69,7 @@ increases its functionality and should be considered a feature upgrade rather th
+ 
+ Adoption of the content of this ECIP requires a hard fork as it introduces changes that are not backward compatible.
+ 
+-The following clients with Ethereum Classic support implement the _Constaninople_ and _Petersburg_ features currently:
++The following clients with Ethereum Classic support implement the _Constaninople_ and _St. Petersburg_ features currently:
+ 
+ - Geth Classic: no support
+ - Parity Ethereum: all features due to Ethereum Foundation compatibility
diff --git a/.gh-pullrequests/00137_531786392.json b/.gh-pullrequests/00137_531786392.json
new file mode 100644
index 0000000..3006905
--- /dev/null
+++ b/.gh-pullrequests/00137_531786392.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/531786392",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/137#issuecomment-531786392",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/137",
+    "id": 531786392,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMTc4NjM5Mg==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-09-16T13:52:58Z",
+    "updated_at": "2019-09-16T13:52:58Z",
+    "author_association": "MEMBER",
+    "body": "https://github.com/ethereum/EIPs/pull/1716/files",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/531786392/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00137_532824144.json b/.gh-pullrequests/00137_532824144.json
new file mode 100644
index 0000000..b1a2c6d
--- /dev/null
+++ b/.gh-pullrequests/00137_532824144.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/532824144",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/137#issuecomment-532824144",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/137",
+    "id": 532824144,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjgyNDE0NA==",
+    "user": {
+      "login": "antsankov",
+      "id": 2533512,
+      "node_id": "MDQ6VXNlcjI1MzM1MTI=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/2533512?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/antsankov",
+      "html_url": "https://github.com/antsankov",
+      "followers_url": "https://api.github.com/users/antsankov/followers",
+      "following_url": "https://api.github.com/users/antsankov/following{/other_user}",
+      "gists_url": "https://api.github.com/users/antsankov/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/antsankov/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/antsankov/subscriptions",
+      "organizations_url": "https://api.github.com/users/antsankov/orgs",
+      "repos_url": "https://api.github.com/users/antsankov/repos",
+      "events_url": "https://api.github.com/users/antsankov/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/antsankov/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-09-18T19:07:28Z",
+    "updated_at": "2019-09-18T19:07:28Z",
+    "author_association": "NONE",
+    "body": "Can we possibly call it Leningrad? ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/532824144/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 1,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00139.json b/.gh-pullrequests/00139.json
new file mode 100644
index 0000000..60ade04
--- /dev/null
+++ b/.gh-pullrequests/00139.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/139",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/139/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/139/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/139/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/139",
+    "id": 496385961,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE5NzQ5MjIz",
+    "number": 139,
+    "title": "Adding Discussion-to link to ECIP-1043",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-09-20T14:31:27Z",
+    "updated_at": "2019-09-20T16:12:30Z",
+    "closed_at": "2019-09-20T16:12:28Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/139",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/139",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/139.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/139.patch"
+    },
+    "body": "Adding Discussion-to link to ECIP-1043 about fixing DAG: https://github.com/ethereumclassic/ECIPs/issues/138",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/139/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00139.patch b/.gh-pullrequests/00139.patch
new file mode 100644
index 0000000..e77c9d2
--- /dev/null
+++ b/.gh-pullrequests/00139.patch
@@ -0,0 +1,22 @@
+From fadc420ac871e105f2b46446b0f28309060c13d3 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Fri, 20 Sep 2019 08:31:18 -0600
+Subject: [PATCH] Adding Discussion-to link.
+
+Adding Discussion-to link: https://github.com/ethereumclassic/ECIPs/issues/138
+---
+ _specs/ecip-1043.md | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/_specs/ecip-1043.md b/_specs/ecip-1043.md
+index 87b01f1..70ad2cf 100644
+--- a/_specs/ecip-1043.md
++++ b/_specs/ecip-1043.md
+@@ -6,6 +6,7 @@ author: Cody Burns <cody.w.burns@gmail.com>
+ status: Draft
+ type: Standard
+ category: Core
++Discussions-to: https://github.com/ethereumclassic/ECIPs/issues/138
+ created: 2018-04-16
+ ---
+ 
diff --git a/.gh-pullrequests/00141.json b/.gh-pullrequests/00141.json
new file mode 100644
index 0000000..8c3e361
--- /dev/null
+++ b/.gh-pullrequests/00141.json
@@ -0,0 +1,83 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/141",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/141/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/141/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/141/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/141",
+    "id": 503080125,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzI1MDE5NzU0",
+    "number": 141,
+    "title": "ECIP-1065: Kunming EVM and Protocol Upgrades",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785139,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTM5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/status:%20draft",
+        "name": "status: draft",
+        "color": "ffffff",
+        "default": false,
+        "description": "draft stage - can be assigned ecip number and merged, but requires new PR to be Accepted"
+      },
+      {
+        "id": 1154785127,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20core",
+        "name": "type: core",
+        "color": "d73a4a",
+        "default": false,
+        "description": "Requires consensus consideration"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 5,
+    "created_at": "2019-10-06T10:17:58Z",
+    "updated_at": "2019-10-24T15:28:51Z",
+    "closed_at": "2019-10-24T15:28:47Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/141",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/141",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/141.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/141.patch"
+    },
+    "body": "This protocol upgrade provides a backward compatibility foundation to enable future protocol upgrades to be applied with significantly lower chance of breaking existing contracts.\r\n\r\nSee discussions section for details of impacts for the changes listed here.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/141/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00141.patch b/.gh-pullrequests/00141.patch
new file mode 100644
index 0000000..bbb3b1c
--- /dev/null
+++ b/.gh-pullrequests/00141.patch
@@ -0,0 +1,205 @@
+From 15c75d93d6b635f48bf06262715a0fec6c7ba4f5 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sun, 6 Oct 2019 03:16:05 -0700
+Subject: [PATCH 1/5] ECIP-1065
+
+---
+ _specs/ecip-1065.md | 83 +++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 83 insertions(+)
+ create mode 100644 _specs/ecip-1065.md
+
+diff --git a/_specs/ecip-1065.md b/_specs/ecip-1065.md
+new file mode 100644
+index 0000000..9138452
+--- /dev/null
++++ b/_specs/ecip-1065.md
+@@ -0,0 +1,83 @@
++---
++lang: en
++ecip: 1061
++title: Kunming EVM and Protocol Upgrades
++status: Draft
++type: Meta
++author: Wei Tang <hi@that.world>
++created: 2019-10-05
++---
++
++### Simple Summary
++
++This protocol upgrade provides a backward compatibility foundation to
++enable future protocol upgrades to be applied with significantly lower
++chance of breaking existing contracts.
++
++### Abstract
++
++This document proposes the following blocks at which to implement the
++changes specified in "Specification" section.
++
++- `10_000_000` on Ethereum Classic PoW-mainnet.
++
++### Specification
++
++At hard fork block, enable EIP-1702:
++
++* Define the previous EVM version as version `0`.
++* Define a new version `1`, with the following EVM modifications
++  applied on it.
++  * **38-PROBE**: Enable the `HAS_FEATURE` feature probe opcode.
++  * **39-UNGAS**: Remove all observable behavior of gas cost in EVM
++    and change out-of-gas exception to trap the whole transaction.
++  * **40-UNUSED**: Disable deployment of unused opcodes.
++  
++### Discussion
++
++#### Feature Upgrades
++
++Once the hard fork is enabled, future feature upgrades can be applied
++directly on version `1`, without the need to define additional new
++versions. This simplifies client maintainence, which was one of the
++main resistence to apply EIP-1702 in Istanbul.
++
++Any gas cost changes can be applied without worry about backward
++compatibility issues, because gas cost is now an unobservable behavior
++in EVM. Any addition of opcodes can be applied without worry about
++backward compatibility issues, because deployment of unused opcode is
++disabled. This nearly covers all EVM upgrade paths we need to care
++about.
++
++#### Ecosystem
++
++It is possible to deploy a helper contract to allow version `0`
++contracts continue to be created. This allows unmodified Solidity code
++to be deployed, just like what we have now.
++
++However, for version `1`, because we made several changes related to
++gas cost, which impacts the semantics of certain opcodes such as
++`CALL*` and `CREATE*`, Solidity compiler must be modified to support
++version `1`.
++
++Existing common practices might need to change as well. Some practices
++relies on the observable behavior of gas cost. Relying on gas cost is
++usually considered to be a bad practice because gas cost can and will
++change.
++
++On the other hand, version `1` enables some new practices that wasn't
++possible before. For example, a contract can now refuse to be invoked
++by any other contracts.
++
++#### Emergency Hard Fork
++
++Our current gas cost scheme might contain DoS attack vectors. If those
++attack vectors must be fixed by changing existing gas cost schemes,
++then it must change gas costs specified in version `0`. In those
++emergency hard fork scenarios, we will inevitably break backward
++compatibility.
++
++## License
++
++This work is licensed under [Apache License, Version
++2.0](http://www.apache.org/licenses/).
+
+From cef1e8219f9e2565e3d4aefd885f3a14498a91f3 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sun, 6 Oct 2019 03:19:15 -0700
+Subject: [PATCH 2/5] Add links
+
+---
+ _specs/ecip-1065.md | 13 ++++++++-----
+ 1 file changed, 8 insertions(+), 5 deletions(-)
+
+diff --git a/_specs/ecip-1065.md b/_specs/ecip-1065.md
+index 9138452..da21b73 100644
+--- a/_specs/ecip-1065.md
++++ b/_specs/ecip-1065.md
+@@ -23,15 +23,18 @@ changes specified in "Specification" section.
+ 
+ ### Specification
+ 
+-At hard fork block, enable EIP-1702:
++At hard fork block, enable [EIP-1702](https://eips.ethereum.org/EIPS/eip-1702):
+ 
+ * Define the previous EVM version as version `0`.
+ * Define a new version `1`, with the following EVM modifications
+   applied on it.
+-  * **38-PROBE**: Enable the `HAS_FEATURE` feature probe opcode.
+-  * **39-UNGAS**: Remove all observable behavior of gas cost in EVM
+-    and change out-of-gas exception to trap the whole transaction.
+-  * **40-UNUSED**: Disable deployment of unused opcodes.
++  * **[38-PROBE](https://specs.that.world/38-probe/)**: Enable the
++    `HAS_FEATURE` feature probe opcode.
++  * **[39-UNGAS](https://specs.that.world/39-ungas/)**: Remove all
++    observable behavior of gas cost in EVM and change out-of-gas
++    exception to trap the whole transaction.
++  * **[40-UNUSED](https://specs.that.world/40-unused/)**: Disable
++    deployment of unused opcodes.
+   
+ ### Discussion
+ 
+
+From 391b2dac1242f75fc7782feed805e72a626dd89d Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sun, 6 Oct 2019 19:46:15 -0700
+Subject: [PATCH 3/5] Fix ecip number
+
+---
+ _specs/ecip-1065.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1065.md b/_specs/ecip-1065.md
+index da21b73..dc15caa 100644
+--- a/_specs/ecip-1065.md
++++ b/_specs/ecip-1065.md
+@@ -1,6 +1,6 @@
+ ---
+ lang: en
+-ecip: 1061
++ecip: 1065
+ title: Kunming EVM and Protocol Upgrades
+ status: Draft
+ type: Meta
+
+From c21be5c1a108150e0015bcbf8b9bea43709f1659 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Wed, 23 Oct 2019 18:30:41 +0200
+Subject: [PATCH 4/5] Update ecip-1065.md
+
+---
+ _specs/ecip-1065.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1065.md b/_specs/ecip-1065.md
+index dc15caa..d649266 100644
+--- a/_specs/ecip-1065.md
++++ b/_specs/ecip-1065.md
+@@ -19,7 +19,7 @@ chance of breaking existing contracts.
+ This document proposes the following blocks at which to implement the
+ changes specified in "Specification" section.
+ 
+-- `10_000_000` on Ethereum Classic PoW-mainnet.
++- Undecided on Ethereum Classic PoW-mainnet.
+ 
+ ### Specification
+ 
+
+From 1ab117c4b5ceb7711cb71d7e367c08b5e8ba834e Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Wed, 23 Oct 2019 18:31:46 +0200
+Subject: [PATCH 5/5] Update ecip-1065.md
+
+---
+ _specs/ecip-1065.md | 2 --
+ 1 file changed, 2 deletions(-)
+
+diff --git a/_specs/ecip-1065.md b/_specs/ecip-1065.md
+index d649266..1ac3526 100644
+--- a/_specs/ecip-1065.md
++++ b/_specs/ecip-1065.md
+@@ -28,8 +28,6 @@ At hard fork block, enable [EIP-1702](https://eips.ethereum.org/EIPS/eip-1702):
+ * Define the previous EVM version as version `0`.
+ * Define a new version `1`, with the following EVM modifications
+   applied on it.
+-  * **[38-PROBE](https://specs.that.world/38-probe/)**: Enable the
+-    `HAS_FEATURE` feature probe opcode.
+   * **[39-UNGAS](https://specs.that.world/39-ungas/)**: Remove all
+     observable behavior of gas cost in EVM and change out-of-gas
+     exception to trap the whole transaction.
diff --git a/.gh-pullrequests/00141_539057711.json b/.gh-pullrequests/00141_539057711.json
new file mode 100644
index 0000000..7714c2b
--- /dev/null
+++ b/.gh-pullrequests/00141_539057711.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/539057711",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/141#issuecomment-539057711",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/141",
+    "id": 539057711,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTA1NzcxMQ==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-07T15:07:22Z",
+    "updated_at": "2019-10-07T15:07:22Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "The gas cost of contracts is often the cause of DOS vectors. The response to these vectors therefore *must* be to change *existing* gas costs. If existing gas costs are allowed to continue, DOS vector still exists.\r\n\r\nIn fact, I'm pretty sure all the DOS vectors so far discovered have been of this kind, fixed by changing gas costs. If this ECIP had been implemented, it would have had to have been overridden to change gas costs of already-deployed contracts.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/539057711/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00141_539520136.json b/.gh-pullrequests/00141_539520136.json
new file mode 100644
index 0000000..540cc92
--- /dev/null
+++ b/.gh-pullrequests/00141_539520136.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/539520136",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/141#issuecomment-539520136",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/141",
+    "id": 539520136,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTUyMDEzNg==",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-08T13:43:43Z",
+    "updated_at": "2019-10-08T13:43:43Z",
+    "author_association": "MEMBER",
+    "body": "The exploits usually are not long running contracts. The versioning could be retroactive for some number of blocks so that it breaks the contracts that are misbehaving but preserves longer term contracts.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/539520136/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00141_539711590.json b/.gh-pullrequests/00141_539711590.json
new file mode 100644
index 0000000..07ca3ed
--- /dev/null
+++ b/.gh-pullrequests/00141_539711590.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/539711590",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/141#issuecomment-539711590",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/141",
+    "id": 539711590,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTcxMTU5MA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-08T21:27:19Z",
+    "updated_at": "2019-10-08T21:27:19Z",
+    "author_association": "MEMBER",
+    "body": "@zmitton @realcodywburns I want to restate the quite important thing -- account versioning is not for emergency hard forks. We could give it a try but that's not what this is designed for.\r\n\r\nSee \"Emergency Hard Fork\" in \"Discussions\" section of this document.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/539711590/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00141_539809072.json b/.gh-pullrequests/00141_539809072.json
new file mode 100644
index 0000000..ea09b4f
--- /dev/null
+++ b/.gh-pullrequests/00141_539809072.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/539809072",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/141#issuecomment-539809072",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/141",
+    "id": 539809072,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTgwOTA3Mg==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-09T03:33:43Z",
+    "updated_at": "2019-10-09T03:33:43Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "👍ok good youve got that wrapped up then. I still don't think we should do it unless Ethereum does it though.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/539809072/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00141_545528648.json b/.gh-pullrequests/00141_545528648.json
new file mode 100644
index 0000000..99d2e54
--- /dev/null
+++ b/.gh-pullrequests/00141_545528648.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/545528648",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/141#issuecomment-545528648",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/141",
+    "id": 545528648,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTUyODY0OA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-23T16:31:52Z",
+    "updated_at": "2019-10-23T16:31:52Z",
+    "author_association": "MEMBER",
+    "body": "I changed the hard fork number to \"undecided\". Going to merge this if no objections.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/545528648/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00142.json b/.gh-pullrequests/00142.json
new file mode 100644
index 0000000..0c88050
--- /dev/null
+++ b/.gh-pullrequests/00142.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/142",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/142/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/142/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/142/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/142",
+    "id": 503251138,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzI1MTQyMzk3",
+    "number": 142,
+    "title": "ECIP-1066: Active Ethereum Classic Network Description",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 4,
+    "created_at": "2019-10-07T06:08:58Z",
+    "updated_at": "2019-10-09T02:06:40Z",
+    "closed_at": "2019-10-07T20:17:58Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/142",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/142",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/142.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/142.patch"
+    },
+    "body": "This creates an ECIP for the current active network description of Ethereum Classic mainnet. This will be the second ECIP document with the \"active\" status along with ECIP-1000.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/142/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00142.patch b/.gh-pullrequests/00142.patch
new file mode 100644
index 0000000..3e9dd7b
--- /dev/null
+++ b/.gh-pullrequests/00142.patch
@@ -0,0 +1,106 @@
+From 9009f62d18e007effdda27ed2d68ecba14882406 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Mon, 7 Oct 2019 15:05:07 +0900
+Subject: [PATCH 1/3] ECIP-1066: Active Ethereum Classic Network Description
+
+---
+ _specs/ecip-1066.md | 24 ++++++++++++++++++++++++
+ 1 file changed, 24 insertions(+)
+ create mode 100644 _specs/ecip-1066.md
+
+diff --git a/_specs/ecip-1066.md b/_specs/ecip-1066.md
+new file mode 100644
+index 0000000..7f1c5cd
+--- /dev/null
++++ b/_specs/ecip-1066.md
+@@ -0,0 +1,24 @@
++---
++lang: en
++ecip: 1066
++title: Ethereum Classic Network Description
++status: Active
++type: Meta
++author: Wei Tang (@sorpaas)
++created: 2019-10-07
++---
++
++This document records feature upgrades that have been applied in
++Ethereum Classic network mainnet.
++
++|--------------|---------------------------------------------------------------|
++| Block Number | Specification                                                 |
++|--------------|---------------------------------------------------------------|
++| 0            | [EIP-684](https://github.com/ethereum/EIPs/issues/684)        |
++| 1,150,000    | [EIP-606](https://eips.ethereum.org/EIPS/eip-606)             |
++| 2,500,000    | [ECIP-1015](http://ecips.ethereumclassic.org/ECIPs/ecip-1015) |
++| 3,000,000    | [ECIP-1010](http://ecips.ethereumclassic.org/ECIPs/ecip-1010) |
++| 5,000,000    | [ECIP-1017](http://ecips.ethereumclassic.org/ECIPs/ecip-1017) |
++| 5,000,000    | [ECIP-1039](http://ecips.ethereumclassic.org/ECIPs/ecip-1039) |
++| 5,900,000    | [ECIP-1041](http://ecips.ethereumclassic.org/ECIPs/ecip-1041) |
++| 8,772,000    | [ECIP-1054](http://ecips.ethereumclassic.org/ECIPs/ecip-1054) |
+
+From b721d8ed0fa5a5c6d40685bfc23e40a6e60a8867 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Mon, 7 Oct 2019 15:12:16 +0900
+Subject: [PATCH 2/3] Add missing EIP-160 hard fork
+
+---
+ _specs/ecip-1066.md | 23 ++++++++++++-----------
+ 1 file changed, 12 insertions(+), 11 deletions(-)
+
+diff --git a/_specs/ecip-1066.md b/_specs/ecip-1066.md
+index 7f1c5cd..cc8da3c 100644
+--- a/_specs/ecip-1066.md
++++ b/_specs/ecip-1066.md
+@@ -11,14 +11,15 @@ created: 2019-10-07
+ This document records feature upgrades that have been applied in
+ Ethereum Classic network mainnet.
+ 
+-|--------------|---------------------------------------------------------------|
+-| Block Number | Specification                                                 |
+-|--------------|---------------------------------------------------------------|
+-| 0            | [EIP-684](https://github.com/ethereum/EIPs/issues/684)        |
+-| 1,150,000    | [EIP-606](https://eips.ethereum.org/EIPS/eip-606)             |
+-| 2,500,000    | [ECIP-1015](http://ecips.ethereumclassic.org/ECIPs/ecip-1015) |
+-| 3,000,000    | [ECIP-1010](http://ecips.ethereumclassic.org/ECIPs/ecip-1010) |
+-| 5,000,000    | [ECIP-1017](http://ecips.ethereumclassic.org/ECIPs/ecip-1017) |
+-| 5,000,000    | [ECIP-1039](http://ecips.ethereumclassic.org/ECIPs/ecip-1039) |
+-| 5,900,000    | [ECIP-1041](http://ecips.ethereumclassic.org/ECIPs/ecip-1041) |
+-| 8,772,000    | [ECIP-1054](http://ecips.ethereumclassic.org/ECIPs/ecip-1054) |
++|--------------|----------------------------------------------------------------|
++| Block Number | Specification                                                  |
++|--------------|----------------------------------------------------------------|
++| 0            | [EIP-684](https://github.com/ethereum/EIPs/issues/684)         |
++| 1,150,000    | [EIP-606](https://eips.ethereum.org/EIPS/eip-606)              |
++| 2,500,000    | [ECIP-1015](https://ecips.ethereumclassic.org/ECIPs/ecip-1015) |
++| 3,000,000    | [ECIP-1010](https://ecips.ethereumclassic.org/ECIPs/ecip-1010) |
++| 3,000,000    | [EIP-160](https://eips.ethereum.org/EIPS/eip-160)              |
++| 5,000,000    | [ECIP-1017](https://ecips.ethereumclassic.org/ECIPs/ecip-1017) |
++| 5,000,000    | [ECIP-1039](https://ecips.ethereumclassic.org/ECIPs/ecip-1039) |
++| 5,900,000    | [ECIP-1041](https://ecips.ethereumclassic.org/ECIPs/ecip-1041) |
++| 8,772,000    | [ECIP-1054](https://ecips.ethereumclassic.org/ECIPs/ecip-1054) |
+
+From d2cab1b81a2bf60d233875752e6c1bb4d600d7d6 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Mon, 7 Oct 2019 15:16:16 +0900
+Subject: [PATCH 3/3] Make table render on Github
+
+---
+ _specs/ecip-1066.md | 3 +--
+ 1 file changed, 1 insertion(+), 2 deletions(-)
+
+diff --git a/_specs/ecip-1066.md b/_specs/ecip-1066.md
+index cc8da3c..4fe9a47 100644
+--- a/_specs/ecip-1066.md
++++ b/_specs/ecip-1066.md
+@@ -11,9 +11,8 @@ created: 2019-10-07
+ This document records feature upgrades that have been applied in
+ Ethereum Classic network mainnet.
+ 
+-|--------------|----------------------------------------------------------------|
+ | Block Number | Specification                                                  |
+-|--------------|----------------------------------------------------------------|
++| ------------ | -------------------------------------------------------------- |
+ | 0            | [EIP-684](https://github.com/ethereum/EIPs/issues/684)         |
+ | 1,150,000    | [EIP-606](https://eips.ethereum.org/EIPS/eip-606)              |
+ | 2,500,000    | [ECIP-1015](https://ecips.ethereumclassic.org/ECIPs/ecip-1015) |
diff --git a/.gh-pullrequests/00142_538861862.json b/.gh-pullrequests/00142_538861862.json
new file mode 100644
index 0000000..6af6ef0
--- /dev/null
+++ b/.gh-pullrequests/00142_538861862.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/538861862",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/142#issuecomment-538861862",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/142",
+    "id": 538861862,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODg2MTg2Mg==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-07T06:47:57Z",
+    "updated_at": "2019-10-07T06:47:57Z",
+    "author_association": "MEMBER",
+    "body": "@soc1c Do we have a hard fork at 2m?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/538861862/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00142_538863266.json b/.gh-pullrequests/00142_538863266.json
new file mode 100644
index 0000000..2e9b87d
--- /dev/null
+++ b/.gh-pullrequests/00142_538863266.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/538863266",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/142#issuecomment-538863266",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/142",
+    "id": 538863266,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODg2MzI2Ng==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-07T06:53:33Z",
+    "updated_at": "2019-10-07T06:53:33Z",
+    "author_association": "MEMBER",
+    "body": "The difficulty bomb was introduced at block 200k ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/538863266/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00142_538866464.json b/.gh-pullrequests/00142_538866464.json
new file mode 100644
index 0000000..60eee63
--- /dev/null
+++ b/.gh-pullrequests/00142_538866464.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/538866464",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/142#issuecomment-538866464",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/142",
+    "id": 538866464,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODg2NjQ2NA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-07T07:05:30Z",
+    "updated_at": "2019-10-07T07:05:30Z",
+    "author_association": "MEMBER",
+    "body": "No. The only description I can find is geth's PR: https://github.com/ethereum/go-ethereum/pull/1588\r\nMaybe we can add one later, given this indeed happened after the network launch.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/538866464/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00142_539788921.json b/.gh-pullrequests/00142_539788921.json
new file mode 100644
index 0000000..4101975
--- /dev/null
+++ b/.gh-pullrequests/00142_539788921.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/539788921",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/142#issuecomment-539788921",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/142",
+    "id": 539788921,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTc4ODkyMQ==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-09T02:06:40Z",
+    "updated_at": "2019-10-09T02:06:40Z",
+    "author_association": "MEMBER",
+    "body": "nice",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/539788921/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00145.json b/.gh-pullrequests/00145.json
new file mode 100644
index 0000000..6e3fbe2
--- /dev/null
+++ b/.gh-pullrequests/00145.json
@@ -0,0 +1,92 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/145",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/145/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/145/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/145/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/145",
+    "id": 509281159,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzI5OTAwODY1",
+    "number": 145,
+    "title": "ECIP-1055: Flyclient - Succinct PoW Using Merkle Mountain Ranges",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1428838937,
+        "node_id": "MDU6TGFiZWwxNDI4ODM4OTM3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/editor:%20looks-good",
+        "name": "editor: looks-good",
+        "color": "71ad0a",
+        "default": false,
+        "description": "This PR is generally fine to be merged."
+      },
+      {
+        "id": 1154785139,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTM5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/status:%20draft",
+        "name": "status: draft",
+        "color": "ffffff",
+        "default": false,
+        "description": "draft stage - can be assigned ecip number and merged, but requires new PR to be Accepted"
+      },
+      {
+        "id": 1154785127,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20core",
+        "name": "type: core",
+        "color": "d73a4a",
+        "default": false,
+        "description": "Requires consensus consideration"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-10-18T19:56:11Z",
+    "updated_at": "2019-10-29T06:52:04Z",
+    "closed_at": "2019-10-28T22:17:40Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/145",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/145",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/145.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/145.patch"
+    },
+    "body": "With author consent, transporting Flyclient ECLIP to ECIP in this repo.\r\n\r\nAdded \"Flyclient\" term in title as it is the common name for this kind of change.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/145/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00145.patch b/.gh-pullrequests/00145.patch
new file mode 100644
index 0000000..ad06109
--- /dev/null
+++ b/.gh-pullrequests/00145.patch
@@ -0,0 +1,230 @@
+From 13d45a0495bf82192a88c18cad8bf5a73663fd7a Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Fri, 18 Oct 2019 13:56:00 -0600
+Subject: [PATCH 1/3] Transporting Flyclient ECLIP to ECIP
+
+With author consent, transporting Flyclient ECLIP tp ECIP in this repo.
+
+Added "Flyclient" term in title as it is the common name for this kind of change.
+---
+ _specs/ecip-1055.md | 141 ++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 141 insertions(+)
+ create mode 100644 _specs/ecip-1055.md
+
+diff --git a/_specs/ecip-1055.md b/_specs/ecip-1055.md
+new file mode 100644
+index 0000000..0df2dd7
+--- /dev/null
++++ b/_specs/ecip-1055.md
+@@ -0,0 +1,141 @@
++---
++ecip: 1055
++title: Flyclient - Succinct PoW Using Merkle Mountain Ranges
++author: Zac Mitton @zmitton
++discussions-to: https://github.com/ethereumclassic/ECIPs/issues/144
++status: Draft
++type: Standards Track
++category (*only required for Standard Track): Core
++created: 2019-03-12
++replaces (*optional): 210, 1094, 641
++
++---
++
++## Simple Summary
++
++The addition of a Merkle-Mountain-Range (MMR) root to blockheaders
++
++## Abstract
++<!--A short (~200 word) description of the technical issue being addressed.-->
++
++A block _chain_ could be interpreted as a linked-list using hashpointers from each block to its previous block. A Merkle-Mountain-Range is a type of tree that, will allow every block to point back to _all_ its previous blocks. This can be accomplished using only a single hashPointer in each block - the current MMR _root_. Adding this will allow proving the cummulative work of an entire chain in Olog(n) time, instead of the current O(n) time. In the case of ethereum, with small block-times, and over 7 million blocks and counting, this will open a ton of doors in the area light-clients, and data verification.
++
++
++
++## Motivation
++<!--The motivation is critical for EIPs that want to change the Ethereum protocol. It should clearly explain why the existing protocol specification is inadequate to address the problem that the EIP solves. EIP submissions without sufficient motivation may be rejected outright.-->
++The recent FlyClient [paper](https://eprint.iacr.org/2019/226.pdf) and [presentation](https://www.youtube.com/watch?v=BPNs9EVxWrA?t=8400) at Scaling Bitcoin Represented a major breakthrough the ability to succinctly, and non-interactivly prove the cumulative work of a blockchain.
++
++The current data structures in Ethereum (merkle-patricia-trees) were made with the sole purpose of allowing succinct verification of all the data. I have personally been working for some time on the missing tools to extract, send, and validate these proofs. This work is mostly done, but there is a problem: 
++
++Without a succinct way to verify work, there is nothing to verify these merkle proofs _against_.
++
++A merkle proof can only verify against a hash that I _already_ trust. The validation chain goes something like this for some contract data `x`:
++
++- `x` is proven to have existed in a particular `storageRoot_x`
++- `storageRoot_x` is proven to have existed in a particular `account_x`
++- `acount` is proven to have existed in a particular `stateTree_x`
++- `stateTree_x` is proven to have existed in a particular `block_x`
++
++And merkle proofs end there: `block_x` unfortunately cannot be trusted.
++
++There are 2 main strategies for verifying a `block`:
++- Validate every transaction sinse genesis 
++  - This  takes a week on desktop and 
++  - Requires the user to have the full dataset anyway, removing the need for merkle proofs in the first place.
++  - Is infeasible on mobile.
++- Validating the work (of the entire chain)
++  - Relies on majority honest miner assumption
++  - _currently_ requires all block headers
++  - _currently_ requires validating every blockHeader's PoW
++
++<!-- at all unless you check its proof of work. Doing that would yeild a cost parameter:
++
++- `block_x` is proven to have cost about `5 Ether` to produce.
++
++nowing that something cost 5 Ether is not sufficient for most applications. By checking a suffix (blocks after this point in the chain) we can prove that the data cost at least `5n Ether` to produce, where n is the number of blocks checked.
++
++With the simple assumption that the honest chain has 2/3 of the total mining power
++
++The next thing we can do is to request the header before that and validate its PoW as well -->
++
++
++
++The problem is that it ends there. And we still have nothing, if the person (or machine) validating cannot validate the block. The cost to produce such proofs is free; To validate blocks we cant use the same strategy. Blocks validate against a chain, which in turn validates through its proof of work. Currently the only way to do this requires 4gb of chain data. Thats way too much. We need something that can work within a few seconds. 
++
++FlyClient is that something, and adding an `MMRroot` to each blockheader is the protocol change that will allow FlyClient to work.
++
++On a high level, it allows the verifier to sample a subset of blocks in a tree, rather than a full amount thought a linked list, improving the time-complexity from O(n) to O(log(n)). The sample subset can be made large enough such it is cryptographically infeasible to ever produce a false proof.
++
++With this EIP, PoW can be proven in < 3 megabytes. This will hit a sweet spot, where for instance, mobile wallets, can request the latest cummulative work every time they are opened (no need to even "sync"). Users can finally verify data in a practical way (without a full-node). The proofs are even small enough for IoT devices.
++
++This may also open doors for side-chains, state-channels, plasma, trustless bridges, atomic swaps, and the peer-to-peer light-client-protocols being worked on by the Geth and Parity teams.
++
++This also solves EIPs 210, 1094, 641 - it gives the EVM a way to access to historic blockhashes. A transaction sender simply provides a merkle proof relating the historic hash against any of the last 256 blocks, and the block against its blockhash (available as op `0x40`), with a size of ~864 bytes.
++
++
++## Specification
++<!--The technical specification should describe the syntax and semantics of any new feature. The specification should be detailed enough to allow competing, interoperable implementations for any of the current Ethereum platforms (go-ethereum, parity, cpp-ethereum, ethereumj, ethereumjs, and [others](https://github.com/ethereum/wiki/wiki/Clients)).-->
++
++There is a consensus-breaking rule change proposed here, and then a bit of software around the change will be needed in order to take advantage of the new features. I think it would be best to keep _this_ EIP as just detailing the rule-change, I will summeraize the other tools and link them
++
++### Consensus Rule Change
++
++If `block.number >= ISTANBUL_FORK_NUM` then when constructing the block, set a 16th value `blockHashesRoot` in the header to the `MMRRoot` from the previous block.
++
++This Root is defined by the combining all previous hashes into a [Merkle Mountain Range](https://github.com/juinc/tilap/issues/244) (Peter Todd) using it's block number as leaf index.
++
++Implementation of this tree is up to the clients but its fairly simple and requires only an additional ~500mb (on disk) to a full/archive node.
++
++The MMR structure uses a proccess of "bagging the peaks" in order to create a single _root_ hash. However, this may be sub-optimal for our use case. I would like to ammend this to instead define each root as _the hash of the concatonation of the mountain peaks_. This will make building and verifying proofs much simpler without significantly changing the size of the proofs.
++
++The structure can be implimented as an array. Only a log(n) number of read/writes are done for any operation. A `put` operation needs to be done durring each block validation by the client. About 600 `get`s need to be performed when one of these proofs is requested (however the client can cache the latest proof). There is exactly 1 valid FlyProof for the current tip (latest mined block).
++
++The FlyCLient paper can be followed almost exactly. Find it [here](https://eprint.iacr.org/2019/226.pdf)for specs.
++
++Missing from the paper is a specific way to attain the samples from the blockhash (used as random seed). For this process, I propose we use [slice-sampling](https://en.wikipedia.org/wiki/Slice_sampling). This should be a very efficient algorithm as long as our probability density function is _invertible_. We may require a hash during each iteration (~600). This process is only required for building and verifying proofs, it is not required for instance, of miners.
++
++
++<!--T
++A PoC JS implimentaion with the full, real dataset (7 million tree values) shows the following statistics:
++- Calculating a `blockHashesRoot`: <X> seconds
++- Creating a succinct Proof `blockHashesRoot`: <Y> seconds
++- Size of a Proof <Z> mb
++-->
++
++
++
++
++## Rationale
++<!--The rationale fleshes out the specification by describing what motivated the design and why particular design decisions were made. It should describe alternate designs that were considered and related work, e.g. how the feature is supported in other languages. The rationale may also provide evidence of consensus within the community, and should discuss important objections or concerns raised during discussion.-->
++
++
++## Backwards Compatibility
++<!--All EIPs that introduce backwards incompatibilities must include a section describing these incompatibilities and their severity. The EIP must explain how the author proposes to deal with these incompatibilities. EIP submissions without a sufficient backwards compatibility treatise may be rejected outright.-->
++
++
++## Test Cases
++<!--Test cases for an implementation are mandatory for EIPs that are affecting consensus changes. Other EIPs can choose to include links to test cases if applicable.-->
++
++## Implementation
++<!--The implementations must be completed before any EIP is given status "Final", but it need not be completed before the EIP is accepted. While there is merit to the approach of reaching consensus on the specification and rationale before writing code, the principle of "rough consensus and running code" is still useful when it comes to resolving many discussions of API details.-->
++
++The most obvious need is for a non-full-node to be able to request this Proof from a full-node. This should be done by adding an RPC method. The method will take no arguments and it should return an object with: 
++
++- The lastest blockHeader
++- A list of the randomly selected ~600 blockheaders for the proof
++  - we need to create the standard deterministic way to pick the the blocks (using blockhash as seed) over the probability denisty function. I propose that we do something like [this](https://en.wikipedia.org/wiki/Slice_sampling)
++  - The 64 byte dataset (each) for verifying an ethHash (~2.4 MB)
++- A list of proofNodes from the MMR (+"bag proof" nodes)
++
++
++## Copyright
++Copyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).
++
++
++<!--
++#### MY notes
++see if there is a requirment for the cummulative work to be included in each blockheader. Hopefully we only tneed the mmr root. In either case we still will probably need to return the cummulative work (or probably the cummulative work _of each blockheader_) with the rpc request.
++
++
++-->
+
+From 3b2f6b5c78f7c219d20f2febaa300c05fa7aa90b Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sat, 19 Oct 2019 08:53:27 +0200
+Subject: [PATCH 2/3] Basic fixes to frontmatter
+
+---
+ _specs/ecip-1055.md | 8 +++-----
+ 1 file changed, 3 insertions(+), 5 deletions(-)
+
+diff --git a/_specs/ecip-1055.md b/_specs/ecip-1055.md
+index 0df2dd7..342b3d2 100644
+--- a/_specs/ecip-1055.md
++++ b/_specs/ecip-1055.md
+@@ -1,17 +1,15 @@
+ ---
+ ecip: 1055
+ title: Flyclient - Succinct PoW Using Merkle Mountain Ranges
+-author: Zac Mitton @zmitton
++author: Zac Mitton (@zmitton)
+ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/144
+ status: Draft
+ type: Standards Track
+-category (*only required for Standard Track): Core
++category: Core
+ created: 2019-03-12
+-replaces (*optional): 210, 1094, 641
+-
+ ---
+ 
+-## Simple Summary
++## Simple Summaryhttps://github.com/etclabscore/ECIPs/blob/master/ECLIPs/ECIP-draft_succinct-proofs.md
+ 
+ The addition of a Merkle-Mountain-Range (MMR) root to blockheaders
+ 
+
+From 49168b234618e1a44fe08689d8a75f859298aa37 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sat, 19 Oct 2019 08:54:27 +0200
+Subject: [PATCH 3/3] Typo fixes
+
+---
+ _specs/ecip-1055.md | 6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
+
+diff --git a/_specs/ecip-1055.md b/_specs/ecip-1055.md
+index 342b3d2..7c7f253 100644
+--- a/_specs/ecip-1055.md
++++ b/_specs/ecip-1055.md
+@@ -9,7 +9,7 @@ category: Core
+ created: 2019-03-12
+ ---
+ 
+-## Simple Summaryhttps://github.com/etclabscore/ECIPs/blob/master/ECLIPs/ECIP-draft_succinct-proofs.md
++## Simple Summary
+ 
+ The addition of a Merkle-Mountain-Range (MMR) root to blockheaders
+ 
+@@ -51,9 +51,9 @@ There are 2 main strategies for verifying a `block`:
+ 
+ - `block_x` is proven to have cost about `5 Ether` to produce.
+ 
+-nowing that something cost 5 Ether is not sufficient for most applications. By checking a suffix (blocks after this point in the chain) we can prove that the data cost at least `5n Ether` to produce, where n is the number of blocks checked.
++Knowing that something cost 5 Ether is not sufficient for most applications. By checking a suffix (blocks after this point in the chain) we can prove that the data cost at least `5n Ether` to produce, where `n` is the number of blocks checked.
+ 
+-With the simple assumption that the honest chain has 2/3 of the total mining power
++With the simple assumption that the honest chain has 2/3 of the total mining power.
+ 
+ The next thing we can do is to request the header before that and validate its PoW as well -->
+ 
diff --git a/.gh-pullrequests/00149.json b/.gh-pullrequests/00149.json
new file mode 100644
index 0000000..8973615
--- /dev/null
+++ b/.gh-pullrequests/00149.json
@@ -0,0 +1,83 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/149",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/149/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/149/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/149/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/149",
+    "id": 509675592,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzMwMTc1MjAw",
+    "number": 149,
+    "title": "Provided data points, risk considerations, implementation options, references.",
+    "user": {
+      "login": "Wolf-Linzhi",
+      "id": 56785535,
+      "node_id": "MDQ6VXNlcjU2Nzg1NTM1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/56785535?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/Wolf-Linzhi",
+      "html_url": "https://github.com/Wolf-Linzhi",
+      "followers_url": "https://api.github.com/users/Wolf-Linzhi/followers",
+      "following_url": "https://api.github.com/users/Wolf-Linzhi/following{/other_user}",
+      "gists_url": "https://api.github.com/users/Wolf-Linzhi/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/Wolf-Linzhi/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/Wolf-Linzhi/subscriptions",
+      "organizations_url": "https://api.github.com/users/Wolf-Linzhi/orgs",
+      "repos_url": "https://api.github.com/users/Wolf-Linzhi/repos",
+      "events_url": "https://api.github.com/users/Wolf-Linzhi/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/Wolf-Linzhi/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785139,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTM5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/status:%20draft",
+        "name": "status: draft",
+        "color": "ffffff",
+        "default": false,
+        "description": "draft stage - can be assigned ecip number and merged, but requires new PR to be Accepted"
+      },
+      {
+        "id": 1154785127,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20core",
+        "name": "type: core",
+        "color": "d73a4a",
+        "default": false,
+        "description": "Requires consensus consideration"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-10-21T00:26:22Z",
+    "updated_at": "2019-10-28T22:18:41Z",
+    "closed_at": "2019-10-28T22:18:41Z",
+    "author_association": "CONTRIBUTOR",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/149",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/149",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/149.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/149.patch"
+    },
+    "body": "",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/149/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00149.patch b/.gh-pullrequests/00149.patch
new file mode 100644
index 0000000..db01aad
--- /dev/null
+++ b/.gh-pullrequests/00149.patch
@@ -0,0 +1,151 @@
+From dde5c8f4c3c6d33cafe9897862335b468afea29e Mon Sep 17 00:00:00 2001
+From: Wolf <wolf@linzhi.io>
+Date: Sun, 20 Oct 2019 11:06:43 +0200
+Subject: [PATCH 1/2] input and context, enhanced ECIP
+
+---
+ _specs/ecip-1043.md | 81 ++++++++++++++++++++++++++++++++++++++++-----
+ 1 file changed, 73 insertions(+), 8 deletions(-)
+
+diff --git a/_specs/ecip-1043.md b/_specs/ecip-1043.md
+index 70ad2cf..cb84c31 100644
+--- a/_specs/ecip-1043.md
++++ b/_specs/ecip-1043.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1043
+ title: Fixed DAG limit restriction 
+-author: Cody Burns <cody.w.burns@gmail.com>
++author: Cody Burns <cody.w.burns@gmail.com>, Wolf Spraul <wolf@linzhi.io>
+ status: Draft
+ type: Standard
+ category: Core
+@@ -13,22 +13,79 @@ created: 2018-04-16
+ # ECIP-1043 – Fixed DAG limit restriction   
+     
+ ## Abstract
+-The purpose of this ECIP is to set a limit on the maximum size of the DAG to its initial state and no longer increase it on an epoch schedule
++The purpose of this ECIP is to set a limit on the maximum size of the DAG and no longer increase it on an epoch schedule.
+ 
+ ## Motivation
+-The original intent of the DAG was to provide ASIC resistance to the mining protocol in order to prevent centralization of mining distributions and thereby provide for an objectively fair distribution of tokens. As evident by ASICs being developed that are capable of matching current GPU miners while being more energy efficient, the DAG has failed at its task and now only serves as a deterrent to broader investment in application specific hardware by competent distributors. Because of this, the increasing DAG has began to have negative impact on long term security and acts as an anti-competitive bug preventing large scale investment in mining development .  
++The original intent of the DAG was to provide ASIC resistance to the mining protocol in order to prevent centralization of mining distributions and thereby provide for an objectively fair distribution of tokens. As evident by ASICs being developed that are capable of matching current GPU miners while being more energy efficient, the DAG has succeeded in leveling the playing field between GPU incumbents and ASIC challengers, avoiding ASIC takeover and domination, and leading to a competitive and large mining ecosystem. However, further increases of the DAG size, while technically possible, may have negative impact on long term security and may act as an anti-competitive bug preventing further investment in mining development.
+ 
+-As originally discussed in [ECIP-? Limit DAG growth #6](https://github.com/ethereumproject/ECIPs/issues/6) a constantly increasing DAG will eventually reach a hard limit of bus speed on GPU memory and forcing GPU’s into obsolesce does not provide an increase in security. To the contrary, smaller DAG sizes allow more GPU’s the ability to mine while providing a lowered initial entry cost to hobbyist miners.  
++While prior concerns around 2 GB and 3 GB boundaries have not materialized [ECIP-? Limit DAG growth #6](https://github.com/ethereumproject/ECIPs/issues/6), there is renewed concern around the 4 GB boundary, which will be reached in late 2020. Forcing GPUs into obsolescence does not provide an increase in security. To the contrary, smaller DAG sizes allow more GPUs the ability to mine while providing a lowered initial entry cost to hobbyist miners.
+ 
+ A 5 year vision of the mining landscape would see a transition from general purpose GPU mining to a broader market of application specific hardware being built by current and supported by a diverse group of manufactures similar to the current GPU market.
+ 
+ ## Specification
+-`if(blkNumber > forkblock) DAG epoch = 0`
++`if(blkNumber > 10,000,000) { DAG growth = 0; cache growth = 0 }`
+ 
+-## Risks consideration
+-This ECIP is not forward compatible and introduces backwards incompatibilities in the DAG file generation, block verification, and block mining. Therefore, it should be included in a scheduled hardfork at a certain block number.
++Note that in order to not alter the characteristics of the Ethash Proof-of-Work entirely, the epoch is still incremented every 30,000 blocks, and the contents of the DAG and cache change with every epoch.
++The only modification is to stop the increase of DAG size and cache size.
+ 
+-This is a long term PRO applicaton specific hardware proposal. If sufficient interest is not generated by manufactures in the mining field, there is risk of domination by one or more manufactures. (market risk)  
++## Specification Alternatives
++* A: do not activate ECIP but continue to collect data and prepare code
++* B: (current spec) stop growth at block 10,000,000 (DAG is about 3.6GB then)
++* C: reverse growth at block 10,000,000, stop decline at block x
++* D: set to 2.9 GB at block x
++* E: set to 1.5 GB at block x
++
++## Risks Consideration
++* This ECIP is not forward compatible and introduces backwards incompatibilities in the DAG file generation, block verification, and block mining. Therefore, it should be included in a scheduled hardfork at a certain block number.
++* This is a long term PRO applicaton specific hardware proposal. If sufficient interest is not generated by manufactures in the mining field, there is risk of domination by one or more manufactures. (market risk)  
++* This ECIP moves the goalposts of a game that has already started. It may set a precedent of social intervention and reduce [objectivity of the physical layer](https://etherplan.com/2019/10/07/why-proof-of-stake-is-less-secure-than-proof-of-work/9077/). Owners of 6 GB and more memory GPUs may not see the profitability jump they may have expected around November 2020. Owners of 4 GB GPUs or Bitmain E3 may see unexpected additional profitability. If DAG is decreased below 3 GB or below 2 GB, owners of older GPUs may unexpectedly have a chance to participate again.
++* This ECIP impairs the immutability of the hashing algorithm, potentially leading to a reassessment of the current 1.0 value in [Yazanator's immutability map](https://medium.com/ethereum-classic/quantifying-immutability-e8f2b1bb9301) (to 0.9 maybe?) and Szabo score.
++* The units of Ethash before and after activation may be deemed not fully comparable and thus impair a fair chance for follow-the-longest-chain to play out.
++* This ECIP may not attract sufficiently broad support from client software, mining stacks (Claymore), pools, Bitmain (E3 software upgrade).
++* It may be unclear how to gather sentiment around a change that affects investments into the physical layer currently valued at 21 mio USD, or how to assess and handle contentious or friendly forks emerging from this ECIP.
++* This ECIP may require coordination with ETH given that ETH is considering both a change to ProgPoW and a change to PoS in the near future. It may be hard to assess sentiment whether it's better for ETC to lead with stability or to lead with progression.
++
++## Quantifying ETC Mining Investment
++[Network values](https://bitinfocharts.com) for ETC (2019-10-19):
++- mining profitability 0.0123 USD/MH/Day
++- calculated network hashrate 9.5TH/s
++
++Ignoring sunk cost, we calculate how much it would cost to provide today's network hashrate at today's profitability, if investors want to recoup the cost of machines within 180 days.
++
++- 0.0123 USD/MH/day = 12,300 USD/TH/day
++- 12,300 USD * 180 days = 2,214,000 USD/TH
++- 2,214,000 USD/TH * 9.5 TH = 21,033,000 USD
++
++We can value today's ETC mining investment at about 21 mio USD.
++
++## Quantifying DAG Size
++* 1 epoch = 30,000 blocks (about 5 days)
++* DAG increase: 8MB / epoch, about 579 MB / year
++
++|Date|DAG Size|Note|
++|----|--------|----|
++|2016-09-28|1.6 GB|Predecessor of ECIP 1043 started|
++|2017-08-31|2 GB||
++|2018-04-16|2.4 GB|ECIP 1043 started|
++|2019-04-01|3 GB||
++|2019-10-20|3.3 GB|Now|
++|2020-10-30|4 GB|Might affect 20%-40% of network hashrate|
++|2023-12-31|6 GB||
++|2027-03-01|8 GB||
++|2031-11-30|11 GB||
++|2040|16 GB||
++|2065|32 GB||
++
++## References
++- [ECIP-? Limit DAG growth #6](https://github.com/ethereumproject/ECIPs/issues/6)
++- [Ethash Sources](https://github.com/ethereum/ethash)
++- [DAG Size Calculator](https://investoon.com/tools/dag_size)
++- [Bob Summerwill's Explicit Social Contract in support of PoW mining](https://ethereumclassic.org/blog/2019-10-06-pow-mining-explicit-social-contract/)
++- [Donald McIntyre's Why Proof of Stake is Less Secure Than Proof of Work](https://etherplan.com/2019/10/07/why-proof-of-stake-is-less-secure-than-proof-of-work/9077/)
++- [Yazanator's Quantifying Immutability](https://medium.com/ethereum-classic/quantifying-immutability-e8f2b1bb9301)
++- [Linzhi's ECIP 1043 Revisited](https://medium.com/@Linzhi/ecip-1043-revisited-cd2e500b8550)
++- [Linzhi's What Is Memory-Hard?](https://medium.com/@Linzhi/what-is-memory-hard-45a363b59dfe)
++- [Bob Rao's ProgPoW Hardware Audit](https://github.com/ethereum-cat-herders/progpow-audit/raw/master/Bob%20Rao%20-%20ProgPOW%20Hardware%20Audit%20Report%20Final.pdf)
+ 
+ ## Implementation
+ The following clients implemented ECIP
+@@ -37,5 +94,13 @@ The following clients implemented ECIP
+ - [] Parity
+ - [] Mantis
+ 
++The following pools have indicated ECIP support
++
++- [] Ethermine
++- [] Mining Pool Hub
++- [] Nanopool
++- [] Clona Network
++- [] 2Miners
++
+ ## Copyright
+ Copyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).
+
+From ce3416467d6500a971adc2b7c8c4305f4d662993 Mon Sep 17 00:00:00 2001
+From: Wei Tang <accounts@that.world>
+Date: Mon, 28 Oct 2019 23:18:29 +0100
+Subject: [PATCH 2/2] Update ecip-1043.md
+
+---
+ _specs/ecip-1043.md | 8 --------
+ 1 file changed, 8 deletions(-)
+
+diff --git a/_specs/ecip-1043.md b/_specs/ecip-1043.md
+index cb84c31..f3193cc 100644
+--- a/_specs/ecip-1043.md
++++ b/_specs/ecip-1043.md
+@@ -94,13 +94,5 @@ The following clients implemented ECIP
+ - [] Parity
+ - [] Mantis
+ 
+-The following pools have indicated ECIP support
+-
+-- [] Ethermine
+-- [] Mining Pool Hub
+-- [] Nanopool
+-- [] Clona Network
+-- [] 2Miners
+-
+ ## Copyright
+ Copyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).
diff --git a/.gh-pullrequests/00150.json b/.gh-pullrequests/00150.json
new file mode 100644
index 0000000..780096c
--- /dev/null
+++ b/.gh-pullrequests/00150.json
@@ -0,0 +1,74 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/150",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/150/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/150/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/150/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/150",
+    "id": 511029852,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzMxMzAzMzg2",
+    "number": 150,
+    "title": "Bump rubyzip from 1.2.1 to 2.0.0",
+    "user": {
+      "login": "dependabot[bot]",
+      "id": 49699333,
+      "node_id": "MDM6Qm90NDk2OTkzMzM=",
+      "avatar_url": "https://avatars0.githubusercontent.com/in/29110?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/dependabot%5Bbot%5D",
+      "html_url": "https://github.com/apps/dependabot",
+      "followers_url": "https://api.github.com/users/dependabot%5Bbot%5D/followers",
+      "following_url": "https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}",
+      "gists_url": "https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/dependabot%5Bbot%5D/subscriptions",
+      "organizations_url": "https://api.github.com/users/dependabot%5Bbot%5D/orgs",
+      "repos_url": "https://api.github.com/users/dependabot%5Bbot%5D/repos",
+      "events_url": "https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/dependabot%5Bbot%5D/received_events",
+      "type": "Bot",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1632883313,
+        "node_id": "MDU6TGFiZWwxNjMyODgzMzEz",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/dependencies",
+        "name": "dependencies",
+        "color": "0366d6",
+        "default": false,
+        "description": "Pull requests that update a dependency file"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-10-23T02:19:33Z",
+    "updated_at": "2019-10-23T14:37:14Z",
+    "closed_at": "2019-10-23T14:37:06Z",
+    "author_association": "CONTRIBUTOR",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/150",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/150",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/150.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/150.patch"
+    },
+    "body": "Bumps [rubyzip](https://github.com/rubyzip/rubyzip) from 1.2.1 to 2.0.0.\n<details>\n<summary>Release notes</summary>\n\n*Sourced from [rubyzip's releases](https://github.com/rubyzip/rubyzip/releases).*\n\n> ## v2.0.0\n> Security\r\n> \r\n> - Default the `validate_entry_sizes` option to `true`, so that callers can trust an entry's reported size when using `extract` [#403](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/403)\r\n>    - This option defaulted to `false` in 1.3.0 for backward compatibility, but it now defaults to `true`. If you are using an older version of ruby and can't yet upgrade to 2.x, you can still use 1.3.0 and set the option to `true`.\r\n> \r\n> Tooling / Documentation\r\n> \r\n> - Remove test files from the gem to avoid problems with antivirus detections on the test files [#405](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/405) / [#384](https://github-redirect.dependabot.com/rubyzip/rubyzip/issues/384)\r\n> - Drop support for unsupported ruby versions [#406](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/406)\n> \n> ## v1.3.0\n> Security\r\n> \r\n> - Add `validate_entry_sizes` option so that callers can trust an entry's reported size when using `extract` [#403](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/403)\r\n>    - This option defaults to `false` for backward compatibility in this release, but you are strongly encouraged to set it to `true`. It will default to `true` in rubyzip 2.0.\r\n> \r\n> New Feature\r\n> \r\n> - Add `add_stored` method to simplify adding entries without compression [#366](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/366)\r\n> \r\n> Tooling / Documentation\r\n> \r\n> - Add more gem metadata links [#402](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/402)\n> \n> ## v1.2.4\n> - Do not rewrite zip files opened with `open_buffer` that have not changed [#360](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/360)\r\n> \r\n> Tooling / Documentation\r\n> \r\n> - Update `example_recursive.rb` in README [#397](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/397)\r\n> - Hold CI at `trusty` for now, automatically pick the latest ruby patch version, use rbx-4 and hold jruby at 9.1 [#399](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/399)\n> \n> ## v1.2.3\n> * Allow tilde in zip entry names [#391](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/391) (fixes regression in 1.2.2 from [#376](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/376))\r\n> * Support frozen string literals in more files [#390](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/390)\r\n> * Require `pathname` explicitly [#388](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/388) (fixes regression in 1.2.2 from [#376](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/376))\r\n> \r\n> Tooling / Documentation:\r\n> \r\n> * CI updates [#392](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/392), [#394](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/394)\r\n>    * Bump supported ruby versions and add 2.6\r\n>    * JRuby failures are no longer ignored (reverts [#375](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/375) / part of [#371](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/371))\r\n> * Add changelog entry that was missing for last release [#387](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/387)\r\n> * Comment cleanup [#385](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/385)\r\n> \r\n> Since the GitHub release information for 1.2.2 is missing, I will also include it here:\r\n> \r\n> ### 1.2.2\r\n> \r\n></tr></table> ... (truncated)\n</details>\n<details>\n<summary>Changelog</summary>\n\n*Sourced from [rubyzip's changelog](https://github.com/rubyzip/rubyzip/blob/master/Changelog.md).*\n\n> # 2.0.0 (2019-09-25)\n> \n> Security\n> \n> - Default the `validate_entry_sizes` option to `true`, so that callers can trust an entry's reported size when using `extract` [#403](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/403)\n>    - This option defaulted to `false` in 1.3.0 for backward compatibility, but it now defaults to `true`. If you are using an older version of ruby and can't yet upgrade to 2.x, you can still use 1.3.0 and set the option to `true`.\n> \n> Tooling / Documentation\n> \n> - Remove test files from the gem to avoid problems with antivirus detections on the test files [#405](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/405) / [#384](https://github-redirect.dependabot.com/rubyzip/rubyzip/issues/384)\n> - Drop support for unsupported ruby versions [#406](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/406)\n> \n> # 1.3.0 (2019-09-25)\n> \n> Security\n> \n> - Add `validate_entry_sizes` option so that callers can trust an entry's reported size when using `extract` [#403](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/403)\n>    - This option defaults to `false` for backward compatibility in this release, but you are strongly encouraged to set it to `true`. It will default to `true` in rubyzip 2.0.\n> \n> New Feature\n> \n> - Add `add_stored` method to simplify adding entries without compression [#366](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/366)\n> \n> Tooling / Documentation\n> \n> - Add more gem metadata links [#402](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/402)\n> \n> # 1.2.4 (2019-09-06)\n> \n> - Do not rewrite zip files opened with `open_buffer` that have not changed [#360](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/360)\n> \n> Tooling / Documentation\n> \n> - Update `example_recursive.rb` in README [#397](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/397)\n> - Hold CI at `trusty` for now, automatically pick the latest ruby patch version, use rbx-4 and hold jruby at 9.1 [#399](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/399)\n> \n> # 1.2.3\n> \n> - Allow tilde in zip entry names [#391](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/391) (fixes regression in 1.2.2 from [#376](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/376))\n> - Support frozen string literals in more files [#390](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/390)\n> - Require `pathname` explicitly [#388](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/388) (fixes regression in 1.2.2 from [#376](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/376))\n> \n> Tooling / Documentation:\n> \n> - CI updates [#392](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/392), [#394](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/394)\n>   - Bump supported ruby versions and add 2.6\n>   - JRuby failures are no longer ignored (reverts [#375](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/375) / part of [#371](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/371))\n> - Add changelog entry that was missing for last release [#387](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/387)\n> - Comment cleanup [#385](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/385)\n> \n></tr></table> ... (truncated)\n</details>\n<details>\n<summary>Commits</summary>\n\n- [`2825898`](https://github.com/rubyzip/rubyzip/commit/2825898f69fbf1efe4e43452adae6ac5d074ec1c) Merge pull request [#408](https://github-redirect.dependabot.com/rubyzip/rubyzip/issues/408) from rubyzip/v2-0-0\n- [`cb407b1`](https://github.com/rubyzip/rubyzip/commit/cb407b106541c345329a017d6eb34026cb372872) Bump version to 2.0.0\n- [`e1d9af6`](https://github.com/rubyzip/rubyzip/commit/e1d9af6e46f7eb0d0b728958a57f7e28d60301a4) Merge pull request [#406](https://github-redirect.dependabot.com/rubyzip/rubyzip/issues/406) from rubyzip/bump-supported-ruby\n- [`3641a96`](https://github.com/rubyzip/rubyzip/commit/3641a963ea0c34275562250d7e67380c85fc2570) Merge pull request [#405](https://github-redirect.dependabot.com/rubyzip/rubyzip/issues/405) from rubyzip/remove-test-files\n- [`e79d9ea`](https://github.com/rubyzip/rubyzip/commit/e79d9ea2922be12db121c20f5dc55bba8a35418a) Merge pull request [#407](https://github-redirect.dependabot.com/rubyzip/rubyzip/issues/407) from rubyzip/v1-3-0\n- [`7c65e1e`](https://github.com/rubyzip/rubyzip/commit/7c65e1e3595031392f1050b81fb2b95b0f2ee764) Bump version to 1.3.0\n- [`d65fe7b`](https://github.com/rubyzip/rubyzip/commit/d65fe7bd283ec94f9d6dc7605f61a6b0dd00f55e) Merge pull request [#403](https://github-redirect.dependabot.com/rubyzip/rubyzip/issues/403) from rubyzip/check-size\n- [`35446f4`](https://github.com/rubyzip/rubyzip/commit/35446f467b739d05790356ab86915de76f0120f1) Drop old ruby and JDK versions from CI\n- [`74d4bec`](https://github.com/rubyzip/rubyzip/commit/74d4bec371158c4c2a9fe965302dc9649c941a73) Remove test files from gem\n- [`97cb6ae`](https://github.com/rubyzip/rubyzip/commit/97cb6aefe6d12bd2429d7a2e119ccb26f259d71d) Warn when an entry size is invalid\n- Additional commits viewable in [compare view](https://github.com/rubyzip/rubyzip/compare/v1.2.1...v2.0.0)\n</details>\n<br />\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=rubyzip&package-manager=bundler&previous-version=1.2.1&new-version=2.0.0)](https://help.github.com/articles/configuring-automated-security-fixes)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/ethereumclassic/ECIPs/network/alerts).\n\n</details>",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/150/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00150.patch b/.gh-pullrequests/00150.patch
new file mode 100644
index 0000000..1b30db9
--- /dev/null
+++ b/.gh-pullrequests/00150.patch
@@ -0,0 +1,28 @@
+From 18c5e5b8db334a2eae1a9ab2ef5208f8049227b5 Mon Sep 17 00:00:00 2001
+From: "dependabot[bot]" <49699333+dependabot[bot]@users.noreply.github.com>
+Date: Wed, 23 Oct 2019 02:19:32 +0000
+Subject: [PATCH] Bump rubyzip from 1.2.1 to 2.0.0
+
+Bumps [rubyzip](https://github.com/rubyzip/rubyzip) from 1.2.1 to 2.0.0.
+- [Release notes](https://github.com/rubyzip/rubyzip/releases)
+- [Changelog](https://github.com/rubyzip/rubyzip/blob/master/Changelog.md)
+- [Commits](https://github.com/rubyzip/rubyzip/compare/v1.2.1...v2.0.0)
+
+Signed-off-by: dependabot[bot] <support@github.com>
+---
+ Gemfile.lock | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/Gemfile.lock b/Gemfile.lock
+index bc94a2e..303033b 100644
+--- a/Gemfile.lock
++++ b/Gemfile.lock
+@@ -233,7 +233,7 @@ GEM
+     ruby-enum (0.7.2)
+       i18n
+     ruby_dep (1.5.0)
+-    rubyzip (1.2.1)
++    rubyzip (2.0.0)
+     safe_yaml (1.0.4)
+     sass (3.5.5)
+       sass-listen (~> 4.0.0)
diff --git a/.gh-pullrequests/00151.json b/.gh-pullrequests/00151.json
new file mode 100644
index 0000000..2f4e292
--- /dev/null
+++ b/.gh-pullrequests/00151.json
@@ -0,0 +1,74 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/151",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/151/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/151/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/151/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/151",
+    "id": 511371584,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzMxNTgxODk1",
+    "number": 151,
+    "title": "Bump nokogiri from 1.8.2 to 1.8.5",
+    "user": {
+      "login": "dependabot[bot]",
+      "id": 49699333,
+      "node_id": "MDM6Qm90NDk2OTkzMzM=",
+      "avatar_url": "https://avatars0.githubusercontent.com/in/29110?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/dependabot%5Bbot%5D",
+      "html_url": "https://github.com/apps/dependabot",
+      "followers_url": "https://api.github.com/users/dependabot%5Bbot%5D/followers",
+      "following_url": "https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}",
+      "gists_url": "https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/dependabot%5Bbot%5D/subscriptions",
+      "organizations_url": "https://api.github.com/users/dependabot%5Bbot%5D/orgs",
+      "repos_url": "https://api.github.com/users/dependabot%5Bbot%5D/repos",
+      "events_url": "https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/dependabot%5Bbot%5D/received_events",
+      "type": "Bot",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1632883313,
+        "node_id": "MDU6TGFiZWwxNjMyODgzMzEz",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/dependencies",
+        "name": "dependencies",
+        "color": "0366d6",
+        "default": false,
+        "description": "Pull requests that update a dependency file"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-10-23T14:42:02Z",
+    "updated_at": "2019-10-24T14:42:55Z",
+    "closed_at": "2019-10-24T14:42:46Z",
+    "author_association": "CONTRIBUTOR",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/151",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/151",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/151.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/151.patch"
+    },
+    "body": "Bumps [nokogiri](https://github.com/sparklemotion/nokogiri) from 1.8.2 to 1.8.5.\n<details>\n<summary>Changelog</summary>\n\n*Sourced from [nokogiri's changelog](https://github.com/sparklemotion/nokogiri/blob/master/CHANGELOG.md).*\n\n> ## 1.8.5 / 2018-10-04\n> \n> ### Security Notes\n> \n> [MRI] Pulled in upstream patches from libxml2 that address CVE-2018-14404 and CVE-2018-14567. Full details are available in [#1785](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1785). Note that these patches are not yet (as of 2018-10-04) in an upstream release of libxml2.\n> \n> \n> ### Bug fixes\n> \n> * [MRI] Fix regression in installation when building against system libraries, where some systems would not be able to find libxml2 or libxslt when present. (Regression introduced in v1.8.3.) [#1722](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1722)\n> * [JRuby] Fix node reparenting when the destination doc is empty. [#1773](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1773)\n> \n> \n> ## 1.8.4 / 2018-07-03\n> \n> ### Bug fixes\n> \n> * [MRI] Fix memory leak when creating nodes with namespaces. (Introduced in v1.5.7) [#1771](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1771)\n> \n> \n> ## 1.8.3 / 2018-06-16\n> \n> ### Security Notes\n> \n> [MRI] Behavior in libxml2 has been reverted which caused CVE-2018-8048 (loofah gem), CVE-2018-3740 (sanitize gem), and CVE-2018-3741 (rails-html-sanitizer gem). The commit in question is here:\n> \n> > https://github.com/GNOME/libxml2/commit/960f0e2\n> \n> and more information is available about this commit and its impact here:\n> \n> > [flavorjones/loofah#144](https://github-redirect.dependabot.com/flavorjones/loofah/issues/144)\n> \n> This release simply reverts the libxml2 commit in question to protect users of Nokogiri's vendored libraries from similar vulnerabilities.\n> \n> If you're offended by what happened here, I'd kindly ask that you comment on the upstream bug report here:\n> \n> > https://bugzilla.gnome.org/show_bug.cgi?id=769760\n> \n> \n> ### Dependencies\n> \n> * [MRI] libxml2 is updated from 2.9.7 to 2.9.8\n> \n> \n> ### Features\n> \n> * Node#classes, #add_class, #append_class, and #remove_class are added.\n> * NodeSet#append_class is added.\n> * NodeSet#remove_attribute is a new alias for NodeSet#remove_attr.\n> * NodeSet#each now returns an Enumerator when no block is passed (Thanks, [@&#8203;park53kr](https://github.com/park53kr)!)\n></tr></table> ... (truncated)\n</details>\n<details>\n<summary>Commits</summary>\n\n- [`e28fa4b`](https://github.com/sparklemotion/nokogiri/commit/e28fa4bb2ed6844c3c63f58062d034e7b99fc90c) version bump to v1.8.5\n- [`712edef`](https://github.com/sparklemotion/nokogiri/commit/712edef8a8c7fa593e09517891d336758af42cba) update changelog\n- [`7feb4c1`](https://github.com/sparklemotion/nokogiri/commit/7feb4c167a9ae1ba4e87923597ba7e7b309b1713) Merge branch 'fix-1773'\n- [`7cc6cf6`](https://github.com/sparklemotion/nokogiri/commit/7cc6cf6a74bd718b46182f0e646b63ff0a00f728) Organize imports in XmlNode.java.\n- [`1697442`](https://github.com/sparklemotion/nokogiri/commit/169744261c5c023dff40de0811a826ad4d1fcc05) Allow reparenting nodes to be a child of an empty document.\n- [`7b8cd0f`](https://github.com/sparklemotion/nokogiri/commit/7b8cd0f5b15a926e92c869b450dd6f71cdd17b61) Merge pull request [#1786](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1786) from sparklemotion/1785-canonical-usns\n- [`5bff4bb`](https://github.com/sparklemotion/nokogiri/commit/5bff4bb3f1692069c617f4333b2ccc5570f0f414) pull in upstream libxml2 patches\n- [`c232226`](https://github.com/sparklemotion/nokogiri/commit/c232226448a44bb81220d3750a6453a0aef88fb1) changelog\n- [`862b88f`](https://github.com/sparklemotion/nokogiri/commit/862b88f39264b7b5e223a63e3d4d0eeade4db9ff) changelog\n- [`b3750eb`](https://github.com/sparklemotion/nokogiri/commit/b3750eb71e101287aa0e7a231232222c7213b3f3) remove `-Wextra` CFLAG\n- Additional commits viewable in [compare view](https://github.com/sparklemotion/nokogiri/compare/v1.8.2...v1.8.5)\n</details>\n<br />\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=nokogiri&package-manager=bundler&previous-version=1.8.2&new-version=1.8.5)](https://help.github.com/articles/configuring-automated-security-fixes)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/ethereumclassic/ECIPs/network/alerts).\n\n</details>",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/151/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00151.patch b/.gh-pullrequests/00151.patch
new file mode 100644
index 0000000..3225200
--- /dev/null
+++ b/.gh-pullrequests/00151.patch
@@ -0,0 +1,28 @@
+From 4b839c595d4cee604f12fa32ee3e518b76f2fe30 Mon Sep 17 00:00:00 2001
+From: "dependabot[bot]" <49699333+dependabot[bot]@users.noreply.github.com>
+Date: Wed, 23 Oct 2019 14:42:00 +0000
+Subject: [PATCH] Bump nokogiri from 1.8.2 to 1.8.5
+
+Bumps [nokogiri](https://github.com/sparklemotion/nokogiri) from 1.8.2 to 1.8.5.
+- [Release notes](https://github.com/sparklemotion/nokogiri/releases)
+- [Changelog](https://github.com/sparklemotion/nokogiri/blob/master/CHANGELOG.md)
+- [Commits](https://github.com/sparklemotion/nokogiri/compare/v1.8.2...v1.8.5)
+
+Signed-off-by: dependabot[bot] <support@github.com>
+---
+ Gemfile.lock | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/Gemfile.lock b/Gemfile.lock
+index 303033b..7348d4a 100644
+--- a/Gemfile.lock
++++ b/Gemfile.lock
+@@ -218,7 +218,7 @@ GEM
+     minitest (5.11.3)
+     multipart-post (2.0.0)
+     net-dns (0.8.0)
+-    nokogiri (1.8.2)
++    nokogiri (1.8.5)
+       mini_portile2 (~> 2.3.0)
+     octokit (4.8.0)
+       sawyer (~> 0.8.0, >= 0.5.3)
diff --git a/.gh-pullrequests/00152.json b/.gh-pullrequests/00152.json
new file mode 100644
index 0000000..bdd4db1
--- /dev/null
+++ b/.gh-pullrequests/00152.json
@@ -0,0 +1,74 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/152",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/152/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/152/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/152/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/152",
+    "id": 511375265,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzMxNTg0OTEy",
+    "number": 152,
+    "title": "Bump ffi from 1.9.23 to 1.11.1",
+    "user": {
+      "login": "dependabot[bot]",
+      "id": 49699333,
+      "node_id": "MDM6Qm90NDk2OTkzMzM=",
+      "avatar_url": "https://avatars0.githubusercontent.com/in/29110?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/dependabot%5Bbot%5D",
+      "html_url": "https://github.com/apps/dependabot",
+      "followers_url": "https://api.github.com/users/dependabot%5Bbot%5D/followers",
+      "following_url": "https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}",
+      "gists_url": "https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/dependabot%5Bbot%5D/subscriptions",
+      "organizations_url": "https://api.github.com/users/dependabot%5Bbot%5D/orgs",
+      "repos_url": "https://api.github.com/users/dependabot%5Bbot%5D/repos",
+      "events_url": "https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/dependabot%5Bbot%5D/received_events",
+      "type": "Bot",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1632883313,
+        "node_id": "MDU6TGFiZWwxNjMyODgzMzEz",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/dependencies",
+        "name": "dependencies",
+        "color": "0366d6",
+        "default": false,
+        "description": "Pull requests that update a dependency file"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-10-23T14:47:27Z",
+    "updated_at": "2019-10-24T14:43:27Z",
+    "closed_at": "2019-10-24T14:43:16Z",
+    "author_association": "CONTRIBUTOR",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/152",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/152",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/152.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/152.patch"
+    },
+    "body": "Bumps [ffi](https://github.com/ffi/ffi) from 1.9.23 to 1.11.1.\n<details>\n<summary>Changelog</summary>\n\n*Sourced from [ffi's changelog](https://github.com/ffi/ffi/blob/master/CHANGELOG.md).*\n\n> 1.11.1 / 2019-05-20\n> -------------------\n> \n> Changed:\n> * Raise required ruby version to >=2.0. [#699](https://github-redirect.dependabot.com/ffi/ffi/issues/699), [#700](https://github-redirect.dependabot.com/ffi/ffi/issues/700)\n> * Fix a possible linker error on ruby < 2.3 on Linux.\n> \n> \n> 1.11.0 / 2019-05-17\n> -------------------\n> This version was yanked on 2019-05-20 to fix an install issue on ruby-1.9.3. [#700](https://github-redirect.dependabot.com/ffi/ffi/issues/700)\n> \n> Added:\n> * Add ability to disable or force use of system libffi. [#669](https://github-redirect.dependabot.com/ffi/ffi/issues/669)\n>   Use like `gem inst ffi -- --enable-system-libffi` .\n> * Add ability to call FFI callbacks from outside of FFI call frame. [#584](https://github-redirect.dependabot.com/ffi/ffi/issues/584)\n> * Add proper documentation to FFI::Generator and ::Task\n> * Add gemspec metadata. [#696](https://github-redirect.dependabot.com/ffi/ffi/issues/696), [#698](https://github-redirect.dependabot.com/ffi/ffi/issues/698)\n> \n> Changed:\n> * Fix stdcall on Win32. [#649](https://github-redirect.dependabot.com/ffi/ffi/issues/649), [#669](https://github-redirect.dependabot.com/ffi/ffi/issues/669)\n> * Fix load paths for FFI::Generator::Task\n> * Fix FFI::Pointer#read_string(0) to return a binary String. [#692](https://github-redirect.dependabot.com/ffi/ffi/issues/692)\n> * Fix benchmark suite so that it runs on ruby-2.x\n> * Move FFI::Platform::CPU from C to Ruby. [#663](https://github-redirect.dependabot.com/ffi/ffi/issues/663)\n> * Move FFI::StructByReference to Ruby. [#681](https://github-redirect.dependabot.com/ffi/ffi/issues/681)\n> * Move FFI::DataConverter to Ruby ([#661](https://github-redirect.dependabot.com/ffi/ffi/issues/661))\n> * Various cleanups and improvements of specs and benchmarks\n> \n> Removed:\n> * Remove ruby-1.8 and 1.9 compatibility code. [#683](https://github-redirect.dependabot.com/ffi/ffi/issues/683)\n> * Remove unused spec files. [#684](https://github-redirect.dependabot.com/ffi/ffi/issues/684)\n> \n> \n> 1.10.0 / 2019-01-06\n> -------------------\n> \n> Added:\n> * Add /opt/local/lib/ to ffi's fallback library search path. [#638](https://github-redirect.dependabot.com/ffi/ffi/issues/638)\n> * Add binary gem support for ruby-2.6 on Windows\n> * Add FreeBSD on AArch64 and ARM support. [#644](https://github-redirect.dependabot.com/ffi/ffi/issues/644)\n> * Add FFI::LastError.winapi_error on Windows native or Cygwin. [#633](https://github-redirect.dependabot.com/ffi/ffi/issues/633)\n> \n> Changed:\n> * Update to rake-compiler-dock-0.7.0\n> * Use 64-bit inodes on FreeBSD >= 12. [#644](https://github-redirect.dependabot.com/ffi/ffi/issues/644)\n> * Switch time_t and suseconds_t types to long on FreeBSD. [#627](https://github-redirect.dependabot.com/ffi/ffi/issues/627)\n> * Make register_t long_long on 64-bit FreeBSD. [#644](https://github-redirect.dependabot.com/ffi/ffi/issues/644)\n> * Fix Pointer#write_array_of_type [#637](https://github-redirect.dependabot.com/ffi/ffi/issues/637)\n> \n></tr></table> ... (truncated)\n</details>\n<details>\n<summary>Commits</summary>\n\n- [`3d8c91c`](https://github.com/ffi/ffi/commit/3d8c91c902d67f2af184b1da1b0e99323bc1c744) Update CHANGELOG for ffi-1.11.1\n- [`2a3d9d6`](https://github.com/ffi/ffi/commit/2a3d9d60db6d01e3a1472484371df2a14ec1ec3a) Bump VERSION to 1.11.1\n- [`19d5776`](https://github.com/ffi/ffi/commit/19d5776080c2d8f3d2840ea449ef2c9a632b93d5) Add some missing items to CHANGELOG for ffi-1.11.0\n- [`08b9b78`](https://github.com/ffi/ffi/commit/08b9b7875fe6fff8ba34d794a4bdebaf78b95ba2) Raise ruby version requirement to >=2.0\n- [`e76c43b`](https://github.com/ffi/ffi/commit/e76c43b3efaa24563e6c93dd8f0128240197a88c) Fix build on ruby-2.0 on Linux\n- [`9b4a9e4`](https://github.com/ffi/ffi/commit/9b4a9e450a4f78bf569ad8b6497bd6b4e8ec82d3) Add version 1.11.0 to CHANGELOG\n- [`36f1bb5`](https://github.com/ffi/ffi/commit/36f1bb55aa0712fa8ea5431cfb9d94ebc2a34372) Bump VERSION to 1.11.0\n- [`29c07a9`](https://github.com/ffi/ffi/commit/29c07a94fadfb644c28741f744ab9a3fda3e544c) Pass options from rake task to the FFI::Generator\n- [`7efdd2e`](https://github.com/ffi/ffi/commit/7efdd2ecbb8ab2df56aecade9c82fd48eb71969f) Include the name of the template file instead of just rake\n- [`bc99b7e`](https://github.com/ffi/ffi/commit/bc99b7efa78afc150fe32d09579a11c8990aaf84) Add proper documentation to FFI::Generator and ::Task\n- Additional commits viewable in [compare view](https://github.com/ffi/ffi/compare/1.9.23...1.11.1)\n</details>\n<br />\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ffi&package-manager=bundler&previous-version=1.9.23&new-version=1.11.1)](https://help.github.com/articles/configuring-automated-security-fixes)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/ethereumclassic/ECIPs/network/alerts).\n\n</details>",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/152/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00152.patch b/.gh-pullrequests/00152.patch
new file mode 100644
index 0000000..6f45fac
--- /dev/null
+++ b/.gh-pullrequests/00152.patch
@@ -0,0 +1,28 @@
+From c9e5731173637cfaa512a5078179b0cd4177a53f Mon Sep 17 00:00:00 2001
+From: "dependabot[bot]" <49699333+dependabot[bot]@users.noreply.github.com>
+Date: Wed, 23 Oct 2019 14:47:25 +0000
+Subject: [PATCH] Bump ffi from 1.9.23 to 1.11.1
+
+Bumps [ffi](https://github.com/ffi/ffi) from 1.9.23 to 1.11.1.
+- [Release notes](https://github.com/ffi/ffi/releases)
+- [Changelog](https://github.com/ffi/ffi/blob/master/CHANGELOG.md)
+- [Commits](https://github.com/ffi/ffi/compare/1.9.23...1.11.1)
+
+Signed-off-by: dependabot[bot] <support@github.com>
+---
+ Gemfile.lock | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/Gemfile.lock b/Gemfile.lock
+index 303033b..7857465 100644
+--- a/Gemfile.lock
++++ b/Gemfile.lock
+@@ -29,7 +29,7 @@ GEM
+     execjs (2.7.0)
+     faraday (0.14.0)
+       multipart-post (>= 1.2, < 3)
+-    ffi (1.9.23)
++    ffi (1.11.1)
+     forwardable-extended (2.6.0)
+     front_matter_parser (0.1.1)
+     gemoji (3.0.0)
diff --git a/.gh-pullrequests/00153.json b/.gh-pullrequests/00153.json
new file mode 100644
index 0000000..45bee74
--- /dev/null
+++ b/.gh-pullrequests/00153.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/153",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/153/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/153/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/153/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/153",
+    "id": 511434416,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzMxNjMzMTY3",
+    "number": 153,
+    "title": "Finalize ECIP 1041",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-10-23T16:19:37Z",
+    "updated_at": "2019-10-24T21:07:23Z",
+    "closed_at": "2019-10-24T21:07:17Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/153",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/153",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/153.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/153.patch"
+    },
+    "body": "",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/153/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00153.patch b/.gh-pullrequests/00153.patch
new file mode 100644
index 0000000..7098930
--- /dev/null
+++ b/.gh-pullrequests/00153.patch
@@ -0,0 +1,22 @@
+From 8dda72c241e354f89d6c566e60739dcb186f0acb Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Wed, 23 Oct 2019 18:19:32 +0200
+Subject: [PATCH] Finalize ECIP 1041
+
+---
+ _specs/ecip-1041.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1041.md b/_specs/ecip-1041.md
+index 2018afa..edec038 100644
+--- a/_specs/ecip-1041.md
++++ b/_specs/ecip-1041.md
+@@ -3,7 +3,7 @@ lang: en
+ ecip: 1041
+ title: Remove Difficulty Bomb
+ author: Igor Artamonov <splix@etcdevteam.com>
+-status: Accepted
++status: Final
+ type: Standards Track
+ category: Core
+ created: 2018-01-10
diff --git a/.gh-pullrequests/00154.json b/.gh-pullrequests/00154.json
new file mode 100644
index 0000000..2939139
--- /dev/null
+++ b/.gh-pullrequests/00154.json
@@ -0,0 +1,83 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/154",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/154/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/154/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/154/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/154",
+    "id": 511535550,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzMxNzE1MTc2",
+    "number": 154,
+    "title": "invoke-signer draft 0",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785139,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTM5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/status:%20draft",
+        "name": "status: draft",
+        "color": "ffffff",
+        "default": false,
+        "description": "draft stage - can be assigned ecip number and merged, but requires new PR to be Accepted"
+      },
+      {
+        "id": 1154785129,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20meta",
+        "name": "type: meta",
+        "color": "cfd3d7",
+        "default": false,
+        "description": "Accepted best practices"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2019-10-23T19:49:25Z",
+    "updated_at": "2019-10-28T23:26:20Z",
+    "closed_at": "2019-10-28T22:22:20Z",
+    "author_association": "CONTRIBUTOR",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/154",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/154",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/154.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/154.patch"
+    },
+    "body": "Im looking into defining a spec to specifically invoke a user’s preferred wallet app for signing (a tx or arbitrary data)\r\n\r\nI think it's time for a standard that can accommodate the user to use a hardware wallet from a desktop browser dapp or open a separate wallet app from a mobile browser dapp etc...\r\n\r\nDiscussions to here please 👉: https://github.com/ethereumclassic/ECIPs/issues/147",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/154/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00154.patch b/.gh-pullrequests/00154.patch
new file mode 100644
index 0000000..a466326
--- /dev/null
+++ b/.gh-pullrequests/00154.patch
@@ -0,0 +1,214 @@
+From 9791c0b59582a2ed80d915afbf410bc104de20ea Mon Sep 17 00:00:00 2001
+From: Zac Mitton <zacmitton22@gmail.com>
+Date: Wed, 23 Oct 2019 15:45:31 -0400
+Subject: [PATCH 1/3] invoke-signer draft 0
+
+---
+ _specs/invoke-signer.md | 113 ++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 113 insertions(+)
+ create mode 100644 _specs/invoke-signer.md
+
+diff --git a/_specs/invoke-signer.md b/_specs/invoke-signer.md
+new file mode 100644
+index 0000000..f9dc781
+--- /dev/null
++++ b/_specs/invoke-signer.md
+@@ -0,0 +1,113 @@
++## Standardize OS Level Management of Signature Handling
++
++    ECLIP: <pending>
++    Title: Invoke Signer
++    Subtitle: Standardized OS-level Management of Wallet Functions
++    Author: Zac Mitton
++    Discussions-To: https://github.com/ethereumclassic/ECIPs/issues/147
++    Status:  DRAFT
++    Type: STANDARDS TRACK
++    Created: 2019-02-07
++
++## Note
++I will often use the term "Signer" to mean the same thing as "Wallet", because these programs can sign more than just transactions.
++
++## Abstract
++UX involved with handling ethereum signing is especially cumbersome. This is mostly due to the fact that dapps and wallets are used in many different *environments* (i.e. desktop, mobile, CLI, plugin, mobile-browsers desktop-browsers, and hardware). Attempts to improve this UX shortcoming have generally involved rigid user work-flows, or specific application combinations. I assert the problem is best solved at the operating system level using a widely standardized protocol like the one proposed below.
++
++The following describes
++
++1. A way for dapp developers to handle _any action requiring a signature_ (i.e. signing a tx or logging in). The spec defines *how the wallet is chosen and invoked by the user's Operating System*
++
++2. A way for wallet applications to handle incoming requests for signature.
++
++## Motivation
++Users should be able to use any wallet of their choosing when interacting with a dapp. Having users download a specific wallet per-environment reduces security, inhibits adoption, and is terrible UX: The user has to "top-up", and not forget about each application-specific wallet. This sucks for the user because they have money all over the place and a laundry list of wallet program installations across devices.
++
++The current architecture leads to staments like "Our dapp currently works on the chrome browser with metamask enabled. We plan to add support MyEtherWallet soon."
++
++As the number of wallets and dapps grow, the combinations become n^2. This will inhibit small wallets from entering the market, but require users to download all major wallets.
++
++## Current Scenario
++#### Desktop Browser Dapps 
++So far, the best solution has been to download wallet plugins like Metamask, that inject javascript (by being granted very scary permissions) onto every single page the user navigates to. The user often cannot use a hardware wallet _unless_ the dapp devloper specifically integrates support for it - a huge security limitation.
++     
++#### Mobile Browser Dapps
++If the user attempts to load the dapp on mobile, they are expected to use a specially made "web3 enabled" mobile browser (i.e. Brave, Toshi), to view the app so the dapp has available it's in-browser wallet for invocation. This is suboptimal architecture, and a waste of engineering resources. Browsers are extraordinarily complex programs, and building a decent one is an overwhelmingly monumental challenge (unless say, you're the inventor of Javascript). UX is much better when they can use their preffered browser. Besides - we should not be building web-browsers to solve the problem of wallets.
++
++#### Native Dapps (the worst UX of all)
++Currently, if a mobile app developer wants to integrate an ethereum feature in their app, they genreally build a wallet into the app itself (from scratch). The user ends up with loose change in siloed apps, and these wallets will have widely varying (and therefore pathetic) security standards.
++
++
++## Desired Dapp Experience
++Before defining the proposed spec, I'd like to outline the _ideal_ user experience, and work backwards to achieve it. After all, thats how this spec came about.
++
++1) If a dapp is browser-based, the user can browse to it using ANY available browser on mobile OR desktop.
++
++2) If the dapp is a native mobile or native desktop app, they simply download then open the application.
++
++3) When the dapp requires a signature it should 
++    
++   - Automatically open the user's preferred mobile wallet when on mobile, or 
++    
++   - Automatically open the user's preferred desktop/hardware wallet when on desktop. 
++4) The wallet should then display details of the signing request. 
++5) The user can then tap or click "sign" and be sent back to the dapp.
++
++## Rationale
++This problem finally must be addressed at the _Operating System_ level, because it is the only way to flexibly hand off control flow to another app.
++
++### Deep Links
++_Deep linking_ is a method available from any application or webpage that provides the user's operating system with instructions to open a specific application (and can carry an arbitrary data string with it). They work in basically all environments: Android, iOS, MacOS, Windows, and Linux (possibly others).
++
++Most of us have seen deep linking used when clicking on a Zoom or Spotify link. It usually invokes focus to a _specific_ application. In our case, we don't want to open a _specific_ (branded) application (i.e. Jaxx, Toshi, or Gnosis-Safe). Rather we tell the operating system to open the user's "_default signer_" (wallet).
++
++### Implimentations
++#### IOS and OSX
++Implementation of signer apps varies by OS. On IOS it can be done with NSUrl Protocol, which is like a link, but instead of a opening a specific app, you specify a name space (e.g. "invoke-signer") to which any app can register itself as a handler. 
++
++All apps on the device registered as a handler will call a boolean function deciding whether or not the app should handle the incoming request (perhaps true if (and only if) the user has chosen this signer as default). The first app to return `true` from this function will be launched with access to data from the URL (the rpc data and/or more).
++
++<!-- 
++#### Windows
++#### Linux
++#### Android
++
++exists on all 3 but I just havent done enough research to describe the details yet
++ -->
++
++## Draft Specification
++The name space should indicate fundamentally that its doing the _signing_. So `ethereum-signer` was my first though. However, nearly any cryptocurrency can benefit from this. For that reason simply `signer` would be better. Lastly this spec is about more than just a _referring_ to the signer app - it is about  specifically _invoking_ that app. Therefore I think *`invoke-signer`* is the most relevent namespace to use.
++
++From there, the `path` could communicate the specific cryptocurrency, i.e. `ethereum-classic` (together `invoke-signer://ethereum-classic`...). The path can be used by the singer in its boolean function to determine whether it's capable of handling this particular signing request. Then we need a way to tell the signer exactly what to do:
++
++From there we need to communicate exactly what the signer should do. Rather then re-inventing the wheel, we can just `uri_encode` the existing JSON RPC calls. For instance all signers would want to support the existing RPC methods `eth_sign` and `eth_signTypedData`.
++
++In standard query format this would be:
++
++```
++invoke-signer://ethereum-classic?rpc=%7B%22jsonrpc%22%3A%222.0%22%2C%22method%22%3A%22eth_sign%22%2C%22params%22%3A%5B%220xc45bc213664f565324ad302d187e0dc08ad7d1c57%22%5D%2C%22id%22%3A67%7D
++```
++
++Over time signers should become the secure and predictable place to view blockchain information, espesially data about to be signed. We can not really trust data being viewed on brower-based explorers or new dapp websites. More advanced RPC methods will be added over time to accomidate this. For instance, methods that pass `contractCode` and `compilerVerion`, will be able to verify the code and ABI *in the signer app*. But none of that needs to be defined right now, because the format accepts arbitrary future methods!
++
++## Conclusion
++#### New User Experience
++Most users will have a favorite mobile signer and enjoy a consistent experience with every dapp. Some may still use a plugin like metamask when on desktop, and power users will use a hardware signer for ultra-high security as needed.
++
++#### Developer Experience
++It becomes much easier to add a single "ethereum feature" into any software application. The app dev does not need to worry about any of the details of building a wallet/signer. They just create a string to be signed, and invoke the user's signer with it. The user expectation is only that they have _a_ signer, as opposed to some specific signer.
++
++<!-- Leaving the rpc call embedded, allows developers to continue to use existing tools for formating and decoding transactions and signatures. Using query string format for arbitrary variables will also allow experimentation with new features that can be ignored by non-supporting wallets. For instance, I'd like wallets to eventually be sent the `contractCode` and `compilerVerion` so they can verify the code and ABI. But I would not like to define any of that into the spec right now. Over time we can standardize certain variable names. -->
++
++<!-- Supporting Links:
++
++[ECIP 1037 -- Simple Non-Interactive URI Scheme](https://github.com/ethereumproject/ECIPs/pull/81)
++
++[EIP 67 -- Standard URI scheme with metadata value and byte code](https://github.com/ethereum/EIPs/issues/67)
++
++[EIP 681 -- Payment request URL specification](https://github.com/ethereum/EIPs/pull/681)
++
++[EIP 831 -- Standard URL Format](https://github.com/ethereum/EIPs/pull/831)
++
++[URI Schemes](https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml) -->
+
+From 15a7a9b5e54950e254bd71f338a0706323fe9967 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Mon, 28 Oct 2019 23:20:50 +0100
+Subject: [PATCH 2/3] Fix formatting
+
+---
+ _specs/invoke-signer.md | 20 ++++++++++----------
+ 1 file changed, 10 insertions(+), 10 deletions(-)
+
+diff --git a/_specs/invoke-signer.md b/_specs/invoke-signer.md
+index f9dc781..8500d8c 100644
+--- a/_specs/invoke-signer.md
++++ b/_specs/invoke-signer.md
+@@ -1,13 +1,13 @@
+-## Standardize OS Level Management of Signature Handling
+-
+-    ECLIP: <pending>
+-    Title: Invoke Signer
+-    Subtitle: Standardized OS-level Management of Wallet Functions
+-    Author: Zac Mitton
+-    Discussions-To: https://github.com/ethereumclassic/ECIPs/issues/147
+-    Status:  DRAFT
+-    Type: STANDARDS TRACK
+-    Created: 2019-02-07
++---
++lang: en
++ecip: 1067
++title: Standardize OS Level Management of Signature Handling
++status: Draft
++type: Interface
++discussions-to: https://github.com/ethereumclassic/ECIPs/issues/58
++author: Zac Mitton
++created: 2019-02-07
++---
+ 
+ ## Note
+ I will often use the term "Signer" to mean the same thing as "Wallet", because these programs can sign more than just transactions.
+
+From e6d71911d1a924798b1039897d8ea95fda979d7b Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Mon, 28 Oct 2019 23:21:51 +0100
+Subject: [PATCH 3/3] Update invoke-signer.md
+
+---
+ _specs/invoke-signer.md | 19 +++++++------------
+ 1 file changed, 7 insertions(+), 12 deletions(-)
+
+diff --git a/_specs/invoke-signer.md b/_specs/invoke-signer.md
+index 8500d8c..284a8f6 100644
+--- a/_specs/invoke-signer.md
++++ b/_specs/invoke-signer.md
+@@ -18,7 +18,6 @@ UX involved with handling ethereum signing is especially cumbersome. This is mos
+ The following describes
+ 
+ 1. A way for dapp developers to handle _any action requiring a signature_ (i.e. signing a tx or logging in). The spec defines *how the wallet is chosen and invoked by the user's Operating System*
+-
+ 2. A way for wallet applications to handle incoming requests for signature.
+ 
+ ## Motivation
+@@ -42,17 +41,13 @@ Currently, if a mobile app developer wants to integrate an ethereum feature in t
+ ## Desired Dapp Experience
+ Before defining the proposed spec, I'd like to outline the _ideal_ user experience, and work backwards to achieve it. After all, thats how this spec came about.
+ 
+-1) If a dapp is browser-based, the user can browse to it using ANY available browser on mobile OR desktop.
+-
+-2) If the dapp is a native mobile or native desktop app, they simply download then open the application.
+-
+-3) When the dapp requires a signature it should 
+-    
+-   - Automatically open the user's preferred mobile wallet when on mobile, or 
+-    
+-   - Automatically open the user's preferred desktop/hardware wallet when on desktop. 
+-4) The wallet should then display details of the signing request. 
+-5) The user can then tap or click "sign" and be sent back to the dapp.
++1. If a dapp is browser-based, the user can browse to it using ANY available browser on mobile OR desktop.
++2. If the dapp is a native mobile or native desktop app, they simply download then open the application.
++3. When the dapp requires a signature it should   
++  * Automatically open the user's preferred mobile wallet when on mobile, or  
++  * Automatically open the user's preferred desktop/hardware wallet when on desktop. 
++4. The wallet should then display details of the signing request. 
++5. The user can then tap or click "sign" and be sent back to the dapp.
+ 
+ ## Rationale
+ This problem finally must be addressed at the _Operating System_ level, because it is the only way to flexibly hand off control flow to another app.
diff --git a/.gh-pullrequests/00154_546026299.json b/.gh-pullrequests/00154_546026299.json
new file mode 100644
index 0000000..b505a31
--- /dev/null
+++ b/.gh-pullrequests/00154_546026299.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546026299",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/154#issuecomment-546026299",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/154",
+    "id": 546026299,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjAyNjI5OQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-24T17:42:32Z",
+    "updated_at": "2019-10-24T17:42:32Z",
+    "author_association": "MEMBER",
+    "body": "How would this relate to WalletConnect?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546026299/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00155.json b/.gh-pullrequests/00155.json
new file mode 100644
index 0000000..b7d881f
--- /dev/null
+++ b/.gh-pullrequests/00155.json
@@ -0,0 +1,110 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/155",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/155/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/155/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/155/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/155",
+    "id": 512187385,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzMyMjQ3NDA5",
+    "number": 155,
+    "title": "move ecip 1056 to last call",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785129,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20meta",
+        "name": "type: meta",
+        "color": "cfd3d7",
+        "default": false,
+        "description": "Accepted best practices"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/1",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/milestone/1",
+      "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/1/labels",
+      "id": 4777611,
+      "node_id": "MDk6TWlsZXN0b25lNDc3NzYxMQ==",
+      "number": 1,
+      "title": "Agharta Hardfork   ",
+      "description": "",
+      "creator": {
+        "login": "realcodywburns",
+        "id": 13103499,
+        "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+        "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/realcodywburns",
+        "html_url": "https://github.com/realcodywburns",
+        "followers_url": "https://api.github.com/users/realcodywburns/followers",
+        "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+        "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+        "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+        "repos_url": "https://api.github.com/users/realcodywburns/repos",
+        "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+        "type": "User",
+        "site_admin": false
+      },
+      "open_issues": 2,
+      "closed_issues": 4,
+      "state": "open",
+      "created_at": "2019-10-23T14:38:36Z",
+      "updated_at": "2019-10-28T22:17:15Z",
+      "due_on": null,
+      "closed_at": null
+    },
+    "comments": 2,
+    "created_at": "2019-10-24T21:20:42Z",
+    "updated_at": "2019-10-29T06:50:11Z",
+    "closed_at": "2019-10-28T22:16:51Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/155",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/155",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/155.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/155.patch"
+    },
+    "body": "closes #135 ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/155/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00155.patch b/.gh-pullrequests/00155.patch
new file mode 100644
index 0000000..4d9f4a8
--- /dev/null
+++ b/.gh-pullrequests/00155.patch
@@ -0,0 +1,98 @@
+From 97a95433852528e46864594440e11ba6704533ac Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Thu, 24 Oct 2019 23:20:18 +0200
+Subject: [PATCH 1/2] move ecip 1056 to last call
+
+---
+ _specs/ecip-1056.md | 23 ++++++++++-------------
+ 1 file changed, 10 insertions(+), 13 deletions(-)
+
+diff --git a/_specs/ecip-1056.md b/_specs/ecip-1056.md
+index b349a3e..ccf21f8 100644
+--- a/_specs/ecip-1056.md
++++ b/_specs/ecip-1056.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1056
+ title: Agharta EVM and Protocol Upgrades
+-status: Draft
++status: Last Call
+ type: Meta
+ author: Isaac Ardis <isaac.a@etclabs.org>, Wei Tang <hi@that.world>
+ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/131
+@@ -25,9 +25,10 @@ _Constaninople_ and _Petersburg_ hardforks. The proposed changes for Ethereum Cl
+ 
+ This document proposes the following blocks at which to implement these changes in the Classic networks:
+ 
+-- `1_500_000` on Kotti Classic PoA-testnet (early November 2019)
+-- `5_200_000` on Morden Classic PoW-testnet (early November 2019)
+-- `9_200_000` on Ethereum Classic PoW-mainnet (early December 2019)
++- `TBD` on Morden Classic Testnet (November 13, 2019)
++- `TBD` on Mordor Classic Testnet (November 20, 2019)
++- `TBD` on Kotti Classic Testnet (December 11, 2019)
++- `TBD` on Ethereum Classic Mainnet (January 15, 2020)
+ 
+ For more information on the opcodes and their respective EIPs and implementations, please see the _Specification_
+ section of this document.
+@@ -39,18 +40,12 @@ networks, all of which have been in use on the Ethereum Foundation networks sinc
+ 
+ ### Specification
+ 
+-Enable the following three hard fork features via a new account version `0x1`, as specified in [EIP-1702](https://eips.ethereum.org/EIPS/eip-1702) "Specification" section (commonly known as EIP-1702 variant I):
++Enable the following three hard fork features:
+ 
+ - [EIP 145](https://eips.ethereum.org/EIPS/eip-145) (Bitwise shifting instructions)
+ - [EIP 1014](https://eips.ethereum.org/EIPS/eip-1014) (Skinny `CREATE2` opcode)
+ - [EIP 1052](https://eips.ethereum.org/EIPS/eip-1052) (`EXTCODEHASH` opcode)
+ 
+-Specifically with definition from EIP-1702 "Usage Template" section:
+-
+-- **Version**: `0x1`.
+-- **Parent version**: `0x0`.
+-- **Features**: EIP 145, EIP 1014 and EIP 1052.
+-
+ ### Rationale
+ 
+ __Atomicity__: This protocol specification notably merges the scheduled features of the anticipated _Petersburg_
+@@ -71,10 +66,12 @@ Adoption of the content of this ECIP requires a hard fork as it introduces chang
+ 
+ The following clients with Ethereum Classic support implement the _Constaninople_ and _Petersburg_ features currently:
+ 
+-- Geth Classic: no support
++- Geth Classic: full support in `v6.1.0` and later
+ - Parity Ethereum: all features due to Ethereum Foundation compatibility
+ - Multi Geth: all features due to Ethereum Foundation compatibility
+-- Mantis: all features due to Ethereum Foundation compatibility
++- IOHK Mantis: _no support_
++- Hyperledger Besu: all features due to Ethereum Foundation compatibility
++
+ 
+ ## Copyright
+ 
+
+From 3d2ec4e652f3662f6c8ee747d71d173133dde9c1 Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Mon, 28 Oct 2019 10:53:36 +0100
+Subject: [PATCH 2/2] add testnet block numbers for agharta
+
+---
+ _specs/ecip-1056.md | 6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
+
+diff --git a/_specs/ecip-1056.md b/_specs/ecip-1056.md
+index ccf21f8..33e8e6e 100644
+--- a/_specs/ecip-1056.md
++++ b/_specs/ecip-1056.md
+@@ -25,9 +25,9 @@ _Constaninople_ and _Petersburg_ hardforks. The proposed changes for Ethereum Cl
+ 
+ This document proposes the following blocks at which to implement these changes in the Classic networks:
+ 
+-- `TBD` on Morden Classic Testnet (November 13, 2019)
+-- `TBD` on Mordor Classic Testnet (November 20, 2019)
+-- `TBD` on Kotti Classic Testnet (December 11, 2019)
++- `5_000_381` on Morden Classic Testnet (November 13, 2019)
++- `301_243` on Mordor Classic Testnet (November 20, 2019)
++- `1_705_549` on Kotti Classic Testnet (December 11, 2019)
+ - `TBD` on Ethereum Classic Mainnet (January 15, 2020)
+ 
+ For more information on the opcodes and their respective EIPs and implementations, please see the _Specification_
diff --git a/.gh-pullrequests/00155_546224302.json b/.gh-pullrequests/00155_546224302.json
new file mode 100644
index 0000000..60295cc
--- /dev/null
+++ b/.gh-pullrequests/00155_546224302.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546224302",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/155#issuecomment-546224302",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/155",
+    "id": 546224302,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjIyNDMwMg==",
+    "user": {
+      "login": "developerkevin",
+      "id": 29807183,
+      "node_id": "MDQ6VXNlcjI5ODA3MTgz",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/29807183?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/developerkevin",
+      "html_url": "https://github.com/developerkevin",
+      "followers_url": "https://api.github.com/users/developerkevin/followers",
+      "following_url": "https://api.github.com/users/developerkevin/following{/other_user}",
+      "gists_url": "https://api.github.com/users/developerkevin/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/developerkevin/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/developerkevin/subscriptions",
+      "organizations_url": "https://api.github.com/users/developerkevin/orgs",
+      "repos_url": "https://api.github.com/users/developerkevin/repos",
+      "events_url": "https://api.github.com/users/developerkevin/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/developerkevin/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-25T06:43:20Z",
+    "updated_at": "2019-10-25T06:43:20Z",
+    "author_association": "MEMBER",
+    "body": "Can we move the time (assuming it's the same as last) from 1PM UTC to 1:30 or even 2PM+ UTC?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546224302/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00155_546331115.json b/.gh-pullrequests/00155_546331115.json
new file mode 100644
index 0000000..5b58985
--- /dev/null
+++ b/.gh-pullrequests/00155_546331115.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546331115",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/155#issuecomment-546331115",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/155",
+    "id": 546331115,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjMzMTExNQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-10-25T12:19:03Z",
+    "updated_at": "2019-10-25T12:19:03Z",
+    "author_association": "MEMBER",
+    "body": "There is no way to accurately estimate the time.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/546331115/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00156.json b/.gh-pullrequests/00156.json
new file mode 100644
index 0000000..3e0be04
--- /dev/null
+++ b/.gh-pullrequests/00156.json
@@ -0,0 +1,110 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/156",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/156/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/156/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/156/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/156",
+    "id": 512188987,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzMyMjQ4NzQ2",
+    "number": 156,
+    "title": "move ecip 1050 to last call",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785129,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20meta",
+        "name": "type: meta",
+        "color": "cfd3d7",
+        "default": false,
+        "description": "Accepted best practices"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/1",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/milestone/1",
+      "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/1/labels",
+      "id": 4777611,
+      "node_id": "MDk6TWlsZXN0b25lNDc3NzYxMQ==",
+      "number": 1,
+      "title": "Agharta Hardfork   ",
+      "description": "",
+      "creator": {
+        "login": "realcodywburns",
+        "id": 13103499,
+        "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+        "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/realcodywburns",
+        "html_url": "https://github.com/realcodywburns",
+        "followers_url": "https://api.github.com/users/realcodywburns/followers",
+        "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+        "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+        "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+        "repos_url": "https://api.github.com/users/realcodywburns/repos",
+        "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+        "type": "User",
+        "site_admin": false
+      },
+      "open_issues": 2,
+      "closed_issues": 4,
+      "state": "open",
+      "created_at": "2019-10-23T14:38:36Z",
+      "updated_at": "2019-10-28T22:17:15Z",
+      "due_on": null,
+      "closed_at": null
+    },
+    "comments": 0,
+    "created_at": "2019-10-24T21:24:30Z",
+    "updated_at": "2019-10-29T06:50:37Z",
+    "closed_at": "2019-10-28T22:16:21Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/156",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/156",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/156.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/156.patch"
+    },
+    "body": "ref #135",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/156/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00156.patch b/.gh-pullrequests/00156.patch
new file mode 100644
index 0000000..1335e47
--- /dev/null
+++ b/.gh-pullrequests/00156.patch
@@ -0,0 +1,22 @@
+From 688d394a8e190123163e8606ea8756b9764019ea Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Thu, 24 Oct 2019 23:24:03 +0200
+Subject: [PATCH] Update ecip-1050.md
+
+---
+ _specs/ecip-1050.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1050.md b/_specs/ecip-1050.md
+index fccb15e..515dce0 100644
+--- a/_specs/ecip-1050.md
++++ b/_specs/ecip-1050.md
+@@ -4,7 +4,7 @@ ecip: 1050
+ title: Status Codes
+ author: Brooklyn Zelenka [@expede](https://github.com/expede), [Boris Mann](https://github.com/bmann)
+ discussions-to: https://fission.codes/blockchain/ethclassic
+-status: Draft
++status: Last Call
+ type: Standars Track
+ category: ECBP
+ created: 2018-12-03
diff --git a/.gh-pullrequests/00157.json b/.gh-pullrequests/00157.json
new file mode 100644
index 0000000..90d05d4
--- /dev/null
+++ b/.gh-pullrequests/00157.json
@@ -0,0 +1,119 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/157",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/157/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/157/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/157/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/157",
+    "id": 513003117,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzMyODgwNTAz",
+    "number": 157,
+    "title": "ecip-1061: correct the aztlan spelling as per community request",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785139,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTM5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/status:%20draft",
+        "name": "status: draft",
+        "color": "ffffff",
+        "default": false,
+        "description": "draft stage - can be assigned ecip number and merged, but requires new PR to be Accepted"
+      },
+      {
+        "id": 1154785129,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20meta",
+        "name": "type: meta",
+        "color": "cfd3d7",
+        "default": false,
+        "description": "Accepted best practices"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/1",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/milestone/1",
+      "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/1/labels",
+      "id": 4777611,
+      "node_id": "MDk6TWlsZXN0b25lNDc3NzYxMQ==",
+      "number": 1,
+      "title": "Agharta Hardfork   ",
+      "description": "",
+      "creator": {
+        "login": "realcodywburns",
+        "id": 13103499,
+        "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+        "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/realcodywburns",
+        "html_url": "https://github.com/realcodywburns",
+        "followers_url": "https://api.github.com/users/realcodywburns/followers",
+        "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+        "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+        "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+        "repos_url": "https://api.github.com/users/realcodywburns/repos",
+        "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+        "type": "User",
+        "site_admin": false
+      },
+      "open_issues": 2,
+      "closed_issues": 4,
+      "state": "open",
+      "created_at": "2019-10-23T14:38:36Z",
+      "updated_at": "2019-10-28T22:17:15Z",
+      "due_on": null,
+      "closed_at": null
+    },
+    "comments": 0,
+    "created_at": "2019-10-27T18:29:39Z",
+    "updated_at": "2019-10-29T06:50:05Z",
+    "closed_at": "2019-10-28T22:17:15Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/157",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/157",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/157.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/157.patch"
+    },
+    "body": "",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/157/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00157.patch b/.gh-pullrequests/00157.patch
new file mode 100644
index 0000000..542525e
--- /dev/null
+++ b/.gh-pullrequests/00157.patch
@@ -0,0 +1,38 @@
+From f57031f82309d7c07a665c225c669b970af3148b Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Sun, 27 Oct 2019 19:29:30 +0100
+Subject: [PATCH] ecip-1061: correct the aztlan spelling as per community
+ request
+
+---
+ _specs/ecip-1061.md | 6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
+
+diff --git a/_specs/ecip-1061.md b/_specs/ecip-1061.md
+index 8052678..c903cdc 100644
+--- a/_specs/ecip-1061.md
++++ b/_specs/ecip-1061.md
+@@ -1,7 +1,7 @@
+ ---
+ lang: en
+ ecip: 1061
+-title: Atzlán EVM and Protocol Upgrades
++title: Aztlán EVM and Protocol Upgrades
+ status: Draft
+ type: Meta
+ author: Talha Cross (@soc1c)
+@@ -12,12 +12,12 @@ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
+ ### Simple Summary
+ 
+ Enable the outstanding Ethereum Foundation _Istanbul_ network protocol upgrades on the Ethereum
+-Classic network in a hard-fork code-named _Atzlán_ to enable maximum compatibility across these networks.
++Classic network in a hard-fork code-named _Aztlán_ to enable maximum compatibility across these networks.
+ 
+ ### Abstract
+ 
+ Add support for a subset of protocol-impacting changes introduced in the Ethereum Foundation (ETH) network via the
+-_Istanbul_ hardforks. The proposed changes for Ethereum Classic's _Atzlán_ upgrade include:
++_Istanbul_ hardforks. The proposed changes for Ethereum Classic's _Aztlán_ upgrade include:
+ 
+ - TBD
+ 
diff --git a/.gh-pullrequests/00158.json b/.gh-pullrequests/00158.json
new file mode 100644
index 0000000..ea5de9f
--- /dev/null
+++ b/.gh-pullrequests/00158.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/158",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/158/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/158/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/158/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/158",
+    "id": 513589756,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzMzMzUwMjM3",
+    "number": 158,
+    "title": "Fix ecip-1067 filename",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-10-28T22:24:05Z",
+    "updated_at": "2019-10-29T11:39:15Z",
+    "closed_at": "2019-10-29T11:39:11Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/158",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/158",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/158.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/158.patch"
+    },
+    "body": "",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/158/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00158.patch b/.gh-pullrequests/00158.patch
new file mode 100644
index 0000000..4bf3727
--- /dev/null
+++ b/.gh-pullrequests/00158.patch
@@ -0,0 +1,14 @@
+From d082f8dc37b2d117f968464491117ebc25925f94 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Mon, 28 Oct 2019 23:24:01 +0100
+Subject: [PATCH] Fix ecip-1067 filename
+
+---
+ _specs/{invoke-signer.md => ecip-1067.md} | 0
+ 1 file changed, 0 insertions(+), 0 deletions(-)
+ rename _specs/{invoke-signer.md => ecip-1067.md} (100%)
+
+diff --git a/_specs/invoke-signer.md b/_specs/ecip-1067.md
+similarity index 100%
+rename from _specs/invoke-signer.md
+rename to _specs/ecip-1067.md
diff --git a/.gh-pullrequests/00159.json b/.gh-pullrequests/00159.json
new file mode 100644
index 0000000..29a59f6
--- /dev/null
+++ b/.gh-pullrequests/00159.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/159",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/159/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/159/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/159/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/159",
+    "id": 514629180,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM0MjE3MDgx",
+    "number": 159,
+    "title": "fix: Make Last Call consistent",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-10-30T12:28:05Z",
+    "updated_at": "2019-10-30T14:22:46Z",
+    "closed_at": "2019-10-30T14:22:42Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/159",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/159",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/159.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/159.patch"
+    },
+    "body": "Last Call doesn't show up on our website even if some ECIPs have Last Calls. @TokenHash pointed me to the statuses.yml and I noticed the status for it is called \"Last call\" when everywhere else it is \"Last Call\".\r\n\r\nEven on Ethereum EIP, it's called \"Last Call\" on the same file: https://github.com/ethereum/EIPs/blob/master/_data/statuses.yaml#L1\r\n\r\nI think this is why when it parses that status, it doesn't display it as \"Last call\" is a different string than \"Last Call\".\r\n\r\nHaven't tested it, figured I'd get this fix in a PR and we can all discuss if necessary.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/159/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00159.patch b/.gh-pullrequests/00159.patch
new file mode 100644
index 0000000..8223586
--- /dev/null
+++ b/.gh-pullrequests/00159.patch
@@ -0,0 +1,21 @@
+From 46e6e9dd9ebd5af3cbf20a9b7818e17fe559aad9 Mon Sep 17 00:00:00 2001
+From: Yaz Khoury <yaz.khoury@gmail.com>
+Date: Wed, 30 Oct 2019 08:25:41 -0400
+Subject: [PATCH] fix: Make Last Call consistent
+
+---
+ _data/statuses.yaml | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_data/statuses.yaml b/_data/statuses.yaml
+index dca2885..51277da 100644
+--- a/_data/statuses.yaml
++++ b/_data/statuses.yaml
+@@ -1,6 +1,6 @@
+ - WIP
+ - Draft
+-- Last call
++- Last Call
+ - Accepted
+ - Final
+ - Deferred
diff --git a/.gh-pullrequests/00160.json b/.gh-pullrequests/00160.json
new file mode 100644
index 0000000..278b921
--- /dev/null
+++ b/.gh-pullrequests/00160.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/160",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/160/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/160/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/160/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/160",
+    "id": 516367564,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM1NjMzOTM4",
+    "number": 160,
+    "title": "(re)corrected disscusion-to link",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-01T21:58:02Z",
+    "updated_at": "2019-11-01T23:48:51Z",
+    "closed_at": "2019-11-01T23:48:51Z",
+    "author_association": "CONTRIBUTOR",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/160",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/160",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/160.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/160.patch"
+    },
+    "body": "@sorpaas I dont know why this got changed. the link you put is to something else",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/160/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00160.patch b/.gh-pullrequests/00160.patch
new file mode 100644
index 0000000..23e3fbe
--- /dev/null
+++ b/.gh-pullrequests/00160.patch
@@ -0,0 +1,26 @@
+From b5c56a863840adf28c94e916c5c7c6e369813643 Mon Sep 17 00:00:00 2001
+From: Zac Mitton <zacmitton22@gmail.com>
+Date: Fri, 1 Nov 2019 17:54:17 -0400
+Subject: [PATCH] (re)corrected dusscusion-to link
+
+---
+ _specs/ecip-1067.md | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/_specs/ecip-1067.md b/_specs/ecip-1067.md
+index 284a8f6..e565861 100644
+--- a/_specs/ecip-1067.md
++++ b/_specs/ecip-1067.md
+@@ -1,10 +1,10 @@
+ ---
+ lang: en
+ ecip: 1067
+-title: Standardize OS Level Management of Signature Handling
++title: Standardize OS Level Management of Signature Handling ("invoke-signer")
+ status: Draft
+ type: Interface
+-discussions-to: https://github.com/ethereumclassic/ECIPs/issues/58
++discussions-to: https://github.com/ethereumclassic/ECIPs/issues/147
+ author: Zac Mitton
+ created: 2019-02-07
+ ---
diff --git a/.gh-pullrequests/00161.json b/.gh-pullrequests/00161.json
new file mode 100644
index 0000000..f9fb5ad
--- /dev/null
+++ b/.gh-pullrequests/00161.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/161",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/161/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/161/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/161/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/161",
+    "id": 516386554,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM1NjUwMjIw",
+    "number": 161,
+    "title": "Rename Aztlán as Asgard",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 7,
+    "created_at": "2019-11-01T22:53:12Z",
+    "updated_at": "2019-11-05T23:08:40Z",
+    "closed_at": "2019-11-05T23:03:20Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/161",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/161",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/161.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/161.patch"
+    },
+    "body": "Rename Aztlán as Asgard, which is a better known fictional place, easier to remember and has no ambiguity of spelling.\r\n\r\nTwitter poll:\r\nhttps://twitter.com/BobSummerwill/status/1188479134533484545",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/161/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00161.patch b/.gh-pullrequests/00161.patch
new file mode 100644
index 0000000..b5379d0
--- /dev/null
+++ b/.gh-pullrequests/00161.patch
@@ -0,0 +1,43 @@
+From e4fa53159c7f67ec8d30dce1dba71ad21a19ea7a Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Fri, 1 Nov 2019 15:52:24 -0700
+Subject: [PATCH] =?UTF-8?q?Rename=20Aztl=C3=A1n=20as=20Asgard,=20which=20i?=
+ =?UTF-8?q?s=20a=20better=20known=20fictional=20place,=20easier=20to=20rem?=
+ =?UTF-8?q?ember=20and=20has=20no=20ambiguity=20of=20spelling.?=
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+https://twitter.com/BobSummerwill/status/1188479134533484545
+---
+ _specs/ecip-1061.md | 6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
+
+diff --git a/_specs/ecip-1061.md b/_specs/ecip-1061.md
+index c903cdc..db90df9 100644
+--- a/_specs/ecip-1061.md
++++ b/_specs/ecip-1061.md
+@@ -1,7 +1,7 @@
+ ---
+ lang: en
+ ecip: 1061
+-title: Aztlán EVM and Protocol Upgrades
++title: Asgard EVM and Protocol Upgrades
+ status: Draft
+ type: Meta
+ author: Talha Cross (@soc1c)
+@@ -12,12 +12,12 @@ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
+ ### Simple Summary
+ 
+ Enable the outstanding Ethereum Foundation _Istanbul_ network protocol upgrades on the Ethereum
+-Classic network in a hard-fork code-named _Aztlán_ to enable maximum compatibility across these networks.
++Classic network in a hard-fork code-named _Asgard_ to enable maximum compatibility across these networks.
+ 
+ ### Abstract
+ 
+ Add support for a subset of protocol-impacting changes introduced in the Ethereum Foundation (ETH) network via the
+-_Istanbul_ hardforks. The proposed changes for Ethereum Classic's _Aztlán_ upgrade include:
++_Istanbul_ hardforks. The proposed changes for Ethereum Classic's _Asgard_ upgrade include:
+ 
+ - TBD
+ 
diff --git a/.gh-pullrequests/00161_549030022.json b/.gh-pullrequests/00161_549030022.json
new file mode 100644
index 0000000..201b109
--- /dev/null
+++ b/.gh-pullrequests/00161_549030022.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549030022",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/161#issuecomment-549030022",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/161",
+    "id": 549030022,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTAzMDAyMg==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-02T10:16:28Z",
+    "updated_at": "2019-11-02T10:16:28Z",
+    "author_association": "MEMBER",
+    "body": "The Twitter poll is ecosystem signalling in support of this proposal.\r\n\r\nThe actually governance happens within the ECIP process, which is why I have created this pull request, for discussion within the ECIP process.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549030022/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00161_549030915.json b/.gh-pullrequests/00161_549030915.json
new file mode 100644
index 0000000..8a49033
--- /dev/null
+++ b/.gh-pullrequests/00161_549030915.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549030915",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/161#issuecomment-549030915",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/161",
+    "id": 549030915,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTAzMDkxNQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-02T10:29:13Z",
+    "updated_at": "2019-11-02T10:29:13Z",
+    "author_association": "MEMBER",
+    "body": "This Twitter poll indicates support for Aztlan.\r\n\r\nhttps://twitter.com/BobSummerwill/status/1188070604286480384",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549030915/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00161_549142972.json b/.gh-pullrequests/00161_549142972.json
new file mode 100644
index 0000000..abb002e
--- /dev/null
+++ b/.gh-pullrequests/00161_549142972.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549142972",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/161#issuecomment-549142972",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/161",
+    "id": 549142972,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTE0Mjk3Mg==",
+    "user": {
+      "login": "drd34d",
+      "id": 30156189,
+      "node_id": "MDQ6VXNlcjMwMTU2MTg5",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/30156189?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/drd34d",
+      "html_url": "https://github.com/drd34d",
+      "followers_url": "https://api.github.com/users/drd34d/followers",
+      "following_url": "https://api.github.com/users/drd34d/following{/other_user}",
+      "gists_url": "https://api.github.com/users/drd34d/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/drd34d/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/drd34d/subscriptions",
+      "organizations_url": "https://api.github.com/users/drd34d/orgs",
+      "repos_url": "https://api.github.com/users/drd34d/repos",
+      "events_url": "https://api.github.com/users/drd34d/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/drd34d/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-03T14:40:22Z",
+    "updated_at": "2019-11-03T14:47:45Z",
+    "author_association": "NONE",
+    "body": "A Twitter poll is definatelly not the place for **any** governance. What's next, a Straw Poll?\r\n\r\nAsgard could be too similar to Agharta for the non-english speakers and thus slightly confusing. Don't see a reason to rename Aztlán/Aztlan at this point.\r\n\r\nedit: not that any are necessarily english words but if you use a translator things may look different",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549142972/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00161_549153989.json b/.gh-pullrequests/00161_549153989.json
new file mode 100644
index 0000000..44ef493
--- /dev/null
+++ b/.gh-pullrequests/00161_549153989.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549153989",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/161#issuecomment-549153989",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/161",
+    "id": 549153989,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTE1Mzk4OQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-03T16:22:39Z",
+    "updated_at": "2019-11-03T16:22:39Z",
+    "author_association": "MEMBER",
+    "body": "@drd34d The poll was just that.  A poll.  Signalling.\r\n\r\nThe governance is happening on the #ecips channel in the ETC Discord (and in these comments), where incidentally we seem to have a rough consensus AGAINST any more \"A-names\".   Need something more different from Atlantis, and should also be easily understood by non-native speakers, yes.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549153989/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00161_549842935.json b/.gh-pullrequests/00161_549842935.json
new file mode 100644
index 0000000..1c0f27f
--- /dev/null
+++ b/.gh-pullrequests/00161_549842935.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549842935",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/161#issuecomment-549842935",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/161",
+    "id": 549842935,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTg0MjkzNQ==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T14:20:12Z",
+    "updated_at": "2019-11-05T14:20:12Z",
+    "author_association": "MEMBER",
+    "body": "Given that @soc1c changed the spelling to Aztlan (which is the correct spelling for the Aztec realm and is the culturally appropriate way to call it), I see no reason to change the name to Asgard.\r\n\r\nThis is all bike shedding debates. Let's stick to Agharta and Aztlan and focus our naming efforts on future hardforks by having an open process for people to contribute their names.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549842935/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00161_550063173.json b/.gh-pullrequests/00161_550063173.json
new file mode 100644
index 0000000..d277da0
--- /dev/null
+++ b/.gh-pullrequests/00161_550063173.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550063173",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/161#issuecomment-550063173",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/161",
+    "id": 550063173,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDA2MzE3Mw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T23:03:20Z",
+    "updated_at": "2019-11-05T23:03:20Z",
+    "author_association": "MEMBER",
+    "body": "Fair enough, @YazzyYaz.  I think, as @stevanlohja highlighted, that:\r\n\r\nAtlantis, Agharta and then Aztlán will be confusing for international audiences, but if I am outlier than I am happy to withdraw this proposal.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550063173/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00161_550064742.json b/.gh-pullrequests/00161_550064742.json
new file mode 100644
index 0000000..3ca410b
--- /dev/null
+++ b/.gh-pullrequests/00161_550064742.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550064742",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/161#issuecomment-550064742",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/161",
+    "id": 550064742,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDA2NDc0Mg==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T23:08:40Z",
+    "updated_at": "2019-11-05T23:08:40Z",
+    "author_association": "MEMBER",
+    "body": "@bobsummerwill I agree with you on the A lettering. A big part of the future hard forks would be to avoid the name A for a few hardforks post-Aztlan. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550064742/reactions",
+      "total_count": 2,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 1,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00162.json b/.gh-pullrequests/00162.json
new file mode 100644
index 0000000..409e0e2
--- /dev/null
+++ b/.gh-pullrequests/00162.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/162",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/162/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/162/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/162/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/162",
+    "id": 516418756,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM1Njc4MDI4",
+    "number": 162,
+    "title": "Defined a new IP protection process for ECIPs.",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 3,
+    "created_at": "2019-11-02T00:42:48Z",
+    "updated_at": "2019-11-05T01:14:07Z",
+    "closed_at": "2019-11-05T01:14:07Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/162",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/162",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/162.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/162.patch"
+    },
+    "body": "Defined a new IP protection process for ECIPs.\r\nMandatory use of Apache 2.0 for ECIPs, plus optional use of various copyleft license for the source code.\r\nMandatory DCOs for contributions with real name requirement.\r\nOption for ECIP editors to override the real name requirement if they feel a contribution is exceptional.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/162/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 1,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00162.patch b/.gh-pullrequests/00162.patch
new file mode 100644
index 0000000..28355b5
--- /dev/null
+++ b/.gh-pullrequests/00162.patch
@@ -0,0 +1,191 @@
+From e7331b9e0e14c455a9b9c7e3ebc5d38b3ad36a1f Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Fri, 1 Nov 2019 17:42:06 -0700
+Subject: [PATCH] Defined a new IP protection process for ECIPs. Mandatory use
+ of Apache 2.0 for ECIPs, plus optional use of various copyleft license for
+ the source code. Mandatory DCOs for contributions with real name requirement.
+ Option for ECIP editors to override the real name requirement if they feel a
+ contribution is exceptional.
+
+---
+ _specs/ecip-1000.md | 145 +++++++++++++++++++++++++++++++++-----------
+ 1 file changed, 109 insertions(+), 36 deletions(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index 1debd53..2b88e71 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -293,64 +293,137 @@ To avoid doubt: comments and status are unrelated metrics to judge an ECIP, and
+ 
+ ### Specification
+ 
+-New ECIPs may be accepted with the following licenses. Each new ECIP must identify at least one acceptable license in its preamble. The License header in the preamble must be placed after the Created header. Each license must be referenced by their respective abbreviation given below.
++All new ECIPs should use Apache 2.0 or newer licensing for the specification and
++may use Apache 2.0+ or various other copyleft licenses for any associated
++example source code.  Earlier versions of ECIP-1000 allowed a wider
++range of licenses, but that left loopholes for IP attacks on ETC.
+ 
+-For example, a preamble might include the following License header:
++The preamble for all new ECIPs should look like this one of these two options:
+ 
+-    License: BSD-2-Clause
+-             GNU-All-Permissive
++    License: Apache-2.0
++    License: Apache-2.0+
+ 
+-In this case, the ECIP text is fully licensed under both the OSI-approved BSD 2-clause license as well as the GNU All-Permissive License, and anyone may modify and redistribute the text provided they comply with the terms of *either* license. In other words, the license list is an "OR choice", not an "AND also" requirement.
+ 
+-It is also possible to license source code differently from the ECIP text. A optional License-Code header is placed after the License header. Again, each license must be referenced by their respective abbreviation given below.
++### Why Apache 2.0?
++
++There are numerous permissive software licenses which are
++[OSI approved](https://opensource.org/licenses/alphabetical),
++with a much shorter list of
++[popular ones](https://opensource.org/licenses) (really boiling down
++to MIT, BSD and Apache).  So why mandate Apache 2.0 or newer?
++
++It essentially boils down to compatibility with GPLv3 in combination with protection
++from potential software patent trolling and other IP attacks.
++
++Apache 2.0 is the Free Software Foundation’s own recommendation for
++permissive licences for that very reason:
++
++"This is a free software license, compatible with version 3 of the GNU GPL."
++
++"Please note that this license is not compatible with GPL version 2, because it has some requirements that are not in that GPL version. These include certain patent termination and indemnification provisions. The patent termination provision is a good thing, which is why we recommend the Apache 2.0 license for substantial programs over other lax permissive licenses."
++
++[Various Licenses and Comments about them, Free Software Foundation](https://www.gnu.org/licenses/license-list.html#apache2)
++
++There is a good description of [license compatibility](https://en.wikipedia.org/wiki/License_compatibility) on Wikipedia.
++
++
++### Optional alternative licensing for example source code
++
++Any example code source code associated with an ECIP should ideally be licensed as Apache 2.0 or
++newer in the same way as the specification, or can optionally be licensed under various copyleft
++alternative licenses.
++
++Each license must be referenced by their respective abbreviation given below.
+ 
+ For example, a preamble specifying the optional License-Code header might look like:
+ 
+-    License: BSD-2-Clause
+-             GNU-All-Permissive
+-    License-Code: GPL-2.0+
++    License: Apache-2.0
++    License-Code: GPL-3.0+
+ 
+-In this case, the code in the ECIP is not available under the BSD or All-Permissive licenses, but only under the terms of the GNU General Public License (GPL), version 2 or newer.
+-If the code were to be available under *only* version 2 exactly, the "+" symbol should be removed from the license abbreviation.
+-For a later version (eg, GPL 3.0), you would increase the version number (and retain or remove the "+" depending on intent).
++In this case, the code in the ECIP is not available under the Apache 2.0,
++license but only under the terms of the GNU General Public License (GPL), version 3 or newer.
++If the code were to be available under *only* version 3 exactly, the "+" symbol should
++be removed from the license abbreviation.
+ 
+-    License-Code: GPL-2.0   # This refers to GPL v2.0 *only*, no later license versions are acceptable.
+-    License-Code: GPL-2.0+  # This refers to GPL v2.0 *or later*.
+     License-Code: GPL-3.0   # This refers to GPL v3.0 *only*, no later license versions are acceptable.
+     License-Code: GPL-3.0+  # This refers to GPL v3.0 *or later*.
+ 
+ In the event that the licensing for the text or code is too complicated to express with a simple list of alternatives, the list should instead be replaced with the single term "Complex". In all cases, details of the licensing terms must be provided in the Copyright section of the ECIP.
+ 
+-ECIPs are not required to be *exclusively* licensed under approved terms, and may also be licensed under unacceptable licenses *in addition to* at least one acceptable license.
+-In this case, only the acceptable license(s) should be listed in the License and License-Code headers.
+ 
+-### Recommended licenses
++### Preamble codes for acceptable licenses
+ 
+-* Apache-2.0: [Apache License, version 2.0](http://www.apache.org/licenses/LICENSE-2.0)
+-* BSD-2-Clause: [OSI-approved BSD 2-clause license](https://opensource.org/licenses/BSD-2-Clause)
+-* BSD-3-Clause: [OSI-approved BSD 3-clause license](https://opensource.org/licenses/BSD-3-Clause)
+-* CC0-1.0: [Creative Commons CC0 1.0 Universal](https://creativecommons.org/publicdomain/zero/1.0/)
+-* GNU-All-Permissive: [GNU All-Permissive License](http://www.gnu.org/prep/maintain/html_node/License-Notices-for-Other-Files.html)
++* AGPL-3.0+: [GNU Affero General Public License (AGPL), version 3 or newer](https://opensource.org/licenses/AGPL-3.0)
++* Apache-2.0+: [Apache License, version 2 or newer](https://opensource.org/licenses/Apache-2.0)
++* GPL-3.0+: [GNU General Public License (GPL), version 3 or newer](https://opensource.org/licenses/gpl-3.0)
++* LGPL-3.0+: [GNU Lesser General Public License (LGPL), version 2 or newer](https://opensource.org/licenses/lgpl-3.0)
++* MPL-2.0+: [Mozilla Public License (LGPL), version 2 or newer](https://opensource.org/licenses/mpl-2.0)
+ 
+-In addition, it is recommended that literal code included in the ECIP be dual-licensed under the same license terms as the project it modifies. For example, literal code intended for Ethereum Classic Core would ideally be dual-licensed under the MIT license terms as well as one of the above with the rest of the ECIP text.
+ 
+-### Not recommended, but acceptable licenses
++## Developer Certificate of Origin (DCO)
+ 
+-* BSL-1.0: [Boost Software License, version 1.0](http://www.boost.org/LICENSE_1_0.txt)
+-* CC-BY-4.0: [Creative Commons Attribution 4.0 International](https://creativecommons.org/licenses/by/4.0/)
+-* CC-BY-SA-4.0: [Creative Commons Attribution-ShareAlike 4.0 International](https://creativecommons.org/licenses/by-sa/4.0/)
+-* MIT: [Expat/MIT/X11 license](https://opensource.org/licenses/MIT)
+-* AGPL-3.0+: [GNU Affero General Public License (AGPL), version 3 or newer](http://www.gnu.org/licenses/agpl-3.0.en.html)
+-* FDL-1.3: [GNU Free Documentation License, version 1.3](http://www.gnu.org/licenses/fdl-1.3.en.html)
+-* GPL-2.0+: [GNU General Public License (GPL), version 2 or newer](http://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html)
+-* LGPL-2.1+: [GNU Lesser General Public License (LGPL), version 2.1 or newer](http://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html)
++All new ECIPs should include a [Developer Certificate of Origin](https://en.wikipedia.org/wiki/Developer_Certificate_of_Origin) sign-off.
+ 
+-## Rationale
++The sign off needs to be using your legal name, not a pseudonym. Git has a built-in mechanism to allow this with the -s or --signoff argument to git commit command, providing your user.name and user.email have been setup correctly.
++
++A DCO is a simple affirmation that the source code being submitted originated from the developer, or
++that the developer has permission to submit the code.  DCOs are the primary defence for open source
++projects against patent trolling or other IP attacks.
++
++DCOs were introduced for all contributions to the Linux Kernel in 2004
++following the [SCO-Linux disputes](https://en.wikipedia.org/wiki/SCO%E2%80%93Linux_disputes).
++
++DCO with real-name sign-off is the mandatory IP protection bar for all
++[Hyperledger](https://hyperledger.org) projects, based on decades of
++practical experience on such matters at the Linux Foundation across
++their [raft of collaboration projects](https://www.linuxfoundation.org/projects/).
++
++This IP protection was added to the ECIP process in November 2019,
++when our [experience with ProgPOW](https://bobsummerwill.com/2019/09/17/progpow-author-kristy-leigh-minehan-uninvited-from-etc-summit/)
++exposed the complete lack of appropriate IP protection within the EIP process, and
++some loopholes within the existing ETC process due to lack of DCOs.
++
++
++## But isn't ETC about permissionless and privacy?
++
++For users of the platform, absolutely, but the process for every
++open source project on the planet is and always has been permissioned.
++
++No individual has an *unconditional* right to inclusion within any
++particular ecosystem.  Reputation does matter.  You cannot "Code Audit"
++your way through a situation where a predator is socially attacking your
++project.  Exclusion of bad actors is essential to the health of your
++ecosystem.  ETC's social layer is very strong, but systemic defenses
++are also very important.
++
++Rick Falkvinge "Psychopath Code: Let's talk about predators"
++https://www.youtube.com/watch?v=Zkg_-_HwRcI
++
++No individual has an *unconditional* right to expect their contributions
++to be accepted by any project.  All open source projects define a set
++of maintainers, who are the gatekeeper who maintain the quality bar
++using a permissioning system.  For the ECIP process those gatekeepers
++are the ECIP editors.  All proposals must be well-formed and must
++meet the requirements defined in this ECIP.  Anonymous contributors
++do not have the same risk profile as known individuals.  Many
++incredibly valuable contributions have been made to open source
++projects by anonymous individuals, but they do need to be treated with
++a different risk assessment framework.
++
++At the time of adoption of this stronger IP policy there were no accepted
++EIPs or ECIPs proposed by anonymous individuals for either ETH or ETC,
++in the lifetime of both projects.  ProgPOW will be the very first
++instance of that, if it is accepted into ETH as appears likely.
++
++
++## What if some incredibly valuable ECIP is proposed by an anon?
+ 
+-**Why are there software licenses included?**
++The ECIP editors can choose to "bless something through" without the
++real name requirement, but they are putting their own reputations
++on the line by doing so.  Pressing that "override button" may be a
++serious risk in most cases, but we retain that optional for exceptional
++situations.
+ 
+-* Some ECIPs, especially consensus layer, may include literal code in the ECIP itself which may not be available under the exact license terms of the ECIP.
+-* Despite this, not all software licenses would be acceptable for content included in ECIPs.
+ 
+ # See Also
+ 
diff --git a/.gh-pullrequests/00162_549470048.json b/.gh-pullrequests/00162_549470048.json
new file mode 100644
index 0000000..f2bcb7b
--- /dev/null
+++ b/.gh-pullrequests/00162_549470048.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549470048",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/162#issuecomment-549470048",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/162",
+    "id": 549470048,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTQ3MDA0OA==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-04T17:50:26Z",
+    "updated_at": "2019-11-04T18:10:36Z",
+    "author_association": "MEMBER",
+    "body": "I would leave the license options as they are, implement DCO, but with no identification requirement for developers.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549470048/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00162_549511849.json b/.gh-pullrequests/00162_549511849.json
new file mode 100644
index 0000000..8a114d2
--- /dev/null
+++ b/.gh-pullrequests/00162_549511849.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549511849",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/162#issuecomment-549511849",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/162",
+    "id": 549511849,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTUxMTg0OQ==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-04T19:33:28Z",
+    "updated_at": "2019-11-04T19:33:28Z",
+    "author_association": "MEMBER",
+    "body": "@bobsummerwill Thanks for taking the time to look at this file. IMHO the best thing to do here would be to delete the file all together, and add a LICENSE file to the root of the repo, which contains the apache 2.0 license. \r\n\r\nThe rest takes care of itself.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549511849/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00162_549619457.json b/.gh-pullrequests/00162_549619457.json
new file mode 100644
index 0000000..75b8cf0
--- /dev/null
+++ b/.gh-pullrequests/00162_549619457.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549619457",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/162#issuecomment-549619457",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/162",
+    "id": 549619457,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTYxOTQ1Nw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T01:14:07Z",
+    "updated_at": "2019-11-05T01:14:07Z",
+    "author_association": "MEMBER",
+    "body": "I will retire this in favor of collaborating on @BelfordZ's approach on #163.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549619457/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163.json b/.gh-pullrequests/00163.json
new file mode 100644
index 0000000..12c1be5
--- /dev/null
+++ b/.gh-pullrequests/00163.json
@@ -0,0 +1,112 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163",
+    "id": 517369899,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM2NDUyMjE2",
+    "number": 163,
+    "title": "fix: add apache 2 license🚧",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1658195407,
+        "node_id": "MDU6TGFiZWwxNjU4MTk1NDA3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/WIP",
+        "name": "WIP",
+        "color": "e99695",
+        "default": false,
+        "description": "Work in progress."
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "assignees": [
+      {
+        "login": "BelfordZ",
+        "id": 1787231,
+        "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+        "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/BelfordZ",
+        "html_url": "https://github.com/BelfordZ",
+        "followers_url": "https://api.github.com/users/BelfordZ/followers",
+        "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+        "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+        "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+        "repos_url": "https://api.github.com/users/BelfordZ/repos",
+        "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+        "type": "User",
+        "site_admin": false
+      }
+    ],
+    "milestone": null,
+    "comments": 45,
+    "created_at": "2019-11-04T20:01:24Z",
+    "updated_at": "2019-11-11T18:47:47Z",
+    "closed_at": "2019-11-09T00:03:17Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/163",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/163.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/163.patch"
+    },
+    "body": "# THIS PROPOSAL HAS NOTHING TO DO WITH DCO, REAL NAMES, OR ANY RESTRICTIONS ON WHO CAN CONTRIBUTE\r\n\r\nref https://github.com/ethereumclassic/ECIPs/pull/162\r\n\r\nAll ECIP contributors who specified licenses other than apache 2.0 must resubmit their ECIP, removing the license. ( good job everyone, there are no examples of this.)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163.patch b/.gh-pullrequests/00163.patch
new file mode 100644
index 0000000..5e82cd4
--- /dev/null
+++ b/.gh-pullrequests/00163.patch
@@ -0,0 +1,183 @@
+From a8f55f1baf0f608b6be54ffceb217db7aca3a3eb Mon Sep 17 00:00:00 2001
+From: Zachary Belford <belfordz66@gmail.com>
+Date: Mon, 4 Nov 2019 12:01:07 -0800
+Subject: [PATCH 1/4] fix: add apache 2 license
+
+---
+ LICENSE | 11 +++++++++++
+ 1 file changed, 11 insertions(+)
+ create mode 100644 LICENSE
+
+diff --git a/LICENSE b/LICENSE
+new file mode 100644
+index 0000000..51fca54
+--- /dev/null
++++ b/LICENSE
+@@ -0,0 +1,11 @@
++Licensed under the Apache License, Version 2.0 (the "License");
++you may not use this file except in compliance with the License.
++You may obtain a copy of the License at
++
++    http://www.apache.org/licenses/LICENSE-2.0
++
++Unless required by applicable law or agreed to in writing, software
++distributed under the License is distributed on an "AS IS" BASIS,
++WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
++See the License for the specific language governing permissions and
++limitations under the License.
+
+From 62df26ca44b9beac05ef33b7789a66be2122f76d Mon Sep 17 00:00:00 2001
+From: Zachary Belford <belfordz66@gmail.com>
+Date: Mon, 4 Nov 2019 12:41:10 -0800
+Subject: [PATCH 2/4] fix: no custom license crap
+
+---
+ _specs/ecip-1000.md | 59 +--------------------------------------------
+ 1 file changed, 1 insertion(+), 58 deletions(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index 1debd53..40eba95 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -293,64 +293,7 @@ To avoid doubt: comments and status are unrelated metrics to judge an ECIP, and
+ 
+ ### Specification
+ 
+-New ECIPs may be accepted with the following licenses. Each new ECIP must identify at least one acceptable license in its preamble. The License header in the preamble must be placed after the Created header. Each license must be referenced by their respective abbreviation given below.
+-
+-For example, a preamble might include the following License header:
+-
+-    License: BSD-2-Clause
+-             GNU-All-Permissive
+-
+-In this case, the ECIP text is fully licensed under both the OSI-approved BSD 2-clause license as well as the GNU All-Permissive License, and anyone may modify and redistribute the text provided they comply with the terms of *either* license. In other words, the license list is an "OR choice", not an "AND also" requirement.
+-
+-It is also possible to license source code differently from the ECIP text. A optional License-Code header is placed after the License header. Again, each license must be referenced by their respective abbreviation given below.
+-
+-For example, a preamble specifying the optional License-Code header might look like:
+-
+-    License: BSD-2-Clause
+-             GNU-All-Permissive
+-    License-Code: GPL-2.0+
+-
+-In this case, the code in the ECIP is not available under the BSD or All-Permissive licenses, but only under the terms of the GNU General Public License (GPL), version 2 or newer.
+-If the code were to be available under *only* version 2 exactly, the "+" symbol should be removed from the license abbreviation.
+-For a later version (eg, GPL 3.0), you would increase the version number (and retain or remove the "+" depending on intent).
+-
+-    License-Code: GPL-2.0   # This refers to GPL v2.0 *only*, no later license versions are acceptable.
+-    License-Code: GPL-2.0+  # This refers to GPL v2.0 *or later*.
+-    License-Code: GPL-3.0   # This refers to GPL v3.0 *only*, no later license versions are acceptable.
+-    License-Code: GPL-3.0+  # This refers to GPL v3.0 *or later*.
+-
+-In the event that the licensing for the text or code is too complicated to express with a simple list of alternatives, the list should instead be replaced with the single term "Complex". In all cases, details of the licensing terms must be provided in the Copyright section of the ECIP.
+-
+-ECIPs are not required to be *exclusively* licensed under approved terms, and may also be licensed under unacceptable licenses *in addition to* at least one acceptable license.
+-In this case, only the acceptable license(s) should be listed in the License and License-Code headers.
+-
+-### Recommended licenses
+-
+-* Apache-2.0: [Apache License, version 2.0](http://www.apache.org/licenses/LICENSE-2.0)
+-* BSD-2-Clause: [OSI-approved BSD 2-clause license](https://opensource.org/licenses/BSD-2-Clause)
+-* BSD-3-Clause: [OSI-approved BSD 3-clause license](https://opensource.org/licenses/BSD-3-Clause)
+-* CC0-1.0: [Creative Commons CC0 1.0 Universal](https://creativecommons.org/publicdomain/zero/1.0/)
+-* GNU-All-Permissive: [GNU All-Permissive License](http://www.gnu.org/prep/maintain/html_node/License-Notices-for-Other-Files.html)
+-
+-In addition, it is recommended that literal code included in the ECIP be dual-licensed under the same license terms as the project it modifies. For example, literal code intended for Ethereum Classic Core would ideally be dual-licensed under the MIT license terms as well as one of the above with the rest of the ECIP text.
+-
+-### Not recommended, but acceptable licenses
+-
+-* BSL-1.0: [Boost Software License, version 1.0](http://www.boost.org/LICENSE_1_0.txt)
+-* CC-BY-4.0: [Creative Commons Attribution 4.0 International](https://creativecommons.org/licenses/by/4.0/)
+-* CC-BY-SA-4.0: [Creative Commons Attribution-ShareAlike 4.0 International](https://creativecommons.org/licenses/by-sa/4.0/)
+-* MIT: [Expat/MIT/X11 license](https://opensource.org/licenses/MIT)
+-* AGPL-3.0+: [GNU Affero General Public License (AGPL), version 3 or newer](http://www.gnu.org/licenses/agpl-3.0.en.html)
+-* FDL-1.3: [GNU Free Documentation License, version 1.3](http://www.gnu.org/licenses/fdl-1.3.en.html)
+-* GPL-2.0+: [GNU General Public License (GPL), version 2 or newer](http://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html)
+-* LGPL-2.1+: [GNU Lesser General Public License (LGPL), version 2.1 or newer](http://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html)
+-
+-## Rationale
+-
+-**Why are there software licenses included?**
+-
+-* Some ECIPs, especially consensus layer, may include literal code in the ECIP itself which may not be available under the exact license terms of the ECIP.
+-* Despite this, not all software licenses would be acceptable for content included in ECIPs.
++You may not specify a license.
+ 
+ # See Also
+ 
+
+From a22cb4787f20b980ad07e01c2ef78216f99b4bda Mon Sep 17 00:00:00 2001
+From: Zachary Belford <belfordz66@gmail.com>
+Date: Mon, 4 Nov 2019 12:44:54 -0800
+Subject: [PATCH 3/4] fix: more license trash
+
+---
+ _specs/ecip-1000.md | 11 +----------
+ 1 file changed, 1 insertion(+), 10 deletions(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index 40eba95..74152cd 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -18,10 +18,6 @@ We intend ECIPs to be the primary mechanism for proposing new features, for coll
+ 
+ Because the ECIPs are maintained as text files in a versioned repository, their revision history is the historical record of the feature proposal.
+ 
+-# Copyright
+-
+-This ECIP is licensed Apache-2, originally by [Luke Dashjr](https://github.com/luke-jr) under BSD 2-clause license.
+-
+ # ECIP Workflow
+ 
+ ## Introduction
+@@ -112,7 +108,6 @@ Each ECIP should have the following parts:
+ 
+ - **Preamble** -- Headers containing metadata about the ECIP [see below](https://github.com/ethereumclassic/ECIPs/blob/master/ECIPs/ECIP-1000.mediawiki#ecip-header-preamble).
+ - **Abstract** -- A short (~200 word) description of the technical issue being addressed.
+-- **Copyright** -- The ECIP must be explicitly licensed under acceptable copyright terms [see below](https://github.com/ethereumclassic/ECIPs/blob/master/ECIPs/ECIP-1000.mediawiki#ecip-licensing)
+ - **Specification** -- The technical specification should describe the syntax and semantics of any new feature. It should be detailed enough to allow competing, interoperable implementations for any of the current Ethereum Classic platforms.
+ - **Motivation** -- The motivation is critical for ECIPs that want to change the Ethereum Classic protocol. It should clearly explain why the existing protocol is inadequate to address the problem that the ECIP solves.
+ - **Rationale** -- The rationale fleshes out the specification by describing what motivated the design and why particular design decisions were made. It should describe alternate designs that were considered and related work. It should provide evidence of consensus within the community and discuss important objections or concerns raised during discussion.
+@@ -133,8 +128,6 @@ Each ECIP must begin with an RFC 822 style header preamble. The headers must app
+ - **Status:** (Draft | Last Call | Accepted | Final | Deferred | Replaced | Rejected | Withdrawn)
+ - **Type:** (Standards Track | Informational | Process)
+ - **Created:** (date created on, in ISO 8601 (yyyy-mm-dd) format)
+-- **License:** (abbreviation for approved license(s))
+-- **License-Code:** (abbreviation for code under different approved license(s))
+ - **Requires:** (ECIP number(s))
+ - **Replaces:** (ECIP number)
+ - **Superseded-By:** (ECIP number)
+@@ -291,9 +284,7 @@ To avoid doubt: comments and status are unrelated metrics to judge an ECIP, and
+ 
+ ## ECIP Licensing
+ 
+-### Specification
+-
+-You may not specify a license.
++You may not specify a license. Claims to any license other than the one specified in the repository root are invalid.
+ 
+ # See Also
+ 
+
+From e48998cfc123579203de70dc8a01ec86060cf602 Mon Sep 17 00:00:00 2001
+From: Zachary Belford <belfordz66@gmail.com>
+Date: Mon, 4 Nov 2019 12:48:26 -0800
+Subject: [PATCH 4/4] fix: add link to license
+
+---
+ _specs/ecip-1000.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index 74152cd..c3d29c1 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -284,7 +284,7 @@ To avoid doubt: comments and status are unrelated metrics to judge an ECIP, and
+ 
+ ## ECIP Licensing
+ 
+-You may not specify a license. Claims to any license other than the one specified in the repository root are invalid.
++You may not specify a license. Claims to any license other than the one specified [here](https://github.com/ethereumclassic/ECIPs/blob/master/LICENSE) are invalid.
+ 
+ # See Also
+ 
diff --git a/.gh-pullrequests/00163_549614602.json b/.gh-pullrequests/00163_549614602.json
new file mode 100644
index 0000000..663a1cc
--- /dev/null
+++ b/.gh-pullrequests/00163_549614602.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549614602",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-549614602",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 549614602,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTYxNDYwMg==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T00:52:16Z",
+    "updated_at": "2019-11-05T00:54:17Z",
+    "author_association": "MEMBER",
+    "body": "We will also need DCOs from all existing contributors (should not require \"decloaking\" for any pseudonymous prior contributors) and confirmation that they agree to the relicensing.  The copyright sits with the contributors, not with the repository.   We need everyone's consent to relicense, but I think this a GREAT approach.   Let me stew on it and come back with feedback.   Will also raise with the IP lawyers for their input.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549614602/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 1,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_549617969.json b/.gh-pullrequests/00163_549617969.json
new file mode 100644
index 0000000..fbe912a
--- /dev/null
+++ b/.gh-pullrequests/00163_549617969.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549617969",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-549617969",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 549617969,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTYxNzk2OQ==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T01:07:53Z",
+    "updated_at": "2019-11-05T01:07:53Z",
+    "author_association": "MEMBER",
+    "body": "I disagree on changing licensing conditions in the current ECIP-1000 in this repo and making past ECIP contributors to agree on a single option retroactively based on no rational argument whatsoever.\r\n\r\nRelated to #162 and what is written in the comments here, there is no rational argument, even less rough consensus, on making past contributors retroactively agree on DCOs.\r\n\r\nAny new changes conditions should apply going forward.\r\n\r\nThe option of \"decloaking\" retroactively or imposing using developer legal name should not even be  under discussion in ETC.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549617969/reactions",
+      "total_count": 4,
+      "+1": 4,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_549664670.json b/.gh-pullrequests/00163_549664670.json
new file mode 100644
index 0000000..deff4e8
--- /dev/null
+++ b/.gh-pullrequests/00163_549664670.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549664670",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-549664670",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 549664670,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTY2NDY3MA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T05:07:36Z",
+    "updated_at": "2019-11-05T05:09:25Z",
+    "author_association": "MEMBER",
+    "body": "Just to be clear - we CANNOT commit this change (which relicenses the repository) without the consent of all of the contributors to date.  There are 55 of them.\r\n\r\nThis is why licensing is so important to get right up-front.\r\n\r\nhttps://bobsummerwill.com/2016/07/12/ethereum-everywhere/ and https://bobsummerwill.com/2016/07/12/c-re-licensing-plan/ detail the 5-month long process I went through for cpp-ethereum, only for it be blocked by Parity at the last minute.\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549664670/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_549681896.json b/.gh-pullrequests/00163_549681896.json
new file mode 100644
index 0000000..ae86bee
--- /dev/null
+++ b/.gh-pullrequests/00163_549681896.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549681896",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-549681896",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 549681896,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTY4MTg5Ng==",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T06:31:20Z",
+    "updated_at": "2019-11-05T07:12:18Z",
+    "author_association": "MEMBER",
+    "body": "Ok. This is your wind mill to tilt at, it is not important to me and wastes resources. \r\n\r\n.I'm fine with mine being relicensed and future ecips being apache 2\r\n I have 5,currently , 2 are explicitly cc0. Anyone is free to use anything I have written, said, or thought without need to even cite as reference. No warranty should ever be assumed unless expressly stated. there is never a situation where I will ever enforce copyright on any of my work.\r\n\r\n. This looks good to me as it is grammatical correct and functional accomplishes its stated goal. Please add a tracker to indicate progress\r\nAdding wip to block merge",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549681896/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_549704201.json b/.gh-pullrequests/00163_549704201.json
new file mode 100644
index 0000000..defbaa6
--- /dev/null
+++ b/.gh-pullrequests/00163_549704201.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549704201",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-549704201",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 549704201,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTcwNDIwMQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T07:51:03Z",
+    "updated_at": "2019-11-05T07:51:03Z",
+    "author_association": "MEMBER",
+    "body": "@realcodywburns Tracker:\r\n\r\nhttps://docs.google.com/spreadsheets/d/1WxDIyg4s9O3FsrloJPt91c-2RWCgSUdEkpBaPpcw4E0/edit?usp=sharing\r\n\r\nLooks like there are only 25 people to chase.\r\nShouldn't take long.\r\nMainly just an issue of consent.\r\nHow many anons contributing issues?  Just Dexeran.\r\n\r\nPlus MikO seems to have done some README edits, and I don't know who \"whilei\" is but he/she seems to be at ETC Labs.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549704201/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_549874465.json b/.gh-pullrequests/00163_549874465.json
new file mode 100644
index 0000000..1f50807
--- /dev/null
+++ b/.gh-pullrequests/00163_549874465.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549874465",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-549874465",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 549874465,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTg3NDQ2NQ==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T15:31:39Z",
+    "updated_at": "2019-11-05T15:31:39Z",
+    "author_association": "MEMBER",
+    "body": "This PR is inappropriate, it solves no problem at all, restrictive, and it is authoritarian to create a root license, demand retroactively to previous contributors, and force future contributors to a root license with no justification whatsoever. \r\n\r\nAs realcodyburns mentions above, It is also creating an unnecessary administrative burden, which is also authoritarian as it has no rationale, and disruptive of the ETC proposal process. The portfolio of options in ECIP-1000 is adequate as it is, and gives all contributors, with real names or anonymous, flexibility to work on the options they prefer.\r\n\r\nETC system does not have to be modified according to irrational rules with no fundament, which are restrictive, and authoritarian if no real problem is being solved.\r\n\r\nI oppose to change root licensing of ECIPs, I oppose to make those changes retroactive, I oppose to make past contributors change their licenses. \r\n\r\nI also oppose requiring using real names to past and future contributors. I agree to discuss DCO and how to implement it going forward, but not retroactively.\r\n\r\nIn general, I oppose changes with no rationale and with no clear problem being solved, as they are arbitrary and open the door to future arbitrary and authoritarian behavior and change in ETC.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549874465/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 1,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_549954085.json b/.gh-pullrequests/00163_549954085.json
new file mode 100644
index 0000000..91259ab
--- /dev/null
+++ b/.gh-pullrequests/00163_549954085.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549954085",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-549954085",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 549954085,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTk1NDA4NQ==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T18:24:54Z",
+    "updated_at": "2019-11-05T18:24:54Z",
+    "author_association": "MEMBER",
+    "body": "@TokenHash what do you mean by restrictive? as in you can't choose which license you want to apply to the ECIP? because it makes everything in the repo almost the most permissive you can get from what I understand.\r\n\r\nYes, the real name requirement seems like a really bad choice and doesn't really solve the underlying problem IMO.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/549954085/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550028785.json b/.gh-pullrequests/00163_550028785.json
new file mode 100644
index 0000000..342ed95
--- /dev/null
+++ b/.gh-pullrequests/00163_550028785.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550028785",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550028785",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550028785,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDAyODc4NQ==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T21:28:22Z",
+    "updated_at": "2019-11-05T21:28:22Z",
+    "author_association": "MEMBER",
+    "body": "It's actually not re-licensing anything. Like I said, none of the ECIP in this repo actually ever did specify a license other than apache 2.0, and there are only a couple cases where anyone did specify apache 2.0 explicitly. \r\n\r\n![image](https://user-images.githubusercontent.com/1787231/68246816-6d15c580-ffce-11e9-829f-6ffe55399551.png)\r\n\r\n\r\nTechnically everything in this repo, unless otherwise stated, has been unlicensed. If there is any 'relicensing' happening here, its moving from no license -> a license. There is very good reasons to use apache 2.0 as the root license, and to discourage, and outright not allow contributions under anything else. \r\n\r\nPlease give a thorough read through of this: https://opensource.google/docs/casebook/\r\n\r\nI am also proposing that we apply apache 2.0, and never look back, never change the license, and never have any contributors sign any kind of CLA or additional agreement over and above what is laid out by apache 2.0. \r\n\r\nThis is about technology, not politics. We should choose the license that is most permissive that absolves contributors of liability and warranty. \r\n\r\nto summarize:\r\n1. Apache 2.0 \r\n2. No CLA or DCO or ANYTHING outside of Apache 2.0\r\n3. as the contributor, your free to make a PR removing your work if you dont like apache 2.0 for whatever reason.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550028785/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550029736.json b/.gh-pullrequests/00163_550029736.json
new file mode 100644
index 0000000..fbaf071
--- /dev/null
+++ b/.gh-pullrequests/00163_550029736.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550029736",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550029736",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550029736,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDAyOTczNg==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T21:30:47Z",
+    "updated_at": "2019-11-05T21:30:47Z",
+    "author_association": "MEMBER",
+    "body": "@TokenHash At the moment, it being unlicensed poses a risk to all contributors. This is not an attack, put away the pitch forks.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550029736/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550034839.json b/.gh-pullrequests/00163_550034839.json
new file mode 100644
index 0000000..89901cd
--- /dev/null
+++ b/.gh-pullrequests/00163_550034839.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550034839",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550034839",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550034839,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDAzNDgzOQ==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T21:43:34Z",
+    "updated_at": "2019-11-05T21:44:31Z",
+    "author_association": "MEMBER",
+    "body": "@BelfordZ \r\n\r\n> 1. Apache 2.0\r\n> 2. No CLA or DCO or ANYTHING outside of Apache 2.0\r\n> 3. as the contributor, your free to make a PR removing your work if you dont like apache 2.0 for whatever reason.\"\r\n\r\nWhat is your proposal regarding requiring real names for devs.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550034839/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550052609.json b/.gh-pullrequests/00163_550052609.json
new file mode 100644
index 0000000..8d14227
--- /dev/null
+++ b/.gh-pullrequests/00163_550052609.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550052609",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550052609",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550052609,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDA1MjYwOQ==",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T22:30:34Z",
+    "updated_at": "2019-11-05T22:48:54Z",
+    "author_association": "MEMBER",
+    "body": "Several are cc0 licensed in the footer of the ecip\r\n\r\nExample https://ecips.ethereumclassic.org/ECIPs/ecip-1060",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550052609/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550054720.json b/.gh-pullrequests/00163_550054720.json
new file mode 100644
index 0000000..79f8893
--- /dev/null
+++ b/.gh-pullrequests/00163_550054720.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550054720",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550054720",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550054720,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDA1NDcyMA==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-05T22:36:47Z",
+    "updated_at": "2019-11-05T23:52:53Z",
+    "author_association": "MEMBER",
+    "body": "And the fact many ECIPs (the ones moved to \"Last Call\", \"final\" or \"active\" I guess are the important ones) don't have a license doesn't mean there has to be a blanket license and say goodbye to anyone who doesn't like it if there are other licenses that are ok as per ECIP-1000.\r\n\r\nA better solution would be have a default license (say Apache 2+) but let devs to change that to another option in ECIP-1000 if they prefer so, rather than having them go away from ETC.\r\n\r\nCan a root license be overridden by another license selected by the author of an ECIP?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550054720/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550220341.json b/.gh-pullrequests/00163_550220341.json
new file mode 100644
index 0000000..b14118c
--- /dev/null
+++ b/.gh-pullrequests/00163_550220341.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550220341",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550220341",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550220341,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDIyMDM0MQ==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T09:19:39Z",
+    "updated_at": "2019-11-06T09:19:39Z",
+    "author_association": "MEMBER",
+    "body": "> What is your proposal regarding requiring real names for devs.\r\n\r\nThis is a seperate matter IMO. Let's keep it to one thing at a time.\r\n\r\n> Several are cc0 licensed in the footer of the ecip\r\n\r\nAh i didnt see this, thanks for pointing it out. As it doesn't adhere to the specification laid out in ECIP-1000, I'd propose that its an invalid ECIP anyways, and thus should be removed and re-filled.\r\n\r\n> And the fact many ECIPs (the ones moved to \"Last Call\", \"final\" or \"active\" I guess are the important ones) don't have a license doesn't mean there has to be a blanket license and say goodbye to anyone who doesn't like it if there are other licenses that are ok as per ECIP-1000....\r\n\r\nApache 2.0 being a permissive license allows for anyone to maintain a fork which is re-licensed under anything they want. Freedom of use is the goal here, right? I thought I could get by without having to actually argue for why Apache 2.0 is the most suitable license for this repository. There is a lot of writing on this matter, but generally takeaways are:\r\n\r\n1. dont invent your own licenses\r\n2. there is barely any legal precedent for most of OSS anyways, so its really just best guess here. see above-linked google's open source casebook\r\n3. Copyleft is counterproductive in terms of collaboration with 99% of good developers: the ones with jobs.\r\n\r\nNot including a license (like we have been) is great, but it also means there is no statement of liability or warranty. This is not good.\r\n\r\nThe concept of using a term such as \"Apache 2.0+\" is IMO an anti-pattern. If you didn't care about the version, why would you say 2.0 then.\r\n\r\nI'm proposing that we stick to Apache 2.0, keep things simple, and stop yack shaving on this BS.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550220341/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550230694.json b/.gh-pullrequests/00163_550230694.json
new file mode 100644
index 0000000..dcecf50
--- /dev/null
+++ b/.gh-pullrequests/00163_550230694.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550230694",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550230694",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550230694,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDIzMDY5NA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T09:45:31Z",
+    "updated_at": "2019-11-06T09:45:31Z",
+    "author_association": "MEMBER",
+    "body": "@BelfordZ \r\n\r\n> Not including a license (like we have been) is great, but it also means there is no statement of liability or warranty. This is not good.\r\n\r\nI don't quite agree with that interpretation. Not including a license, in many jurisdictions, will mean it's by default \"all rights reserved\". That means it's forbidden to reproduce or modify.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550230694/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550231091.json b/.gh-pullrequests/00163_550231091.json
new file mode 100644
index 0000000..fb68e27
--- /dev/null
+++ b/.gh-pullrequests/00163_550231091.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550231091",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550231091",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550231091,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDIzMTA5MQ==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T09:46:41Z",
+    "updated_at": "2019-11-06T09:46:41Z",
+    "author_association": "MEMBER",
+    "body": "@sorpaas yeah, some say no license means 'any license', since a license can be added at any point without recourse.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550231091/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550352729.json b/.gh-pullrequests/00163_550352729.json
new file mode 100644
index 0000000..01dcbf4
--- /dev/null
+++ b/.gh-pullrequests/00163_550352729.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550352729",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550352729",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550352729,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDM1MjcyOQ==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T15:09:37Z",
+    "updated_at": "2019-11-06T15:09:37Z",
+    "author_association": "MEMBER",
+    "body": "Of 41 ECIPs (draft + last call + final + active):\r\n\r\n• 9 use copyright/license CC0\r\n• 2 use copyright/license Apache 2.0\r\n• 30 have no license\r\n\r\nOf the 9 that used CC0, they are 7 different authors who used it. One author used Apache 2.0 for 2 ECIPs.\r\n\r\nI suspect the 30 which have no license it's because ETC was very disorganized before and the ECIP-X which is generally used as a template did not have a #Copyright/Licensing section by default so all authors omitted that detail.\r\n\r\nI still don't see any rationale to establish a root license instead of the options given in ECIP-1000.\r\n\r\nIt is, from now on, according to ECIP-1000, a function of editors to actually supervise that authors include a copyright/license from the options.\r\n\r\nI do agree to seek all past authors to add a license to their past ECIPs, I can do that. This is the doc with the stats: \r\n\r\nhttps://docs.google.com/spreadsheets/d/1mnpm8FC33dT4eKefDDMTIl2jPAKRrGvkQNPwDk3TUos/edit?usp=sharing\r\n\r\n![ECIPs and licensing](https://user-images.githubusercontent.com/29529586/68310151-bfa5bf00-006c-11ea-8e91-38e8efab5a17.png)\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550352729/reactions",
+      "total_count": 3,
+      "+1": 3,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550354406.json b/.gh-pullrequests/00163_550354406.json
new file mode 100644
index 0000000..79a3572
--- /dev/null
+++ b/.gh-pullrequests/00163_550354406.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550354406",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550354406",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550354406,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDM1NDQwNg==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T15:13:20Z",
+    "updated_at": "2019-11-06T15:17:03Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "I oppose the requirement of naming authors. I am in favor of attempting getting explicit licensing from past contribs and going forward. We should update the directions to warn anonymous authors that they may be severely delayed as there is extra leg work for the editors\r\n\r\nAn observation: Tracking down _all_ authors signatures is not strictly necessary for proposals that are just a parameter choice like for instance ecip-1047 (but we already have the author for that one).",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550354406/reactions",
+      "total_count": 3,
+      "+1": 3,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550391849.json b/.gh-pullrequests/00163_550391849.json
new file mode 100644
index 0000000..cffc556
--- /dev/null
+++ b/.gh-pullrequests/00163_550391849.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550391849",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550391849",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550391849,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDM5MTg0OQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T16:34:25Z",
+    "updated_at": "2019-11-06T16:34:25Z",
+    "author_association": "MEMBER",
+    "body": "@BelfordZ \"If there is any 'relicensing' happening here, its moving from no license -> a license.\"\r\n\r\nYes - we are saying the same thing, but with different words.\r\nThe licensing ambiguity is the worst element, because that leads to potential legal risk.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550391849/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550399974.json b/.gh-pullrequests/00163_550399974.json
new file mode 100644
index 0000000..48f1f50
--- /dev/null
+++ b/.gh-pullrequests/00163_550399974.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550399974",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550399974",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550399974,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDM5OTk3NA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T16:52:08Z",
+    "updated_at": "2019-11-06T16:52:08Z",
+    "author_association": "MEMBER",
+    "body": "@TokenHash Thanks for the table.  That is awesome.\r\n\r\nThe reason that I propose Apache 2.0 is because it is the best of breed permissive license which adds patent protection in addition to clarity of copyright.\r\n\r\nIf we are contacting all prior contributors, it is really very little effort to ask if they would agree to relicensing their ECIP to Apache 2.0.   We need their consent to do so.  We cannot compel anybody to relicense.  They have a perfect right to say no.  But it does no harm to ask.\r\n\r\nI suspect that just about everybody will not have a strong objection, because it makes no practical difference to them.  Most of them probably did not even think about licensing at the time.\r\n\r\nIf we end up with some \"objectors\" but can at least get to clarity of licensing for all ECIPs then that would be a good place to be as well.\r\n\r\nMoving forward, though, I see little reason why we should NOT require Apache 2.0 for all submissions.\r\n\r\nI think that it is also important to add tracking of this \"manual consent\" with DCOs, both backwards and forwards in time.   If there is strong objection to a real name requirement then let's just leave that alone and proceed with DCOs using the existing self-identifications which we already have.\r\n\r\nWhich is actually the same as \"real names\" for everyone except Dexeran!",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550399974/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550401511.json b/.gh-pullrequests/00163_550401511.json
new file mode 100644
index 0000000..d95cab4
--- /dev/null
+++ b/.gh-pullrequests/00163_550401511.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550401511",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550401511",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550401511,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDQwMTUxMQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T16:55:34Z",
+    "updated_at": "2019-11-06T16:55:50Z",
+    "author_association": "MEMBER",
+    "body": "BTW - Adding an Apache 2.0 license at the root would be a good thing.\r\n\r\nThat, plus a DCO bot, gives us \"best of breed\" moving forward, with minimal barrier of entry for new participants.  Just the need to do the \"register your name and email address\" the first time any of your changes are committed.\r\n\r\nAnybody can create issues with no barrier.\r\nAnybody can still comment on anything with no barrier.\r\nAnybody can still create pull requests with no barrier.  They just cannot be merged until you register your name (which could be pseudonym) and email address - so you can be contacted in the future.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550401511/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550403291.json b/.gh-pullrequests/00163_550403291.json
new file mode 100644
index 0000000..b5ac5ea
--- /dev/null
+++ b/.gh-pullrequests/00163_550403291.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550403291",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550403291",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550403291,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDQwMzI5MQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T16:59:33Z",
+    "updated_at": "2019-11-06T16:59:57Z",
+    "author_association": "MEMBER",
+    "body": "I would like a real name requirement too, because I suspect that DCOs with a pseudonym provide no legal protection - nullifying both the copyright and patent protections of the Apache 2.0 license and putting us in the same position as \"public domain\" for those contributions.\r\n\r\nBut maybe that makes no practical difference anyway?\r\n\r\nIt is only if a contribution from a bad actor gets all the way through to being accepted into the protocol that the damage can really happen.\r\n\r\nWe have never had any pseudonymous changes accepted into ETC.\r\n\r\nThe first ever pseudonymous change to be accepted into ETH would be ProgPOW.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550403291/reactions",
+      "total_count": 2,
+      "+1": 0,
+      "-1": 2,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550403649.json b/.gh-pullrequests/00163_550403649.json
new file mode 100644
index 0000000..60e4245
--- /dev/null
+++ b/.gh-pullrequests/00163_550403649.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550403649",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550403649",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550403649,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDQwMzY0OQ==",
+    "user": {
+      "login": "drd34d",
+      "id": 30156189,
+      "node_id": "MDQ6VXNlcjMwMTU2MTg5",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/30156189?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/drd34d",
+      "html_url": "https://github.com/drd34d",
+      "followers_url": "https://api.github.com/users/drd34d/followers",
+      "following_url": "https://api.github.com/users/drd34d/following{/other_user}",
+      "gists_url": "https://api.github.com/users/drd34d/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/drd34d/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/drd34d/subscriptions",
+      "organizations_url": "https://api.github.com/users/drd34d/orgs",
+      "repos_url": "https://api.github.com/users/drd34d/repos",
+      "events_url": "https://api.github.com/users/drd34d/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/drd34d/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T17:00:21Z",
+    "updated_at": "2019-11-06T17:00:21Z",
+    "author_association": "NONE",
+    "body": "I oppose the requirement of author's real name. An alias and email should be sufficent for the purpose you're trying to accomplish. Requiring any contributor to give it's real name can be a barrier of entry and an oppressive thing to require that does not align well with the values of ETC. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550403649/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550406142.json b/.gh-pullrequests/00163_550406142.json
new file mode 100644
index 0000000..15a009b
--- /dev/null
+++ b/.gh-pullrequests/00163_550406142.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550406142",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550406142",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550406142,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDQwNjE0Mg==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T17:05:56Z",
+    "updated_at": "2019-11-06T17:05:56Z",
+    "author_association": "MEMBER",
+    "body": "@zmitton\r\n\r\n\"An observation: Tracking down all authors signatures is not strictly necessary for proposals that are just a parameter choice like for instance ecip-1047 (but we already have the author for that one).\"\r\n\r\nCorrect.  A bunch of \"contributors\" to this repository were for EIP files in the original cloning and those files are since deleted.   Or contributions were typo fixes or readme changes or merging.  Small things which would need meet the requirement of \"IP\".   We can ignore those.\r\n\r\nSee https://docs.google.com/spreadsheets/d/14OlEk2MhsEr9vn5dqgVIw1h8mWqKymon3lbnwp1QwUY/edit#gid=871150240\r\nwhere those are represented by crossed out green cells.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550406142/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550415954.json b/.gh-pullrequests/00163_550415954.json
new file mode 100644
index 0000000..3cacf13
--- /dev/null
+++ b/.gh-pullrequests/00163_550415954.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550415954",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550415954",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550415954,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDQxNTk1NA==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T17:28:53Z",
+    "updated_at": "2019-11-06T17:28:53Z",
+    "author_association": "MEMBER",
+    "body": "After reviewing all 127 BIPS, the Bitcoin BIP situation is similar to ECIP:\r\n\r\n• Older BIPs (2011-2015) are not licensed or use `PD`\r\n• In the \"middle ages\" (2015-2016) BIPs are mainly `PD`, which was later discouraged by BIP-0002 <- the equivalent of ECIP-1000 \r\n• Newer BIPs (as from 2017) they all comply with BIP-0002 and all use formats such as `BSD-3-Clause | CC0-1.0` combined, just `BSD-2-Clause` or `CC0-1.0`\r\n\r\nSummary: older BIPs are unlicensed or `PD`. Middle ages BIPs are `PD`. Everything in 2017 and after is licensed using best practices in BIP-0002.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550415954/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550446098.json b/.gh-pullrequests/00163_550446098.json
new file mode 100644
index 0000000..28a95bc
--- /dev/null
+++ b/.gh-pullrequests/00163_550446098.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550446098",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550446098",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550446098,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDQ0NjA5OA==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T18:43:41Z",
+    "updated_at": "2019-11-06T18:43:41Z",
+    "author_association": "MEMBER",
+    "body": "To establish a blanket license, irrespective of which one and how good it is, and to exclude those who don't want to use it, when there are several variations in ECIP-1000 that are totally acceptable, as seen in ETC and Bitcoin, is a security hole as this \"small\" and what appears as an \"irrelevant\" action is an unnecessary restriction to a single license and establishes \"restriction\" in itself as a philosophical norm, in ETC.\r\n\r\nThere is a long tradition of \"least authority\" in crypto, but this is exactly the opposite: an unnecessary and not justified \"most authority\" action.\r\n\r\nThis, as a first action of establishing a \"most authority\" philosophy pushed by @bobsummerwill will inexorably be followed by promoting more restrictions as already mentioned by him:\r\n\r\n• DCO\r\n• naming developers and killing anonymity\r\n• introducing more \"protections\" such as \"trademarks and trade secrets\"\r\n• speaking with lawyers to appeal to authority to impose more restrictions\r\n• appealing to EF, EEA, Hyperledger, and other \"OSS foundations\" as authority of how ETC should proceed, which are all opposite to ETC ethos\r\n\r\nSummerwill, has the wrong mindset, and all other participants in ETC have a lazy mindset that prefer to move on with what they consider as \"irrelevant\" or \"BS\" or \"a waste of time\", but they don't see they are opening the door to further attacks with more restrictions in ETC in the future. Just because there is one attacker being bothersome enough to push all to an unnecessary change. \r\n\r\nThe \"I am protecting you\" is the oldest excuse by authoritarians who then violate people with top down governance and restrictions, especially corporatist in this case. Summerwill has only spoken about top down authoritarian measures in ETC for months.\r\n\r\nAnd \"I am going to annoy you until you capitulate\", and the fact all people in ETC actually capitulate and rationalize their capitulation, is another way of introducing these negative changes.\r\n\r\nJust because ECIP-1000 was approved late in the life cycle of ETC (in 2019), that editors have not enforced the copyright/licensing section in new ECIPs, and that it is easy and comfortable to put a root license does not mean that can't be solved by using best practices from now on.\r\n\r\nETC is NOT Linux or Apache or any old OSS system. ETC is a system that needs to have the highest standards of trust minimization, unlike any other type of OSS system, to protect a global platform of money, property and agreements. This has nothing to do, or has anything in common, with other OSS systems, or private networks, that can be used in isolation or have no property and agreements inside, or are fine with top down trust maximization.\r\n\r\nThere is no reason to use a single root license and not do what Bitcoin already does ever since 2017 of using a portfolio of acceptable options. \"I am lazy\" and \"this bother me\", is not an argument. Therefore I oppose this action.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550446098/reactions",
+      "total_count": 2,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 1
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550553396.json b/.gh-pullrequests/00163_550553396.json
new file mode 100644
index 0000000..e2e5ce9
--- /dev/null
+++ b/.gh-pullrequests/00163_550553396.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550553396",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550553396",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550553396,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDU1MzM5Ng==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T23:47:50Z",
+    "updated_at": "2019-11-06T23:47:50Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "At least as far as United States copyright law pertains, this may be of interest:\r\n\r\n> (b) In no case does copyright protection for an original work of authorship extend to any idea, procedure, process, system, method of operation, concept, principle, or discovery, regardless of the form in which it is described, explained, illustrated, or embodied in such work.\r\n> https://www.copyright.gov/title17/92chap1.html#102\r\n\r\nSo while US authors would, without an explicit license, hold exclusive copy rights for their document itself, the ideas (and methods... etc.) communicated are (in the US) free as in free range.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550553396/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550558039.json b/.gh-pullrequests/00163_550558039.json
new file mode 100644
index 0000000..22afe1b
--- /dev/null
+++ b/.gh-pullrequests/00163_550558039.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550558039",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550558039",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550558039,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDU1ODAzOQ==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T00:05:41Z",
+    "updated_at": "2019-11-07T00:05:41Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "As far as the \"real names\" thing goes (and I can't seem to find the kernel for this thread.. ?) I don't understand why at all it's in the discussion here. Again, for the US at least, there is NO (as in NONE) relationship assumed or necessary between matters of copyright and legal identification. Ben Franklin wrote as @SilenceDogood extensively (among many other names as well), for example, and the legacy of copyright-happy royalty-collecting pseudonymous literaries extends so far and wide even @50-Cent wouldn't know where to start listing them.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550558039/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550558963.json b/.gh-pullrequests/00163_550558963.json
new file mode 100644
index 0000000..780e933
--- /dev/null
+++ b/.gh-pullrequests/00163_550558963.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550558963",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550558963",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550558963,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDU1ODk2Mw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T00:09:00Z",
+    "updated_at": "2019-11-07T00:10:20Z",
+    "author_association": "MEMBER",
+    "body": "@meowsbits On your US copyright point above, what I believe that is saying is that the copyright refers to the textual description itself, which authors have implicitly, whether or not they add \"Copyright (c) 2019 Bob Summerwill\" or not anywhere in the text.   You authored it, you have copyright.\r\n\r\nIf you take care to have PROOF of that (which, I think, in the old days, would mean sending a copy of your manuscript, and signing and dating it and keeping it in a safe, or getting it notarized or whatever - but which is trivial now for open source software by just working in the open) then it is very easy to enforce your copyright if somebody plagiarizes your work.   Hello, Justin Sun.\r\n\r\nThat copyright does not stop others from doing something equivalent, no.   That is where patents come in.  Which is why I care about using Apache 2.0.   Because I don't want a Craig Wright / nChain style patent trolling drama to happen to ETC because of the simple lack of IP protection which we are discussing here.\r\n\r\nSomething which still seems up in the air in the US at least is whether APIs are copyrightable, as horrible, horrible Oracle have been trying to do to Android by asserting that the Java APIs are their copyright, and even though Android is built on a completely \"clean house\" implementation of Java that they deserve billions of dollars:\r\n\r\nhttps://en.wikipedia.org/wiki/Oracle_America,_Inc._v._Google,_Inc.\r\n\r\nThe current status is ... \"Oracle appealed to the United States Court of Appeals for the Federal Circuit, which found in March 2018 that Google's reuse of the APIs had not been fair use, ruling in favor of Oracle.\"\r\n\r\nIt will likely go to the Supreme Court, where (hopefully) it will be struck down.  But it looks like this horror show is actually going to lead to Google ditching Android ultimately, for their own new OS with no Java dependencies.\r\n\r\nThis court case was a key reason why I strongly opposed any thought (while we were looking at eWASM) of considering retargeted the EVM on top of the JVM.   Because of Oracle.  That is what Corda does, but that route is poison.    .NET VM is safer, but there is still a risk there, if Microsoft went rogue again.   Not sure of the IP situation on eWASM.\r\n\r\nBut the best of the lot there is sticking with EVM indefinitely, and iterating that along - total self-sovereignty.   Which is what @gcolvin always advocated.  Hurrah for Greg.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550558963/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550559689.json b/.gh-pullrequests/00163_550559689.json
new file mode 100644
index 0000000..84469cd
--- /dev/null
+++ b/.gh-pullrequests/00163_550559689.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550559689",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550559689",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550559689,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDU1OTY4OQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T00:11:53Z",
+    "updated_at": "2019-11-07T00:14:00Z",
+    "author_association": "MEMBER",
+    "body": "DEVCON3 panel - evolving the EVM - where Greg spoke on this:\r\n\r\nhttps://www.youtube.com/watch?v=txBl6ekcZXY\r\n\r\nLook at your faces, @gcolvin!   https://photos.app.goo.gl/KEAmwss8BvfVLDqh8\r\n\r\nWhat an unhappy bunch.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550559689/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550561128.json b/.gh-pullrequests/00163_550561128.json
new file mode 100644
index 0000000..89750b6
--- /dev/null
+++ b/.gh-pullrequests/00163_550561128.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550561128",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550561128",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550561128,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDU2MTEyOA==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T00:17:29Z",
+    "updated_at": "2019-11-07T00:17:29Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Here's a nice little thing curated by Github on [\"Here's what happens if you don't choose a license\"](https://choosealicense.com/no-permission/).",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550561128/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550564417.json b/.gh-pullrequests/00163_550564417.json
new file mode 100644
index 0000000..4d97ec6
--- /dev/null
+++ b/.gh-pullrequests/00163_550564417.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550564417",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550564417",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550564417,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDU2NDQxNw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T00:30:42Z",
+    "updated_at": "2019-11-07T00:31:28Z",
+    "author_association": "MEMBER",
+    "body": "@meowsbits The real name part is not to do with collecting royalties.  It is the other way around.\r\n\r\nIf somebody contributes a change through a pseudonym then the copyright and patent protection you think you are getting through using Apache 2.0 with DCOs is nullified.  Because somebody \"signed the contract\" with a fake name.   You might be in receipt of code/spec they copied from elsewhere and the original author can then make legal claims against ETC users/companies/exchanges etc.\r\n\r\nYou might have patented content which you \"sucked up\" which they slipped in through this pseudonymous approach.  There is nobody to go and kick in the balls.  At least with a real name requirement, if some patsy is put up as a front you can go and get them.\r\n\r\nUltimately all of this is just game theory.  There is no perfect answer, but having no defences is the very worst answer.   The better defences we can have (as long as they are not adding too much friction - which I don't think any of this will) the less likely we are to be attacked.\r\n\r\nMaybe social defence is good enough for ETC?   Because we are so practiced at spotting social attacks.   Whatever the case, if \"real name\" is too much then it is too much, and that is fine.\r\n\r\nKernel of that thread was https://github.com/ethereumclassic/ECIPs/pull/162, which I withdrew because @BelfordZ's proposal here was much simpler and better.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550564417/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_550592946.json b/.gh-pullrequests/00163_550592946.json
new file mode 100644
index 0000000..3424598
--- /dev/null
+++ b/.gh-pullrequests/00163_550592946.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550592946",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-550592946",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 550592946,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDU5Mjk0Ng==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T02:33:24Z",
+    "updated_at": "2019-11-07T02:33:24Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "> If somebody contributes a change through a pseudonym then the copyright and patent protection you think you are getting through using Apache 2.0 with DCOs is nullified.\r\n\r\nCan you cite this?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550592946/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_551057781.json b/.gh-pullrequests/00163_551057781.json
new file mode 100644
index 0000000..10cfe6e
--- /dev/null
+++ b/.gh-pullrequests/00163_551057781.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551057781",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-551057781",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 551057781,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTA1Nzc4MQ==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T12:23:26Z",
+    "updated_at": "2019-11-07T12:28:17Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "And @bobsummerwill \r\n\r\n> That is where patents come in. Which is why I care about using Apache 2.0. [...] Because I don't want [...] patent trolling drama ... \r\n\r\nCan you explain with citations how using an Apache 2 License avoids or would solve a patent troll scenario?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551057781/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_551092099.json b/.gh-pullrequests/00163_551092099.json
new file mode 100644
index 0000000..7be86b3
--- /dev/null
+++ b/.gh-pullrequests/00163_551092099.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551092099",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-551092099",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 551092099,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTA5MjA5OQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T14:02:57Z",
+    "updated_at": "2019-11-07T14:02:57Z",
+    "author_association": "MEMBER",
+    "body": "@sorpaas \"Given that this has become a controversial issue, we might want to be careful merging it.\"\r\n\r\nMore than careful.   We SHOULD NOT merge it until we have resolution on all the outstanding issues - specifically getting consent from all prior contributors - because addition of a repo-level license is re-licensing - and the copyright lies with the original authors.   It was not \"assigned\".\r\n\r\nNevertheless, I think this is the best approach.  We are making rapid progress.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551092099/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_551098432.json b/.gh-pullrequests/00163_551098432.json
new file mode 100644
index 0000000..770a6f7
--- /dev/null
+++ b/.gh-pullrequests/00163_551098432.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551098432",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-551098432",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 551098432,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTA5ODQzMg==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T14:18:58Z",
+    "updated_at": "2019-11-07T14:21:56Z",
+    "author_association": "MEMBER",
+    "body": "@meowsbits \"Can you explain with citations how using an Apache 2 License avoids or would solve a patent troll scenario?\"\r\n\r\nSure.  The Apache 2.0 license states that any contributors grant rights to use of any patents they hold on their contribution.  So if you hold patents then you cannot enforce them against the project.   You could enforce them against projects which are using MIT, BSD or public domain licensing though, because there was no such corresponding grant.\r\n\r\nThat is patent trolling in a nutshell.   Sticking your stuff into unsuspecting projects and then making $$$ by saying \"I have a patent which means I have exclusive rights to monetize this thing for N years, so you owe me a million dollars\".   That happened to Linux, and it has happened to many, many other projects with over-weak permissive licensing.   It is the reason the GPLv3 exists too.  The GPLv2 used for the Linux Kernel did not have that protection either, and so Microsoft had a multi-billion dollar per year business trolling their patents onto Android companies.  Over $1B per year just from Samsung to Microsoft.\r\n\r\n- https://tldrlegal.com/license/creative-commons-cc0-1.0-universal\r\n- https://tldrlegal.com/license/mit-license\r\n- https://tldrlegal.com/license/bsd-3-clause-license-(revised)\r\n- https://tldrlegal.com/license/apache-license-2.0-(apache-2.0)\r\n- https://tldrlegal.com/license/gnu-general-public-license-v2\r\n- https://tldrlegal.com/license/gnu-general-public-license-v3-(gpl-3)\r\n- http://www.ifross.org/en/what-difference-between-gplv2-and-gplv3\r\n- https://resources.whitesourcesoftware.com/blog-whitesource/top-10-apache-license-questions-answered\r\n\r\n\"Explicit grant of patent rights: Apache License 2.0 explicitly lays down the grant of patent rights while using, modifying or distributing Apache licensed software; it also lists the circumstances when such grant gets withdrawn.\"\r\n\r\n\"Real name\" matters because if you have a sockpuppet making the submission then you have lost the patent grant.  There is plausible deniability where the patent holder says \"Well - it wasn't us who made that addition - you just copied our patented material - so you owe us $$$\"",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551098432/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_551107027.json b/.gh-pullrequests/00163_551107027.json
new file mode 100644
index 0000000..45ee915
--- /dev/null
+++ b/.gh-pullrequests/00163_551107027.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551107027",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-551107027",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 551107027,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTEwNzAyNw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T14:39:15Z",
+    "updated_at": "2019-11-07T14:39:15Z",
+    "author_association": "MEMBER",
+    "body": "BTW - Microsoft have done a complete 180 in the last few years under Satya Nadella, and are utterly unlike Steve Ballmer's \"Linux is a Cancer\" Microsoft.  There are real allies of open source now.\r\n\r\n- https://arstechnica.com/tech-policy/2014/10/lawsuit-reveals-samsung-paid-microsoft-1-billion-a-year-for-android-patents/\r\n- https://www.androidpolice.com/2018/10/10/report-microsoft-making-patents-royalty-free-android-oems/\r\n- https://www.zdnet.com/article/microsoft-open-sources-its-entire-patent-portfolio/\r\n\r\nSee also https://www.hanselman.com/blog/MicrosoftKilledMyPappy.aspx.\r\n\r\nThis is NOT to say that Microsoft is not what we would like it to be in other axis, but for open source they are very good now.  Windows has \"spyware\" in it.   They are legally compliant so will shut down things on GitHub when asked to by governments.\r\n\r\nSo they are not aligned on censorship resistance, but purely on the \"open source friendly\", we don't need to be afraid of them anymore.  Apple are \"the baddies\" on that score, but many people give them a pass because of their privacy-respecting best practices.   They do that because privacy is an absolute competitive advance for Apple over Google - not because they are \"good people\":\r\n\r\nhttps://ar.al/notes/apple-vs-google-on-privacy-a-tale-of-absolute-competitive-advantage/",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551107027/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_551237464.json b/.gh-pullrequests/00163_551237464.json
new file mode 100644
index 0000000..4b36a30
--- /dev/null
+++ b/.gh-pullrequests/00163_551237464.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551237464",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-551237464",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 551237464,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTIzNzQ2NA==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T19:53:48Z",
+    "updated_at": "2019-11-07T19:53:48Z",
+    "author_association": "MEMBER",
+    "body": "Im going to start deleting any comments or suggestions relating to DCO, or real names. I hope you understand why censorship is required here.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551237464/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 1,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_551244560.json b/.gh-pullrequests/00163_551244560.json
new file mode 100644
index 0000000..ea8f3e1
--- /dev/null
+++ b/.gh-pullrequests/00163_551244560.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551244560",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-551244560",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 551244560,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTI0NDU2MA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T20:13:44Z",
+    "updated_at": "2019-11-07T20:13:44Z",
+    "author_association": "MEMBER",
+    "body": "\"Im going to start deleting any comments or suggestions relating to DCO, or real names. I hope you understand why censorship is required here.\"\r\n\r\nIt is *not* required, @BelfordZ.  Why censor?  Just ignore anything you don't agree with.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551244560/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_551273501.json b/.gh-pullrequests/00163_551273501.json
new file mode 100644
index 0000000..78b145e
--- /dev/null
+++ b/.gh-pullrequests/00163_551273501.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551273501",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-551273501",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 551273501,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTI3MzUwMQ==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T21:30:25Z",
+    "updated_at": "2019-11-07T21:30:25Z",
+    "author_association": "MEMBER",
+    "body": "Because the derailing of conversation is wasting mine, and everyones time.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551273501/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 1,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_551293674.json b/.gh-pullrequests/00163_551293674.json
new file mode 100644
index 0000000..cf3aadb
--- /dev/null
+++ b/.gh-pullrequests/00163_551293674.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551293674",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-551293674",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 551293674,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTI5MzY3NA==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T22:22:22Z",
+    "updated_at": "2019-11-07T22:27:17Z",
+    "author_association": "MEMBER",
+    "body": "Hi @BelfordZ to answer only about the topic, this PR does two things:\r\n\r\n(1) Proposes Apache 2.0\r\n(2) Restricts the ECIP repo to only Apache 2.0 by setting it as the \"root license\" of the repo\r\n\r\nI am in favor of (1) Apache 2.0 as a license to be used in the ECIP process, I am not in favor of (2) establishing only one license as the only option in the ECIP process.\r\n\r\n## I prefer to stay with the options given in ECIP-1000 which are:\r\n\r\n### Recommended licenses:\r\n\r\n• Apache-2.0: Apache License, version 2.0\r\n• BSD-2-Clause: OSI-approved BSD 2-clause license\r\n• BSD-3-Clause: OSI-approved BSD 3-clause license\r\n• CC0-1.0: Creative Commons CC0 1.0 Universal\r\n• GNU-All-Permissive: GNU All-Permissive License\r\n\r\nIn addition, it is recommended that literal code included in the ECIP be dual-licensed under the same license terms as the project it modifies. For example, literal code intended for Ethereum Classic Core would ideally be dual-licensed under the MIT license terms as well as one of the above with the rest of the ECIP text.\r\n\r\n### Not recommended, but acceptable licenses:\r\n\r\n• BSL-1.0: Boost Software License, version 1.0\r\n• CC-BY-4.0: Creative Commons Attribution 4.0 International\r\n• CC-BY-SA-4.0: Creative Commons Attribution-ShareAlike 4.0 International\r\n• MIT: Expat/MIT/X11 license\r\n• AGPL-3.0+: GNU Affero General Public License (AGPL), version 3 or newer\r\n• FDL-1.3: GNU Free Documentation License, version 1.3\r\n• GPL-2.0+: GNU General Public License (GPL), version 2 or newer\r\n• LGPL-2.1+: GNU Lesser General Public License (LGPL), version 2.1 or newer\r\n\r\n## Rationale:\r\n\r\nThe philosophy behind the above is that it is preferable for ETC to follow a \"least authority\" principle only establishing rules that are no more than is absolutely necessary. Although Apache 2.0 is fine, it is not absolutely necessary to limit the whole repo to only that license. Therefore I prefer to continue with the portfolio of options that exists in ECIP-1000.\r\n\r\n## Logistics:\r\n\r\nAs to logistics going forward, I think we can very easily align all previous contributions to one of the licenses in ECIP-1000, I can help with that, and from now on the ECIP editors can perfectly bounce any ECIP that doesn't have a correct license. So I think  will be in order from now on.\r\n\r\n## Multiple unrelated topics:\r\n\r\nAs this PR is one step in a series of \"protections\" to ETC I thought it was relevant to include the other issues as related externalities. However, I agree with you that this thread relates to only the above issue, so I will stick to that rule from now on. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551293674/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_551344366.json b/.gh-pullrequests/00163_551344366.json
new file mode 100644
index 0000000..a4a5a55
--- /dev/null
+++ b/.gh-pullrequests/00163_551344366.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551344366",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-551344366",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 551344366,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTM0NDM2Ng==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T01:34:49Z",
+    "updated_at": "2019-11-08T02:35:58Z",
+    "author_association": "MEMBER",
+    "body": "Thank you @TokenHash for the well constructed criticism. \r\n\r\nHere are the main reasons for why I propose apache 2.0 for all, without exception:\r\n1. Avoid copyleftist licenses and all licenses which have political implications\r\n1. Avoid contagious licenses that may taint the validity of Apache 2.0. \r\n1. Avoid unknown issues that may arise in having a project that contains multiple licenses.\r\n1. Any works licensed under Apache 2.0 can be copied and relicensed without issue - If you want slightly change an ECIP and relicense it, patent it, what ever, go ahead. Apache 2 is freedom.\r\n\r\nThat said, this isnt a hill im willing to die on. Should this be a deal breaker for you folks, I'm happy to meet halfway, adding root license of apache 2.0, allowing other licenses to be specified, but I would urge that any GNU, GPL, or as I put, politically infused licenses not be included in the allowable list. But just typing those words makes me feel dirty, as I don't really want to be an accomplice in having more than 1 license to maybe one day have to deal with.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551344366/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_551355071.json b/.gh-pullrequests/00163_551355071.json
new file mode 100644
index 0000000..d593718
--- /dev/null
+++ b/.gh-pullrequests/00163_551355071.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551355071",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-551355071",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 551355071,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTM1NTA3MQ==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T02:21:17Z",
+    "updated_at": "2019-11-08T02:21:38Z",
+    "author_association": "MEMBER",
+    "body": "Thanks @BelfordZ,\r\n\r\n> 1. Avoid copyleftist licenses and all licenses which have political implications\r\n> 2. Avoid contagious licenses that may taint the validity of Apache 2.0.\r\n> 3. Avoid unknown issues that may arise in having a project that contains multiple licenses.\r\n> 4. Any works licensed under Apache 2.0 can be copied and relicensed without issue.\r\n\r\nThose are reasonable arguments. Especially the possible mixing of licenses that may invalidate or neutralize the others, thus possibly defaulting to copyright or other nefarious stuff.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551355071/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_551372349.json b/.gh-pullrequests/00163_551372349.json
new file mode 100644
index 0000000..ff496ac
--- /dev/null
+++ b/.gh-pullrequests/00163_551372349.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551372349",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-551372349",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 551372349,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTM3MjM0OQ==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-08T03:46:17Z",
+    "updated_at": "2019-11-08T04:10:32Z",
+    "author_association": "MEMBER",
+    "body": "@BelfordZ \r\n\r\n>Should this be a deal breaker for you folks, I'm happy to meet halfway, adding root license of apache 2.0, allowing other licenses to be specified, but I would urge that any GNU, GPL, or as I put, politically infused licenses not be included in the allowable list.\r\n\r\nYes, let's meet in the middle. Allowing Apache 2.0 as the root license so ETC has a default option, but having a more extended list in ECIP-1000 that allows devs to use alternatives, but perhaps post them in another repo or site e.g. ecips.that.world as @sorpaas has done in the past.\r\n\r\nThe ETC ecosystem can use ECIP-1000 in this Github Organization (https://github.com/ethereumclassic/ECIPs/blob/master/_specs/ecip-1000.md) as the canonical reference of which licenses to use.\r\n\r\n@BelfordZ can you point out which licenses in ECIP-1000 are hyper-toxic to you?\r\n\r\nI just speak for myself here, others may have other opinions. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/551372349/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_552037491.json b/.gh-pullrequests/00163_552037491.json
new file mode 100644
index 0000000..5a01c88
--- /dev/null
+++ b/.gh-pullrequests/00163_552037491.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552037491",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-552037491",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 552037491,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjAzNzQ5MQ==",
+    "user": {
+      "login": "BelfordZ",
+      "id": 1787231,
+      "node_id": "MDQ6VXNlcjE3ODcyMzE=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/BelfordZ",
+      "html_url": "https://github.com/BelfordZ",
+      "followers_url": "https://api.github.com/users/BelfordZ/followers",
+      "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
+      "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
+      "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
+      "repos_url": "https://api.github.com/users/BelfordZ/repos",
+      "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-09T00:03:17Z",
+    "updated_at": "2019-11-09T00:03:17Z",
+    "author_association": "MEMBER",
+    "body": "yeah im over it",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552037491/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00163_552067393.json b/.gh-pullrequests/00163_552067393.json
new file mode 100644
index 0000000..7941f9b
--- /dev/null
+++ b/.gh-pullrequests/00163_552067393.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552067393",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/163#issuecomment-552067393",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/163",
+    "id": 552067393,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjA2NzM5Mw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-09T05:09:47Z",
+    "updated_at": "2019-11-09T05:09:47Z",
+    "author_association": "MEMBER",
+    "body": "\"Allowing Apache 2.0 as the root license so ETC has a default option, but having a more extended list in ECIP-1000 that allows devs to use alternatives, but perhaps post them in another repo or site e.g. ecips.that.world as @sorpaas has done in the past.\"\r\n\r\nAs long as those other repos are suitably constrained to have to use one of a very short list of acceptable alternatives, which I think likely boils down to only Apache 2.0 or the new Chinese license.   So maybe we end up with another repo for proposals using that license, like @kimisan has said he would prefer?   But we really don't want loads of repos, because it makes it horrible for people to work out where everything is.\r\n\r\nAlso - even just to add the Apache 2.0 license in the root here, we still need to get consent from the previous contributors - with my spreadsheet and Donald's getting close to that already.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552067393/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00166.json b/.gh-pullrequests/00166.json
new file mode 100644
index 0000000..ab4e40e
--- /dev/null
+++ b/.gh-pullrequests/00166.json
@@ -0,0 +1,83 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/166",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/166/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/166/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/166/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/166",
+    "id": 518195777,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM3MTM0NTY5",
+    "number": 166,
+    "title": "Moving to Withdrawn Status",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785130,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTMw",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/editor:%20enhancement",
+        "name": "editor: enhancement",
+        "color": "a2eeef",
+        "default": false,
+        "description": "New feature or request"
+      },
+      {
+        "id": 1154785129,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20meta",
+        "name": "type: meta",
+        "color": "cfd3d7",
+        "default": false,
+        "description": "Accepted best practices"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-06T02:24:43Z",
+    "updated_at": "2019-11-06T06:32:28Z",
+    "closed_at": "2019-11-06T06:32:05Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/166",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/166",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/166.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/166.patch"
+    },
+    "body": "With author consent, moving this ECIP to withdrawn as its contents are largely included and covered in ECIP-1000.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/166/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00166.patch b/.gh-pullrequests/00166.patch
new file mode 100644
index 0000000..0acf59c
--- /dev/null
+++ b/.gh-pullrequests/00166.patch
@@ -0,0 +1,23 @@
+From e827cb05c0ca4830766e2ce67fa0e10a3ff6ede9 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Tue, 5 Nov 2019 19:24:13 -0700
+Subject: [PATCH] Moving to Withdrawn Status
+
+With author consent, moving this ECIP to withdrawn as its contents are largely included and covered in ECIP-1000.
+---
+ _specs/ecip-1016.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1016.md b/_specs/ecip-1016.md
+index d44e5ef..cc35bd7 100644
+--- a/_specs/ecip-1016.md
++++ b/_specs/ecip-1016.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1016
+ title: ETC Improvement Proposal Management
+-status: Draft
++status: Withdrawn
+ type: Meta
+ author: Cody W Burns <Cody.w.burns@ethereumclassic.com>
+ created: 2016-10-25
diff --git a/.gh-pullrequests/00167.json b/.gh-pullrequests/00167.json
new file mode 100644
index 0000000..f5e5aa0
--- /dev/null
+++ b/.gh-pullrequests/00167.json
@@ -0,0 +1,74 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/167",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/167/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/167/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/167/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/167",
+    "id": 518199083,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM3MTM3MTcx",
+    "number": 167,
+    "title": "Adding author and license to ECIP-1015",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785127,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20core",
+        "name": "type: core",
+        "color": "d73a4a",
+        "default": false,
+        "description": "Requires consensus consideration"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-06T02:36:22Z",
+    "updated_at": "2019-11-07T06:04:45Z",
+    "closed_at": "2019-11-06T20:35:37Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/167",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/167",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/167.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/167.patch"
+    },
+    "body": "On behalf of the author, adding his name as author and adding a license to the ECIP.\r\n\r\nThe authorship may be confirmed here from original document: https://github.com/ethereumproject/ECIPs/blob/master/ECIPs/ECIP-1015.md\r\n\r\nThe license selected for this ECIP is Apache 2.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/167/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00167.patch b/.gh-pullrequests/00167.patch
new file mode 100644
index 0000000..00c827a
--- /dev/null
+++ b/.gh-pullrequests/00167.patch
@@ -0,0 +1,64 @@
+From a323b51eb936e92acd57167027b50491afbee97b Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Tue, 5 Nov 2019 19:35:35 -0700
+Subject: [PATCH] Adding author and license to ECIP-1015
+
+On behalf of the author, adding his name as author and adding a license to the ECIP.
+
+The authorship may be confirmed here from original document: https://github.com/ethereumproject/ECIPs/blob/master/ECIPs/ECIP-1015.md
+
+The license added is Apache 2.
+---
+ _specs/ecip-1015.md | 14 ++++++++++----
+ 1 file changed, 10 insertions(+), 4 deletions(-)
+
+diff --git a/_specs/ecip-1015.md b/_specs/ecip-1015.md
+index 5d5be52..0856aef 100644
+--- a/_specs/ecip-1015.md
++++ b/_specs/ecip-1015.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1015
+ title: Long-term gas cost changes for IO-heavy operations to mitigate transaction spam attacks
+-author: Unknown
++author: Cody W Burns <cody.w.burns@ethereumclassic.org>
+ status: Final
+ type: Standards Track
+ category: Core
+@@ -12,7 +12,7 @@ category: Core
+ * Concerning: Long-term gas cost changes for IO-heavy operations to
+   mitigate transaction spam attacks
+ 
+-With the understanding that:
++## With the understanding that:
+ 
+ 1. This is a fork intended for protocol improvement.
+ 2. This is mutually beneficial to all etherem clients in order to mitigate current attacks.
+@@ -21,7 +21,7 @@ With the understanding that:
+ 4. An unknown number of ETC nodes are using --oppose-dao clients and
+    will be switched to the EIP gas price model at block 2,463,000
+ 
+-Issues to address:
++## Issues to address:
+ 
+ 1. The need to avoid silverware drawer of ethereums:
+   * EF Official
+@@ -33,7 +33,7 @@ Issues to address:
+ 2. Urgency - this needs to be ready for testing as soon as humanly possible.
+ 3. MAKE THE PLAN KNOWN. on all channels. smoke signals as need be.
+ 
+-Proposed actions:
++## Proposed actions:
+ 
+ 1. MAKE KNOWN TO EVERYONE WHAT THE DECISION IS AND PUBLISH REQUIRED CHANGES IN ACCEPTED ECIP. 
+ 2. Incorporate EIP-150 as ECIP-1015, to follow our process
+@@ -42,3 +42,9 @@ Proposed actions:
+ 5. Implement ECIP-1015 on top of our 2.0.0 geth code base, test it
+ 6. Release new classic geth version, promote its usage heavily among ETC users, as well as with pools, exchanges, and wallets that support ETC
+ 7. Hard fork on block 2,500,000 ~2016-10-25
++
++## License
++
++This work is licensed under [Apache License, Version
++2.0](http://www.apache.org/licenses/).
++
diff --git a/.gh-pullrequests/00168.json b/.gh-pullrequests/00168.json
new file mode 100644
index 0000000..8d8d28a
--- /dev/null
+++ b/.gh-pullrequests/00168.json
@@ -0,0 +1,74 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/168",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/168/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/168/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/168/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/168",
+    "id": 518230479,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM3MTYyMjM4",
+    "number": 168,
+    "title": "Adjusted format of template ECIP to fit ECIP-1000",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785130,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTMw",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/editor:%20enhancement",
+        "name": "editor: enhancement",
+        "color": "a2eeef",
+        "default": false,
+        "description": "New feature or request"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-06T04:34:26Z",
+    "updated_at": "2019-11-06T20:35:11Z",
+    "closed_at": "2019-11-06T20:35:06Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/168",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/168",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/168.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/168.patch"
+    },
+    "body": "Adjusted format of template ECIP to fit to the latest version of ECIP-1000.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/168/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00168.patch b/.gh-pullrequests/00168.patch
new file mode 100644
index 0000000..0187934
--- /dev/null
+++ b/.gh-pullrequests/00168.patch
@@ -0,0 +1,51 @@
+From 9009b996807895bee99f8e0f031238c37065295c Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Tue, 5 Nov 2019 21:34:19 -0700
+Subject: [PATCH 1/2] Adjusted format of template ECIP to fit ECIP-1000
+
+Adjusted format of template ECIP to fit to the latest version of ECIP-1000.
+---
+ ecip-X.md | 5 +++--
+ 1 file changed, 3 insertions(+), 2 deletions(-)
+
+diff --git a/ecip-X.md b/ecip-X.md
+index 6a29026..6d62a10 100644
+--- a/ecip-X.md
++++ b/ecip-X.md
+@@ -3,8 +3,8 @@ ecip: <ECIP number>
+ title: <ECIP title>
+ author: <list of authors' real names and optionally, email addrs>
+ discussions-to: <email address>
+-status: <Draft | Active | Accepted | Deferred | Rejected | Withdrawn | Final | Superseded>
+-type: <Standards Track | Informational | Process>
++status: <WIP | Draft | Last Call | Accepted | Final | Deferred | Replaced | Rejected | Withdrawn | Active>
++type: <Standards Track (Core, Networking, Interface, ECBP) | Meta | Informational>
+ created: <date created on, in ISO 8601 (yyyy-mm-dd) format>
+ replaces: <ECIP number>
+ superseded-by: <ECIP number>
+@@ -21,3 +21,4 @@ resolution: <url>
+ 
+ ### Implementation
+ 
++### Licensing
+
+From 7f8c54699239185f4ba65b40ad70f9eed1d467b3 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Tue, 5 Nov 2019 22:06:16 -0700
+Subject: [PATCH 2/2] Copyright/Licensing
+
+Corrected last title to `Copyright/Licensing` so it is more clear for ECIP writers to remember to add a copyright/license to the ECIP draft.
+---
+ ecip-X.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/ecip-X.md b/ecip-X.md
+index 6d62a10..0691e94 100644
+--- a/ecip-X.md
++++ b/ecip-X.md
+@@ -21,4 +21,4 @@ resolution: <url>
+ 
+ ### Implementation
+ 
+-### Licensing
++### Copyright/Licensing
diff --git a/.gh-pullrequests/00170.json b/.gh-pullrequests/00170.json
new file mode 100644
index 0000000..ebdd307
--- /dev/null
+++ b/.gh-pullrequests/00170.json
@@ -0,0 +1,83 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/170",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/170/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/170/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/170/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/170",
+    "id": 518723255,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM3NTY4NzE4",
+    "number": 170,
+    "title": "ECIP-1040, ECIP-1068 and ECIP-1069: Account Versioning ECIPs and Extensions",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785139,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTM5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/status:%20draft",
+        "name": "status: draft",
+        "color": "ffffff",
+        "default": false,
+        "description": "draft stage - can be assigned ecip number and merged, but requires new PR to be Accepted"
+      },
+      {
+        "id": 1154785127,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20core",
+        "name": "type: core",
+        "color": "d73a4a",
+        "default": false,
+        "description": "Requires consensus consideration"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 2,
+    "created_at": "2019-11-06T20:33:06Z",
+    "updated_at": "2019-11-07T16:30:41Z",
+    "closed_at": "2019-11-07T16:30:37Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/170",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/170",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/170.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/170.patch"
+    },
+    "body": "This adds the following specifications to ECIPs repo:\r\n\r\n* ECIP-1040: The base layer of account versioning. The current rough consensus.\r\n* ECIP-1068: Extension of ECIP-1040 to allow transaction to deploy multiple versions.\r\n* ECIP-1069: Extension of ECIP-1040 to allow CREATE/CREATE2 to deploy multiple versions.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/170/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00170.patch b/.gh-pullrequests/00170.patch
new file mode 100644
index 0000000..9c129e0
--- /dev/null
+++ b/.gh-pullrequests/00170.patch
@@ -0,0 +1,466 @@
+From f4781463ff22f7d2a8767bfe6e6adeef6f7c2d41 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Wed, 6 Nov 2019 21:30:07 +0100
+Subject: [PATCH 1/2] Initialize ECIP-1040, ECIP-1068 and ECIP-1069
+
+---
+ _specs/ecip-1040.md | 238 ++++++++++++++++++++++++++++++++++++++++++++
+ _specs/ecip-1068.md |  71 +++++++++++++
+ _specs/ecip-1069.md |  77 ++++++++++++++
+ 3 files changed, 386 insertions(+)
+ create mode 100644 _specs/ecip-1040.md
+ create mode 100644 _specs/ecip-1068.md
+ create mode 100644 _specs/ecip-1069.md
+
+diff --git a/_specs/ecip-1040.md b/_specs/ecip-1040.md
+new file mode 100644
+index 0000000..737b7fe
+--- /dev/null
++++ b/_specs/ecip-1040.md
+@@ -0,0 +1,238 @@
++---
++lang: en
++ecip: 1040
++title: Generalized Account Versioning Scheme
++author: Wei Tang (@sorpaas)
++discussions-to: https://github.com/ethereumclassic/ECIPs/issues/169
++status: Draft
++type: Standards Track
++category: Core
++created: 2017-12-30
++---
++
++## Simple Summary
++
++Introduce account versioning for smart contracts so upgrading the VM
++or introducing new VMs can be easier.
++
++## Abstract
++
++This defines a method of hard forking while maintaining the exact
++functionality of existing account by allowing multiple versions of the
++virtual machines to execute in the same block. This is also useful to
++define future account state structures when we introduce the on-chain
++WebAssembly virtual machine.
++
++## Motivation
++
++By allowing account versioning, we can execute different virtual
++machine for contracts created at different times. This allows breaking
++features to be implemented while making sure existing contracts work
++as expected.
++
++Note that this specification might not apply to all hard forks. We
++have emergency hard forks in the past due to network attacks. Whether
++they should maintain existing account compatibility should be
++evaluated in individual basis. If the attack can only be executed once
++against some particular contracts, then the scheme defined here might
++still be applicable. Otherwise, having a plain emergency hard fork
++might still be a good idea.
++
++## Specification
++
++### Account State
++
++Re-define account state stored in the world state trie to have 5
++items: `nonce`, `balance`, `storageRoot`, `codeHash`, and
++`version`. The newly added field `version` is a 256-bit **scalar**. We
++use the definition of "scalar" from Yellow Paper. Note that this is
++the same type as `nonce` and `balance`, and it is equivalent to a RLP
++variable-sized byte array with no leading zero, of maximum length 32.
++
++When `version` is zero, the account is RLP-encoded with the first 4
++items. When `version` is not zero, the account is RLP-encoded with 5
++items.
++
++Account versions can also optionally define additional account state
++RLP fields, whose meaning are specified through its `version`
++field. In those cases, the parsing strategy is defined in "Additional
++Fields in Account State RLP" section.
++
++### Contract Execution
++
++When fetching an account code from state, we always fetch the
++associated version field together. We refer to this as the *code's
++version* below. The code of the account is always executed in the
++*code's version*.
++
++In particular, this means that for `DELEGATECALL` and `CALLCODE`, the
++version of the execution call frame is the same as
++delegating/receiving contract's version.
++
++### Contract Deployment
++
++In Ethereum, a contract has a deployment method, either by a contract
++creation transaction, or by another contract. If we regard this
++deployment method a contract's *parent*, then we find them forming a
++family of contracts, with the *root* being a contract creation
++transaction.
++
++We let a family of contracts to always have the same `version`. That
++is, `CREATE` and `CREATE2` will always deploy contract that has the
++same `version` as the *code's version*.
++
++In other words, `CREATE` and `CREATE2` will execute the init code
++using the current *code's version*, and deploy the contract of the
++current *code's version*. This holds even if the to-be-deployed code
++is empty.
++
++### Validation
++
++A new phrase, *validation* is added to contract deployment (by
++`CREATE` / `CREATE2` opcodes, or by contract creation
++transaction). When `version` is `0`, the phrase does nothing and
++always succeeds. Future VM versions can define additional validation
++that has to be passed.
++
++If the validation phrase fails, deployment does not proceed and return
++out-of-gas.
++
++### Contract Creation Transaction
++
++Define `LATEST_VERSION` in a hard fork to be the latest supported VM
++version. A contract creation transaction is always executed in
++`LATEST_VERSION` (which means the *code's version* is
++`LATEST_VERSION`), and deploys contracts of `LATEST_VERSION`. Before a
++contract creation transaction is executed, run *validation* on the
++contract creation code. If it does not pass, return out-of-gas.
++
++### Precompiled Contract and Externally-owned Address
++
++Precompiled contracts and externally-owned addresses do not have
++`version`. If a message-call transaction or `CALL` / `CALLCODE` /
++`STATICCALL` / `DELEGATECALL` touches a new externally-owned address
++or a non-existing precompiled contract address, it is always created
++with `version` field being `0`.
++
++### Additional Fields in Account State RLP
++
++In the future we may need to associate more information into an
++account, and we already have some EIP/ECIPs that define new additional
++fields in the account state RLP. In this section, we define the
++parsing strategy when additional fields are added.
++
++* Check the RLP list length, if it is 4, then set account version to
++  `0`, and do not parse any additional fields.
++* If the RLP list length more than 4, set the account version to the
++  scalar at position `4` (counting from `0`).
++  * Check version specification for the number of additional fields
++    defined `N`, if the RLP list length is not equal to `5 + N`,
++    return parse error.
++  * Parse RLP position `5` to `4 + N` as the meaning specified in
++    additional fields.
++  
++## Extensions
++
++In relation to the above "Specification" section, we have defined the
++base account versioning layer. The base account versioning layer is
++already useful by itself and can handle most EVM improvements. Below
++we define two specifications that can be deployed separately, which
++improves functionality of base layer account versioning.
++
++Note that this section is provided only for documentation
++purpose. When "enabling ECIP-1040", those extensions should not be
++enabled unless the extension EIP is also included.
++
++- [ECIP-1068: Account Versioning Extension for Contract Creation
++  Transaction](./ecip-1068.md)
++- [ECIP-1069: Account Versioning Extension for CREATE and
++  CREATE2](./ecip-1069.md)
++
++## Usage Template
++
++This section defines how other ECIPs might use this account versioning
++ECIP. Note that currently we only define the usage template for base
++layer.
++
++Account versioning is usually applied directly to a hard fork meta
++ECIP. ECIPs in the hard fork are grouped by the virtual machine type,
++for example, EVM and eWASM. For each of them, we define:
++
++* **Version**: a non-zero scalar less than `2^256` that uniquely
++  identifies this version. Note that it does not need to be
++  sequential.
++* **Parent version**: the base that all new features derived
++  from. With parent version of `0` we define the base to be legacy
++  VM. Note that once a version other than `0` is defined, the legacy
++  VM's feature set must be frozen. When defining an entirely new VM
++  (such as eWASM), parent version does not apply.
++* **Features**: all additional features that are enabled upon this
++  version.
++
++If a meta ECIP includes ECIPs that provide additional account state RLP
++fields, we also define:
++
++* **Account fields**: all account fields up to the end of this meta
++  EIP, excluding the basic 5 fields (`nonce`, `balance`,
++  `storageRoot`, `codeHash` and `version`). If EIPs included that are
++  specific to modifying account fields do not modify VM execution
++  logic, it is recommended that we specify an additional version whose
++  execution logic is the same as previous version, but only the
++  account fields are changed.
++
++## Rationale
++
++This introduces account versioning via a new RLP item in account
++state. The design above gets account versioning by making the contract
++*family* always have the same version. In this way, versions are only
++needed to be provided by contract creation transaction, and there is
++no restrictions on formats of code for any version. If we want to
++support multiple newest VMs (for example, EVM and WebAssembly running
++together), then this will requires extensions such as ECIP-1068 and
++ECIP-1069.
++
++Alternatively, account versioning can also be done through:
++
++* **[26-VER](https://specs.that.world/26-ver/)** and
++  **[40-UNUSED](https://specs.that.world/40-unused/)**: This makes an
++  account's versioning soly dependent on its code header prefix. If
++  with only EIP-1707, it is not possible to certify any code is valid,
++  because current VM allows treating code as data. This can be fixed
++  by EIP-1712, but the drawback is that it's potentially backward
++  incompatible.
++* **EIP-1891**: Instead of writing version field into account RLP
++  state, we write it in a separate contract. This can accomplish the
++  same thing as this EIP and potentially reduces code complexity, but
++  the drawback is that every code execution will require an additional
++  trie traversal, which impacts performance.
++
++## Backwards Compatibility
++
++Account versioning is fully backwards compatible, and it does not
++change how current contracts are executed.
++
++## Discussions
++
++### Performance
++
++Currently nearly all full node implementations uses config parameters
++to decide which virtual machine version to use. Switching virtual
++machine version is simply an operation that changes a pointer using a
++different set of config parameters. As a result, this scheme has
++nearly zero impact to performance.
++
++### WebAssembly
++
++This scheme can also be helpful when we deploy on-chain WebAssembly
++virtual machine. In that case, WASM contracts and EVM contracts can
++co-exist and the execution boundary and interaction model are clearly
++defined as above.
++
++## Test Cases and Implementations
++
++To be added.
++
++## Copyright
++
++This work is licensed under [Apache License, Version
++2.0](http://www.apache.org/licenses/).
+diff --git a/_specs/ecip-1068.md b/_specs/ecip-1068.md
+new file mode 100644
+index 0000000..289af36
+--- /dev/null
++++ b/_specs/ecip-1068.md
+@@ -0,0 +1,71 @@
++---
++lang: en
++ecip: 1068
++title: Account Versioning Extension for Contract Creation Transaction
++author: Wei Tang (@sorpaas)
++discussions-to: https://github.com/ethereumclassic/ECIPs/issues/169
++status: Draft
++type: Standards Track
++category: Core
++created: 2019-06-24
++requires: 1040
++---
++
++## Simple Summary
++
++Specification for an extension of ECIP-1040 to allow contract creation
++transaction to create multiple versions.
++
++## Abstract
++
++This ECIP defines an extension to the base layer of account versioning
++(ECIP-1040) to allow multiple account versions to be used in contract
++creation transaction. Although this is not necessary at this moment,
++it will once we have multiple independent VMs (such as eWasm).
++
++## Motivation
++
++The base account versioning layer only allows contract of the
++newest version to be deployed via contract creation transaction. This
++is a reasonable assumption for current Ethereum network, because most
++of new features added to EVM are additions, and developers almost
++never want to deploy contracts that are not of the newest version. In
++this section, we provide an extension to allow multiple versions of
++contracts to be deployed via contract creation transaction.
++
++## Specification
++
++Add an additional field `version` (256-bit integer) in contract
++creation transaction. So it becomes `nonce`, `gasprice`, `startgas`,
++`to`, `value`, `data`, `v`, `r`, `s`, `version`. When signing or
++recovering, sign ten items, with `v`, `r`, `s` as defined by EIP-155.
++
++The transaction would be executed with the *code's version* in
++`version` supplied, and deploys contract of `version`. If `version` is
++not supported or *validation* does not pass, return out-of-gas.
++
++## Rationale
++
++By providing the additional field `version`, a contract creation
++transaction can specify which version it wants to deploy. In case of
++two independent VMs such as EVM and eWASM, we can allow two
++`LATEST_VERSION`s to be specified -- one for EVM and another for
++eWASM. Both of them then can deploy new contracts via transactions.
++
++## Backwards Compatibility
++
++This ECIP only changes transaction formats and does not change any VM
++execution logic, thus it has no backwards compatibility issue.
++
++## Test Cases
++
++Not yet provided.
++
++## Implementation
++
++Not yet implemented.
++
++## Copyright
++
++This work is licensed under [Apache License, Version
++2.0](http://www.apache.org/licenses/).
+diff --git a/_specs/ecip-1069.md b/_specs/ecip-1069.md
+new file mode 100644
+index 0000000..066bf7f
+--- /dev/null
++++ b/_specs/ecip-1069.md
+@@ -0,0 +1,77 @@
++---
++lang: en
++ecip: 1069
++title: Account Versioning Extension for CREATE and CREATE2
++author: Wei Tang (@sorpaas)
++discussions-to: https://github.com/ethereumclassic/ECIPs/issues/169
++status: Draft
++type: Standards Track
++category: Core
++created: 2019-06-24
++requires: 1040
++---
++
++## Simple Summary
++
++Specification for an extension of ECIP-1040 to allow an EVM contract to
++create multiple versions.
++
++## Abstract
++
++This ECIP defines an extension to the base layer of account versioning
++(ECIP-1040) to allow an EVM contract to create sub-contracts of
++multiple versions. Although this is not necessary at this moment, it
++will be a nice-to-have add-on.
++
++## Motivation
++
++The base account versioning layer only allows contracts of the same
++version to be deployed through `CREATE` and `CREATE2`. In this
++section, we provide an extension to allow different versions of
++contracts to be deployed via them, by providing two new opcodes,
++`VCREATE` and `VCREATE2`.
++
++## Specification
++
++Define two new opcodes `VCREATE` and `VCREATE2` at `0xf6` and `0xf7`
++respectively. `VCREATE` takes 4 stack arguments (version, value, input
++offset, input size), and `VCREATE2` takes 5 stack arguments (version,
++endowment, memory_start, memory_length, salt). Note that except the
++stack item `version`, other arguments are the same as `CREATE` and
++`CREATE2`.
++
++The two new opcodes behave identically to `CREATE` and `CREATE2`,
++except that it deploys contracts with version specified by stack item
++`version`.
++
++The network at all times maintains a constant list within the client
++of all deployable versions (which can be different from supported
++versions). Upon `VCREATE` and `VCREATE2`, if the specified `version`
++is not on the list of deployable versions, return out-of-gas.
++
++## Rationale
++
++By providing two additional opcodes `VCREATE` and `VCREATE2`, contract
++developers can deploy new contracts that take advantage of them to
++create new sub-contracts of multiple versions. This may be useful for
++situations like upgradable contracts (while it currently still can be
++done via proxy contacts using only base layer account versioning).
++
++## Backwards Compatibility
++
++This ECIP introduces two new opcodes for EVM runtime. Based on current
++assumed invariants, it should not have any noticeable backward
++compatibility issues.
++
++## Test Cases
++
++Not yet provided.
++
++## Implementation
++
++Not yet implemented.
++
++## Copyright
++
++This work is licensed under [Apache License, Version
++2.0](http://www.apache.org/licenses/).
+
+From 818bf0823a3f09626028b0eb25e95e72534eef16 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Wed, 6 Nov 2019 21:54:56 +0100
+Subject: [PATCH 2/2] Add license to frontmatter
+
+---
+ _specs/ecip-1040.md | 1 +
+ _specs/ecip-1068.md | 1 +
+ _specs/ecip-1069.md | 1 +
+ 3 files changed, 3 insertions(+)
+
+diff --git a/_specs/ecip-1040.md b/_specs/ecip-1040.md
+index 737b7fe..2e5fba8 100644
+--- a/_specs/ecip-1040.md
++++ b/_specs/ecip-1040.md
+@@ -8,6 +8,7 @@ status: Draft
+ type: Standards Track
+ category: Core
+ created: 2017-12-30
++license: Apache-2.0
+ ---
+ 
+ ## Simple Summary
+diff --git a/_specs/ecip-1068.md b/_specs/ecip-1068.md
+index 289af36..b885666 100644
+--- a/_specs/ecip-1068.md
++++ b/_specs/ecip-1068.md
+@@ -9,6 +9,7 @@ type: Standards Track
+ category: Core
+ created: 2019-06-24
+ requires: 1040
++license: Apache-2.0
+ ---
+ 
+ ## Simple Summary
+diff --git a/_specs/ecip-1069.md b/_specs/ecip-1069.md
+index 066bf7f..b79fc2f 100644
+--- a/_specs/ecip-1069.md
++++ b/_specs/ecip-1069.md
+@@ -9,6 +9,7 @@ type: Standards Track
+ category: Core
+ created: 2019-06-24
+ requires: 1040
++license: Apache-2.0
+ ---
+ 
+ ## Simple Summary
diff --git a/.gh-pullrequests/00170_550490371.json b/.gh-pullrequests/00170_550490371.json
new file mode 100644
index 0000000..a47e13f
--- /dev/null
+++ b/.gh-pullrequests/00170_550490371.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550490371",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/170#issuecomment-550490371",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/170",
+    "id": 550490371,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDQ5MDM3MQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T20:38:30Z",
+    "updated_at": "2019-11-06T20:38:30Z",
+    "author_association": "MEMBER",
+    "body": "Awesome!  It will be great to start progressing these within the ECIP process :-)\r\n\r\nThe licensing should be specified in the metadata for each of these files, shouldn't it?\r\nNot very as text at the bottom.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550490371/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00170_550496434.json b/.gh-pullrequests/00170_550496434.json
new file mode 100644
index 0000000..a9470e0
--- /dev/null
+++ b/.gh-pullrequests/00170_550496434.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550496434",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/170#issuecomment-550496434",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/170",
+    "id": 550496434,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDQ5NjQzNA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-06T20:55:34Z",
+    "updated_at": "2019-11-06T20:55:34Z",
+    "author_association": "MEMBER",
+    "body": "@bobsummerwill Fixed.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550496434/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00171.json b/.gh-pullrequests/00171.json
new file mode 100644
index 0000000..0d72c99
--- /dev/null
+++ b/.gh-pullrequests/00171.json
@@ -0,0 +1,92 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/171",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/171/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/171/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/171/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/171",
+    "id": 518999381,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM3ODIyMTA2",
+    "number": 171,
+    "title": "ECIP-1070: ProgPoW for ETC",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1662343835,
+        "node_id": "MDU6TGFiZWwxNjYyMzQzODM1",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/GFY",
+        "name": "GFY",
+        "color": "472318",
+        "default": false,
+        "description": "No.  Just say no."
+      },
+      {
+        "id": 1154785139,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTM5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/status:%20draft",
+        "name": "status: draft",
+        "color": "ffffff",
+        "default": false,
+        "description": "draft stage - can be assigned ecip number and merged, but requires new PR to be Accepted"
+      },
+      {
+        "id": 1154785127,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20core",
+        "name": "type: core",
+        "color": "d73a4a",
+        "default": false,
+        "description": "Requires consensus consideration"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 3,
+    "created_at": "2019-11-07T02:21:00Z",
+    "updated_at": "2019-11-07T06:03:49Z",
+    "closed_at": "2019-11-07T06:03:31Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/171",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/171",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/171.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/171.patch"
+    },
+    "body": "",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/171/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00171.patch b/.gh-pullrequests/00171.patch
new file mode 100644
index 0000000..19499eb
--- /dev/null
+++ b/.gh-pullrequests/00171.patch
@@ -0,0 +1,567 @@
+From 7ba00df456d3c431e49c1923508a36cbfeaf2465 Mon Sep 17 00:00:00 2001
+From: Yaz Khoury <yaz.khoury@gmail.com>
+Date: Wed, 6 Nov 2019 21:20:27 -0500
+Subject: [PATCH 1/3] feat: Create ECIP-1070 ProgPoW for ETC
+
+---
+ _specs/ecip-1070.md | 505 ++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 505 insertions(+)
+ create mode 100644 _specs/ecip-1070.md
+
+diff --git a/_specs/ecip-1070.md b/_specs/ecip-1070.md
+new file mode 100644
+index 0000000..598cd34
+--- /dev/null
++++ b/_specs/ecip-1070.md
+@@ -0,0 +1,505 @@
++---
++eip: 1057
++title: ProgPoW, a Programmatic Proof-of-Work
++author: Yaz Khoury <yaz@etccooperative.org>
++discussions-to: 
++status: Draft
++type: Standards Track
++category: Core
++created: 2019-11-06
++license: Apache-2.0
++---
++
++## Simple Summary
++
++**NOTE:** This ECIP is in direct reference to [EIP-1057 written by IfDefElse](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1057.md) (ifdefelse@protonmail.com) for Ethereum EIPs. It has been licensed as an ECIP submission under Apache 2.0.
++
++A new Proof-of-Work algorithm to replace Ethash that utilizes almost all parts of commodity GPUs.
++
++## Abstract
++
++ProgPoW is a proof-of-work algorithm designed to close the efficiency gap available to specialized ASICs. It utilizes almost all parts of commodity hardware (GPUs), and comes pre-tuned for the most common hardware utilized in the Ethereum network. 
++
++## Motivation
++
++Ever since the first bitcoin mining ASIC was released, many new Proof of Work algorithms have been created with the intention of being “ASIC-resistant”. The goal of “ASIC-resistance” is to resist the centralization of PoW mining power such that these coins couldn’t be so easily manipulated by a few players. 
++
++This document presents an overview of the algorithm and examines what it means to be “ASIC-resistant.” Next, we compare existing PoW designs by analyzing how each algorithm executes in hardware. Finally, we present the detailed implementation by walking through the code.
++
++### ProgPoW Overview
++The design goal of ProgPoW is to have the algorithm’s requirements match what is available on commodity GPUs:  If the algorithm were to be implemented on a custom ASIC there should be little opportunity for efficiency gains compared to a commodity GPU.
++
++The main elements of the algorithm are:
++* Changes keccak_f1600 (with 64-bit words) to keccak_f800 (with 32-bit words) to reduce impact on total power
++* Increases mix state.
++* Adds a random sequence of math in the main loop.
++* Adds reads from a small, low-latency cache that supports random addresses.
++* Increases the DRAM read from 128 bytes to 256 bytes.
++
++The random sequence changes every `PROGPOW_PERIOD` (about 2 to 12 minutes depending on the configured value).  When mining source code is generated for the random sequence and compiled on the host CPU.  The GPU will execute the compiled code where what math to perform and what mix state to use are already resolved.
++
++While a custom ASIC to implement this algorithm is still possible, the efficiency gains available are minimal.  The majority of a commodity GPU is required to support the above elements. The only optimizations available are:
++* Remove the graphics pipeline (displays, geometry engines, texturing, etc)
++* Remove floating point math
++* A few ISA tweaks, like instructions that exactly match the merge() function
++
++These would result in minimal, roughly 1.1-1.2x, efficiency gains.  This is much less than the 2x for Ethash or 50x for Cryptonight.
++
++### Rationale for PoW on Commodity Hardware
++With the growth of large mining pools, the control of hashing power has been delegated to the top few pools to provide a steadier economic return for small miners. While some have made the argument that large centralized pools defeats the purpose of “ASIC resistance,” it’s important to note that ASIC based coins are even more centralized for several reasons.
++
++1. No natural distribution: There isn’t an economic purpose for ultra-specialized hardware outside of mining and thus no reason for most people to have it. 
++2. No reserve group: Thus, there’s no reserve pool of hardware or reserve pool of interested parties to jump in when coin price is volatile and attractive for manipulation. 
++3. High barrier to entry: Initial miners are those rich enough to invest capital and ecological resources on the unknown experiment a new coin may be. Thus, initial coin distribution through mining will be very limited causing centralized economic bias. 
++4. Delegated centralization vs implementation centralization: While pool centralization is delegated, hardware monoculture is not: only the limiter buyers of this hardware can participate so there isn’t even the possibility of divesting control on short notice.
++5. No obvious decentralization of control even with decentralized mining: Once large custom ASIC makers get into the game, designing back-doored hardware is trivial. ASIC makers have no incentive to be transparent or fair in market participation.
++
++While the goal of “ASIC resistance” is valuable, the entire concept of “ASIC resistance” is a bit of a fallacy.  CPUs and GPUs are themselves ASICs.  Any algorithm that can run on a commodity ASIC (a CPU or GPU) by definition can have a customized ASIC created for it with slightly less functionality. Some algorithms are intentionally made to be  “ASIC friendly” - where an ASIC implementation is drastically more efficient than the same algorithm running on general purpose hardware. The protection that this offers when the coin is unknown also makes it an attractive target for a dedicate mining ASIC company as soon as it becomes useful.
++
++Therefore, ASIC resistance is: the efficiency difference of specialized hardware versus hardware that has a wider adoption and applicability.  A smaller efficiency difference between custom vs general hardware mean higher resistance and a better algorithm. This efficiency difference is the proper metric to use when comparing the quality of PoW algorithms.  Efficiency could mean absolute performance, performance per watt, or performance per dollar - they are all highly correlated.  If a single entity creates and controls an ASIC that is drastically more efficient, they can gain 51% of the network hashrate and possibly stage an attack.
++
++### Review of Existing PoW Algorithms
++
++#### SHA256
++* Potential ASIC efficiency gain ~ 1000X
++
++The SHA algorithm is a sequence of simple math operations - additions, logical ops, and rotates.
++
++To process a single op on a CPU or GPU requires fetching and decoding an instruction, reading data from a register file, executing the instruction, and then writing the result back to a register file.  This takes significant time and power.
++
++A single op implemented in an ASIC takes a handful of transistors and wires.  This means every individual op takes negligible power, area, or time.  A hashing core is built by laying out the sequence of required ops.
++
++The hashing core can execute the required sequence of ops in much less time, and using less power or area, than doing the same sequence on a CPU or GPU.  A bitcoin ASIC consists of a number of identical hashing cores and some minimal off-chip communication.
++
++#### Scrypt and NeoScrypt
++* Potential ASIC efficiency gain ~ 1000X
++
++Scrypt and NeoScrypt are similar to SHA in the arithmetic and bitwise operations used. Unfortunately, popular coins such as Litecoin only use a scratchpad size between 32kb and 128kb for their PoW mining algorithm. This scratch pad is small enough to trivially fit on an ASIC next to the math core. The implementation of the math core would be very similar to SHA, with similar efficiency gains.
++
++#### X11 and X16R
++* Potential ASIC efficiency gain ~ 1000X
++
++X11 (and similar X##) require an ASIC that has 11 unique hashing cores pipelined in a fixed sequence.  Each individual hashing core would have similar efficiency to an individual SHA core, so the overall design will have the same efficiency gains.
++
++X16R requires the multiple hashing cores to interact through a simple sequencing state machine. Each individual core will have similar efficiency gains and the sequencing logic will take minimal power, area, or time.
++
++The Baikal BK-X is an existing ASIC with multiple hashing cores and a programmable sequencer.  It has been upgraded to enable new algorithms that sequence the hashes in different orders.
++
++#### Equihash
++* Potential ASIC efficiency gain ~ 100X
++
++The ~150mb of state is large but possible on an ASIC. The binning, sorting, and comparing of bit strings could be implemented on an ASIC at extremely high speed.
++
++#### Cuckoo Cycle
++* Potential ASIC efficiency gain ~ 100X
++
++The amount of state required on-chip is not clear as there are Time/Memory Tradeoff attacks. A specialized graph traversal core would have similar efficiency gains to a SHA compute core.
++
++#### CryptoNight
++* Potential ASIC efficiency gain ~ 50X
++
++Compared to Scrypt, CryptoNight does much less compute and requires a full 2mb of scratch pad (there is no known Time/Memory Tradeoff attack).  The large scratch pad will dominate the ASIC implementation and limit the number of hashing cores, limiting the absolute performance of the ASIC.  An ASIC will consist almost entirely of just on-die SRAM.
++
++#### Ethash
++* Potential ASIC efficiency gain ~ 2X
++
++Ethash requires external memory due to the large size of the DAG.  However that is all that it requires - there is minimal compute that is done on the result loaded from memory.  As a result a custom ASIC could remove most of the complexity, and power, of a GPU and be just a memory interface connected to a small compute engine.
++
++## Specification
++
++The DAG is generated exactly as in Ethash.  All the parameters (ephoch length, DAG size, etc) are unchanged.  See the original [Ethash](https://github.com/ethereum/wiki/wiki/Ethash) spec for details on generating the DAG.
++
++ProgPoW can be tuned using the following parameters.  The proposed settings have been tuned for a range of existing, commodity GPUs:
++* `PROGPOW_PERIOD`: Number of blocks before changing the random program
++* `PROGPOW_LANES`: The number of parallel lanes that coordinate to calculate a single hash instance
++* `PROGPOW_REGS`: The register file usage size
++* `PROGPOW_DAG_LOADS`: Number of uint32 loads from the DAG per lane
++* `PROGPOW_CACHE_BYTES`: The size of the cache
++* `PROGPOW_CNT_DAG`: The number of DAG accesses, defined as the outer loop of the algorithm (64 is the same as ethash)
++* `PROGPOW_CNT_CACHE`: The number of cache accesses per loop
++* `PROGPOW_CNT_MATH`: The number of math operations per loop
++
++The value of these parameters has been tweaked between version 0.9.2 (live on the gangnum testnet) and 0.9.3 (proposed for Ethereum adoption).  See [this medium post](https://medium.com/@ifdefelse/progpow-progress-da5bb31a651b) for details.
++
++| Parameter             | 0.9.2     | 0.9.3     |
++|-----------------------|-----------|-----------|
++| `PROGPOW_PERIOD`      | `50`      | `10`      |
++| `PROGPOW_LANES`       | `16`      | `16`      |
++| `PROGPOW_REGS`        | `32`      | `32`      |
++| `PROGPOW_DAG_LOADS`   | `4`       | `4`       |
++| `PROGPOW_CACHE_BYTES` | `16x1024` | `16x1024` |
++| `PROGPOW_CNT_DAG`     | `64`      | `64`      |
++| `PROGPOW_CNT_CACHE`   | `12`      | `11`      |
++| `PROGPOW_CNT_MATH`    | `20`      | `18`      |
++
++
++The random program changes every `PROGPOW_PERIOD` blocks  to ensure the hardware executing the algorithm is fully programmable.  If the program only changed every DAG epoch (roughly 5 days) certain miners could have time to develop hand-optimized versions of the random sequence, giving them an undue advantage.
++
++Sample code is written in C++, this should be kept in mind when evaluating the code in the specification.
++
++All numerics are computed using unsigned 32 bit integers.  Any overflows are trimmed off before proceeding to the next computation.  Languages that use numerics not fixed to bit lengths (such as Python and JavaScript) or that only use signed integers (such as Java) will need to keep their languages' quirks in mind.  The extensive use of 32 bit data values aligns with modern GPUs internal data architectures.
++
++ProgPoW uses a 32-bit variant of **FNV1a** for merging data. The existing Ethash uses a similar variant of FNV1 for merging, but FNV1a provides better distribution properties.
++
++Test vectors can be found [in the test vectors file](../assets/eip-1057/test-vectors.md#fnv1a).
++
++```cpp
++const uint32_t FNV_PRIME = 0x1000193;
++const uint32_t FNV_OFFSET_BASIS = 0x811c9dc5;
++
++uint32_t fnv1a(uint32_t h, uint32_t d)
++{
++    return (h ^ d) * FNV_PRIME;
++}
++```
++
++ProgPow uses [KISS99](https://en.wikipedia.org/wiki/KISS_(algorithm)) for random number generation. This is the simplest (fewest instruction) random generator that passes the TestU01 statistical test suite.  A more complex random number generator like Mersenne Twister can be efficiently implemented on a specialized ASIC, providing an opportunity for efficiency gains.
++
++Test vectors can be found [in the test vectors file](../assets/eip-1057/test-vectors.md#kiss99).
++
++```cpp
++typedef struct {
++    uint32_t z, w, jsr, jcong;
++} kiss99_t;
++
++// KISS99 is simple, fast, and passes the TestU01 suite
++// https://en.wikipedia.org/wiki/KISS_(algorithm)
++// http://www.cse.yorku.ca/~oz/marsaglia-rng.html
++uint32_t kiss99(kiss99_t &st)
++{
++    st.z = 36969 * (st.z & 65535) + (st.z >> 16);
++    st.w = 18000 * (st.w & 65535) + (st.w >> 16);
++    uint32_t MWC = ((st.z << 16) + st.w);
++    st.jsr ^= (st.jsr << 17);
++    st.jsr ^= (st.jsr >> 13);
++    st.jsr ^= (st.jsr << 5);
++    st.jcong = 69069 * st.jcong + 1234567;
++    return ((MWC^st.jcong) + st.jsr);
++}
++```
++
++The `fill_mix` function populates an array of `int32` values used by each lane in the hash calculations.
++
++Test vectors can be found [in the test vectors file](../assets/eip-1057/test-vectors.md#fill_mix).
++
++```cpp
++void fill_mix(
++    uint64_t hash_seed,
++    uint32_t lane_id,
++    uint32_t mix[PROGPOW_REGS]
++)
++{
++    // Use FNV to expand the per-warp seed to per-lane
++    // Use KISS to expand the per-lane seed to fill mix
++    kiss99_t st;
++    st.z = fnv1a(FNV_OFFSET_BASIS, seed);
++    st.w = fnv1a(st.z, seed >> 32);
++    st.jsr = fnv1a(st.w, lane_id);
++    st.jcong = fnv1a(st.jsr, lane_id);
++    for (int i = 0; i < PROGPOW_REGS; i++)
++            mix[i] = kiss99(st);
++}
++```
++
++Like Ethash Keccak is used to seed the sequence per-nonce and to produce the final result.  The keccak-f800 variant is used as the 32-bit word size matches the native word size of modern GPUs.  The implementation is a variant of SHAKE with width=800, bitrate=576, capacity=224, output=256, and no padding.  The result of keccak is treated as a 256-bit big-endian number - that is result byte 0 is the MSB of the value.
++
++As with Ethash the input and output of the keccak function are fixed and relatively small.  This means only a single "absorb" and "squeeze" phase are required.  For a pseudo-code imenentation of the `keccak_f800_round` function see the `Round[b](A,RC)` function in the "Pseudo-code description of the permutations" section of the [official Keccak specs](https://keccak.team/keccak_specs_summary.html).
++
++Test vectors can be found [in the test vectors file](../assets/eip-1057/test-vectors.md#keccak_f800_progpow).
++
++```cpp
++hash32_t keccak_f800_progpow(hash32_t header, uint64_t seed, hash32_t digest)
++{
++    uint32_t st[25];
++
++    // Initialization
++    for (int i = 0; i < 25; i++)
++        st[i] = 0;
++
++    // Absorb phase for fixed 18 words of input
++    for (int i = 0; i < 8; i++)
++        st[i] = header.uint32s[i];
++    st[8] = seed;
++    st[9] = seed >> 32;
++    for (int i = 0; i < 8; i++)
++        st[10+i] = digest.uint32s[i];
++
++    // keccak_f800 call for the single absorb pass
++    for (int r = 0; r < 22; r++)
++        keccak_f800_round(st, r);
++
++    // Squeeze phase for fixed 8 words of output
++    hash32_t ret;
++    for (int i=0; i<8; i++)
++        ret.uint32s[i] = st[i];
++
++    return ret;
++}
++```
++
++The inner loop uses FNV and KISS99 to generate a random sequence from the `prog_seed`.  This random sequence determines which mix state is accessed and what random math is performed.
++
++Since the `prog_seed` changes only once per `PROGPOW_PERIOD` it is expected that while mining `progPowLoop` will be evaluated on the CPU to generate source code for that period's sequence.  The source code will be compiled on the CPU before running on the GPU.  
++
++Test vectors can be found [in the test vectors file](../assets/eip-1057/test-vectors.md#progpowinit).
++
++```cpp
++kiss99_t progPowInit(uint64_t prog_seed, int mix_seq_dst[PROGPOW_REGS], int mix_seq_src[PROGPOW_REGS])
++{
++    kiss99_t prog_rnd;
++    prog_rnd.z = fnv1a(FNV_OFFSET_BASIS, prog_seed);
++    prog_rnd.w = fnv1a(prog_rnd.z, prog_seed >> 32);
++    prog_rnd.jsr = fnv1a(prog_rnd.w, prog_seed);
++    prog_rnd.jcong = fnv1a(prog_rnd.jsr, prog_seed >> 32);
++    // Create a random sequence of mix destinations for merge() and mix sources for cache reads
++    // guarantees every destination merged once
++    // guarantees no duplicate cache reads, which could be optimized away
++    // Uses Fisher-Yates shuffle
++    for (int i = 0; i < PROGPOW_REGS; i++)
++    {
++        mix_seq_dst[i] = i;
++        mix_seq_src[i] = i;
++    }
++    for (int i = PROGPOW_REGS - 1; i > 0; i--)
++    {
++        int j;
++        j = kiss99(prog_rnd) % (i + 1);
++        swap(mix_seq_dst[i], mix_seq_dst[j]);
++        j = kiss99(prog_rnd) % (i + 1);
++        swap(mix_seq_src[i], mix_seq_src[j]);
++    }
++    return prog_rnd;
++}
++```
++
++The math operations that merges values into the mix data are ones chosen to maintain entropy.
++
++Test vectors can be found [in the test vectors file](../assets/eip-1057/test-vectors.md#math).
++
++```cpp
++// Merge new data from b into the value in a
++// Assuming A has high entropy only do ops that retain entropy
++// even if B is low entropy
++// (IE don't do A&B)
++uint32_t merge(uint32_t a, uint32_t b, uint32_t r)
++{
++    switch (r % 4)
++    {
++    case 0: return (a * 33) + b;
++    case 1: return (a ^ b) * 33;
++    // prevent rotate by 0 which is a NOP
++    case 2: return ROTL32(a, ((r >> 16) % 31) + 1) ^ b;
++    case 3: return ROTR32(a, ((r >> 16) % 31) + 1) ^ b;
++    }
++}
++```
++
++The math operations chosen for the random math are ones that are easy to implement in CUDA and OpenCL, the two main programming languages for commodity GPUs. The [mul_hi](https://www.khronos.org/registry/OpenCL/sdk/1.1/docs/man/xhtml/mul_hi.html), [min](https://www.khronos.org/registry/OpenCL/sdk/2.0/docs/man/xhtml/integerMax.html), [clz](https://www.khronos.org/registry/OpenCL/sdk/1.1/docs/man/xhtml/clz.html), and [popcount](https://www.khronos.org/registry/OpenCL/sdk/2.0/docs/man/xhtml/popcount.html) functions match the corresponding OpenCL functions.  ROTL32 matches the OpenCL [rotate](https://www.khronos.org/registry/OpenCL/sdk/1.0/docs/man/xhtml/rotate.html) function.  ROTR32 is rotate right, which is equivalent to `rotate(i, 32-v)`.
++
++Test vectors can be found [in the test vectors file](../assets/eip-1057/test-vectors.md#math).
++
++```cpp
++// Random math between two input values
++uint32_t math(uint32_t a, uint32_t b, uint32_t r)
++{
++    switch (r % 11)
++    {
++    case 0: return a + b;
++    case 1: return a * b;
++    case 2: return mul_hi(a, b);
++    case 3: return min(a, b);
++    case 4: return ROTL32(a, b);
++    case 5: return ROTR32(a, b);
++    case 6: return a & b;
++    case 7: return a | b;
++    case 8: return a ^ b;
++    case 9: return clz(a) + clz(b);
++    case 10: return popcount(a) + popcount(b);
++    }
++}
++```
++
++
++The flow of the inner loop is:
++* Lane `(loop % LANES)` is chosen as the leader for that loop iteration
++* The leader's `mix[0]` value modulo the number of 256-byte DAG entries is is used to select where to read from the full DAG
++* Each lane reads `DAG_LOADS` sequential words, using `(lane ^ loop) % LANES` as the starting offset within the entry.
++* The random sequence of math and cache accesses is performed
++* The DAG data read at the start of the loop is merged at the end of the loop
++
++`prog_seed` and `loop` come from the outer loop, corresponding to the current program seed (which is block_number/PROGPOW_PERIOD) and the loop iteration number.  `mix` is the state array, initially filled by `fill_mix`. `dag` is the bytes of the Ethash DAG grouped into 32 bit unsigned ints in litte-endian format.  On little-endian architectures this is just a normal int32 pointer to the existing DAG.
++
++`DAG_BYTES` is set to the number of bytes in the current DAG, which is generated identically to the existing Ethash algorithm.  
++
++Test vectors can be found [in the test vectors file](../assets/eip-1057/test-vectors.md#progpowloop).
++
++```cpp
++void progPowLoop(
++    const uint64_t prog_seed,
++    const uint32_t loop,
++    uint32_t mix[PROGPOW_LANES][PROGPOW_REGS],
++    const uint32_t *dag)
++{
++    // dag_entry holds the 256 bytes of data loaded from the DAG
++    uint32_t dag_entry[PROGPOW_LANES][PROGPOW_DAG_LOADS];
++    // On each loop iteration rotate which lane is the source of the DAG address.
++    // The source lane's mix[0] value is used to ensure the last loop's DAG data feeds into this loop's address.
++    // dag_addr_base is which 256-byte entry within the DAG will be accessed
++    uint32_t dag_addr_base = mix[loop%PROGPOW_LANES][0] %
++        (DAG_BYTES / (PROGPOW_LANES*PROGPOW_DAG_LOADS*sizeof(uint32_t)));
++    for (int l = 0; l < PROGPOW_LANES; l++)
++    {
++        // Lanes access DAG_LOADS sequential words from the dag entry
++        // Shuffle which portion of the entry each lane accesses each iteration by XORing lane and loop.
++        // This prevents multi-chip ASICs from each storing just a portion of the DAG
++        size_t dag_addr_lane = dag_addr_base * PROGPOW_LANES + (l ^ loop) % PROGPOW_LANES;
++        for (int i = 0; i < PROGPOW_DAG_LOADS; i++)
++            dag_entry[l][i] = dag[dag_addr_lane * PROGPOW_DAG_LOADS + i];
++    }
++
++    // Initialize the program seed and sequences
++    // When mining these are evaluated on the CPU and compiled away
++    int mix_seq_dst[PROGPOW_REGS];
++    int mix_seq_src[PROGPOW_REGS];
++    int mix_seq_dst_cnt = 0;
++    int mix_seq_src_cnt = 0;
++    kiss99_t prog_rnd = progPowInit(prog_seed, mix_seq_dst, mix_seq_src);
++
++    int max_i = max(PROGPOW_CNT_CACHE, PROGPOW_CNT_MATH);
++    for (int i = 0; i < max_i; i++)
++    {
++        if (i < PROGPOW_CNT_CACHE)
++        {
++            // Cached memory access
++            // lanes access random 32-bit locations within the first portion of the DAG
++            int src = mix_seq_src[(mix_seq_src_cnt++)%PROGPOW_REGS];
++            int dst = mix_seq_dst[(mix_seq_dst_cnt++)%PROGPOW_REGS];
++            int sel = kiss99(prog_rnd);
++            for (int l = 0; l < PROGPOW_LANES; l++)
++            {
++                uint32_t offset = mix[l][src] % (PROGPOW_CACHE_BYTES/sizeof(uint32_t));
++                mix[l][dst] = merge(mix[l][dst], dag[offset], sel);
++            }
++        }
++        if (i < PROGPOW_CNT_MATH)
++        {
++            // Random Math
++            // Generate 2 unique sources 
++            int src_rnd = kiss99(prog_rnd) % (PROGPOW_REGS * (PROGPOW_REGS-1));
++            int src1 = src_rnd % PROGPOW_REGS; // 0 <= src1 < PROGPOW_REGS
++            int src2 = src_rnd / PROGPOW_REGS; // 0 <= src2 < PROGPOW_REGS - 1
++            if (src2 >= src1) ++src2; // src2 is now any reg other than src1
++            int sel1 = kiss99(prog_rnd);
++            int dst  = mix_seq_dst[(mix_seq_dst_cnt++)%PROGPOW_REGS];
++            int sel2 = kiss99(prog_rnd);
++            for (int l = 0; l < PROGPOW_LANES; l++)
++            {
++                uint32_t data = math(mix[l][src1], mix[l][src2], sel1);
++                mix[l][dst] = merge(mix[l][dst], data, sel2);
++            }
++        }
++    }
++    // Consume the global load data at the very end of the loop to allow full latency hiding
++    // Always merge into mix[0] to feed the offset calculation
++    for (int i = 0; i < PROGPOW_DAG_LOADS; i++)
++    {
++        int dst = (i==0) ? 0 : mix_seq_dst[(mix_seq_dst_cnt++)%PROGPOW_REGS];
++        int sel = kiss99(prog_rnd);
++        for (int l = 0; l < PROGPOW_LANES; l++)
++            mix[l][dst] = merge(mix[l][dst], dag_entry[l][i], sel);
++    }
++}
++```
++
++The flow of the overall algorithm is:
++* A keccak hash of the header + nonce to create a seed
++* Use the seed to generate initial mix data
++* Loop multiple times, each time hashing random loads and random math into the mix data
++* Hash all the mix data into a single 256-bit value
++* A final keccak hash is computed
++* When mining this final value is compared against a `hash32_t` target
++
++```cpp
++hash32_t progPowHash(
++    const uint64_t prog_seed, // value is (block_number/PROGPOW_PERIOD)
++    const uint64_t nonce,
++    const hash32_t header,
++    const uint32_t *dag // gigabyte DAG located in framebuffer - the first portion gets cached
++)
++{
++    uint32_t mix[PROGPOW_LANES][PROGPOW_REGS];
++    hash32_t digest;
++    for (int i = 0; i < 8; i++)
++        digest.uint32s[i] = 0;
++
++    // keccak(header..nonce)
++    hash32_t seed_256 = keccak_f800_progpow(header, nonce, digest);
++    // endian swap so byte 0 of the hash is the MSB of the value
++    uint64_t seed = bswap(seed_256[0]) << 32 | bswap(seed_256[1]);
++
++    // initialize mix for all lanes
++    for (int l = 0; l < PROGPOW_LANES; l++)
++        fill_mix(seed, l, mix[l]);
++
++    // execute the randomly generated inner loop
++    for (int i = 0; i < PROGPOW_CNT_DAG; i++)
++        progPowLoop(prog_seed, i, mix, dag);
++
++    // Reduce mix data to a per-lane 32-bit digest
++    uint32_t digest_lane[PROGPOW_LANES];
++    for (int l = 0; l < PROGPOW_LANES; l++)
++    {
++        digest_lane[l] = FNV_OFFSET_BASIS
++        for (int i = 0; i < PROGPOW_REGS; i++)
++            digest_lane[l] = fnv1a(digest_lane[l], mix[l][i]);
++    }
++    // Reduce all lanes to a single 256-bit digest
++    for (int i = 0; i < 8; i++)
++        digest.uint32s[i] = FNV_OFFSET_BASIS;
++    for (int l = 0; l < PROGPOW_LANES; l++)
++        digest.uint32s[l%8] = fnv1a(digest.uint32s[l%8], digest_lane[l])
++
++    // keccak(header .. keccak(header..nonce) .. digest);
++    keccak_f800_progpow(header, seed, digest);
++}
++```
++
++## Rationale
++
++ProgPoW utilizes almost all parts of a commodity GPU, excluding:
++
++* The graphics pipeline (displays, geometry engines, texturing, etc);
++* Floating point math.
++
++Making use of either of these would have significant portability issues between commodity hardware vendors, and across programming languages.
++
++Since the GPU is almost fully utilized, there’s little opportunity  for specialized ASICs to gain efficiency. Removing both the graphics pipeline and floating point math could provide up to 1.2x gains in efficiency, compared to the 2x gains possible in Ethash, and 50x gains possible for CryptoNight.
++
++## Backwards Compatibility
++
++This algorithm is not backwards compatible with the existing Ethash, and will require a fork for adoption. Furthermore, the network hashrate will halve since twice as much memory is loaded per hash.
++
++## Test Cases
++
++### progpow 0.9.2
++The algorithm run on block 30,000 produces the following digest and result:
++```
++header ffeeddccbbaa9988776655443322110000112233445566778899aabbccddeeff
++nonce 123456789abcdef0
++
++digest: 11f19805c58ab46610ff9c719dcf0a5f18fa2f1605798eef770c47219274767d
++result: 5b7ccd472dbefdd95b895cac8ece67ff0deb5a6bd2ecc6e162383d00c3728ece
++```
++
++Additional test vectors can be found [in the test vectors file](../assets/eip-1057/test-vectors.md#progpowhash).
++### progpow 0.9.3
++[Machine-readable test vectors](https://github.com/ethereum/EIPs/blob/ad4e73f239d53d72a21cfd8fdc89dc81eb9d2688/assets/eip-1057/test-vectors-0.9.3.json)
++
++## Implementation
++
++The reference ProgPoW mining implementation located at [ProgPOW](https://github.com/ifdefelse/ProgPOW) is a derivative of ethminer so retains the GPL license.
++## License and Copyright
++
++The ProgPoW algorithm and this specification are a new work.  Copyright and related rights are waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).
++
++The reference ProgPoW mining implementation located at [ProgPOW](https://github.com/ifdefelse/ProgPOW) is a derivative of ethminer so retains the GPL license.
+
+From 1bf18ac86195ab8464b6761105f9efc03bc5ae3a Mon Sep 17 00:00:00 2001
+From: Yaz Khoury <yaz.khoury@gmail.com>
+Date: Wed, 6 Nov 2019 21:28:31 -0500
+Subject: [PATCH 2/3] doc: Update ECIP-1070 links and title
+
+---
+ _specs/ecip-1070.md | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/_specs/ecip-1070.md b/_specs/ecip-1070.md
+index 598cd34..542bbc3 100644
+--- a/_specs/ecip-1070.md
++++ b/_specs/ecip-1070.md
+@@ -1,8 +1,8 @@
+ ---
+ eip: 1057
+-title: ProgPoW, a Programmatic Proof-of-Work
++title: ProgPoW, a Programmatic Proof-of-Work, for Ethereum Classic
+ author: Yaz Khoury <yaz@etccooperative.org>
+-discussions-to: 
++discussions-to: https://github.com/ethereumclassic/ECIPs/issues/172
+ status: Draft
+ type: Standards Track
+ category: Core
+
+From 29d4d6a3488ba989b0030689402108254ed8b5f8 Mon Sep 17 00:00:00 2001
+From: Yaz Khoury <yaz.khoury@gmail.com>
+Date: Wed, 6 Nov 2019 21:32:15 -0500
+Subject: [PATCH 3/3] fix: Point document to ECIP-1070
+
+---
+ _specs/ecip-1070.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1070.md b/_specs/ecip-1070.md
+index 542bbc3..15e1fc6 100644
+--- a/_specs/ecip-1070.md
++++ b/_specs/ecip-1070.md
+@@ -1,5 +1,5 @@
+ ---
+-eip: 1057
++ecip: 1070
+ title: ProgPoW, a Programmatic Proof-of-Work, for Ethereum Classic
+ author: Yaz Khoury <yaz@etccooperative.org>
+ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/172
diff --git a/.gh-pullrequests/00171_550591771.json b/.gh-pullrequests/00171_550591771.json
new file mode 100644
index 0000000..0f90a49
--- /dev/null
+++ b/.gh-pullrequests/00171_550591771.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550591771",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/171#issuecomment-550591771",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/171",
+    "id": 550591771,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDU5MTc3MQ==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T02:28:05Z",
+    "updated_at": "2019-11-07T02:28:05Z",
+    "author_association": "MEMBER",
+    "body": "🥴🤢🤮",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550591771/reactions",
+      "total_count": 5,
+      "+1": 5,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00171_550776335.json b/.gh-pullrequests/00171_550776335.json
new file mode 100644
index 0000000..fb1b326
--- /dev/null
+++ b/.gh-pullrequests/00171_550776335.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550776335",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/171#issuecomment-550776335",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/171",
+    "id": 550776335,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDc3NjMzNQ==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T05:11:48Z",
+    "updated_at": "2019-11-07T05:11:48Z",
+    "author_association": "MEMBER",
+    "body": "@fubuloubu damn, I almost had 'em! ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550776335/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00171_550843550.json b/.gh-pullrequests/00171_550843550.json
new file mode 100644
index 0000000..98a2c0e
--- /dev/null
+++ b/.gh-pullrequests/00171_550843550.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550843550",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/171#issuecomment-550843550",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/171",
+    "id": 550843550,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDg0MzU1MA==",
+    "user": {
+      "login": "kimisan",
+      "id": 8416967,
+      "node_id": "MDQ6VXNlcjg0MTY5Njc=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/8416967?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/kimisan",
+      "html_url": "https://github.com/kimisan",
+      "followers_url": "https://api.github.com/users/kimisan/followers",
+      "following_url": "https://api.github.com/users/kimisan/following{/other_user}",
+      "gists_url": "https://api.github.com/users/kimisan/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/kimisan/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/kimisan/subscriptions",
+      "organizations_url": "https://api.github.com/users/kimisan/orgs",
+      "repos_url": "https://api.github.com/users/kimisan/repos",
+      "events_url": "https://api.github.com/users/kimisan/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/kimisan/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-07T06:00:30Z",
+    "updated_at": "2019-11-07T06:00:30Z",
+    "author_association": "MEMBER",
+    "body": "ha, I don't see ProgPoW is good for ETC.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/550843550/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00173.json b/.gh-pullrequests/00173.json
new file mode 100644
index 0000000..2291a79
--- /dev/null
+++ b/.gh-pullrequests/00173.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/173",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/173/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/173/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/173/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/173",
+    "id": 519387967,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM4MTM5MTMw",
+    "number": 173,
+    "title": "update 1043 discussion link",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-07T16:50:36Z",
+    "updated_at": "2019-11-08T22:59:33Z",
+    "closed_at": "2019-11-08T22:59:29Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/173",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/173",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/173.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/173.patch"
+    },
+    "body": "#11 ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/173/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00173.patch b/.gh-pullrequests/00173.patch
new file mode 100644
index 0000000..0c52822
--- /dev/null
+++ b/.gh-pullrequests/00173.patch
@@ -0,0 +1,68 @@
+From 0f4f516b39a2f7c62f53649509ec5524988cecb2 Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Thu, 7 Nov 2019 17:50:26 +0100
+Subject: [PATCH 1/3] update 1043 discussion link
+
+---
+ _specs/ecip-1043.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1043.md b/_specs/ecip-1043.md
+index f3193cc..df051b9 100644
+--- a/_specs/ecip-1043.md
++++ b/_specs/ecip-1043.md
+@@ -6,7 +6,7 @@ author: Cody Burns <cody.w.burns@gmail.com>, Wolf Spraul <wolf@linzhi.io>
+ status: Draft
+ type: Standard
+ category: Core
+-Discussions-to: https://github.com/ethereumclassic/ECIPs/issues/138
++Discussions-to: https://github.com/ethereumclassic/ECIPs/issues/11
+ created: 2018-04-16
+ ---
+ 
+
+From 10b02c0b989e8eb850b0bc2d6cb8abb19840e316 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sat, 9 Nov 2019 07:40:16 +0900
+Subject: [PATCH 2/3] Update ecip-1043.md
+
+---
+ _specs/ecip-1043.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1043.md b/_specs/ecip-1043.md
+index df051b9..a4f2b57 100644
+--- a/_specs/ecip-1043.md
++++ b/_specs/ecip-1043.md
+@@ -6,7 +6,7 @@ author: Cody Burns <cody.w.burns@gmail.com>, Wolf Spraul <wolf@linzhi.io>
+ status: Draft
+ type: Standard
+ category: Core
+-Discussions-to: https://github.com/ethereumclassic/ECIPs/issues/11
++iscussions-to: https://github.com/ethereumclassic/ECIPs/issues/11
+ created: 2018-04-16
+ ---
+ 
+
+From e61de0e545f041e24431113a842ba7c7be272813 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sat, 9 Nov 2019 07:40:29 +0900
+Subject: [PATCH 3/3] Update ecip-1043.md
+
+---
+ _specs/ecip-1043.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1043.md b/_specs/ecip-1043.md
+index a4f2b57..79f2f21 100644
+--- a/_specs/ecip-1043.md
++++ b/_specs/ecip-1043.md
+@@ -6,7 +6,7 @@ author: Cody Burns <cody.w.burns@gmail.com>, Wolf Spraul <wolf@linzhi.io>
+ status: Draft
+ type: Standard
+ category: Core
+-iscussions-to: https://github.com/ethereumclassic/ECIPs/issues/11
++discussions-to: https://github.com/ethereumclassic/ECIPs/issues/11
+ created: 2018-04-16
+ ---
+ 
diff --git a/.gh-pullrequests/00176.json b/.gh-pullrequests/00176.json
new file mode 100644
index 0000000..48f4409
--- /dev/null
+++ b/.gh-pullrequests/00176.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/176",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/176/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/176/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/176/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/176",
+    "id": 519403416,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM4MTUxOTMy",
+    "number": 176,
+    "title": "add eips to aztlan",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-07T17:18:25Z",
+    "updated_at": "2019-11-15T15:29:47Z",
+    "closed_at": "2019-11-15T15:29:30Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/176",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/176",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/176.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/176.patch"
+    },
+    "body": "ref https://github.com/ethereum/EIPs/pull/2332",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/176/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00176.patch b/.gh-pullrequests/00176.patch
new file mode 100644
index 0000000..40d55c7
--- /dev/null
+++ b/.gh-pullrequests/00176.patch
@@ -0,0 +1,81 @@
+From de86008053e8d40c467ca7011661d8a7189b19ca Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Thu, 7 Nov 2019 18:18:04 +0100
+Subject: [PATCH] add eips to aztlan
+
+---
+ _specs/ecip-1061.md | 35 +++++++++++++++++++++++++++--------
+ 1 file changed, 27 insertions(+), 8 deletions(-)
+
+diff --git a/_specs/ecip-1061.md b/_specs/ecip-1061.md
+index c903cdc..e410baf 100644
+--- a/_specs/ecip-1061.md
++++ b/_specs/ecip-1061.md
+@@ -19,13 +19,18 @@ Classic network in a hard-fork code-named _Aztlán_ to enable maximum compatibil
+ Add support for a subset of protocol-impacting changes introduced in the Ethereum Foundation (ETH) network via the
+ _Istanbul_ hardforks. The proposed changes for Ethereum Classic's _Aztlán_ upgrade include:
+ 
+-- TBD
++- Add Blake2 compression function `F` precompile
++- Reduce alt_bn128 precompile gas costs
++- Add ChainID opcode
++- Repricing for trie-size-dependent opcodes
++- Calldata gas cost reduction
++- Rebalance net-metered SSTORE gas cost with consideration of SLOAD gas cost change
+ 
+ This document proposes the following blocks at which to implement these changes in the Classic networks:
+ 
+-- `TBD` on Kotti Classic PoA-testnet (TBD 2020)
+-- `TBD` on Morden Classic PoW-testnet (TBD 2020)
+-- `TBD` on Ethereum Classic PoW-mainnet (TBD 2020)
++- `TBD` on Mordor Classic PoW-testnet (Feb 5th, 2020)
++- `TBD` on Kotti Classic PoA-testnet (Feb 12th, 2020)
++- `TBD` on Ethereum Classic PoW-mainnet (March 25th, 2020)
+ 
+ For more information on the opcodes and their respective EIPs and implementations, please see the _Specification_
+ section of this document.
+@@ -33,18 +38,23 @@ section of this document.
+ ### Motivation
+ 
+ To enhance the Ethereum Virtual Machine's (EVM) capabilities, various opcodes shall be added to the Ethereum Classic
+-networks, all of which have been in use on the Ethereum Foundation networks since late 2019.
++networks, all of which have been in use on the Ethereum Foundation networks since end of 2019.
+ 
+ ### Specification
+ 
+ Technical specifications for each EIP can be found at those documents respectively:
+ 
+-- TBD
++- [EIP-152](https://eips.ethereum.org/EIPS/eip-152): Add Blake2 compression function `F` precompile
++- [EIP-1108](https://eips.ethereum.org/EIPS/eip-1108): Reduce alt_bn128 precompile gas costs
++- [EIP-1344](https://eips.ethereum.org/EIPS/eip-1344): Add ChainID opcode
++- [EIP-1884](https://eips.ethereum.org/EIPS/eip-1884): Repricing for trie-size-dependent opcodes
++- [EIP-2028](https://eips.ethereum.org/EIPS/eip-2028): Calldata gas cost reduction
++- [EIP-2200](https://eips.ethereum.org/EIPS/eip-2200): Rebalance net-metered SSTORE gas cost with consideration of SLOAD gas cost change
+ 
+ ### Rationale
+ 
+ __Interoperability__: Establishing and maintaining interoperable behavior between Ethereum clients is essential for
+-developers and end-user adoption, yielding benefits for all participating chains (e.g., ETH and ETC, Ropsten and Morden,
++developers and end-user adoption, yielding benefits for all participating chains (e.g., ETH and ETC, Ropsten and Mordor,
+ Görli and Kotti).
+ 
+ __Immutability__: None of the introduced new opcodes in the EVM has the potential to change the behavior of existing
+@@ -58,7 +68,16 @@ Adoption of the content of this ECIP requires a hard fork as it introduces chang
+ 
+ The following clients with Ethereum Classic support implement the _Istanbul_ features currently:
+ 
+-- TBD
++- Parity Ethereum
++- Multi-Geth
++- Hyperledger Besu
++
++### Final Note
++
++Both, the Geth Classic client and the Morden testnet will no longer be supported by the community and not recieve the Aztlán ugrades.
++
++- Users of the Geth Classic client are urged to migrate their services to Parity Ethereum, Multi-Geth, or Hyperledger Besu. It is no longer recommended to run Geth Classic in production.
++- Users of the Morden Classic testnet are urged to migrate their applications to the Kotti Classic or Morder Classic testnets.
+ 
+ ## Copyright
+ 
diff --git a/.gh-pullrequests/00178.json b/.gh-pullrequests/00178.json
new file mode 100644
index 0000000..3fb0739
--- /dev/null
+++ b/.gh-pullrequests/00178.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/178",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/178/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/178/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/178/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/178",
+    "id": 520048419,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM4NzA0Njcw",
+    "number": 178,
+    "title": "ECIP-1000: Add MulanPSL into recommended licenses",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-08T14:35:26Z",
+    "updated_at": "2019-11-08T15:20:18Z",
+    "closed_at": "2019-11-08T15:20:14Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/178",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/178",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/178.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/178.patch"
+    },
+    "body": "This adds [MulanPSL](https://license.coscl.org.cn/MulanPSL/) into the \"recommended license\" section in ECIP-1000. From an initial look it fulfills most of the criteria we want for a specification license:\r\n\r\n1. Explicit patent protection, similar to Apache-2.0.\r\n2. Permissive.\r\n3. It looks like some of the languages used in the license will make it work better in the Chinese jurisdiction, which some contributors might have preferences.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/178/reactions",
+      "total_count": 3,
+      "+1": 3,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00178.patch b/.gh-pullrequests/00178.patch
new file mode 100644
index 0000000..626f2aa
--- /dev/null
+++ b/.gh-pullrequests/00178.patch
@@ -0,0 +1,69 @@
+From 84495eb6a900c3791c28ebbe7d4eea138cd528da Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Fri, 8 Nov 2019 23:29:17 +0900
+Subject: [PATCH 1/3] ECIP-1000: Add MulanPSL into recommended licenses
+
+---
+ _specs/ecip-1000.md | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index 1debd53..5998288 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -331,6 +331,7 @@ In this case, only the acceptable license(s) should be listed in the License and
+ * BSD-3-Clause: [OSI-approved BSD 3-clause license](https://opensource.org/licenses/BSD-3-Clause)
+ * CC0-1.0: [Creative Commons CC0 1.0 Universal](https://creativecommons.org/publicdomain/zero/1.0/)
+ * GNU-All-Permissive: [GNU All-Permissive License](http://www.gnu.org/prep/maintain/html_node/License-Notices-for-Other-Files.html)
++* MulanPSL: [Mulan Permissive Software License，Version 1](https://license.coscl.org.cn/MulanPSL/)
+ 
+ In addition, it is recommended that literal code included in the ECIP be dual-licensed under the same license terms as the project it modifies. For example, literal code intended for Ethereum Classic Core would ideally be dual-licensed under the MIT license terms as well as one of the above with the rest of the ECIP text.
+ 
+
+From 2f3312439b2ca1ab6a704f642ed40e11d83ff4ad Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Fri, 8 Nov 2019 23:50:46 +0900
+Subject: [PATCH 2/3] Correctly use the SPDX license identifier
+ ("MulanPSL-1.0")
+
+---
+ _specs/ecip-1000.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index 5998288..1c7aa31 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -331,7 +331,7 @@ In this case, only the acceptable license(s) should be listed in the License and
+ * BSD-3-Clause: [OSI-approved BSD 3-clause license](https://opensource.org/licenses/BSD-3-Clause)
+ * CC0-1.0: [Creative Commons CC0 1.0 Universal](https://creativecommons.org/publicdomain/zero/1.0/)
+ * GNU-All-Permissive: [GNU All-Permissive License](http://www.gnu.org/prep/maintain/html_node/License-Notices-for-Other-Files.html)
+-* MulanPSL: [Mulan Permissive Software License，Version 1](https://license.coscl.org.cn/MulanPSL/)
++* MulanPSL-1.0: [Mulan Permissive Software License，Version 1](https://license.coscl.org.cn/MulanPSL/)
+ 
+ In addition, it is recommended that literal code included in the ECIP be dual-licensed under the same license terms as the project it modifies. For example, literal code intended for Ethereum Classic Core would ideally be dual-licensed under the MIT license terms as well as one of the above with the rest of the ECIP text.
+ 
+
+From 950eaa8d43bdc118ea92376f4c35f5cf0d18b07b Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Fri, 8 Nov 2019 23:54:33 +0900
+Subject: [PATCH 3/3] Replace an unnecessary unicode symbol
+
+Replace the Chinese full "," to small English "," just in case.
+---
+ _specs/ecip-1000.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index 1c7aa31..b5b50dd 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -331,7 +331,7 @@ In this case, only the acceptable license(s) should be listed in the License and
+ * BSD-3-Clause: [OSI-approved BSD 3-clause license](https://opensource.org/licenses/BSD-3-Clause)
+ * CC0-1.0: [Creative Commons CC0 1.0 Universal](https://creativecommons.org/publicdomain/zero/1.0/)
+ * GNU-All-Permissive: [GNU All-Permissive License](http://www.gnu.org/prep/maintain/html_node/License-Notices-for-Other-Files.html)
+-* MulanPSL-1.0: [Mulan Permissive Software License，Version 1](https://license.coscl.org.cn/MulanPSL/)
++* MulanPSL-1.0: [Mulan Permissive Software License, Version 1](https://license.coscl.org.cn/MulanPSL/)
+ 
+ In addition, it is recommended that literal code included in the ECIP be dual-licensed under the same license terms as the project it modifies. For example, literal code intended for Ethereum Classic Core would ideally be dual-licensed under the MIT license terms as well as one of the above with the rest of the ECIP text.
+ 
diff --git a/.gh-pullrequests/00179.json b/.gh-pullrequests/00179.json
new file mode 100644
index 0000000..df295b7
--- /dev/null
+++ b/.gh-pullrequests/00179.json
@@ -0,0 +1,83 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/179",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/179/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/179/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/179/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/179",
+    "id": 520260101,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM4ODgwMzkx",
+    "number": 179,
+    "title": "ECIP-1071: Methods to Merge Ethereum Blockchains Together",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785139,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTM5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/status:%20draft",
+        "name": "status: draft",
+        "color": "ffffff",
+        "default": false,
+        "description": "draft stage - can be assigned ecip number and merged, but requires new PR to be Accepted"
+      },
+      {
+        "id": 1154785127,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20core",
+        "name": "type: core",
+        "color": "d73a4a",
+        "default": false,
+        "description": "Requires consensus consideration"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 2,
+    "created_at": "2019-11-08T22:17:42Z",
+    "updated_at": "2019-11-12T19:10:47Z",
+    "closed_at": "2019-11-12T19:10:42Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/179",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/179",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/179.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/179.patch"
+    },
+    "body": "",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/179/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00179.patch b/.gh-pullrequests/00179.patch
new file mode 100644
index 0000000..9dcaaba
--- /dev/null
+++ b/.gh-pullrequests/00179.patch
@@ -0,0 +1,149 @@
+From 30c458aad769622d2ee8b9a6fe6953ef242c727c Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Fri, 8 Nov 2019 23:16:52 +0100
+Subject: [PATCH] Add ECIP-1071
+
+---
+ _specs/ecip-1071.md | 133 ++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 133 insertions(+)
+ create mode 100644 _specs/ecip-1071.md
+
+diff --git a/_specs/ecip-1071.md b/_specs/ecip-1071.md
+new file mode 100644
+index 0000000..b90f08a
+--- /dev/null
++++ b/_specs/ecip-1071.md
+@@ -0,0 +1,133 @@
++---
++lang: en
++ecip: 1071
++title: Methods to Merge Ethereum Blockchains Together
++author: Wei Tang (@sorpaas)
++discussions-to: https://github.com/sorpaas/EIPs/issues/8
++status: Draft
++type: Standards Track
++category: Core
++created: 2019-08-02
++requires: 1040
++license: Apache-2.0
++---
++
++This ECIP defines methods that can be adopted to merge two
++Ethereum-like blockchains together.
++
++Note that this ECIP is purely an exploration of technical
++possibilities, and it does not mean the author endorse merging
++Ethereum and Ethereum Classic, or any other two blockchains together.
++
++## Simple Summary
++
++We define methods to merge multiple blockchains together, in a fully
++backward compatible way.
++
++## Abstract
++
++This defines how Ethereum merging can happen, with backward
++compatibility in mind. This is done by utilizing account versioning
++together with transaction replay protection. We also define three
++additional opcodes to allow merged chains to work across two sides of
++state.
++
++## Motivation
++
++There are many reasons why we may want to merge multiple Ethereum
++(eth1.x) blockchains together. For example, there may have been chain
++splits of a blockchain, where later the community issues are resolved,
++and we want to avoid a permanent split due to a temporary issue. It
++may also be two completely distinct blockchains that want to merge in
++order to share proof of work, or to improve inter-chain communication.
++
++## Specification
++
++The merge process happens at fork block, where we have a **merger**
++chain and a **mergee** chain. At fork height, a miner should mine both
++a merger chain's block, and a mergee chain's block. For those two
++blocks:
++
++* Both of them should have no transactions.
++* Merger chain's fork height block and mergee chain's fork height
++  block should have its state root processed as normal.
++* Merger chain's fork height block should set its extra data field to
++  mergee chain's fork height block's state root. The same for mergee
++  chain's fork height block.
++* After mergee chain's fork height block, its proof of work should be
++  abandoned. That is, updated miners should not continue to mine
++  mergee chain any more.
++  
++### State Root
++  
++For the block after merger chain's fork height block, the state root
++meaning is changed to be hash of concatenating merger chain's original
++state root, and mergee chain's original state root.
++
++### Block Rewards
++
++Use merger chain's original block rewards. And mine coinbase always to
++the merger chain's side of the state.
++
++### Transactions and Account Versioning
++
++After merge, transactions with both chain ids are considered valid on
++the merger chain. We define two account versions, one with merger
++chain's original EVM config, and one with mergee chain's original EVM
++config. Accessing accounts originally from either chain should use
++ECIP-1040's account versioning rules. We define how accounts are
++referred on the merged blockchain below:
++
++* For end user interface, prefix `0x01` for accounts on the merger
++  chain, and prefix `0x02` for accounts on the mergee chain.
++* The transaction format is unchanged with addresses using original
++  format. We distinguish whether a transaction operates on merger chain
++  or mergee chain by its chain id. None replay protected transactions
++  must be disabled prior to merging.
++* All original opcodes `CALL*`, `CREATE*` are unchanged, where it only
++  accesses accounts on the same originating chain.
++  
++### Cross the Merger and Mergee Chain Boundary
++
++Define factor `P // Q`, which determines how coins are exchanged on
++merger chain and mergee chain. Define three new opcodes `MCALL`,
++`MCREATE` and `MCREATE2`. They function the same as `CREATE`, `CALL`
++and `CREATE2` with the same gas cost, except that it calls accounts on
++the other side of the state. Values `V` to be exchanged are computed as
++`V * P // Q` from merger side of state to mergee side of state, and
++`V * Q // P` from mergee side of state to merger side of state.
++
++## Rationale
++
++This ECIP accomplishes the chain merge by concatenating two blockchain's
++state root. In clients, this can be represented as a simple depth one
++binary merkle tree where root's left is the merger state, and root's
++right is the mergee state. We use account versioning and transaction
++replay protection to make it backward compatible for full nodes,
++without changing any internal address representation or transaction
++representation. We then define additional opcodes to make two sides
++communicatable.
++
++## Backwards Compatibility
++
++This ECIP is fully backward compatible for EVM and account states. It
++is not backward compatible for light client state proof verification,
++because an additional binary merkle tree is added.
++
++## Test Cases
++
++To be added.
++
++## Implementation
++
++To be added.
++
++## Reference
++
++This specification is a realization of
++[37-MERGE](https://specs.that.world/37-merge/).
++
++## Copyright
++
++This work is licensed under [Apache License, Version
++2.0](http://www.apache.org/licenses/).
diff --git a/.gh-pullrequests/00179_552929250.json b/.gh-pullrequests/00179_552929250.json
new file mode 100644
index 0000000..2570d2e
--- /dev/null
+++ b/.gh-pullrequests/00179_552929250.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552929250",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/179#issuecomment-552929250",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/179",
+    "id": 552929250,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjkyOTI1MA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-12T14:58:02Z",
+    "updated_at": "2019-11-12T14:58:02Z",
+    "author_association": "MEMBER",
+    "body": "Is this missing a catagory?\r\nShould be ECBP?\r\nDoes this even need to be an ECIP?\r\nCan just remain blog post / ETC Summit talk?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552929250/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00179_553068137.json b/.gh-pullrequests/00179_553068137.json
new file mode 100644
index 0000000..a7c3ed0
--- /dev/null
+++ b/.gh-pullrequests/00179_553068137.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553068137",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/179#issuecomment-553068137",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/179",
+    "id": 553068137,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzA2ODEzNw==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-12T19:10:11Z",
+    "updated_at": "2019-11-12T19:10:41Z",
+    "author_association": "MEMBER",
+    "body": "@bobsummerwill it has a category `core` specified. It also seems like an implementation that changes the core so I believe the category is appropriate, no?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553068137/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00180.json b/.gh-pullrequests/00180.json
new file mode 100644
index 0000000..cbd86ea
--- /dev/null
+++ b/.gh-pullrequests/00180.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/180",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/180/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/180/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/180/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/180",
+    "id": 520286953,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM4OTAyMzMz",
+    "number": 180,
+    "title": "Proposing Coordinator Position",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 8,
+    "created_at": "2019-11-08T23:47:55Z",
+    "updated_at": "2019-11-13T16:54:51Z",
+    "closed_at": "2019-11-13T16:53:10Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/180",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/180",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/180.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/180.patch"
+    },
+    "body": "I am proposing the \"coordinator\" position, a person, technical or not, who checks and corrects the text and format of ECIPs also writing additions or deletions, specifically non-code non-software ECIPs, or copies improvement proposals from other improvement proposal repos, to help off-load work from, and assist editors in correcting and approving such ECIPs. \r\n\r\nI am dropping myself as a candidate, but i recommend to add 2 person in the coordinator position if it is approved.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/180/reactions",
+      "total_count": 3,
+      "+1": 3,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00180.patch b/.gh-pullrequests/00180.patch
new file mode 100644
index 0000000..5f25552
--- /dev/null
+++ b/.gh-pullrequests/00180.patch
@@ -0,0 +1,117 @@
+From 39a9aec0fdca953035b0022a1f2c2d2c3e91c517 Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Fri, 8 Nov 2019 16:47:06 -0700
+Subject: [PATCH 1/3] Proposing Subeditor Position
+
+I am proposing the "subeditor" position, a person, technical or not, who checks and corrects the text and format of ECIPs also writing additions or deletions, specifically non-code non-software ECIPs, or copies improvement proposals from other improvement proposal repos, to help off-load work from, and assist editors in correcting and approving such ECIPs.
+
+I am also proposing myself as a subeditor as I have been helping editors and ECIP authors in this capacity, with their consent, this year. I think it would help to accelerate the input of ECIPs as editors often don't have time to go over the flow, and has proven useful up to now.
+---
+ _specs/ecip-1000.md | 10 ++++++++--
+ 1 file changed, 8 insertions(+), 2 deletions(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index b5b50dd..07841bd 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -68,7 +68,7 @@ A good reason to transfer ownership is because the original author no longer has
+ 
+ **If you are interested in assuming ownership of a ECIP**, send a message asking to take over, addressed to both the original author and the ECIP editor. If the original author doesn't respond to email in a timely manner, the ECIP editor will make a unilateral decision (it's not like such decisions can't be reversed :).
+ 
+-## ECIP Editors
++## ECIP Editors & Subeditors
+ 
+ The current ECIP editors are:
+ 
+@@ -78,7 +78,11 @@ The current ECIP editors are:
+ * Afri Schoedon (@soc1c)
+ * Yaz Khoury (@YazzyYaz)
+ 
+-## ECIP Editor Responsibilities & Workflow
++The current ECIP subeditors are:
++
++* Donald McIntyre (@TokenHash)
++
++## ECIP Editor & Subeditors Responsibilities & Workflow
+ 
+ ### Introduction
+ 
+@@ -102,6 +106,8 @@ ECIP editors are intended to fulfill administrative and editorial responsibiliti
+ * Merge the pull request when it is ready.
+ * List the ECIP in [[README.mediawiki]]
+ 
++ECIP subeditors are technical person or not, who check and correct the text and format of ECIPs also writing additions or deletions, specifically non-code non-software ECIPs, or copy improvement proposals from other improvement proposal repos, to help off-load work from, and assist editors in their duties and approving ECIPs.
++
+ # ECIP Format and Structure
+ 
+ ## Specification
+
+From 20f273bc8d1c6f4c822d045250f8f46cea0ade52 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sun, 10 Nov 2019 21:49:59 +0900
+Subject: [PATCH 2/3] Update ecip-1000.md
+
+---
+ _specs/ecip-1000.md | 8 ++++----
+ 1 file changed, 4 insertions(+), 4 deletions(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index 07841bd..7839023 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -68,7 +68,7 @@ A good reason to transfer ownership is because the original author no longer has
+ 
+ **If you are interested in assuming ownership of a ECIP**, send a message asking to take over, addressed to both the original author and the ECIP editor. If the original author doesn't respond to email in a timely manner, the ECIP editor will make a unilateral decision (it's not like such decisions can't be reversed :).
+ 
+-## ECIP Editors & Subeditors
++## ECIP Editors & Coordinators
+ 
+ The current ECIP editors are:
+ 
+@@ -78,11 +78,11 @@ The current ECIP editors are:
+ * Afri Schoedon (@soc1c)
+ * Yaz Khoury (@YazzyYaz)
+ 
+-The current ECIP subeditors are:
++The current ECIP coordinators are:
+ 
+ * Donald McIntyre (@TokenHash)
+ 
+-## ECIP Editor & Subeditors Responsibilities & Workflow
++## Responsibilities & Workflow
+ 
+ ### Introduction
+ 
+@@ -106,7 +106,7 @@ ECIP editors are intended to fulfill administrative and editorial responsibiliti
+ * Merge the pull request when it is ready.
+ * List the ECIP in [[README.mediawiki]]
+ 
+-ECIP subeditors are technical person or not, who check and correct the text and format of ECIPs also writing additions or deletions, specifically non-code non-software ECIPs, or copy improvement proposals from other improvement proposal repos, to help off-load work from, and assist editors in their duties and approving ECIPs.
++ECIP coordinators are technical person or not, who check and correct the text and format of ECIPs also writing additions or deletions, specifically non-code non-software ECIPs, or copy improvement proposals from other improvement proposal repos, to help off-load work from, and assist editors in their duties and approving ECIPs.
+ 
+ # ECIP Format and Structure
+ 
+
+From 23cb247eaccaae86247b27d9557adad76582a59c Mon Sep 17 00:00:00 2001
+From: Donald McIntyre <donald@etherplan.com>
+Date: Mon, 11 Nov 2019 10:03:05 -0700
+Subject: [PATCH 3/3] Dropping as a candidate
+
+Dropping my name as a candidate, recommend to put 2 persons in that position if approved.
+---
+ _specs/ecip-1000.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index 7839023..65b7821 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -80,7 +80,7 @@ The current ECIP editors are:
+ 
+ The current ECIP coordinators are:
+ 
+-* Donald McIntyre (@TokenHash)
++* 
+ 
+ ## Responsibilities & Workflow
+ 
diff --git a/.gh-pullrequests/00180_552150448.json b/.gh-pullrequests/00180_552150448.json
new file mode 100644
index 0000000..6d4dfb0
--- /dev/null
+++ b/.gh-pullrequests/00180_552150448.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552150448",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/180#issuecomment-552150448",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/180",
+    "id": 552150448,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjE1MDQ0OA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-10T00:29:49Z",
+    "updated_at": "2019-11-10T00:29:49Z",
+    "author_association": "MEMBER",
+    "body": "@TokenHash How about naming the position as \"Coordinator\" or \"Project Manager\"? I personally feel that sounds much nicer than \"Subeditor\" and may be able to attract more people to contribute.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552150448/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00180_552152293.json b/.gh-pullrequests/00180_552152293.json
new file mode 100644
index 0000000..f33d7c0
--- /dev/null
+++ b/.gh-pullrequests/00180_552152293.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552152293",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/180#issuecomment-552152293",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/180",
+    "id": 552152293,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjE1MjI5Mw==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-10T01:06:41Z",
+    "updated_at": "2019-11-10T01:06:41Z",
+    "author_association": "MEMBER",
+    "body": "@sorpaas if the position is useful, yes, \"Coordinator\" sounds good.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552152293/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00180_552188503.json b/.gh-pullrequests/00180_552188503.json
new file mode 100644
index 0000000..80defa8
--- /dev/null
+++ b/.gh-pullrequests/00180_552188503.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552188503",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/180#issuecomment-552188503",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/180",
+    "id": 552188503,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjE4ODUwMw==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-10T12:04:45Z",
+    "updated_at": "2019-11-10T12:04:45Z",
+    "author_association": "MEMBER",
+    "body": "I am for the name \"Coordinator\" and for Donald",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552188503/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00180_552209023.json b/.gh-pullrequests/00180_552209023.json
new file mode 100644
index 0000000..9f89890
--- /dev/null
+++ b/.gh-pullrequests/00180_552209023.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552209023",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/180#issuecomment-552209023",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/180",
+    "id": 552209023,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjIwOTAyMw==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-10T16:11:58Z",
+    "updated_at": "2019-11-10T16:11:58Z",
+    "author_association": "MEMBER",
+    "body": "What's the difference between Coordinator and Editor?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552209023/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00180_552574962.json b/.gh-pullrequests/00180_552574962.json
new file mode 100644
index 0000000..2c6ad14
--- /dev/null
+++ b/.gh-pullrequests/00180_552574962.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552574962",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/180#issuecomment-552574962",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/180",
+    "id": 552574962,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjU3NDk2Mg==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-11T19:13:41Z",
+    "updated_at": "2019-11-11T19:13:41Z",
+    "author_association": "MEMBER",
+    "body": "> What's the difference between Coordinator and Editor?\r\n\r\n@soc1c it just emerges from what has been happening in practice. A coordinator is like an assistant to editors and ecip authors, but with no technical skills, and no authorization to merge ecips or review software code. A coordinator has time to do housekeeping things.\r\n\r\nExamples where I have been assisting editors:\r\n\r\n1. I copied ECIP-1055 from ETC Labs Core to Ethereum Classic repo with the authorization of the author.\r\n2. I reviewed and approved the latest ECIPs by Sorpaas (1040, 1068, 1069, etc.) because they were just copies of corresponding EIPs)\r\n3. I reviewed and adapted texts of ECIP-1000\r\n4. I moved ecip-1016 to \"withdrawn\" and added the original author with the author consent\r\n5. many more actions\r\n\r\nthe reason for creating the formal \"coordinator\" position is that I thought to make it formal makes it more transparent as many actions are made by non-editors and that seems irregular in the system unless the \"coordinator\" role is added",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552574962/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00180_552586684.json b/.gh-pullrequests/00180_552586684.json
new file mode 100644
index 0000000..e22d60b
--- /dev/null
+++ b/.gh-pullrequests/00180_552586684.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552586684",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/180#issuecomment-552586684",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/180",
+    "id": 552586684,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjU4NjY4NA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-11T19:45:14Z",
+    "updated_at": "2019-11-11T19:45:14Z",
+    "author_association": "MEMBER",
+    "body": "@TokenHash I disagree with your interpretation that \"coordinator\" is somehow on a lower level than \"editor\" and considered to be \"assistant\". If we consider ECIP to be a team, then editors are software engineers, and coordinators are project managers. Coordinators play an important role in coordinating the ECIP process, especially during hard fork.\r\n\r\nI think it's a mistake that you removed yourself from the proposed list. You should add yourself back in.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552586684/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00180_552835159.json b/.gh-pullrequests/00180_552835159.json
new file mode 100644
index 0000000..521594c
--- /dev/null
+++ b/.gh-pullrequests/00180_552835159.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552835159",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/180#issuecomment-552835159",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/180",
+    "id": 552835159,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjgzNTE1OQ==",
+    "user": {
+      "login": "kimisan",
+      "id": 8416967,
+      "node_id": "MDQ6VXNlcjg0MTY5Njc=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/8416967?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/kimisan",
+      "html_url": "https://github.com/kimisan",
+      "followers_url": "https://api.github.com/users/kimisan/followers",
+      "following_url": "https://api.github.com/users/kimisan/following{/other_user}",
+      "gists_url": "https://api.github.com/users/kimisan/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/kimisan/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/kimisan/subscriptions",
+      "organizations_url": "https://api.github.com/users/kimisan/orgs",
+      "repos_url": "https://api.github.com/users/kimisan/repos",
+      "events_url": "https://api.github.com/users/kimisan/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/kimisan/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-12T10:34:43Z",
+    "updated_at": "2019-11-12T10:34:43Z",
+    "author_association": "MEMBER",
+    "body": "@TokenHash can you put your name back ?\r\n@bobsummerwill I think it should be good for Donald being a coordinator.\r\nI think @sorpaas , @antsankov Alex, atari and I also have positive view on it ^^",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/552835159/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00180_553491170.json b/.gh-pullrequests/00180_553491170.json
new file mode 100644
index 0000000..35778bd
--- /dev/null
+++ b/.gh-pullrequests/00180_553491170.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553491170",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/180#issuecomment-553491170",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/180",
+    "id": 553491170,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzQ5MTE3MA==",
+    "user": {
+      "login": "TokenHash",
+      "id": 29529586,
+      "node_id": "MDQ6VXNlcjI5NTI5NTg2",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/29529586?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TokenHash",
+      "html_url": "https://github.com/TokenHash",
+      "followers_url": "https://api.github.com/users/TokenHash/followers",
+      "following_url": "https://api.github.com/users/TokenHash/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TokenHash/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TokenHash/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TokenHash/subscriptions",
+      "organizations_url": "https://api.github.com/users/TokenHash/orgs",
+      "repos_url": "https://api.github.com/users/TokenHash/repos",
+      "events_url": "https://api.github.com/users/TokenHash/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TokenHash/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-13T16:52:57Z",
+    "updated_at": "2019-11-13T16:54:51Z",
+    "author_association": "MEMBER",
+    "body": "I apologize I realized for personal reasons I don't think I can guarantee my availability to act as a coordinator systematically, this is why I decided to take my name out.\r\n\r\nI understand that position is unique to what I was doing informally and may be confused with \"editor\". The difference is that \"editor\" is a technical position and \"coordinator\" is a non-technical position more focused on advancing the ECIP process, when editors have limited time.\r\n\r\nI will close this PR as I will not continue to lead it. If the position is needed someone else can open a PR, but I haven't seen other people doing that role in the recent past.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553491170/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00181.json b/.gh-pullrequests/00181.json
new file mode 100644
index 0000000..13e500c
--- /dev/null
+++ b/.gh-pullrequests/00181.json
@@ -0,0 +1,83 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/181",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/181/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/181/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/181/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/181",
+    "id": 520522804,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM5MDk1MjEw",
+    "number": 181,
+    "title": "Create SECURITY.md",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1632883313,
+        "node_id": "MDU6TGFiZWwxNjMyODgzMzEz",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/dependencies",
+        "name": "dependencies",
+        "color": "0366d6",
+        "default": false,
+        "description": "Pull requests that update a dependency file"
+      },
+      {
+        "id": 1154785130,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTMw",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/editor:%20enhancement",
+        "name": "editor: enhancement",
+        "color": "a2eeef",
+        "default": false,
+        "description": "New feature or request"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-09T22:33:02Z",
+    "updated_at": "2019-11-17T15:42:41Z",
+    "closed_at": "2019-11-17T00:17:05Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/181",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/181",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/181.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/181.patch"
+    },
+    "body": "",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/181/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00181.patch b/.gh-pullrequests/00181.patch
new file mode 100644
index 0000000..aedc1b6
--- /dev/null
+++ b/.gh-pullrequests/00181.patch
@@ -0,0 +1,292 @@
+From adbd2831ca395ed88875c652af2cfcb5b330aa01 Mon Sep 17 00:00:00 2001
+From: Cody Burns <cody.w.burns@gmail.com>
+Date: Sat, 9 Nov 2019 16:31:03 -0600
+Subject: [PATCH 01/10] Create SECURITY.md
+
+---
+ SECURITY.md | 22 ++++++++++++++++++++++
+ 1 file changed, 22 insertions(+)
+ create mode 100644 SECURITY.md
+
+diff --git a/SECURITY.md b/SECURITY.md
+new file mode 100644
+index 0000000..39f94ce
+--- /dev/null
++++ b/SECURITY.md
+@@ -0,0 +1,22 @@
++# Security Policy
++
++Security alerts related to the hosting and delivery of the ecips.ethereumclassic.org web site will be addressed and will be taken by either the ecip editors or org admins. Security concerns with I individual ecips should be addressed in the `discussion to` locations.
++Security alerts will not be made publicly until mitigating solutions are identified. Once a remedy is found, dependably will automate the repair process.
++
++This site is free and open source in accordance with the site license which can be found at LICENSE.md or COPY.md
++ 
++## Supported Versions
++
++Use this section to tell people about which versions of your project are
++currently being supported with security updates.
++
++| Version | Supported          |
++| ------- | ------------------ |
++| master  | :white_check_mark: |
++
++
++## Reporting a Vulnerability
++
++Please contact security@ethereumclassic.org with any website or ecip related security concerns.
++
++
+
+From 6bf11a2bf75fe1b6569fe1f8ce3ad2c9c43cddf3 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sun, 17 Nov 2019 02:20:04 +0300
+Subject: [PATCH 02/10] Update SECURITY.md
+
+---
+ SECURITY.md | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/SECURITY.md b/SECURITY.md
+index 39f94ce..b38e531 100644
+--- a/SECURITY.md
++++ b/SECURITY.md
+@@ -3,7 +3,7 @@
+ Security alerts related to the hosting and delivery of the ecips.ethereumclassic.org web site will be addressed and will be taken by either the ecip editors or org admins. Security concerns with I individual ecips should be addressed in the `discussion to` locations.
+ Security alerts will not be made publicly until mitigating solutions are identified. Once a remedy is found, dependably will automate the repair process.
+ 
+-This site is free and open source in accordance with the site license which can be found at LICENSE.md or COPY.md
++This site is licensed via multiple permissive and open source licenses, as specified in each ECIP.
+  
+ ## Supported Versions
+ 
+@@ -17,6 +17,6 @@ currently being supported with security updates.
+ 
+ ## Reporting a Vulnerability
+ 
+-Please contact security@ethereumclassic.org with any website or ecip related security concerns.
++Please contact security@ethereumclassic.org website security concerns, and contact ECIP editors (the list can be found in [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000) or corresponding ECIP authors for specification related security concerns. The PGP keys of community members can be fetched from [the volunteer repository](https://github.com/ethereumclassic/volunteer).
+ 
+ 
+
+From d8d59229689fe3103cc98faadf0d2ec07f084efc Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sun, 17 Nov 2019 02:25:16 +0300
+Subject: [PATCH 03/10] Update SECURITY.md
+
+---
+ SECURITY.md | 19 +++++++------------
+ 1 file changed, 7 insertions(+), 12 deletions(-)
+
+diff --git a/SECURITY.md b/SECURITY.md
+index b38e531..f031817 100644
+--- a/SECURITY.md
++++ b/SECURITY.md
+@@ -1,22 +1,17 @@
+ # Security Policy
+ 
+-Security alerts related to the hosting and delivery of the ecips.ethereumclassic.org web site will be addressed and will be taken by either the ecip editors or org admins. Security concerns with I individual ecips should be addressed in the `discussion to` locations.
+-Security alerts will not be made publicly until mitigating solutions are identified. Once a remedy is found, dependably will automate the repair process.
++Security concerns with each individual ECIPs should be addressed to the ECIP authors, or the specified `discussion-to` locations. Note that when an ECIP is already deployed, it is recommended to talk privately with the ECIP authors or ECIP editors first.
++
++Security alerts related to the hosting and delivery of the ecips.ethereumclassic.org website will be addressed and will be taken by either the ECIP editors or org admins. They will not be made publicly until mitigating solutions are identified. Once a remedy is found, dependably will automate the repair process.
+ 
+ This site is licensed via multiple permissive and open source licenses, as specified in each ECIP.
+  
+-## Supported Versions
+-
+-Use this section to tell people about which versions of your project are
+-currently being supported with security updates.
+-
+-| Version | Supported          |
+-| ------- | ------------------ |
+-| master  | :white_check_mark: |
++## Supported Branches
+ 
++The only supported branch for specifications and website is the `master` branch.
+ 
+ ## Reporting a Vulnerability
+ 
+-Please contact security@ethereumclassic.org website security concerns, and contact ECIP editors (the list can be found in [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000) or corresponding ECIP authors for specification related security concerns. The PGP keys of community members can be fetched from [the volunteer repository](https://github.com/ethereumclassic/volunteer).
+-
++Please contact ECIP editors (the list can be found in [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000) or corresponding ECIP authors for specification related security concerns. The PGP keys of community members can be fetched from [the volunteer repository](https://github.com/ethereumclassic/volunteer).
+ 
++Please contact security@ethereumclassic.org website security concerns.
+
+From 3a963c4730417fdc35fd264115c8090691a75e72 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sun, 17 Nov 2019 02:26:56 +0300
+Subject: [PATCH 04/10] Move ECIP authors to the front of ECIP editors
+
+---
+ SECURITY.md | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/SECURITY.md b/SECURITY.md
+index f031817..c640c36 100644
+--- a/SECURITY.md
++++ b/SECURITY.md
+@@ -1,6 +1,6 @@
+ # Security Policy
+ 
+-Security concerns with each individual ECIPs should be addressed to the ECIP authors, or the specified `discussion-to` locations. Note that when an ECIP is already deployed, it is recommended to talk privately with the ECIP authors or ECIP editors first.
++Security concerns with each individual ECIPs should be addressed to the ECIP authors, the specified `discussion-to` locations, or ECIP editors. Note that when an ECIP is already deployed, it is recommended to talk privately with the ECIP authors or ECIP editors first.
+ 
+ Security alerts related to the hosting and delivery of the ecips.ethereumclassic.org website will be addressed and will be taken by either the ECIP editors or org admins. They will not be made publicly until mitigating solutions are identified. Once a remedy is found, dependably will automate the repair process.
+ 
+@@ -12,6 +12,6 @@ The only supported branch for specifications and website is the `master` branch.
+ 
+ ## Reporting a Vulnerability
+ 
+-Please contact ECIP editors (the list can be found in [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000) or corresponding ECIP authors for specification related security concerns. The PGP keys of community members can be fetched from [the volunteer repository](https://github.com/ethereumclassic/volunteer).
++Please contact the corresponding ECIP authors or ECIP editors (the list can be found in [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000) for specification related security concerns. The PGP keys of community members can be fetched from [the volunteer repository](https://github.com/ethereumclassic/volunteer).
+ 
+ Please contact security@ethereumclassic.org website security concerns.
+
+From f65ae34bbd5889bc41722935492349a71dfd1da0 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sun, 17 Nov 2019 02:30:11 +0300
+Subject: [PATCH 05/10] Update SECURITY.md
+
+---
+ SECURITY.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/SECURITY.md b/SECURITY.md
+index c640c36..57d0593 100644
+--- a/SECURITY.md
++++ b/SECURITY.md
+@@ -1,6 +1,6 @@
+ # Security Policy
+ 
+-Security concerns with each individual ECIPs should be addressed to the ECIP authors, the specified `discussion-to` locations, or ECIP editors. Note that when an ECIP is already deployed, it is recommended to talk privately with the ECIP authors or ECIP editors first.
++Security concerns with each individual ECIP should be addressed to the ECIP authors, the specified `discussion-to` locations, or ECIP editors. Note that when an ECIP is already deployed, it is recommended to talk privately with the ECIP authors or ECIP editors first.
+ 
+ Security alerts related to the hosting and delivery of the ecips.ethereumclassic.org website will be addressed and will be taken by either the ECIP editors or org admins. They will not be made publicly until mitigating solutions are identified. Once a remedy is found, dependably will automate the repair process.
+ 
+
+From 4f03552630c46b4682b52347268304f1ab095cde Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sun, 17 Nov 2019 02:31:34 +0300
+Subject: [PATCH 06/10] Update SECURITY.md
+
+---
+ SECURITY.md | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/SECURITY.md b/SECURITY.md
+index 57d0593..dce821e 100644
+--- a/SECURITY.md
++++ b/SECURITY.md
+@@ -12,6 +12,6 @@ The only supported branch for specifications and website is the `master` branch.
+ 
+ ## Reporting a Vulnerability
+ 
+-Please contact the corresponding ECIP authors or ECIP editors (the list can be found in [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000) for specification related security concerns. The PGP keys of community members can be fetched from [the volunteer repository](https://github.com/ethereumclassic/volunteer).
++For specification related concerns, please contact the corresponding ECIP authors or ECIP editors (the list can be found in [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000)). The PGP keys of community members can be fetched from [the volunteer repository](https://github.com/ethereumclassic/volunteer).
+ 
+-Please contact security@ethereumclassic.org website security concerns.
++For website security concerns, please contact [security@ethereumclassic.org](mailto:security@ethereumclassic.org).
+
+From dd310ac6aa7bdce38b5ded6d98b9fd4f269e9f6e Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sun, 17 Nov 2019 01:08:31 +0100
+Subject: [PATCH 07/10] Update SECURITY.md
+
+---
+ SECURITY.md | 6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
+
+diff --git a/SECURITY.md b/SECURITY.md
+index dce821e..621ccc6 100644
+--- a/SECURITY.md
++++ b/SECURITY.md
+@@ -2,7 +2,7 @@
+ 
+ Security concerns with each individual ECIP should be addressed to the ECIP authors, the specified `discussion-to` locations, or ECIP editors. Note that when an ECIP is already deployed, it is recommended to talk privately with the ECIP authors or ECIP editors first.
+ 
+-Security alerts related to the hosting and delivery of the ecips.ethereumclassic.org website will be addressed and will be taken by either the ECIP editors or org admins. They will not be made publicly until mitigating solutions are identified. Once a remedy is found, dependably will automate the repair process.
++Security alerts related to the website source code will be addressed by ECIP editors. Security concerns related to hosting and delivery of the ecips.ethereumclassic.org website will be addressed by either ECIP editors or org admins. They will not be made publicly until mitigating solutions are identified. Once a remedy is found, dependably will automate the repair process.
+ 
+ This site is licensed via multiple permissive and open source licenses, as specified in each ECIP.
+  
+@@ -12,6 +12,6 @@ The only supported branch for specifications and website is the `master` branch.
+ 
+ ## Reporting a Vulnerability
+ 
+-For specification related concerns, please contact the corresponding ECIP authors or ECIP editors (the list can be found in [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000)). The PGP keys of community members can be fetched from [the volunteer repository](https://github.com/ethereumclassic/volunteer).
++For specification related security concerns, please contact the corresponding ECIP authors or ECIP editors (the list can be found in [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000)). The PGP keys of community members can be fetched from [the volunteer repository](https://github.com/ethereumclassic/volunteer).
+ 
+-For website security concerns, please contact [security@ethereumclassic.org](mailto:security@ethereumclassic.org).
++For website source code related concerns, please contact ECIP editors as in [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000). For security concerns related to hosting and delivery of ecip.ethereumclassic.org, please contact [security@ethereumclassic.org](mailto:security@ethereumclassic.org).
+
+From 053a6d2ed7808600a45d43d9782b8861a6480156 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sun, 17 Nov 2019 01:10:01 +0100
+Subject: [PATCH 08/10] Update SECURITY.md
+
+---
+ SECURITY.md | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/SECURITY.md b/SECURITY.md
+index 621ccc6..71c8ab0 100644
+--- a/SECURITY.md
++++ b/SECURITY.md
+@@ -2,7 +2,7 @@
+ 
+ Security concerns with each individual ECIP should be addressed to the ECIP authors, the specified `discussion-to` locations, or ECIP editors. Note that when an ECIP is already deployed, it is recommended to talk privately with the ECIP authors or ECIP editors first.
+ 
+-Security alerts related to the website source code will be addressed by ECIP editors. Security concerns related to hosting and delivery of the ecips.ethereumclassic.org website will be addressed by either ECIP editors or org admins. They will not be made publicly until mitigating solutions are identified. Once a remedy is found, dependably will automate the repair process.
++Security alerts related to the website source code will be addressed by ECIP editors. Security concerns related to hosting and delivery of the ecips.ethereumclassic.org website will be addressed by either org admins or ECIP editors. They will not be made publicly until mitigating solutions are identified. Once a remedy is found, dependably will automate the repair process.
+ 
+ This site is licensed via multiple permissive and open source licenses, as specified in each ECIP.
+  
+@@ -14,4 +14,4 @@ The only supported branch for specifications and website is the `master` branch.
+ 
+ For specification related security concerns, please contact the corresponding ECIP authors or ECIP editors (the list can be found in [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000)). The PGP keys of community members can be fetched from [the volunteer repository](https://github.com/ethereumclassic/volunteer).
+ 
+-For website source code related concerns, please contact ECIP editors as in [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000). For security concerns related to hosting and delivery of ecip.ethereumclassic.org, please contact [security@ethereumclassic.org](mailto:security@ethereumclassic.org).
++For website source code related concerns, please contact ECIP editors as in [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000). For security concerns related to hosting and delivery of ecip.ethereumclassic.org, please contact [security@ethereumclassic.org](mailto:security@ethereumclassic.org) or ECIP editors.
+
+From 2517855b4f8cbac28eaf27baef58cbd81820971f Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sun, 17 Nov 2019 01:15:17 +0100
+Subject: [PATCH 09/10] Update SECURITY.md
+
+---
+ SECURITY.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/SECURITY.md b/SECURITY.md
+index 71c8ab0..2cea7f7 100644
+--- a/SECURITY.md
++++ b/SECURITY.md
+@@ -2,7 +2,7 @@
+ 
+ Security concerns with each individual ECIP should be addressed to the ECIP authors, the specified `discussion-to` locations, or ECIP editors. Note that when an ECIP is already deployed, it is recommended to talk privately with the ECIP authors or ECIP editors first.
+ 
+-Security alerts related to the website source code will be addressed by ECIP editors. Security concerns related to hosting and delivery of the ecips.ethereumclassic.org website will be addressed by either org admins or ECIP editors. They will not be made publicly until mitigating solutions are identified. Once a remedy is found, dependably will automate the repair process.
++Security alerts related to the website source code will be addressed by ECIP editors. Security concerns related to hosting and delivery of the ecips.ethereumclassic.org website will be addressed by either org admins or ECIP editors. They will not be made publicly until mitigating solutions are identified. Once a remedy is found, part of the repair process may be automated by [Dependabot](https://dependabot.com/).
+ 
+ This site is licensed via multiple permissive and open source licenses, as specified in each ECIP.
+  
+
+From 41471aae225e13ade9a77bb1525196e17a7bd987 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sun, 17 Nov 2019 01:16:32 +0100
+Subject: [PATCH 10/10] Update SECURITY.md
+
+---
+ SECURITY.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/SECURITY.md b/SECURITY.md
+index 2cea7f7..afa14b8 100644
+--- a/SECURITY.md
++++ b/SECURITY.md
+@@ -14,4 +14,4 @@ The only supported branch for specifications and website is the `master` branch.
+ 
+ For specification related security concerns, please contact the corresponding ECIP authors or ECIP editors (the list can be found in [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000)). The PGP keys of community members can be fetched from [the volunteer repository](https://github.com/ethereumclassic/volunteer).
+ 
+-For website source code related concerns, please contact ECIP editors as in [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000). For security concerns related to hosting and delivery of ecip.ethereumclassic.org, please contact [security@ethereumclassic.org](mailto:security@ethereumclassic.org) or ECIP editors.
++For website source code related concerns, please contact ECIP editors as in [ECIP-1000](https://ecips.ethereumclassic.org/ECIPs/ecip-1000). For security concerns related to hosting and delivery of ecip.ethereumclassic.org website, please contact [security@ethereumclassic.org](mailto:security@ethereumclassic.org) or ECIP editors.
diff --git a/.gh-pullrequests/00183.json b/.gh-pullrequests/00183.json
new file mode 100644
index 0000000..487c1c6
--- /dev/null
+++ b/.gh-pullrequests/00183.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/183",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/183/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/183/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/183/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/183",
+    "id": 521904257,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQwMTk2MTA1",
+    "number": 183,
+    "title": "Add ECIP for Reject \"ASIC resistance\" myth",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2019-11-13T01:42:38Z",
+    "updated_at": "2019-11-16T15:48:34Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/183",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/183",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/183.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/183.patch"
+    },
+    "body": "Informational ECIP:\r\n\r\n**\"ASIC resistance\" is a myth.  The ETC ecosystem rejects this myth.**\r\n\r\nDiscussion to https://github.com/ethereumclassic/ECIPs/issues/182, please!",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/183/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00183.patch b/.gh-pullrequests/00183.patch
new file mode 100644
index 0000000..983bcb2
--- /dev/null
+++ b/.gh-pullrequests/00183.patch
@@ -0,0 +1,146 @@
+From 0ffc420ddb8c1a8d39b6e68b124fc984ac10a525 Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Tue, 12 Nov 2019 17:42:00 -0800
+Subject: [PATCH 1/2] Add ECIP for Reject "ASIC resistance" myth.
+
+---
+ _specs/ecip-asic-resistance.md | 22 ++++++++++++++++++++++
+ 1 file changed, 22 insertions(+)
+ create mode 100644 _specs/ecip-asic-resistance.md
+
+diff --git a/_specs/ecip-asic-resistance.md b/_specs/ecip-asic-resistance.md
+new file mode 100644
+index 0000000..b595e66
+--- /dev/null
++++ b/_specs/ecip-asic-resistance.md
+@@ -0,0 +1,22 @@
++---
++lang: en
++ecip: Unassigned
++title: Reject "ASIC resistance" myth
++author: Bob Summerwill (@bobsummerwill)
++status: Draft
++type: Informational
++created: 2019-11-12
++license: Apache-2.0
++discussions-to: https://github.com/ethereumclassic/ECIPs/issues/182
++---
++
++## Abstract
++
++"ASIC resistance" is a myth.  The ETC ecosystem rejects this myth.
++
++
++## Copyright
++
++This work is licensed under the [Apache License, Version 2.0](https://www.apache.org/licenses/LICENSE-2.0).  The author, Bob Summerwill, attests to his sole authorship of this work, and that he is able to contribute this work to the ECIP process under the Apache 2.0 licence.
++
++He further attests that he neither holds nor is aware of any patents, trademarks, copyright issues or other IP hinderances associated with this work.
+
+From c47dfb86bf9a99e169bb2c0aa192ea9c8297670e Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Sat, 16 Nov 2019 07:48:30 -0800
+Subject: [PATCH 2/2] Added rationale for "ASIC Resistance is a myth" ECIP.
+
+---
+ _specs/ecip-asic-resistance.md | 87 ++++++++++++++++++++++++++++++++++
+ 1 file changed, 87 insertions(+)
+
+diff --git a/_specs/ecip-asic-resistance.md b/_specs/ecip-asic-resistance.md
+index b595e66..1ea82c1 100644
+--- a/_specs/ecip-asic-resistance.md
++++ b/_specs/ecip-asic-resistance.md
+@@ -14,6 +14,93 @@ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/182
+ 
+ "ASIC resistance" is a myth.  The ETC ecosystem rejects this myth.
+ 
++This ECIP seeks to bring certainty that decisions around ETC mining
++are not being guided by an easily disprovable myth, but by the
++application of science, measurement and facts - not subjective
++personal beliefs.
++
++
++## Rationale
++
++The Ethereum Classic project "inherited" both philosophy and
++implementation decisions from the Ethereum project which are
++in conflict with the "Immutable, Decentralized, Unstoppable"
++philosophy and ethos of ETC.
++
++The first break which ETC made against such inheritance was with
++Monetary Policy, where the lack of clear monetary policy in
++Ethereum, while not problematic for the ETH2 ("World Computer")
++project, was a huge problem for ETC ("Bitcoin with state and
++smart contracts").  That project needs a "hard money" basis.
++
++[ECIP 1017: Monetary Policy and Final Modification to the Ethereum Classic Emission Schedule](https://ecips.ethereumclassic.org/ECIPs/ecip-1017)
++
++Getting to human consensus on the Monetary Policy change was hard,
++because the change was in conflict with Immutability doctrine.
++Changing consensus rules in any way is very problematic to some people.
++
++Monetary policy was seen as something where there was very
++broad consensus that the inherited lack of monetary policy was a
++major problem for ETC.  Breaking immutability in that way so
++that immutability could be preserved with respect to monetary
++policy on a multi-decade basis moving forward was seen as a
++worthwhile tradeoff.
++
++"ASIC resistance" is another instance of a "bad inheritance" which
++could be fixed so that ETC ecosystem participants can have
++multi-decade certainty around mining as well as monetary policy.
++
++[Ethash Design Rationale](https://github.com/ethereum/wiki/wiki/Ethash-Design-Rationale)
++by [Vitalik Buterin, Chief Scientist, Ethereum Foundation](https://en.wikipedia.org/wiki/Vitalik_Buterin), 10th February 2015.
++
++[ASIC Resistance is Nothing but a Blockchain Buzzword](https://hackernoon.com/asic-resistance-is-nothing-but-a-blockchain-buzzword-b91d3d770366)
++by [StopAndDecrypt](https://twitter.com/StopAndDecrypt), 8th June 2018.
++
++[The Prognosis on ProgPOW, with Kristy Minehan](https://medium.com/blockchannel/episode-56-the-prognosis-on-progpow-with-kristy-minehan-48efdd03bc22)
++on [BlockChannel](https://blockchannel.com/), 10th April 2019.
++
++"She stated that ASIC resistance was, indeed, a 'myth' and a 'fallacy',
++adding that Proof-of-Work required “some form of ASIC to do the work”."
++
++[Text summary of the interview above by coinbarters.com](https://www.coinbarters.com/stories/255992/ethereum-eth-progpow-asic-resistance-is-a-myth-and-a-fallacy-says-developer/)
++
++The [ETC Summit 2019 mining panel](https://youtu.be/wVVKWsrm9PE) in
++Vancouver, Canada, 4th Oct 2019, covered this very well.
++
++"Is ASIC resistance a myth?  Aren't GPUs ASICs too?"
++
++ - [Bob Summerwill, Executive Director, ETC Cooperative](https://www.linkedin.com/in/bobsummerwill/)
++
++"An important thing to clarify here is when you say "ASIC resistance",
++those people who are for "ASIC resistance" are not against something
++called ASIC.  They are against something which is a custom hardware
++which is more efficient to the hardware available to the masses, or
++general hardware.  So, I do believe ASIC resistance in that way is futile,
++because there will be some custom hardware always.  If you have a
++coin which is worth mining then somebody will find a more efficient
++way of mining it, where it is ASICs or some other way, which gives them
++equal advantage that ASIC cannot.  For example, maybe I live in a
++country where I have good connection to the government and can get
++almost free electicity.  Now, I am maybe 1000x more efficient than
++someone, without buying any ASICs.  If you are against ASICs in that
++way, you are just against competition"
++
++ - [Nishant Sharma, Head of International PR and Community Relations, Bitmain](https://www.linkedin.com/in/nishantsharma87/)
++
++"I think ASIC resistance is more of a philosophy than a practical approach
++you can implement.  If you look at things: GPUs are ASICs. CPUs are ASICs
++and the blockchain processes we make are ASICs.  Fundamentally the
++philosophy behind "ASIC resistance" has been to make things products
++memory hard. And so, what you end up doing, is you are buying GPUs
++primarily to be "ASIC resistant". You pay a lot for memory and inherently
++the hash rate is a lot slower.  Philosophies around "ASIC resistance" are
++that it is widely available. You can go to AMD or NVIDIA to buy those
++products. But fundamentally it is not a good mining solution.  You can
++see that in today's world and very shortly that GPUs are not profitable
++and we see that as technology moves along the GPUs will be dwarfed by ASICs."
++
++ - [Henry Quan, CEO, ePIC Blockchain Technologies](https://www.linkedin.com/in/henry-quan-exec/)
++
+ 
+ ## Copyright
+ 
diff --git a/.gh-pullrequests/00183_553203245.json b/.gh-pullrequests/00183_553203245.json
new file mode 100644
index 0000000..af29081
--- /dev/null
+++ b/.gh-pullrequests/00183_553203245.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553203245",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/183#issuecomment-553203245",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/183",
+    "id": 553203245,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzIwMzI0NQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-13T02:02:42Z",
+    "updated_at": "2019-11-13T02:02:42Z",
+    "author_association": "MEMBER",
+    "body": "I will create a longer Rationale section in here based on prior discussions, on ETC Summit content from the individual talks and from the mining panel, and based on Discord / Twitter / WeChat / other debate around this ECIP, as that takes shape.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/553203245/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00184.json b/.gh-pullrequests/00184.json
new file mode 100644
index 0000000..992811c
--- /dev/null
+++ b/.gh-pullrequests/00184.json
@@ -0,0 +1,74 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/184",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/184/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/184/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/184/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/184",
+    "id": 523135693,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQxMjAxNjYw",
+    "number": 184,
+    "title": "ECIP-1072, ECIP-1073, ECIP-1074: Backward Compatible Options for Istanbul Hard Forks",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785139,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTM5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/status:%20draft",
+        "name": "status: draft",
+        "color": "ffffff",
+        "default": false,
+        "description": "draft stage - can be assigned ecip number and merged, but requires new PR to be Accepted"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-14T22:16:29Z",
+    "updated_at": "2019-11-15T15:29:44Z",
+    "closed_at": "2019-11-15T15:29:40Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/184",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/184",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/184.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/184.patch"
+    },
+    "body": "This adds three new hard fork meta, with different options to apply the Istanbul upgrade in a backward compatible way:\r\n\r\n* ECIP-1072: Apply Istanbul directly, but remove the offending EIP-1884.\r\n* ECIP-1073: Apply Istanbul with account versioning ECIP-1040 / EIP-1702. Currently both Parity and Geth have the implementation required. However, the drawback, as discussed last time, is that this will require a new account version for every hard fork.\r\n* ECIP-1074: Apply Istanbul with account versioning, and with forward-compatible EVM changes. Currently no client has implemented 39-UNGAS and 40-UNUSED yet, so this will require more work, and we will need to maintain our own ecosystem tools. However, it gives us a good future foundation for modifying EVMs further. This is basically combination of ECIP-1065 Kunming hard fork with Istanbul.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/184/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00184.patch b/.gh-pullrequests/00184.patch
new file mode 100644
index 0000000..569f34d
--- /dev/null
+++ b/.gh-pullrequests/00184.patch
@@ -0,0 +1,382 @@
+From 9224ddcea425ba692a65cce76185670a2c91e7ba Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Thu, 14 Nov 2019 23:11:35 +0100
+Subject: [PATCH 1/5] ECIP-1072, ECIP-1073, ECIP-1074
+
+---
+ _specs/ecip-1072.md | 79 +++++++++++++++++++++++++++++++++++++
+ _specs/ecip-1073.md | 86 ++++++++++++++++++++++++++++++++++++++++
+ _specs/ecip-1074.md | 96 +++++++++++++++++++++++++++++++++++++++++++++
+ 3 files changed, 261 insertions(+)
+ create mode 100644 _specs/ecip-1072.md
+ create mode 100644 _specs/ecip-1073.md
+ create mode 100644 _specs/ecip-1074.md
+
+diff --git a/_specs/ecip-1072.md b/_specs/ecip-1072.md
+new file mode 100644
+index 0000000..dd203f2
+--- /dev/null
++++ b/_specs/ecip-1072.md
+@@ -0,0 +1,79 @@
++---
++lang: en
++ecip: 1072
++title: Yingchun EVM and Protocol Upgrades
++status: Draft
++type: Meta
++author: Wei Tang (@sorpaas)
++created: 2019-11-14
++discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
++---
++
++### Simple Summary
++
++Enable the outstanding Ethereum Foundation _Istanbul_ network protocol
++upgrades on the Ethereum Classic network in a hard-fork code-named
++_Yingchun_ to enable maximum compatibility across these networks.
++
++In particular, delay EIP-1884 activation until backward compatibility
++solutions are in place on Ethereum Classic.
++
++### Abstract
++
++Add support for a subset of protocol-impacting changes introduced in
++the Ethereum Foundation (ETH) network via the _Istanbul_
++hardforks.
++
++This document proposes the following blocks at which to implement
++these changes in the Classic networks:
++
++- `TBD` on Mordor Classic PoW-testnet (Feb 5th, 2020)
++- `TBD` on Kotti Classic PoA-testnet (Feb 12th, 2020)
++- `TBD` on Ethereum Classic PoW-mainnet (March 25th, 2020)
++
++For more information on the opcodes and their respective EIPs and
++implementations, please see the _Specification_ section of this
++document.
++
++### Motivation
++
++To enhance the Ethereum Virtual Machine's (EVM) capabilities, various
++opcodes shall be added to the Ethereum Classic networks, all of which
++have been in use on the Ethereum Foundation networks since end of
++2019.
++
++This enables all EIPs in Istanbul, but EIP-1884, due to backward
++compatibility considerations.
++
++### Specification
++
++Enable the following EIPs at the hard fork block:
++
++- [EIP-152](https://eips.ethereum.org/EIPS/eip-152): Add Blake2
++  compression function `F` precompile
++- [EIP-1108](https://eips.ethereum.org/EIPS/eip-1108): Reduce
++  alt_bn128 precompile gas costs
++- [EIP-1344](https://eips.ethereum.org/EIPS/eip-1344): Add ChainID
++  opcode
++- [EIP-2028](https://eips.ethereum.org/EIPS/eip-2028): Calldata gas
++  cost reduction
++- [EIP-2200](https://eips.ethereum.org/EIPS/eip-2200): Rebalance
++  net-metered SSTORE gas cost with consideration of SLOAD gas cost
++  change
++
++### Implementation
++
++Adoption of the content of this ECIP requires a hard fork as it
++introduces changes that are not backward compatible.
++
++The following clients with Ethereum Classic support implement the
++_Istanbul_ features currently:
++
++- Parity Ethereum
++- Multi-Geth
++- Hyperledger Besu
++
++## Copyright
++
++This work is licensed under [Apache License, Version
++2.0](http://www.apache.org/licenses/).
+diff --git a/_specs/ecip-1073.md b/_specs/ecip-1073.md
+new file mode 100644
+index 0000000..0989ae6
+--- /dev/null
++++ b/_specs/ecip-1073.md
+@@ -0,0 +1,86 @@
++---
++lang: en
++ecip: 1073
++title: Xichun EVM and Protocol Upgrades
++status: Draft
++type: Meta
++author: Wei Tang (@sorpaas)
++created: 2019-11-14
++discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
++---
++
++### Simple Summary
++
++Enable the outstanding Ethereum Foundation _Istanbul_ network protocol
++upgrades on the Ethereum Classic network in a hard-fork code-named
++_Xichun_ to enable maximum compatibility across these networks.
++
++In particular, enables account versioning EIP-1702.
++
++### Abstract
++
++Add support for a subset of protocol-impacting changes introduced in
++the Ethereum Foundation (ETH) network via the _Istanbul_ hardforks.
++
++This document proposes the following blocks at which to implement
++these changes in the Classic networks:
++
++- `TBD` on Mordor Classic PoW-testnet (Feb 5th, 2020)
++- `TBD` on Kotti Classic PoA-testnet (Feb 12th, 2020)
++- `TBD` on Ethereum Classic PoW-mainnet (March 25th, 2020)
++
++For more information on the opcodes and their respective EIPs and
++implementations, please see the _Specification_ section of this
++document.
++
++### Motivation
++
++To enhance the Ethereum Virtual Machine's (EVM) capabilities, various
++opcodes shall be added to the Ethereum Classic networks, all of which
++have been in use on the Ethereum Foundation networks since end of
++2019.
++
++This enables all Istanbul features, feature gated under ECIP-1702 /
++EIP-1702.
++
++### Specification
++
++Enable
++[ECIP-1040](https://ecips.ethereumclassic.org/ECIPs/ecip-1040). Freeze
++features on version `0`. Define a new account version `1`, with the
++following additional EIPs enabled:
++
++- [EIP-152](https://eips.ethereum.org/EIPS/eip-152): Add Blake2
++  compression function `F` precompile
++- [EIP-1108](https://eips.ethereum.org/EIPS/eip-1108): Reduce
++  alt_bn128 precompile gas costs
++- [EIP-1344](https://eips.ethereum.org/EIPS/eip-1344): Add ChainID
++  opcode
++- [EIP-1884](https://eips.ethereum.org/EIPS/eip-1884): Repricing for
++  trie-size-dependent opcodes
++- [EIP-2028](https://eips.ethereum.org/EIPS/eip-2028): Calldata gas
++  cost reduction
++- [EIP-2200](https://eips.ethereum.org/EIPS/eip-2200): Rebalance
++  net-metered SSTORE gas cost with consideration of SLOAD gas cost
++  change
++
++### Implementation
++
++Adoption of the content of this ECIP requires a hard fork as it
++introduces changes that are not backward compatible.
++
++The following clients with Ethereum Classic support implement the
++_Istanbul_ features and ECIP-1040 / EIP-1702 currently:
++
++- Parity Ethereum
++- Multi-Geth
++
++The following clients implement _Istanbul_ features but does not yet
++support ECIP-1040 / EIP-1702:
++
++- Hyperledger Besu
++
++## Copyright
++
++This work is licensed under [Apache License, Version
++2.0](http://www.apache.org/licenses/).
+diff --git a/_specs/ecip-1074.md b/_specs/ecip-1074.md
+new file mode 100644
+index 0000000..a1d4d41
+--- /dev/null
++++ b/_specs/ecip-1074.md
+@@ -0,0 +1,96 @@
++---
++lang: en
++ecip: 1074
++title: Tanchun EVM and Protocol Upgrades
++status: Draft
++type: Meta
++author: Wei Tang (@sorpaas)
++created: 2019-11-14
++discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
++---
++
++### Simple Summary
++
++Enable the outstanding Ethereum Foundation _Istanbul_ network protocol
++upgrades on the Ethereum Classic network in a hard-fork code-named
++_Xichun_ to enable maximum compatibility across these networks.
++
++In particular, enables account versioning EIP-1702 with
++forward-compatible EVM changes.
++
++### Abstract
++
++Add support for a subset of protocol-impacting changes introduced in
++the Ethereum Foundation (ETH) network via the _Istanbul_ hardforks.
++
++This document proposes the following blocks at which to implement
++these changes in the Classic networks:
++
++- `TBD` on Mordor Classic PoW-testnet (Feb 5th, 2020)
++- `TBD` on Kotti Classic PoA-testnet (Feb 12th, 2020)
++- `TBD` on Ethereum Classic PoW-mainnet (March 25th, 2020)
++
++For more information on the opcodes and their respective EIPs and
++implementations, please see the _Specification_ section of this
++document.
++
++### Motivation
++
++To enhance the Ethereum Virtual Machine's (EVM) capabilities, various
++opcodes shall be added to the Ethereum Classic networks, all of which
++have been in use on the Ethereum Foundation networks since end of
++2019.
++
++This hard fork first enables the [Kunming hard fork
++specification](https://ecips.ethereumclassic.org/ECIPs/ecip-1065), and
++then enables all Istanbul features on top of the forward-compatible
++EVM.
++
++### Specification
++
++Enable
++[ECIP-1040](https://ecips.ethereumclassic.org/ECIPs/ecip-1040). Freeze
++features on version `0`. Define a new account version `1`, with the
++following additional EIPs enabled:
++
++- [39-UNGAS](https://specs.that.world/39-ungas/): Remove all
++  observable behavior of gas cost in EVM and change out-of-gas
++  exception to trap the whole transaction.
++- [40-UNUSED](https://specs.that.world/40-unused/): Disable deployment
++  of unused opcodes.
++- [EIP-152](https://eips.ethereum.org/EIPS/eip-152): Add Blake2
++  compression function `F` precompile
++- [EIP-1108](https://eips.ethereum.org/EIPS/eip-1108): Reduce
++  alt_bn128 precompile gas costs
++- [EIP-1344](https://eips.ethereum.org/EIPS/eip-1344): Add ChainID
++  opcode
++- [EIP-1884](https://eips.ethereum.org/EIPS/eip-1884): Repricing for
++  trie-size-dependent opcodes
++- [EIP-2028](https://eips.ethereum.org/EIPS/eip-2028): Calldata gas
++  cost reduction
++- [EIP-2200](https://eips.ethereum.org/EIPS/eip-2200): Rebalance
++  net-metered SSTORE gas cost with consideration of SLOAD gas cost
++  change
++
++### Implementation
++
++Adoption of the content of this ECIP requires a hard fork as it
++introduces changes that are not backward compatible.
++
++The following clients with Ethereum Classic support implement the
++_Istanbul_ features and ECIP-1040 / EIP-1702 currently:
++
++- Parity Ethereum
++- Multi-Geth
++
++The following clients implement _Istanbul_ features but does not yet
++support ECIP-1040 / EIP-1702:
++
++- Hyperledger Besu
++
++No clients currently have implemented *39-UNGAS* and *40-UNUSED* yet.
++
++## Copyright
++
++This work is licensed under [Apache License, Version
++2.0](http://www.apache.org/licenses/).
+
+From 609bab75e119bf35f1b4a0de30c88cc12ca0ce83 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Fri, 15 Nov 2019 18:04:13 +0300
+Subject: [PATCH 2/5] Update ecip-1074.md
+
+---
+ _specs/ecip-1074.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1074.md b/_specs/ecip-1074.md
+index a1d4d41..401dabc 100644
+--- a/_specs/ecip-1074.md
++++ b/_specs/ecip-1074.md
+@@ -13,7 +13,7 @@ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
+ 
+ Enable the outstanding Ethereum Foundation _Istanbul_ network protocol
+ upgrades on the Ethereum Classic network in a hard-fork code-named
+-_Xichun_ to enable maximum compatibility across these networks.
++_Tanchun_ to enable maximum compatibility across these networks.
+ 
+ In particular, enables account versioning EIP-1702 with
+ forward-compatible EVM changes.
+
+From b0f3d80b89ec25139129e50ea3e14ffc6f0ed3ef Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Fri, 15 Nov 2019 18:04:52 +0300
+Subject: [PATCH 3/5] Update ecip-1072.md
+
+---
+ _specs/ecip-1072.md | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/_specs/ecip-1072.md b/_specs/ecip-1072.md
+index dd203f2..185b2ec 100644
+--- a/_specs/ecip-1072.md
++++ b/_specs/ecip-1072.md
+@@ -7,6 +7,7 @@ type: Meta
+ author: Wei Tang (@sorpaas)
+ created: 2019-11-14
+ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
++license: Apache-2.0
+ ---
+ 
+ ### Simple Summary
+
+From 433c02d67b373f8820dcddde09471b035a4eb3d8 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Fri, 15 Nov 2019 18:05:07 +0300
+Subject: [PATCH 4/5] Update ecip-1073.md
+
+---
+ _specs/ecip-1073.md | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/_specs/ecip-1073.md b/_specs/ecip-1073.md
+index 0989ae6..5e27f26 100644
+--- a/_specs/ecip-1073.md
++++ b/_specs/ecip-1073.md
+@@ -7,6 +7,7 @@ type: Meta
+ author: Wei Tang (@sorpaas)
+ created: 2019-11-14
+ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
++license: Apache-2.0
+ ---
+ 
+ ### Simple Summary
+
+From fd73189073c0ada5d55dced43d0d324f112a4bcc Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Fri, 15 Nov 2019 18:05:20 +0300
+Subject: [PATCH 5/5] Update ecip-1074.md
+
+---
+ _specs/ecip-1074.md | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/_specs/ecip-1074.md b/_specs/ecip-1074.md
+index 401dabc..5d577ba 100644
+--- a/_specs/ecip-1074.md
++++ b/_specs/ecip-1074.md
+@@ -7,6 +7,7 @@ type: Meta
+ author: Wei Tang (@sorpaas)
+ created: 2019-11-14
+ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
++license: Apache-2.0
+ ---
+ 
+ ### Simple Summary
diff --git a/.gh-pullrequests/00185.json b/.gh-pullrequests/00185.json
new file mode 100644
index 0000000..93bc642
--- /dev/null
+++ b/.gh-pullrequests/00185.json
@@ -0,0 +1,74 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/185",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/185/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/185/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/185/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/185",
+    "id": 523539648,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQxNTIyNjYy",
+    "number": 185,
+    "title": "Rename Aztlan ECIPs with \"edition format\"",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1154785129,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20meta",
+        "name": "type: meta",
+        "color": "cfd3d7",
+        "default": false,
+        "description": "Accepted best practices"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 8,
+    "created_at": "2019-11-15T15:37:33Z",
+    "updated_at": "2019-11-16T13:25:20Z",
+    "closed_at": "2019-11-16T13:25:16Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/185",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/185",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/185.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/185.patch"
+    },
+    "body": "Rename so that Aztlan ECIPs clearly shows four different options:\r\n\r\n- ECIP-1061 as ECIP-1061A\r\n- ECIP-1072 as ECIP-1061B\r\n- ECIP-1073 as ECIP-1061C\r\n- ECIP-1074 as ECIP-1061D\r\n\r\nNote that we cannot yet merge this because names like \"ECIP-1061A\" does not comply to the ECIP-1000 procedure. It's a trivial change, but I'll wait @bobsummerwill to know whether we can just do that (or should go through the whole process of creating another ECIP).",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/185/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00185.patch b/.gh-pullrequests/00185.patch
new file mode 100644
index 0000000..b02aeb3
--- /dev/null
+++ b/.gh-pullrequests/00185.patch
@@ -0,0 +1,84 @@
+From 5911d1f58c496042f468deaee1d69acdda034894 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Fri, 15 Nov 2019 16:34:18 +0100
+Subject: [PATCH] Rename Aztlan ECIPs with "edition format"
+
+---
+ _specs/{ecip-1061.md => ecip-1061a.md} | 4 ++--
+ _specs/{ecip-1072.md => ecip-1061b.md} | 4 ++--
+ _specs/{ecip-1073.md => ecip-1061c.md} | 4 ++--
+ _specs/{ecip-1074.md => ecip-1061d.md} | 4 ++--
+ 4 files changed, 8 insertions(+), 8 deletions(-)
+ rename _specs/{ecip-1061.md => ecip-1061a.md} (98%)
+ rename _specs/{ecip-1072.md => ecip-1061b.md} (97%)
+ rename _specs/{ecip-1073.md => ecip-1061c.md} (97%)
+ rename _specs/{ecip-1074.md => ecip-1061d.md} (97%)
+
+diff --git a/_specs/ecip-1061.md b/_specs/ecip-1061a.md
+similarity index 98%
+rename from _specs/ecip-1061.md
+rename to _specs/ecip-1061a.md
+index e410baf..a349ce0 100644
+--- a/_specs/ecip-1061.md
++++ b/_specs/ecip-1061a.md
+@@ -1,7 +1,7 @@
+ ---
+ lang: en
+-ecip: 1061
+-title: Aztlán EVM and Protocol Upgrades
++ecip: 1061a
++title: Aztlán EVM and Protocol Upgrades (Yuanchun Edition)
+ status: Draft
+ type: Meta
+ author: Talha Cross (@soc1c)
+diff --git a/_specs/ecip-1072.md b/_specs/ecip-1061b.md
+similarity index 97%
+rename from _specs/ecip-1072.md
+rename to _specs/ecip-1061b.md
+index 185b2ec..d9d2dee 100644
+--- a/_specs/ecip-1072.md
++++ b/_specs/ecip-1061b.md
+@@ -1,7 +1,7 @@
+ ---
+ lang: en
+-ecip: 1072
+-title: Yingchun EVM and Protocol Upgrades
++ecip: 1061b
++title: Aztlán EVM and Protocol Upgrades (Yingchun Edition)
+ status: Draft
+ type: Meta
+ author: Wei Tang (@sorpaas)
+diff --git a/_specs/ecip-1073.md b/_specs/ecip-1061c.md
+similarity index 97%
+rename from _specs/ecip-1073.md
+rename to _specs/ecip-1061c.md
+index 5e27f26..e04bbea 100644
+--- a/_specs/ecip-1073.md
++++ b/_specs/ecip-1061c.md
+@@ -1,7 +1,7 @@
+ ---
+ lang: en
+-ecip: 1073
+-title: Xichun EVM and Protocol Upgrades
++ecip: 1061c
++title: Aztlán EVM and Protocol Upgrades (Xichun Edition)
+ status: Draft
+ type: Meta
+ author: Wei Tang (@sorpaas)
+diff --git a/_specs/ecip-1074.md b/_specs/ecip-1061d.md
+similarity index 97%
+rename from _specs/ecip-1074.md
+rename to _specs/ecip-1061d.md
+index 5d577ba..988bf83 100644
+--- a/_specs/ecip-1074.md
++++ b/_specs/ecip-1061d.md
+@@ -1,7 +1,7 @@
+ ---
+ lang: en
+-ecip: 1074
+-title: Tanchun EVM and Protocol Upgrades
++ecip: 1061d
++title: Aztlán EVM and Protocol Upgrades (Tanchun Edition)
+ status: Draft
+ type: Meta
+ author: Wei Tang (@sorpaas)
diff --git a/.gh-pullrequests/00185_554483688.json b/.gh-pullrequests/00185_554483688.json
new file mode 100644
index 0000000..ac77848
--- /dev/null
+++ b/.gh-pullrequests/00185_554483688.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554483688",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/185#issuecomment-554483688",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/185",
+    "id": 554483688,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDQ4MzY4OA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-15T18:52:28Z",
+    "updated_at": "2019-11-15T18:52:28Z",
+    "author_association": "MEMBER",
+    "body": "I don't think A/B/C/D is needed.\r\nJust stick with the numbers, IMHO.\r\nEasy to make a group ECIP for them all.\r\n\r\nMaybe Afri's existing Aztlán one is that, and we just nest Sorpaas three proposals under that, and make a new ECIP for the plan currently in that?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554483688/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00185_554484264.json b/.gh-pullrequests/00185_554484264.json
new file mode 100644
index 0000000..369ad68
--- /dev/null
+++ b/.gh-pullrequests/00185_554484264.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554484264",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/185#issuecomment-554484264",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/185",
+    "id": 554484264,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDQ4NDI2NA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-15T18:54:00Z",
+    "updated_at": "2019-11-15T18:54:00Z",
+    "author_association": "MEMBER",
+    "body": "So 1061 becomes a \"options for next HF\", referencing 1072, 1073, 1074  plus a new ECIP which is \"the plan\" which Afri had?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554484264/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00185_554498810.json b/.gh-pullrequests/00185_554498810.json
new file mode 100644
index 0000000..cfd0774
--- /dev/null
+++ b/.gh-pullrequests/00185_554498810.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554498810",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/185#issuecomment-554498810",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/185",
+    "id": 554498810,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDQ5ODgxMA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-15T19:36:39Z",
+    "updated_at": "2019-11-15T19:36:39Z",
+    "author_association": "MEMBER",
+    "body": "@bobsummerwill That will mean putting 1061 in a situation other than \"Draft\", because it is somewhat \"official\" in that it's the \"root\" ECIP for the next hard fork. It's a viable option but we'd still need a new ECIP status for that.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554498810/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00185_554560687.json b/.gh-pullrequests/00185_554560687.json
new file mode 100644
index 0000000..20ece32
--- /dev/null
+++ b/.gh-pullrequests/00185_554560687.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554560687",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/185#issuecomment-554560687",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/185",
+    "id": 554560687,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDU2MDY4Nw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-15T22:54:18Z",
+    "updated_at": "2019-11-15T22:54:18Z",
+    "author_association": "MEMBER",
+    "body": "I think that 1061 would still be \"Draft\" for the time being, and so would the four \"options\".\r\n\r\nThen maybe 1061 does to \"Accepted\" when we decide on a single plan?   Or maybe just gets thrown away at that point, with the ECIP for the plan which we are doing taking over that role.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554560687/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00185_554561154.json b/.gh-pullrequests/00185_554561154.json
new file mode 100644
index 0000000..49dd62e
--- /dev/null
+++ b/.gh-pullrequests/00185_554561154.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554561154",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/185#issuecomment-554561154",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/185",
+    "id": 554561154,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDU2MTE1NA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-15T22:56:00Z",
+    "updated_at": "2019-11-15T22:56:00Z",
+    "author_association": "MEMBER",
+    "body": "Something I am thinking here, which is maybe not clear to others, is that having contradictory plans within the ECIP process is fine.   Just fine.   Maybe for years even.   Multiple plans, all being worked on.\r\n\r\nYou only need to resolve that stuff when it comes to decision points on what goes into a hard-fork.  We are not at that decision point for the March fork yet.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554561154/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00185_554584222.json b/.gh-pullrequests/00185_554584222.json
new file mode 100644
index 0000000..244e440
--- /dev/null
+++ b/.gh-pullrequests/00185_554584222.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554584222",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/185#issuecomment-554584222",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/185",
+    "id": 554584222,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDU4NDIyMg==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-16T00:45:58Z",
+    "updated_at": "2019-11-16T00:45:58Z",
+    "author_association": "MEMBER",
+    "body": "@bobsummerwill Another point I have is that this is really just about ECIP numbers. \"ECIP-1074\" is really functionally equivalent to \"ECIP-1061D\". But with numbers such as \"1061A/B/C/D\", we make it much easier for everyone to recognize that those are different hard fork proposals that are supposed to happen at the same time.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554584222/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00185_554636117.json b/.gh-pullrequests/00185_554636117.json
new file mode 100644
index 0000000..3a00f53
--- /dev/null
+++ b/.gh-pullrequests/00185_554636117.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554636117",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/185#issuecomment-554636117",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/185",
+    "id": 554636117,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDYzNjExNw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-16T13:11:30Z",
+    "updated_at": "2019-11-16T13:11:30Z",
+    "author_association": "MEMBER",
+    "body": "@sorpaas I don't think that A/B/C/D really helps, to be honest.\r\nI would just stick with simple numbers, rather than inventing a new scheme.\r\n\r\nIt will be obvious from looking at the ECIPs that they are alternatives.   Those people who are participating in the ECIP process close enough to know specific numbers don't need the \"hint\", I don't think.\r\n\r\nNo need to complicate things, IMHO.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554636117/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00185_554637201.json b/.gh-pullrequests/00185_554637201.json
new file mode 100644
index 0000000..8baca90
--- /dev/null
+++ b/.gh-pullrequests/00185_554637201.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554637201",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/185#issuecomment-554637201",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/185",
+    "id": 554637201,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDYzNzIwMQ==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-16T13:25:16Z",
+    "updated_at": "2019-11-16T13:25:16Z",
+    "author_association": "MEMBER",
+    "body": "@bobsummerwill Okay. Then I think this will not move forward. Let's keep things as it is currently.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554637201/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00186.json b/.gh-pullrequests/00186.json
new file mode 100644
index 0000000..8fd6c7a
--- /dev/null
+++ b/.gh-pullrequests/00186.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/186",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/186/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/186/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/186/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/186",
+    "id": 523849070,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQxNzU4ODA2",
+    "number": 186,
+    "title": "ECIP-1075 points to the various Aztlán editions",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2019-11-16T14:04:19Z",
+    "updated_at": "2019-11-16T20:47:36Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/186",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/186",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/186.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/186.patch"
+    },
+    "body": "",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/186/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00186.patch b/.gh-pullrequests/00186.patch
new file mode 100644
index 0000000..d47f76c
--- /dev/null
+++ b/.gh-pullrequests/00186.patch
@@ -0,0 +1,495 @@
+From 9be554b44c1fa89ad1bdd1e07bd9c901461c16fe Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Sat, 16 Nov 2019 06:02:10 -0800
+Subject: [PATCH 1/4] Created a new ECIP-1075 from Afri's ECIP-1061, which is
+ the "Basic Edition".
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+Reworked ECIP-1061 to point to the four proposed Aztlán "Editions", with ECIP-1061 now only containing minimal content.
+---
+ _specs/ecip-1061.md | 54 +++++-----------------------------
+ _specs/ecip-1072.md |  9 +-----
+ _specs/ecip-1073.md |  9 +-----
+ _specs/ecip-1074.md |  9 +-----
+ _specs/ecip-1075.md | 71 +++++++++++++++++++++++++++++++++++++++++++++
+ 5 files changed, 82 insertions(+), 70 deletions(-)
+ create mode 100644 _specs/ecip-1075.md
+
+diff --git a/_specs/ecip-1061.md b/_specs/ecip-1061.md
+index e410baf..42ec5bc 100644
+--- a/_specs/ecip-1061.md
++++ b/_specs/ecip-1061.md
+@@ -17,14 +17,15 @@ Classic network in a hard-fork code-named _Aztlán_ to enable maximum compatibil
+ ### Abstract
+ 
+ Add support for a subset of protocol-impacting changes introduced in the Ethereum Foundation (ETH) network via the
+-_Istanbul_ hardforks. The proposed changes for Ethereum Classic's _Aztlán_ upgrade include:
++_Istanbul_ hardforks.
+ 
+-- Add Blake2 compression function `F` precompile
+-- Reduce alt_bn128 precompile gas costs
+-- Add ChainID opcode
+-- Repricing for trie-size-dependent opcodes
+-- Calldata gas cost reduction
+-- Rebalance net-metered SSTORE gas cost with consideration of SLOAD gas cost change
++There are four alterative proposals with varying levels of backwards and
++forwards compatibility for the _Aztlán_ upgrade:
++
++- [ECIP-1072](https://ecips.ethereum.org/ECIPS/ecip-1072) - Yuanchun Edition
++- [ECIP-1073](https://ecips.ethereum.org/ECIPS/ecip-1073) - Xichun Edition
++- [ECIP-1074](https://ecips.ethereum.org/ECIPS/ecip-1074) - Tanchun Edition
++- [ECIP-1075](https://ecips.ethereum.org/ECIPS/ecip-1075) - Basic Edition
+ 
+ This document proposes the following blocks at which to implement these changes in the Classic networks:
+ 
+@@ -35,47 +36,8 @@ This document proposes the following blocks at which to implement these changes
+ For more information on the opcodes and their respective EIPs and implementations, please see the _Specification_
+ section of this document.
+ 
+-### Motivation
+-
+-To enhance the Ethereum Virtual Machine's (EVM) capabilities, various opcodes shall be added to the Ethereum Classic
+-networks, all of which have been in use on the Ethereum Foundation networks since end of 2019.
+-
+-### Specification
+-
+-Technical specifications for each EIP can be found at those documents respectively:
+-
+-- [EIP-152](https://eips.ethereum.org/EIPS/eip-152): Add Blake2 compression function `F` precompile
+-- [EIP-1108](https://eips.ethereum.org/EIPS/eip-1108): Reduce alt_bn128 precompile gas costs
+-- [EIP-1344](https://eips.ethereum.org/EIPS/eip-1344): Add ChainID opcode
+-- [EIP-1884](https://eips.ethereum.org/EIPS/eip-1884): Repricing for trie-size-dependent opcodes
+-- [EIP-2028](https://eips.ethereum.org/EIPS/eip-2028): Calldata gas cost reduction
+-- [EIP-2200](https://eips.ethereum.org/EIPS/eip-2200): Rebalance net-metered SSTORE gas cost with consideration of SLOAD gas cost change
+-
+-### Rationale
+-
+-__Interoperability__: Establishing and maintaining interoperable behavior between Ethereum clients is essential for
+-developers and end-user adoption, yielding benefits for all participating chains (e.g., ETH and ETC, Ropsten and Mordor,
+-Görli and Kotti).
+-
+-__Immutability__: None of the introduced new opcodes in the EVM has the potential to change the behavior of existing
+-contracts; in the case where previously an arbitrary invalid bytecode would have been deployed to the network, none of
+-them would be able to modify the state of the Ethereum Classic networks retrospectively. Adding opcodes to the EVM
+-increases its functionality and should be considered a feature upgrade rather than a modification.
+-
+-### Implementation
+-
+-Adoption of the content of this ECIP requires a hard fork as it introduces changes that are not backward compatible.
+-
+-The following clients with Ethereum Classic support implement the _Istanbul_ features currently:
+-
+-- Parity Ethereum
+-- Multi-Geth
+-- Hyperledger Besu
+-
+ ### Final Note
+ 
+-Both, the Geth Classic client and the Morden testnet will no longer be supported by the community and not recieve the Aztlán ugrades.
+-
+ - Users of the Geth Classic client are urged to migrate their services to Parity Ethereum, Multi-Geth, or Hyperledger Besu. It is no longer recommended to run Geth Classic in production.
+ - Users of the Morden Classic testnet are urged to migrate their applications to the Kotti Classic or Morder Classic testnets.
+ 
+diff --git a/_specs/ecip-1072.md b/_specs/ecip-1072.md
+index 185b2ec..6a3b4f0 100644
+--- a/_specs/ecip-1072.md
++++ b/_specs/ecip-1072.md
+@@ -1,7 +1,7 @@
+ ---
+ lang: en
+ ecip: 1072
+-title: Yingchun EVM and Protocol Upgrades
++title: Aztlán EVM and Protocol Upgrades (Yuanchun Edition)
+ status: Draft
+ type: Meta
+ author: Wei Tang (@sorpaas)
+@@ -25,13 +25,6 @@ Add support for a subset of protocol-impacting changes introduced in
+ the Ethereum Foundation (ETH) network via the _Istanbul_
+ hardforks.
+ 
+-This document proposes the following blocks at which to implement
+-these changes in the Classic networks:
+-
+-- `TBD` on Mordor Classic PoW-testnet (Feb 5th, 2020)
+-- `TBD` on Kotti Classic PoA-testnet (Feb 12th, 2020)
+-- `TBD` on Ethereum Classic PoW-mainnet (March 25th, 2020)
+-
+ For more information on the opcodes and their respective EIPs and
+ implementations, please see the _Specification_ section of this
+ document.
+diff --git a/_specs/ecip-1073.md b/_specs/ecip-1073.md
+index 5e27f26..47c1504 100644
+--- a/_specs/ecip-1073.md
++++ b/_specs/ecip-1073.md
+@@ -1,7 +1,7 @@
+ ---
+ lang: en
+ ecip: 1073
+-title: Xichun EVM and Protocol Upgrades
++title: Aztlán EVM and Protocol Upgrades (Xichun Edition)
+ status: Draft
+ type: Meta
+ author: Wei Tang (@sorpaas)
+@@ -23,13 +23,6 @@ In particular, enables account versioning EIP-1702.
+ Add support for a subset of protocol-impacting changes introduced in
+ the Ethereum Foundation (ETH) network via the _Istanbul_ hardforks.
+ 
+-This document proposes the following blocks at which to implement
+-these changes in the Classic networks:
+-
+-- `TBD` on Mordor Classic PoW-testnet (Feb 5th, 2020)
+-- `TBD` on Kotti Classic PoA-testnet (Feb 12th, 2020)
+-- `TBD` on Ethereum Classic PoW-mainnet (March 25th, 2020)
+-
+ For more information on the opcodes and their respective EIPs and
+ implementations, please see the _Specification_ section of this
+ document.
+diff --git a/_specs/ecip-1074.md b/_specs/ecip-1074.md
+index 5d577ba..5c3ca74 100644
+--- a/_specs/ecip-1074.md
++++ b/_specs/ecip-1074.md
+@@ -1,7 +1,7 @@
+ ---
+ lang: en
+ ecip: 1074
+-title: Tanchun EVM and Protocol Upgrades
++title: Aztlán EVM and Protocol Upgrades (Tanchun Edition)
+ status: Draft
+ type: Meta
+ author: Wei Tang (@sorpaas)
+@@ -24,13 +24,6 @@ forward-compatible EVM changes.
+ Add support for a subset of protocol-impacting changes introduced in
+ the Ethereum Foundation (ETH) network via the _Istanbul_ hardforks.
+ 
+-This document proposes the following blocks at which to implement
+-these changes in the Classic networks:
+-
+-- `TBD` on Mordor Classic PoW-testnet (Feb 5th, 2020)
+-- `TBD` on Kotti Classic PoA-testnet (Feb 12th, 2020)
+-- `TBD` on Ethereum Classic PoW-mainnet (March 25th, 2020)
+-
+ For more information on the opcodes and their respective EIPs and
+ implementations, please see the _Specification_ section of this
+ document.
+diff --git a/_specs/ecip-1075.md b/_specs/ecip-1075.md
+new file mode 100644
+index 0000000..0f177dc
+--- /dev/null
++++ b/_specs/ecip-1075.md
+@@ -0,0 +1,71 @@
++---
++lang: en
++ecip: 1075
++title: Aztlán EVM and Protocol Upgrades (Basic Edition)
++status: Draft
++type: Meta
++author: Talha Cross (@soc1c)
++created: 2019-06-06
++discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
++---
++
++### Simple Summary
++
++Enable the outstanding Ethereum Foundation _Istanbul_ network protocol upgrades on the Ethereum
++Classic network in a hard-fork code-named _Aztlán_ to enable maximum compatibility across these networks.
++
++### Abstract
++
++Add support for a subset of protocol-impacting changes introduced in the Ethereum Foundation (ETH) network via the
++_Istanbul_ hardforks. The proposed changes for Ethereum Classic's _Aztlán_ upgrade include:
++
++- Add Blake2 compression function `F` precompile
++- Reduce alt_bn128 precompile gas costs
++- Add ChainID opcode
++- Repricing for trie-size-dependent opcodes
++- Calldata gas cost reduction
++- Rebalance net-metered SSTORE gas cost with consideration of SLOAD gas cost change
++
++For more information on the opcodes and their respective EIPs and implementations, please see the _Specification_
++section of this document.
++
++### Motivation
++
++To enhance the Ethereum Virtual Machine's (EVM) capabilities, various opcodes shall be added to the Ethereum Classic
++networks, all of which have been in use on the Ethereum Foundation networks since end of 2019.
++
++### Specification
++
++Technical specifications for each EIP can be found at those documents respectively:
++
++- [EIP-152](https://eips.ethereum.org/EIPS/eip-152): Add Blake2 compression function `F` precompile
++- [EIP-1108](https://eips.ethereum.org/EIPS/eip-1108): Reduce alt_bn128 precompile gas costs
++- [EIP-1344](https://eips.ethereum.org/EIPS/eip-1344): Add ChainID opcode
++- [EIP-1884](https://eips.ethereum.org/EIPS/eip-1884): Repricing for trie-size-dependent opcodes
++- [EIP-2028](https://eips.ethereum.org/EIPS/eip-2028): Calldata gas cost reduction
++- [EIP-2200](https://eips.ethereum.org/EIPS/eip-2200): Rebalance net-metered SSTORE gas cost with consideration of SLOAD gas cost change
++
++### Rationale
++
++__Interoperability__: Establishing and maintaining interoperable behavior between Ethereum clients is essential for
++developers and end-user adoption, yielding benefits for all participating chains (e.g., ETH and ETC, Ropsten and Mordor,
++Görli and Kotti).
++
++__Immutability__: None of the introduced new opcodes in the EVM has the potential to change the behavior of existing
++contracts; in the case where previously an arbitrary invalid bytecode would have been deployed to the network, none of
++them would be able to modify the state of the Ethereum Classic networks retrospectively. Adding opcodes to the EVM
++increases its functionality and should be considered a feature upgrade rather than a modification.
++
++### Implementation
++
++Adoption of the content of this ECIP requires a hard fork as it introduces changes that are not backward compatible.
++
++The following clients with Ethereum Classic support implement the _Istanbul_ features currently:
++
++- Parity Ethereum
++- Multi-Geth
++- Hyperledger Besu
++
++## Copyright
++
++Copyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).
+
+From 70d44003d14f9852fe9114136e5da2daeaba389a Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Sat, 16 Nov 2019 08:02:56 -0800
+Subject: [PATCH 2/4] Switch ECIP-1061 and ECIP-1075 around.
+
+---
+ _specs/ecip-1061.md | 59 ++++++++++++++++++++++++++++++++-------------
+ _specs/ecip-1075.md | 59 +++++++++++++--------------------------------
+ 2 files changed, 59 insertions(+), 59 deletions(-)
+
+diff --git a/_specs/ecip-1061.md b/_specs/ecip-1061.md
+index 42ec5bc..56c8a0e 100644
+--- a/_specs/ecip-1061.md
++++ b/_specs/ecip-1061.md
+@@ -1,7 +1,7 @@
+ ---
+ lang: en
+ ecip: 1061
+-title: Aztlán EVM and Protocol Upgrades
++title: Aztlán EVM and Protocol Upgrades (Basic Edition)
+ status: Draft
+ type: Meta
+ author: Talha Cross (@soc1c)
+@@ -17,29 +17,54 @@ Classic network in a hard-fork code-named _Aztlán_ to enable maximum compatibil
+ ### Abstract
+ 
+ Add support for a subset of protocol-impacting changes introduced in the Ethereum Foundation (ETH) network via the
+-_Istanbul_ hardforks.
++_Istanbul_ hardforks. The proposed changes for Ethereum Classic's _Aztlán_ upgrade include:
+ 
+-There are four alterative proposals with varying levels of backwards and
+-forwards compatibility for the _Aztlán_ upgrade:
++- Add Blake2 compression function `F` precompile
++- Reduce alt_bn128 precompile gas costs
++- Add ChainID opcode
++- Repricing for trie-size-dependent opcodes
++- Calldata gas cost reduction
++- Rebalance net-metered SSTORE gas cost with consideration of SLOAD gas cost change
+ 
+-- [ECIP-1072](https://ecips.ethereum.org/ECIPS/ecip-1072) - Yuanchun Edition
+-- [ECIP-1073](https://ecips.ethereum.org/ECIPS/ecip-1073) - Xichun Edition
+-- [ECIP-1074](https://ecips.ethereum.org/ECIPS/ecip-1074) - Tanchun Edition
+-- [ECIP-1075](https://ecips.ethereum.org/ECIPS/ecip-1075) - Basic Edition
++For more information on the opcodes and their respective EIPs and implementations, please see the _Specification_
++section of this document.
+ 
+-This document proposes the following blocks at which to implement these changes in the Classic networks:
++### Motivation
+ 
+-- `TBD` on Mordor Classic PoW-testnet (Feb 5th, 2020)
+-- `TBD` on Kotti Classic PoA-testnet (Feb 12th, 2020)
+-- `TBD` on Ethereum Classic PoW-mainnet (March 25th, 2020)
++To enhance the Ethereum Virtual Machine's (EVM) capabilities, various opcodes shall be added to the Ethereum Classic
++networks, all of which have been in use on the Ethereum Foundation networks since end of 2019.
+ 
+-For more information on the opcodes and their respective EIPs and implementations, please see the _Specification_
+-section of this document.
++### Specification
++
++Technical specifications for each EIP can be found at those documents respectively:
++
++- [EIP-152](https://eips.ethereum.org/EIPS/eip-152): Add Blake2 compression function `F` precompile
++- [EIP-1108](https://eips.ethereum.org/EIPS/eip-1108): Reduce alt_bn128 precompile gas costs
++- [EIP-1344](https://eips.ethereum.org/EIPS/eip-1344): Add ChainID opcode
++- [EIP-1884](https://eips.ethereum.org/EIPS/eip-1884): Repricing for trie-size-dependent opcodes
++- [EIP-2028](https://eips.ethereum.org/EIPS/eip-2028): Calldata gas cost reduction
++- [EIP-2200](https://eips.ethereum.org/EIPS/eip-2200): Rebalance net-metered SSTORE gas cost with consideration of SLOAD gas cost change
++
++### Rationale
++
++__Interoperability__: Establishing and maintaining interoperable behavior between Ethereum clients is essential for
++developers and end-user adoption, yielding benefits for all participating chains (e.g., ETH and ETC, Ropsten and Mordor,
++Görli and Kotti).
++
++__Immutability__: None of the introduced new opcodes in the EVM has the potential to change the behavior of existing
++contracts; in the case where previously an arbitrary invalid bytecode would have been deployed to the network, none of
++them would be able to modify the state of the Ethereum Classic networks retrospectively. Adding opcodes to the EVM
++increases its functionality and should be considered a feature upgrade rather than a modification.
++
++### Implementation
++
++Adoption of the content of this ECIP requires a hard fork as it introduces changes that are not backward compatible.
+ 
+-### Final Note
++The following clients with Ethereum Classic support implement the _Istanbul_ features currently:
+ 
+-- Users of the Geth Classic client are urged to migrate their services to Parity Ethereum, Multi-Geth, or Hyperledger Besu. It is no longer recommended to run Geth Classic in production.
+-- Users of the Morden Classic testnet are urged to migrate their applications to the Kotti Classic or Morder Classic testnets.
++- Parity Ethereum
++- Multi-Geth
++- Hyperledger Besu
+ 
+ ## Copyright
+ 
+diff --git a/_specs/ecip-1075.md b/_specs/ecip-1075.md
+index 0f177dc..66c79de 100644
+--- a/_specs/ecip-1075.md
++++ b/_specs/ecip-1075.md
+@@ -1,7 +1,7 @@
+ ---
+ lang: en
+ ecip: 1075
+-title: Aztlán EVM and Protocol Upgrades (Basic Edition)
++title: Aztlán EVM and Protocol Upgrades
+ status: Draft
+ type: Meta
+ author: Talha Cross (@soc1c)
+@@ -17,54 +17,29 @@ Classic network in a hard-fork code-named _Aztlán_ to enable maximum compatibil
+ ### Abstract
+ 
+ Add support for a subset of protocol-impacting changes introduced in the Ethereum Foundation (ETH) network via the
+-_Istanbul_ hardforks. The proposed changes for Ethereum Classic's _Aztlán_ upgrade include:
++_Istanbul_ hardforks.
+ 
+-- Add Blake2 compression function `F` precompile
+-- Reduce alt_bn128 precompile gas costs
+-- Add ChainID opcode
+-- Repricing for trie-size-dependent opcodes
+-- Calldata gas cost reduction
+-- Rebalance net-metered SSTORE gas cost with consideration of SLOAD gas cost change
++There are four alterative proposals with varying levels of backwards and
++forwards compatibility for the _Aztlán_ upgrade:
+ 
+-For more information on the opcodes and their respective EIPs and implementations, please see the _Specification_
+-section of this document.
+-
+-### Motivation
+-
+-To enhance the Ethereum Virtual Machine's (EVM) capabilities, various opcodes shall be added to the Ethereum Classic
+-networks, all of which have been in use on the Ethereum Foundation networks since end of 2019.
+-
+-### Specification
+-
+-Technical specifications for each EIP can be found at those documents respectively:
++- [ECIP-1072](https://ecips.ethereum.org/ECIPS/ecip-1072) - Yuanchun Edition
++- [ECIP-1073](https://ecips.ethereum.org/ECIPS/ecip-1073) - Xichun Edition
++- [ECIP-1074](https://ecips.ethereum.org/ECIPS/ecip-1074) - Tanchun Edition
++- [ECIP-1075](https://ecips.ethereum.org/ECIPS/ecip-1075) - Basic Edition
+ 
+-- [EIP-152](https://eips.ethereum.org/EIPS/eip-152): Add Blake2 compression function `F` precompile
+-- [EIP-1108](https://eips.ethereum.org/EIPS/eip-1108): Reduce alt_bn128 precompile gas costs
+-- [EIP-1344](https://eips.ethereum.org/EIPS/eip-1344): Add ChainID opcode
+-- [EIP-1884](https://eips.ethereum.org/EIPS/eip-1884): Repricing for trie-size-dependent opcodes
+-- [EIP-2028](https://eips.ethereum.org/EIPS/eip-2028): Calldata gas cost reduction
+-- [EIP-2200](https://eips.ethereum.org/EIPS/eip-2200): Rebalance net-metered SSTORE gas cost with consideration of SLOAD gas cost change
++This document proposes the following blocks at which to implement these changes in the Classic networks:
+ 
+-### Rationale
++- `TBD` on Mordor Classic PoW-testnet (Feb 5th, 2020)
++- `TBD` on Kotti Classic PoA-testnet (Feb 12th, 2020)
++- `TBD` on Ethereum Classic PoW-mainnet (March 25th, 2020)
+ 
+-__Interoperability__: Establishing and maintaining interoperable behavior between Ethereum clients is essential for
+-developers and end-user adoption, yielding benefits for all participating chains (e.g., ETH and ETC, Ropsten and Mordor,
+-Görli and Kotti).
+-
+-__Immutability__: None of the introduced new opcodes in the EVM has the potential to change the behavior of existing
+-contracts; in the case where previously an arbitrary invalid bytecode would have been deployed to the network, none of
+-them would be able to modify the state of the Ethereum Classic networks retrospectively. Adding opcodes to the EVM
+-increases its functionality and should be considered a feature upgrade rather than a modification.
+-
+-### Implementation
+-
+-Adoption of the content of this ECIP requires a hard fork as it introduces changes that are not backward compatible.
++For more information on the opcodes and their respective EIPs and implementations, please see the _Specification_
++section of this document.
+ 
+-The following clients with Ethereum Classic support implement the _Istanbul_ features currently:
++### Final Note
+ 
+-- Parity Ethereum
+-- Multi-Geth
+-- Hyperledger Besu
++- Users of the Geth Classic client are urged to migrate their services to Parity Ethereum, Multi-Geth, or Hyperledger Besu. It is no longer recommended to run Geth Classic in production.
++- Users of the Morden Classic testnet are urged to migrate their applications to the Kotti Classic or Morder Classic testnets.
+ 
+ ## Copyright
+ 
+
+From cba0c0e483ed6a561654aa3a59395ac1efc57518 Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Sat, 16 Nov 2019 08:09:50 -0800
+Subject: [PATCH 3/4] =?UTF-8?q?Corrected=20author=20for=20ECIP-1075,=20whi?=
+ =?UTF-8?q?ch=20is=20now=20a=20net-new=20ECIP,=20pointing=20to=20the=20var?=
+ =?UTF-8?q?ious=20Aztl=C3=A1n=20editions.=20This=20would=20become=20the=20?=
+ =?UTF-8?q?primary=20"Meta"=20for=20Aztl=C3=A1n.?=
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+---
+ _specs/ecip-1075.md | 10 ++++++----
+ 1 file changed, 6 insertions(+), 4 deletions(-)
+
+diff --git a/_specs/ecip-1075.md b/_specs/ecip-1075.md
+index 66c79de..0b2a162 100644
+--- a/_specs/ecip-1075.md
++++ b/_specs/ecip-1075.md
+@@ -4,9 +4,10 @@ ecip: 1075
+ title: Aztlán EVM and Protocol Upgrades
+ status: Draft
+ type: Meta
+-author: Talha Cross (@soc1c)
+-created: 2019-06-06
+-discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
++author: Bob Summerwill (@bobsummerwill)
++created: 2019-11-16
++discussions-to: https://github.com/ethereumclassic/ECIPs/issues/188
++license: Apache-2.0
+ ---
+ 
+ ### Simple Summary
+@@ -43,4 +44,5 @@ section of this document.
+ 
+ ## Copyright
+ 
+-Copyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).
++This work is licensed under [Apache License, Version
++2.0](http://www.apache.org/licenses/).
+
+From 7b305d278a92d556d0b4f14dcdde439b2ba24bfa Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Sat, 16 Nov 2019 12:47:31 -0800
+Subject: [PATCH 4/4] Added DCO equivalent section to ECIP-1075.
+
+---
+ _specs/ecip-1075.md | 5 +++--
+ 1 file changed, 3 insertions(+), 2 deletions(-)
+
+diff --git a/_specs/ecip-1075.md b/_specs/ecip-1075.md
+index 0b2a162..da850cd 100644
+--- a/_specs/ecip-1075.md
++++ b/_specs/ecip-1075.md
+@@ -44,5 +44,6 @@ section of this document.
+ 
+ ## Copyright
+ 
+-This work is licensed under [Apache License, Version
+-2.0](http://www.apache.org/licenses/).
++This work is licensed under the [Apache License, Version 2.0](https://www.apache.org/licenses/LICENSE-2.0).  The author, Bob Summerwill, attests to his sole authorship of this work, and that he is able to contribute this work to the ECIP process under the Apache 2.0 licence.
++
++He further attests that he neither holds nor is aware of any patents, trademarks, copyright issues or other IP hinderances associated with this work.
diff --git a/.gh-pullrequests/00186_554649755.json b/.gh-pullrequests/00186_554649755.json
new file mode 100644
index 0000000..622ffd0
--- /dev/null
+++ b/.gh-pullrequests/00186_554649755.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554649755",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/186#issuecomment-554649755",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/186",
+    "id": 554649755,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDY0OTc1NQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-16T16:00:11Z",
+    "updated_at": "2019-11-16T16:00:11Z",
+    "author_association": "MEMBER",
+    "body": "@soc1c Your proposal is now ECIP-1075.\r\n\r\nAlternatively, I could make ECIP-1075 be \"the index\".   Let me make a PR for that, so we can see what the diffs look like that way round.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554649755/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00187.json b/.gh-pullrequests/00187.json
new file mode 100644
index 0000000..f8a812a
--- /dev/null
+++ b/.gh-pullrequests/00187.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/187",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/187/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/187/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/187/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/187",
+    "id": 523862419,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQxNzY3ODg5",
+    "number": 187,
+    "title": "ECBP-1076: Mining algorithm change process",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 7,
+    "created_at": "2019-11-16T16:03:34Z",
+    "updated_at": "2019-11-21T17:12:56Z",
+    "closed_at": "2019-11-17T15:43:55Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/187",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/187",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/187.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/187.patch"
+    },
+    "body": "This meta document is agnostic to any mining algorithm. Its sole purpose is specifying a process how to openly determine and select a mining algorithm for Ethereum Classic.\r\n\r\nref #174 ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/187/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00187.patch b/.gh-pullrequests/00187.patch
new file mode 100644
index 0000000..60fd765
--- /dev/null
+++ b/.gh-pullrequests/00187.patch
@@ -0,0 +1,204 @@
+From 1190845918f4f28ae76bde9586f20b9d611dce60 Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Sat, 16 Nov 2019 17:03:06 +0100
+Subject: [PATCH 1/4] ecbp-1076: mining algorithm change process
+
+---
+ _specs/ecip-10746.md | 91 ++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 91 insertions(+)
+ create mode 100644 _specs/ecip-10746.md
+
+diff --git a/_specs/ecip-10746.md b/_specs/ecip-10746.md
+new file mode 100644
+index 0000000..5da37d6
+--- /dev/null
++++ b/_specs/ecip-10746.md
+@@ -0,0 +1,91 @@
++---
++ecip: 1076
++title: Mining Algorithm Change Process
++author: Talha Cross (@soc1c)
++discussions-to: https://github.com/ethereumclassic/ECIPs/issues/174
++status: Draft
++type: ECBP
++created: 2019-11-16
++---
++
++### Abstract
++This meta document is agnostic to any mining algorithm. Its sole purpose is specifying a process how to openly determine and select a mining algorithm for Ethereum Classic.
++
++### Motivation
++The decision to change the Ethereum Classic mining algorithm - or to keep it as is - is not an easy one to make. It should be done by broad consensus with all stakeholders involved - miners, investors, application and core developers, and anyone else who feels having a stake in ETC. This meta document proposes a process of how to facilitate the potential change of the mining algorithm and parameters.
++
++### Available Options
++Currently, the following options are debatable.
++
++- **ECBP-1076-A**: _"Ethash Status Quo."_ The mining algorithm will be untouched as it is since genesis, as **Ethash** function with a statically **increasing DAG**.
++- **ECBP-1076-B**: _"Ethash Limited DAG."_ The mining algorithm will be untouched as it is since genesis, as **Ethash** function. However, the **DAG size will be limited** as specified in [ECIP-1043](https://ecips.ethereumclassic.org/ECIPs/ecip-1043).
++- **ECBP-1076-C**: _"SHA3."_ The mining algorithm will be **changed to SHA3** as specified in [ECIP-1049](https://ecips.ethereumclassic.org/ECIPs/ecip-1049).
++- **ECBP-1076-D**: _"ProgPoW."_ The mining algorithm will be **changed to ProgPow** as specified in [ECIP-1070](https://ecips.ethereumclassic.org/ECIPs/ecip-1070).
++
++Eventually, the community has to decide on one.
++
++### Process
++The following process facilitates all stakeholders in various stages.
++
++1. _"Tech Stage."_ Core and application developers meet in regular calls to evaluate the feasibility of the Ethash status quo, the limited DAG size proposal (ECIP-1043), the SHA3 proposal (ECIP-1049), and the ProgPoW proposal (ECIP-1070).
++
++    If there is no technical objection to each of the proposals, the proposals can be **moved to "Last Call"** state, regardless of whether they will be considered in future or not. As a result, none, one, or many competing proposals can be in "Last Call" state at the same time.
++
++    This stage is finished once all proposals are either in "Last Call," "Withdrawn," or "Rejected" state.
++
++2. _"Miner Stage."_ Solo miners, mining farms, and mining pools can signal support by adjusting their mining node to signal in favor of one of the proposals that was promoted to "Last Call" state in the previous stage. Details on the signaling can be found in the subsequent section.
++
++    This stage is finished once more than **70% of the last 100_000 blocks** were signed with a signal in favor of one proposal.
++3. _"Decision Stage."_ The proposal that passed the technical stage to "Last Call" state and received 70% approval by the miner community, **shall be considered as "Accepted,"** all other competing proposals shall be considered as "Rejected." The EIP Editors are responsible to facilitate this status update to the proposals according to this process definition.
++
++    The block number where the 70% threshold is breached the first time is called the `threshold_blocknumber`. It automatically defines the `activation_blocknumber` which is:
++
++    ```
++    activation_blocknumber = threshold_blocknumber + 1_000_000
++    ```
++
++    That gives clients a six months window of activating releases with the ECBP-1076 activation block number.
++
++    In case none of the proposals reaches the defined threshold, the status quo will remain indefinitely until either one of the proposals reaches the 70% majority or until this process is entirely rejected by the community.
++
++### Miner Signaling
++The miner stage is specified as follows.
++
++The miner prepend the miner's extra data with 5 bytes of signaling data which shall be recorded in the Ethereum Classic block headers. The 5 bytes contain the following:
++
++1. Two start bytes that indicate a signal in terms of ECBP-1076, namely `76` (`0x37 0x36`)
++2. One option byte that favors one of the proposals:
++    - `A` (`0x41`): ECBP-1076-A _(optional)_
++    - `B` (`0x42`): ECBP-1076-B
++    - `C` (`0x43`): ECBP-1076-C
++    - `D` (`0x44`): ECBP-1076-D
++3. Two numeric bytes that vote on the default gas limit as specified in [ECIP-1047](https://ecips.ethereumclassic.org/ECIPs/ecip-1047).
++    - `00` (`0x30 0x30`): abstain / don't care _(optional)_
++    - `01` (`0x30 0x31`): support ECIP-1047 client defaults with 1 million gas block gas limit
++    - `08` (`0x30 0x38`): reject ECIP-1047 client defaults, explicitly supporting the 8 million gas block gas limit defaults
++    - `99` (`0x39 0x39`): any other number between `00` and `99` suggests a competing default block gas limit
++
++In addition to the numeric vote on the gas limit with the extra data field, mining nodes are encouraged to utilized block gas target limit voting with the suitable configuration flags for their mining nodes.
++
++No signaling favors the status quo (ECBP-1076-A) and effectively rejects ECIPs 1041, 1043, 1047, 1049, and 1070.
++
++### Mining Node Configuration Examples
++The following configuration examples do not favor one option over another and only serve the purpose of demonstration.
++
++A Parity Ethereum node configured to vote for SHA3 (ECBP-1076-C) not caring about the block gas limit:
++
++```
++parity --extra-data "76C00 Happy Trigger Farm" [OPTIONS]
++```
++
++A Multi-Geth node configured to vote for Ethash with DAG size limit (ECBP-1076-B) and a 1 million block gas limit (ECIP-1047):
++
++```
++geth --miner.extradata "76B01 Funny Classic Pool" --miner.gaslimit 1000000 [OPTIONS]
++```
++
++### Implementation
++All clients implement custom extra data and block gas limit target voting. No custom implementation is required.
++
++### Copyright/Licensing
++Copyright and related rights waived via [CC0.](https://creativecommons.org/publicdomain/zero/1.0/)
+
+From 98ed5f3d8c8d67fcf6509d2a0b7b3bc84e0b8d9f Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Sat, 16 Nov 2019 17:10:48 +0100
+Subject: [PATCH 2/4] ecbp-1076: add besu config example
+
+---
+ _specs/ecip-10746.md | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+diff --git a/_specs/ecip-10746.md b/_specs/ecip-10746.md
+index 5da37d6..66ffb03 100644
+--- a/_specs/ecip-10746.md
++++ b/_specs/ecip-10746.md
+@@ -83,6 +83,11 @@ A Multi-Geth node configured to vote for Ethash with DAG size limit (ECBP-1076-B
+ ```
+ geth --miner.extradata "76B01 Funny Classic Pool" --miner.gaslimit 1000000 [OPTIONS]
+ ```
++A Besu node configured to vote for ProgPoW (ECBP-1076-D) and an increase of the block gas limit:
++
++```
++besu --miner-extra-data="76D15 LOL-lonely Miner 1337" --target-gas-limit=15000000 [OPTIONS]
++```
+ 
+ ### Implementation
+ All clients implement custom extra data and block gas limit target voting. No custom implementation is required.
+
+From 90814e4664bd39bfce57fc8e46928c357c5302c8 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sun, 17 Nov 2019 02:28:31 +0300
+Subject: [PATCH 3/4] Update and rename ecip-10746.md to ecip-1076.md
+
+---
+ _specs/{ecip-10746.md => ecip-1076.md} | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
+ rename _specs/{ecip-10746.md => ecip-1076.md} (98%)
+
+diff --git a/_specs/ecip-10746.md b/_specs/ecip-1076.md
+similarity index 98%
+rename from _specs/ecip-10746.md
+rename to _specs/ecip-1076.md
+index 66ffb03..20a8a93 100644
+--- a/_specs/ecip-10746.md
++++ b/_specs/ecip-1076.md
+@@ -1,4 +1,5 @@
+ ---
++lang: en
+ ecip: 1076
+ title: Mining Algorithm Change Process
+ author: Talha Cross (@soc1c)
+@@ -93,4 +94,4 @@ besu --miner-extra-data="76D15 LOL-lonely Miner 1337" --target-gas-limit=1500000
+ All clients implement custom extra data and block gas limit target voting. No custom implementation is required.
+ 
+ ### Copyright/Licensing
+-Copyright and related rights waived via [CC0.](https://creativecommons.org/publicdomain/zero/1.0/)
++Copyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).
+
+From da1b5fc7cc7432ed3e561ea9bdf64896dfb517b0 Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Sun, 17 Nov 2019 11:06:00 +0100
+Subject: [PATCH 4/4] rename sha3 to keccak256
+
+---
+ _specs/ecip-1076.md | 6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
+
+diff --git a/_specs/ecip-1076.md b/_specs/ecip-1076.md
+index 20a8a93..de8261f 100644
+--- a/_specs/ecip-1076.md
++++ b/_specs/ecip-1076.md
+@@ -20,7 +20,7 @@ Currently, the following options are debatable.
+ 
+ - **ECBP-1076-A**: _"Ethash Status Quo."_ The mining algorithm will be untouched as it is since genesis, as **Ethash** function with a statically **increasing DAG**.
+ - **ECBP-1076-B**: _"Ethash Limited DAG."_ The mining algorithm will be untouched as it is since genesis, as **Ethash** function. However, the **DAG size will be limited** as specified in [ECIP-1043](https://ecips.ethereumclassic.org/ECIPs/ecip-1043).
+-- **ECBP-1076-C**: _"SHA3."_ The mining algorithm will be **changed to SHA3** as specified in [ECIP-1049](https://ecips.ethereumclassic.org/ECIPs/ecip-1049).
++- **ECBP-1076-C**: _"Keccak256 (SHA3)."_ The mining algorithm will be **changed to Keccak256** as specified in [ECIP-1049](https://ecips.ethereumclassic.org/ECIPs/ecip-1049).
+ - **ECBP-1076-D**: _"ProgPoW."_ The mining algorithm will be **changed to ProgPow** as specified in [ECIP-1070](https://ecips.ethereumclassic.org/ECIPs/ecip-1070).
+ 
+ Eventually, the community has to decide on one.
+@@ -28,7 +28,7 @@ Eventually, the community has to decide on one.
+ ### Process
+ The following process facilitates all stakeholders in various stages.
+ 
+-1. _"Tech Stage."_ Core and application developers meet in regular calls to evaluate the feasibility of the Ethash status quo, the limited DAG size proposal (ECIP-1043), the SHA3 proposal (ECIP-1049), and the ProgPoW proposal (ECIP-1070).
++1. _"Tech Stage."_ Core and application developers meet in regular calls to evaluate the feasibility of the Ethash status quo, the limited DAG size proposal (ECIP-1043), the Keccak256 proposal (ECIP-1049), and the ProgPoW proposal (ECIP-1070).
+ 
+     If there is no technical objection to each of the proposals, the proposals can be **moved to "Last Call"** state, regardless of whether they will be considered in future or not. As a result, none, one, or many competing proposals can be in "Last Call" state at the same time.
+ 
+@@ -73,7 +73,7 @@ No signaling favors the status quo (ECBP-1076-A) and effectively rejects ECIPs 1
+ ### Mining Node Configuration Examples
+ The following configuration examples do not favor one option over another and only serve the purpose of demonstration.
+ 
+-A Parity Ethereum node configured to vote for SHA3 (ECBP-1076-C) not caring about the block gas limit:
++A Parity Ethereum node configured to vote for Keccak256 (ECBP-1076-C) not caring about the block gas limit:
+ 
+ ```
+ parity --extra-data "76C00 Happy Trigger Farm" [OPTIONS]
diff --git a/.gh-pullrequests/00187_554651063.json b/.gh-pullrequests/00187_554651063.json
new file mode 100644
index 0000000..53d389d
--- /dev/null
+++ b/.gh-pullrequests/00187_554651063.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554651063",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/187#issuecomment-554651063",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/187",
+    "id": 554651063,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDY1MTA2Mw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-16T16:16:07Z",
+    "updated_at": "2019-11-16T16:16:53Z",
+    "author_association": "MEMBER",
+    "body": "My primary objection to this process as stated is that it puts the decision-making on change of mining algorithm purely in the hands of the miners.\r\n\r\nThey are not the only stakeholders and should not be the ones making that decision.  Yes, miners need their voice, but other stakeholders need their voice too.\r\n\r\nMiners will vote in their own interests, which do not necessarily coincide with the needs of the network.  Gaslimit voting for ETH1 is a primary example of this, where gaslimit has been voted beyond the limits of the client software to cope - resulting is massive centralization.\r\n\r\nThere is no counter-balance there, and there is no counter-balance here.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554651063/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00187_554651516.json b/.gh-pullrequests/00187_554651516.json
new file mode 100644
index 0000000..e4adec2
--- /dev/null
+++ b/.gh-pullrequests/00187_554651516.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554651516",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/187#issuecomment-554651516",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/187",
+    "id": 554651516,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDY1MTUxNg==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-16T16:21:10Z",
+    "updated_at": "2019-11-16T16:21:10Z",
+    "author_association": "MEMBER",
+    "body": "this is a draft. please add as many steps to the process as you wish\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554651516/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00187_554651628.json b/.gh-pullrequests/00187_554651628.json
new file mode 100644
index 0000000..87bf204
--- /dev/null
+++ b/.gh-pullrequests/00187_554651628.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554651628",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/187#issuecomment-554651628",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/187",
+    "id": 554651628,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDY1MTYyOA==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-16T16:22:38Z",
+    "updated_at": "2019-11-16T16:24:05Z",
+    "author_association": "MEMBER",
+    "body": "I agree with @bobsummerwill . This kind of voting/signaling has the same incentive flaw as the DAO carbon vote. Miners are incentivized to optimize for themselves in a similar way that the DAO token holders were incentivized to bail themselves out.\r\nThe nice thing about this is that it is automated though. I don't know of any better automated way tbh.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554651628/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00187_554651902.json b/.gh-pullrequests/00187_554651902.json
new file mode 100644
index 0000000..aadc384
--- /dev/null
+++ b/.gh-pullrequests/00187_554651902.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554651902",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/187#issuecomment-554651902",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/187",
+    "id": 554651902,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDY1MTkwMg==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-16T16:25:48Z",
+    "updated_at": "2019-11-16T16:25:48Z",
+    "author_association": "MEMBER",
+    "body": "I will champion this proposal unless you come up with a better idea. And I am open for suggestions or adding additional signals.\r\n\r\nNobody wants to spend tens of hours on calls.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554651902/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00187_554652947.json b/.gh-pullrequests/00187_554652947.json
new file mode 100644
index 0000000..18abc91
--- /dev/null
+++ b/.gh-pullrequests/00187_554652947.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554652947",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/187#issuecomment-554652947",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/187",
+    "id": 554652947,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDY1Mjk0Nw==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-16T16:38:01Z",
+    "updated_at": "2019-11-16T16:38:01Z",
+    "author_association": "MEMBER",
+    "body": "ECBP-1076 is basically MINERVOTE. But TBH, if we're going to the route of letting miners decide PoW algorithm change, then I'd suggest we do something more sophisticated, such as 27-MINERVOTE, rather than ad hoc process that still involves human factors. https://specs.that.world/27-minervote/\r\n\r\nIf you are a miner, I would guess the most important thing you want to review are:\r\n\r\n* Voting range: in ECBP-1076 this is unspecified (?). In 27-MINERVOTE this is a known recurrence period, usually several weeks to a month.\r\n* Activation time: in ECBP-1076 this is 6 months (!). In 27-MINERVOTE this is again, usually several weeks to a month.\r\n* Threshold: in ECBP-1076 this is 70%, meaning there may be still 30% of the miners against a particular algorithm change. In 27-MINERVOTE we don't have a fixed number, but for things controversial like this we may want a higher threshold, such as 90%.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554652947/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00187_554653336.json b/.gh-pullrequests/00187_554653336.json
new file mode 100644
index 0000000..4812216
--- /dev/null
+++ b/.gh-pullrequests/00187_554653336.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554653336",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/187#issuecomment-554653336",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/187",
+    "id": 554653336,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDY1MzMzNg==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-16T16:42:44Z",
+    "updated_at": "2019-11-16T16:42:44Z",
+    "author_association": "MEMBER",
+    "body": "Thanks for the feedback.\r\n\r\n- The voting range is indefinite. Any block that reachs the threshold should be considered as threshold block. Happy to talk about a sensible range though, I just cannot imagine any, yet.\r\n- It's six months because the change is substantial and we need all clients to implement it. You cannot switch to Keccak256 in a couple of weeks.\r\n- It makes sense to bump this to 90% if it appears to be controversial. However, this would mean that Ethash ASIC producers only need 10% of the ETC hashrate to ensure a change will never happen. It might be sensible to go with 70%.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/554653336/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00187_557183433.json b/.gh-pullrequests/00187_557183433.json
new file mode 100644
index 0000000..4e644e7
--- /dev/null
+++ b/.gh-pullrequests/00187_557183433.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557183433",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/187#issuecomment-557183433",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/187",
+    "id": 557183433,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzE4MzQzMw==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-21T17:12:56Z",
+    "updated_at": "2019-11-21T17:12:56Z",
+    "author_association": "MEMBER",
+    "body": "@zmitton can you review #194 instead?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557183433/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00189.json b/.gh-pullrequests/00189.json
new file mode 100644
index 0000000..0d1c10d
--- /dev/null
+++ b/.gh-pullrequests/00189.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/189",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/189/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/189/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/189/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/189",
+    "id": 523879272,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQxNzc5OTEy",
+    "number": 189,
+    "title": "ECIP-1022: Generalized Version Bits Voting for Consensus Soft and Hard Forks",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-16T18:30:53Z",
+    "updated_at": "2019-11-17T17:08:16Z",
+    "closed_at": "2019-11-17T17:08:13Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/189",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/189",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/189.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/189.patch"
+    },
+    "body": "The following ECIP tries to bring the best practices about how Bitcoin deals with consensus hard fork ([BIP-9](https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki) and [BIP-135](https://github.com/bitcoin/bips/blob/master/bip-0135.mediawiki)) into Ethereum Classic. Rather than hard-code a block number as we currently do, each block mined emits support of the new consensus hard-fork. Only when a large enough portion of the network support it, the hard-fork is \"locked-in\" and will be activated.\r\n\r\n### Motivation\r\n\r\n**Lack of an appropriate voting method can results in network forking**. The DAO hard fork was such an example. Currently the way Ethereum used to gather opinions was through [CarbonVote](http://carbonvote.com/). It indeed has the advantage that it brings the opinions of Ethereum holders rather than miners. However, it is not enforceable and we all know the disastrous result it brought during the DAO hard fork period. We don't want that to happen again.\r\n\r\n**Miner community, stake holders and proof of work**. It is common knowledge that Ethereum Classic will probably stay in proof of work, rather than, like Ethereum, switch to a proof of stake algorithm. Combining this ECIP together with ECIP-1023, we combines opinions from both the miner community and ETC coin holders to reach consensus about whether a hard fork should occur.\r\n\r\n**Best practices from Bitcoin**. [BIP-9](https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki), which uses version bits mined in each blocks to vote for consensus soft fork has be successfully conducted for several. Its upgraded version, BIP-135, aims to deal with both soft forks and hard forks alike.\r\n\r\n**Potentially faster adoption of new consensus hard fork**. When dealing with emergency consensus hard fork for preventing network attacks, the developer would not need to artificially insert a \"hard fork block number\" (which must leave enough time for everyone else to upgrade their clients, and then wait for that block). The ETC coin holders and miners collectively decide when the hard fork happens, which potentially could be faster than hard coded block numbers.\r\n\r\n**Ethereum Classic will become a stable protocol soon**. When we finished dealing with the monetary policy and finally the difficulty bomb, ETC's protocol would become a rather stable one. This means most of the new consensus hard fork would be new features of the network, rather than fixing existing bugs. In that case, voting would be important to keep the whole network healthy.\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/189/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00189.patch b/.gh-pullrequests/00189.patch
new file mode 100644
index 0000000..6577eb8
--- /dev/null
+++ b/.gh-pullrequests/00189.patch
@@ -0,0 +1,1782 @@
+From 16347fe30b78ee8ea186cba4de9bde72eb5be013 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sat, 16 Nov 2019 19:30:38 +0100
+Subject: [PATCH 1/5] Create ecip-1022.md
+
+---
+ _specs/ecip-1022.md | 387 ++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 387 insertions(+)
+ create mode 100644 _specs/ecip-1022.md
+
+diff --git a/_specs/ecip-1022.md b/_specs/ecip-1022.md
+new file mode 100644
+index 0000000..d8e1f4a
+--- /dev/null
++++ b/_specs/ecip-1022.md
+@@ -0,0 +1,387 @@
++---
++lang: en
++ecip: 1022
++title: Generalized Version Bits Voting for Consensus Soft and Hard Forks
++status: Draft
++type: Meta
++author: Wei Tang (@sorpaas)
++created: 2017-06-28
++license: Apache-2.0
++---
++
++## Abstract
++
++The following ECIP tries to bring the best practices about how Bitcoin deals with consensus hard fork ([BIP-9](https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki) and [BIP-135](https://github.com/bitcoin/bips/blob/master/bip-0135.mediawiki)) into Ethereum Classic. Rather than hard-code a block number as we currently do, each block mined emits support of the new consensus hard-fork. Only when a large enough portion of the network support it, the hard-fork is "locked-in" and will be activated.
++
++## Motivation
++
++**Lack of an appropriate voting method can results in network forking**. The DAO hard fork was such an example. Currently the way Ethereum used to gather opinions was through [CarbonVote](http://carbonvote.com/). It indeed has the advantage that it brings the opinions of Ethereum holders rather than miners. However, it is not enforceable and we all know the disastrous result it brought during the DAO hard fork period. We don't want that to happen again.
++
++**Miner community, stake holders and proof of work**. It is common knowledge that Ethereum Classic will probably stay in proof of work, rather than, like Ethereum, switch to a proof of stake algorithm. Combining this ECIP together with ECIP-1023, we combines opinions from both the miner community and ETC coin holders to reach consensus about whether a hard fork should occur.
++
++**Best practices from Bitcoin**. [BIP-9](https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki), which uses version bits mined in each blocks to vote for consensus soft fork has be successfully conducted for several. Its upgraded version, BIP-135, aims to deal with both soft forks and hard forks alike.
++
++**Potentially faster adoption of new consensus hard fork**. When dealing with emergency consensus hard fork for preventing network attacks, the developer would not need to artificially insert a "hard fork block number" (which must leave enough time for everyone else to upgrade their clients, and then wait for that block). The ETC coin holders and miners collectively decide when the hard fork happens, which potentially could be faster than hard coded block numbers.
++
++**Ethereum Classic will become a stable protocol soon**. When we finished dealing with the monetary policy and finally the difficulty bomb, ETC's protocol would become a rather stable one. This means most of the new consensus hard fork would be new features of the network, rather than fixing existing bugs. In that case, voting would be important to keep the whole network healthy.
++
++## Terms and conventions
++
++The version bits used by this proposal for signaling deployment of forks are
++referred to as 'signaling bits' or shortened to 'bits' where unambiguous.
++
++The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
++"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
++document are to be interpreted as described in RFC 2119.
++
++## Specification
++
++### Signaling bits
++
++Ethereum's extraData field are 32-bytes, i.e. a 256-bit value. The field itself should be a RLP list that follows:
++
++```
++[ version: P, signalingBits: S, clientIdentity: B ]
++```
++
++For this ECIP, `version` should equal to `1`, and `signalingBits` and `clientIdentity` fulfill the rest of the extraData field as long as it does not exceed the maximum size allowed. This allows us to have way more concurrent signalings and better backward compatibility than Bitcoin.
++
++`signalingBits` are right-aligned, i.e. `0b1` has its bit at index 0 set, `0b10` has its bit at index 1 set, `0b100` has its bit at index 2 set.
++
++### Deployment states
++
++With each block and fork, we associate a deployment state. The possible states are:
++
++* **DEFINED** is the first state that each fork starts out as. The genesis block for any chain SHALL by definition be in this state for each deployment.
++* **STARTED** for blocks past the starttime.
++* **LOCKED_IN** after STARTED, if at least threshold out of windowsize blocks have the associated bit set in `signalingBits` in `extraData` block header, measured at next height that is evenly divisible by the windowsize.
++* **ACTIVE** for all blocks after the grace period conditions have been met.
++* **FAILED** if past the timeout time and LOCKED_IN was not reached.
++
++In accordance with BIP9, a block's state SHALL never depend on its own extraData; only on that of its ancestors.
++
++### Fork deployment parameters
++
++Each fork deployment is specified by the following per-chain parameters:
++
++* The **name** specifies a very brief description of the fork, reasonable for use as an identifier. For deployments described in a single BIP, it is recommended to use the name "bipN" where N is the appropriate BIP number.
++* The **bit** determines which bit in the extraData field of the block is to be used to signal the fork deployment.
++* The **start** specifies a block number at which the bit gains its meaning.
++* The **timeout** specifies a time at which the deployment is considered failed. If the current block number >= (start + timeout) and the fork has not yet locked in (including this block's bit state), the deployment is considered failed on all descendants of the block.
++* The **windowsize** specifies the number of past blocks (including the block under consideration) to be taken into account for locking in a fork.
++* The **threshold** specifies a number of blocks, in the range of 1..windowsize, which must signal for a fork in order to lock it in. The support is measured when the chain height is evenly divisible by the windowsize. If the windowsize is set to 2016 (as in BIP9) this coincides with the 2016-block re-targeting intervals.
++* The **minlockedblocks** specifies a minimum number of blocks which a fork must remain in locked-in state before it can become active. Both minlockedblocks and minlockedtime (see below) must be satisfied before a fork can become active. If the current block number >= (minlockedblocks + the block number that locked in the fork), then the fork becomes activated. 
++
++### Tallying
++
++If a block's extraData specifies a version other than `1`, all its signaling bits MUST be treated as if they are '0'.
++---
++title: 27-MINERVOTE
++subtitle: Generalized Version Bits Voting for Consensus Soft and Hard Forks
++author: Wei Tang <hi@that.world>
++status: Raw
++type: Standard Track
++category: Core
++created: 2017-06-28
++abstract: >
++  The following ECIP tries to bring the best practices about how Bitcoin deals with consensus hard fork into Ethereum Classic.
++---
++
++## Abstract
++
++The following ECIP tries to bring the best practices about how Bitcoin deals with consensus hard fork ([BIP-9](https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki) and [BIP-135](https://github.com/bitcoin/bips/blob/master/bip-0135.mediawiki)) into Ethereum Classic. Rather than hard-code a block number as we currently do, each block mined emits support of the new consensus hard-fork. Only when a large enough portion of the network support it, the hard-fork is "locked-in" and will be activated.
++
++## Motivation
++
++**Lack of an appropriate voting method can results in network forking**. The DAO hard fork was such an example. Currently the way Ethereum used to gather opinions was through [CarbonVote](http://carbonvote.com/). It indeed has the advantage that it brings the opinions of Ethereum holders rather than miners. However, it is not enforceable and we all know the disastrous result it brought during the DAO hard fork period. We don't want that to happen again.
++
++**Miner community, stake holders and proof of work**. It is common knowledge that Ethereum Classic will probably stay in proof of work, rather than, like Ethereum, switch to a proof of stake algorithm. Combining this ECIP together with ECIP-1023, we combines opinions from both the miner community and ETC coin holders to reach consensus about whether a hard fork should occur.
++
++**Best practices from Bitcoin**. [BIP-9](https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki), which uses version bits mined in each blocks to vote for consensus soft fork has be successfully conducted for several. Its upgraded version, BIP-135, aims to deal with both soft forks and hard forks alike.
++
++**Potentially faster adoption of new consensus hard fork**. When dealing with emergency consensus hard fork for preventing network attacks, the developer would not need to artificially insert a "hard fork block number" (which must leave enough time for everyone else to upgrade their clients, and then wait for that block). The ETC coin holders and miners collectively decide when the hard fork happens, which potentially could be faster than hard coded block numbers.
++
++**Ethereum Classic will become a stable protocol soon**. When we finished dealing with the monetary policy and finally the difficulty bomb, ETC's protocol would become a rather stable one. This means most of the new consensus hard fork would be new features of the network, rather than fixing existing bugs. In that case, voting would be important to keep the whole network healthy.
++
++## Terms and conventions
++
++The version bits used by this proposal for signaling deployment of forks are
++referred to as 'signaling bits' or shortened to 'bits' where unambiguous.
++
++The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
++"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
++document are to be interpreted as described in RFC 2119.
++
++## Specification
++
++### Signaling bits
++
++Ethereum's extraData field are 32-bytes, i.e. a 256-bit value. The field itself should be a RLP list that follows:
++
++```
++[ version: P, signalingBits: S, clientIdentity: B ]
++```
++
++For this ECIP, `version` should equal to `1`, and `signalingBits` and `clientIdentity` fulfill the rest of the extraData field as long as it does not exceed the maximum size allowed. This allows us to have way more concurrent signalings and better backward compatibility than Bitcoin.
++
++`signalingBits` are right-aligned, i.e. `0b1` has its bit at index 0 set, `0b10` has its bit at index 1 set, `0b100` has its bit at index 2 set.
++
++### Deployment states
++
++With each block and fork, we associate a deployment state. The possible states are:
++
++* **DEFINED** is the first state that each fork starts out as. The genesis block for any chain SHALL by definition be in this state for each deployment.
++* **STARTED** for blocks past the starttime.
++* **LOCKED_IN** after STARTED, if at least threshold out of windowsize blocks have the associated bit set in `signalingBits` in `extraData` block header, measured at next height that is evenly divisible by the windowsize.
++* **ACTIVE** for all blocks after the grace period conditions have been met.
++* **FAILED** if past the timeout time and LOCKED_IN was not reached.
++
++In accordance with BIP9, a block's state SHALL never depend on its own extraData; only on that of its ancestors.
++
++### Fork deployment parameters
++
++Each fork deployment is specified by the following per-chain parameters:
++
++* The **name** specifies a very brief description of the fork, reasonable for use as an identifier. For deployments described in a single BIP, it is recommended to use the name "bipN" where N is the appropriate BIP number.
++* The **bit** determines which bit in the extraData field of the block is to be used to signal the fork deployment.
++* The **start** specifies a block number at which the bit gains its meaning.
++* The **timeout** specifies a time at which the deployment is considered failed. If the current block number >= (start + timeout) and the fork has not yet locked in (including this block's bit state), the deployment is considered failed on all descendants of the block.
++* The **windowsize** specifies the number of past blocks (including the block under consideration) to be taken into account for locking in a fork.
++* The **threshold** specifies a number of blocks, in the range of 1..windowsize, which must signal for a fork in order to lock it in. The support is measured when the chain height is evenly divisible by the windowsize. If the windowsize is set to 2016 (as in BIP9) this coincides with the 2016-block re-targeting intervals.
++* The **minlockedblocks** specifies a minimum number of blocks which a fork must remain in locked-in state before it can become active. Both minlockedblocks and minlockedtime (see below) must be satisfied before a fork can become active. If the current block number >= (minlockedblocks + the block number that locked in the fork), then the fork becomes activated. 
++
++### Tallying
++
++If a block's extraData specifies a version other than `1`, all its signaling bits MUST be treated as if they are '0'.
++
++A signaling bit value of '1' SHALL indicate support of a fork and SHALL count towards its tally on a chain.
++
++A signaling bit value of '0' SHALL indicate absence of support of a fork and SHALL NOT count towards its tally on a chain.
++
++The signaling bits SHALL be tallied whenever the head of the active chain changes (including after reorganizations).
++
++### State transitions
++
++The following diagram illustrates the generalized state machine:
++
++![State transactions](ECIP-1022/bip-0135-states-small.png)
++
++The genesis block of any chain SHALL have the state DEFINED for each deployment.
++
++A given deployment SHALL remain in the DEFINED state until it either passes the start (and becomes STARTED) or the timeout time (and becomes FAILED).
++
++Once a deployment has STARTED, the signal for that deployment SHALL be tallied over the the past windowsize blocks whenever a new block is received on that chain.
++
++A transition from the STARTED state to the LOCKED_IN state SHALL only occur when all of these are true:
++
++* the height of the received block is an integer multiple of the window size
++* the current block number is below (start + timeout)
++* at least threshold out of windowsize blocks have signaled support
++
++A similar height synchronization precondition SHALL exist for the transition from LOCKED_IN to ACTIVE. These synchronization conditions are expressed by the "mod(height, windowsize) = 0" clauses in the diagram.
++
++A transition from LOCKED_IN to ACTIVE state SHALL only occur if the height synchronization criterion is met and the below configurable 'grace period' conditions are fulfilled:
++
++* current height MUST be at least minlockedblocks above LOCKED_IN height
++
++NOTE: If minlockedblocks is set to 0, then the fork will proceed directly to ACTIVE state once the chain height reaches a multiple of the windowsize.
++
++The ACTIVE and FAILED states are terminal; a deployment stays in these states once they are reached.
++
++Deployment states are maintained along block chain branches. They need re-computation when a reorganization happens.
++
++### New consensus rules
++
++New consensus rules deployed by a fork SHALL be enforced for each block that has ACTIVE state.
++
++### Optional operator notifications
++
++An implementation SHOULD notify the operator when a deployment transitions
++to STARTED, LOCKED_IN, ACTIVE or FAILED states.
++
++It is RECOMMENDED that an implementation provide finer-grained notifications
++to the operator which allow him/her to track the measured support level for
++defined deployments.
++
++An implementation SHOULD warn the operator if the configured (emitted) nVersion
++has been overridden to contain bits set to '1' in contravention of the above
++non-signaling recommendations for DEFINED forks.
++
++It is RECOMMENDED that an implementation warn the operator if no signal has
++been received for a given deployment during a full windowsize period after the
++deployment has STARTED. This could indicate that something may be wrong with
++the operator's configuration that is causing them not to receive the signal
++correctly.
++
++For undefined signals, it is RECOMMENDED that implementation track these and
++alert their operators with supportive upgrade notifications, e.g.
++
++* "warning: signaling started on unknown feature on version bit X"
++* "warning: signaling on unknown feature reached X% (over last N blocks)"
++* "info: signaling ceased on unknown feature (over last M blocks)"
++
++Since parameters of these deployments are unknown, it is RECOMMENDED that
++implementations allow the user to configure the emission of such notifications
++(e.g. suitable N and M parameters in the messages above, e.g. a best-guess
++window of 100 blocks).
++
++## Rationale
++
++The timeout into FAILED state allows eventual reuse of bits if a fork was not successfully activated.
++
++A fallow period at the conclusion of a fork attempt allows some detection of buggy clients, and allows time for warnings and software upgrades for successful forks. The duration of a fallow period is not specified by this proposal, although a conventional fallow period of 3 months is RECOMMENDED.
++
++## Guidelines
++
++### Parameter selection guidelines
++
++The following guidelines are suggested for selecting the parameters for a fork:
++
++* **name** SHOULD be selected such that no two forks, concurrent or otherwise, ever use the same name.
++* **bit** SHOULD be selected such that no two concurrent forks use the same bit. Implementors should make an effort to consult resources such as [2] to establish whether the bit they wish to use can reasonably be assumed to be unclaimed by a concurrent fork, and to announce their use ('claim') of a bit for a fork purpose on various project mailing lists, to reduce chance of collisions.
++* **start** SHOULD be set to some block number in the future, approximately one month after a software release date which includes the fork signaling.  This allows for some release delays, while preventing triggers as a result of parties running pre-release software.
++* **timeout** is RECOMMENDED to be a block number that is approximately 1 year after start.
++* **windowsize** SHOULD be set large enough to allow reception of an adequately precise signal.
++* **threshold** SHOULD be set as high as possible to ensure a smooth activation based on the estimated support and the nature of the proposed changes. It is strongly RECOMMENDED that threshold >= windowsize / 2 (rounded up) to ensure that a proposal is only activated by majority support.
++* **minlockedblocks** is RECOMMENDED to be set >= windowsize, to ensure that a full window passes in LOCKED_IN state. Lower values will be ineffective as the transition from LOCKED_IN to ACTIVE is guarded by a synchronization based on the window size.
++
++NOTE: If minlockedblocks is set to 0, then the fork will proceed to ACTIVE state when the chain height reaches a multiple of the windowsize.
++
++A later deployment using the same bit is possible as long as the starttime is after the previous fork's timeout or activation, but it is discouraged until necessary, and even then recommended to have a pause in between to detect buggy software.
++
++### Signaling guidelines
++
++An implementation SHOULD signal '0' on a bit if one of the following holds true:
++
++* the deployment parameters are not DEFINED (not configured or explicitly undefined)
++* the deployment is DEFINED and has not yet reached the STARTED state
++* the deployment has succeeded (it has become ACTIVE)
++* the deployment has FAILED
++
++An implementation SHOULD enable the operator to choose (override) whether to signal '0' or '1' on a bit, once its deployment has at least reached the STARTED state.
++
++A supporting miner SHOULD signal '1' on a bit for which the deployment is LOCKED_IN state so that uptake is visible. However, this has no effect on consensus rules. Once LOCKED_IN, a deployment proceeds to ACTIVE solely based on the configured grace period parameters (see 'Fork deployment parameters' above).
++
++A miner SHOULD signal '0' on a bit if they wish to suspend signaling of support for a fork that is DEFINED in their software.
++
++It is NOT RECOMMENDED to signal '1' for bits where the meaning is undefined (i.e. bits which are unclaimed by proposals).
++
++A signaling bit value of '1' SHALL indicate support of a fork and SHALL count towards its tally on a chain.
++
++A signaling bit value of '0' SHALL indicate absence of support of a fork and SHALL NOT count towards its tally on a chain.
++
++The signaling bits SHALL be tallied whenever the head of the active chain changes (including after reorganizations).
++
++### State transitions
++
++The following diagram illustrates the generalized state machine:
++
++![State transactions](ECIP-1022/bip-0135-states-small.png)
++
++The genesis block of any chain SHALL have the state DEFINED for each deployment.
++
++A given deployment SHALL remain in the DEFINED state until it either passes the start (and becomes STARTED) or the timeout time (and becomes FAILED).
++
++Once a deployment has STARTED, the signal for that deployment SHALL be tallied over the the past windowsize blocks whenever a new block is received on that chain.
++
++A transition from the STARTED state to the LOCKED_IN state SHALL only occur when all of these are true:
++
++* the height of the received block is an integer multiple of the window size
++* the current block number is below (start + timeout)
++* at least threshold out of windowsize blocks have signaled support
++
++A similar height synchronization precondition SHALL exist for the transition from LOCKED_IN to ACTIVE. These synchronization conditions are expressed by the "mod(height, windowsize) = 0" clauses in the diagram.
++
++A transition from LOCKED_IN to ACTIVE state SHALL only occur if the height synchronization criterion is met and the below configurable 'grace period' conditions are fulfilled:
++
++* current height MUST be at least minlockedblocks above LOCKED_IN height
++
++NOTE: If minlockedblocks is set to 0, then the fork will proceed directly to ACTIVE state once the chain height reaches a multiple of the windowsize.
++
++The ACTIVE and FAILED states are terminal; a deployment stays in these states once they are reached.
++
++Deployment states are maintained along block chain branches. They need re-computation when a reorganization happens.
++
++### New consensus rules
++
++New consensus rules deployed by a fork SHALL be enforced for each block that has ACTIVE state.
++
++### Optional operator notifications
++
++An implementation SHOULD notify the operator when a deployment transitions
++to STARTED, LOCKED_IN, ACTIVE or FAILED states.
++
++It is RECOMMENDED that an implementation provide finer-grained notifications
++to the operator which allow him/her to track the measured support level for
++defined deployments.
++
++An implementation SHOULD warn the operator if the configured (emitted) nVersion
++has been overridden to contain bits set to '1' in contravention of the above
++non-signaling recommendations for DEFINED forks.
++
++It is RECOMMENDED that an implementation warn the operator if no signal has
++been received for a given deployment during a full windowsize period after the
++deployment has STARTED. This could indicate that something may be wrong with
++the operator's configuration that is causing them not to receive the signal
++correctly.
++
++For undefined signals, it is RECOMMENDED that implementation track these and
++alert their operators with supportive upgrade notifications, e.g.
++
++* "warning: signaling started on unknown feature on version bit X"
++* "warning: signaling on unknown feature reached X% (over last N blocks)"
++* "info: signaling ceased on unknown feature (over last M blocks)"
++
++Since parameters of these deployments are unknown, it is RECOMMENDED that
++implementations allow the user to configure the emission of such notifications
++(e.g. suitable N and M parameters in the messages above, e.g. a best-guess
++window of 100 blocks).
++
++## Rationale
++
++The timeout into FAILED state allows eventual reuse of bits if a fork was not successfully activated.
++
++A fallow period at the conclusion of a fork attempt allows some detection of buggy clients, and allows time for warnings and software upgrades for successful forks. The duration of a fallow period is not specified by this proposal, although a conventional fallow period of 3 months is RECOMMENDED.
++
++## Guidelines
++
++### Parameter selection guidelines
++
++The following guidelines are suggested for selecting the parameters for a fork:
++
++* **name** SHOULD be selected such that no two forks, concurrent or otherwise, ever use the same name.
++* **bit** SHOULD be selected such that no two concurrent forks use the same bit. Implementors should make an effort to consult resources such as [2] to establish whether the bit they wish to use can reasonably be assumed to be unclaimed by a concurrent fork, and to announce their use ('claim') of a bit for a fork purpose on various project mailing lists, to reduce chance of collisions.
++* **start** SHOULD be set to some block number in the future, approximately one month after a software release date which includes the fork signaling.  This allows for some release delays, while preventing triggers as a result of parties running pre-release software.
++* **timeout** is RECOMMENDED to be a block number that is approximately 1 year after start.
++* **windowsize** SHOULD be set large enough to allow reception of an adequately precise signal.
++* **threshold** SHOULD be set as high as possible to ensure a smooth activation based on the estimated support and the nature of the proposed changes. It is strongly RECOMMENDED that threshold >= windowsize / 2 (rounded up) to ensure that a proposal is only activated by majority support.
++* **minlockedblocks** is RECOMMENDED to be set >= windowsize, to ensure that a full window passes in LOCKED_IN state. Lower values will be ineffective as the transition from LOCKED_IN to ACTIVE is guarded by a synchronization based on the window size.
++
++NOTE: If minlockedblocks is set to 0, then the fork will proceed to ACTIVE state when the chain height reaches a multiple of the windowsize.
++
++A later deployment using the same bit is possible as long as the starttime is after the previous fork's timeout or activation, but it is discouraged until necessary, and even then recommended to have a pause in between to detect buggy software.
++
++### Signaling guidelines
++
++An implementation SHOULD signal '0' on a bit if one of the following holds true:
++
++* the deployment parameters are not DEFINED (not configured or explicitly undefined)
++* the deployment is DEFINED and has not yet reached the STARTED state
++* the deployment has succeeded (it has become ACTIVE)
++* the deployment has FAILED
++
++An implementation SHOULD enable the operator to choose (override) whether to signal '0' or '1' on a bit, once its deployment has at least reached the STARTED state.
++
++A supporting miner SHOULD signal '1' on a bit for which the deployment is LOCKED_IN state so that uptake is visible. However, this has no effect on consensus rules. Once LOCKED_IN, a deployment proceeds to ACTIVE solely based on the configured grace period parameters (see 'Fork deployment parameters' above).
++
++A miner SHOULD signal '0' on a bit if they wish to suspend signaling of support for a fork that is DEFINED in their software.
++
++It is NOT RECOMMENDED to signal '1' for bits where the meaning is undefined (i.e. bits which are unclaimed by proposals).
++
++## References
++
++This ECIP is a realization of [27-MINERVOTE](https://specs.that.world/27-minervote/).
++
++## License
++
++This work is licensed under [Apache License, Version 2.0](http://www.apache.org/licenses/).
+
+From 2d6d40136b74aca962449a39af0ced077ac14021 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sat, 16 Nov 2019 19:34:15 +0100
+Subject: [PATCH 2/5] Update ecip-1022.md
+
+---
+ _specs/ecip-1022.md | 78 ---------------------------------------------
+ 1 file changed, 78 deletions(-)
+
+diff --git a/_specs/ecip-1022.md b/_specs/ecip-1022.md
+index d8e1f4a..5589db1 100644
+--- a/_specs/ecip-1022.md
++++ b/_specs/ecip-1022.md
+@@ -74,84 +74,6 @@ Each fork deployment is specified by the following per-chain parameters:
+ 
+ ### Tallying
+ 
+-If a block's extraData specifies a version other than `1`, all its signaling bits MUST be treated as if they are '0'.
+----
+-title: 27-MINERVOTE
+-subtitle: Generalized Version Bits Voting for Consensus Soft and Hard Forks
+-author: Wei Tang <hi@that.world>
+-status: Raw
+-type: Standard Track
+-category: Core
+-created: 2017-06-28
+-abstract: >
+-  The following ECIP tries to bring the best practices about how Bitcoin deals with consensus hard fork into Ethereum Classic.
+----
+-
+-## Abstract
+-
+-The following ECIP tries to bring the best practices about how Bitcoin deals with consensus hard fork ([BIP-9](https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki) and [BIP-135](https://github.com/bitcoin/bips/blob/master/bip-0135.mediawiki)) into Ethereum Classic. Rather than hard-code a block number as we currently do, each block mined emits support of the new consensus hard-fork. Only when a large enough portion of the network support it, the hard-fork is "locked-in" and will be activated.
+-
+-## Motivation
+-
+-**Lack of an appropriate voting method can results in network forking**. The DAO hard fork was such an example. Currently the way Ethereum used to gather opinions was through [CarbonVote](http://carbonvote.com/). It indeed has the advantage that it brings the opinions of Ethereum holders rather than miners. However, it is not enforceable and we all know the disastrous result it brought during the DAO hard fork period. We don't want that to happen again.
+-
+-**Miner community, stake holders and proof of work**. It is common knowledge that Ethereum Classic will probably stay in proof of work, rather than, like Ethereum, switch to a proof of stake algorithm. Combining this ECIP together with ECIP-1023, we combines opinions from both the miner community and ETC coin holders to reach consensus about whether a hard fork should occur.
+-
+-**Best practices from Bitcoin**. [BIP-9](https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki), which uses version bits mined in each blocks to vote for consensus soft fork has be successfully conducted for several. Its upgraded version, BIP-135, aims to deal with both soft forks and hard forks alike.
+-
+-**Potentially faster adoption of new consensus hard fork**. When dealing with emergency consensus hard fork for preventing network attacks, the developer would not need to artificially insert a "hard fork block number" (which must leave enough time for everyone else to upgrade their clients, and then wait for that block). The ETC coin holders and miners collectively decide when the hard fork happens, which potentially could be faster than hard coded block numbers.
+-
+-**Ethereum Classic will become a stable protocol soon**. When we finished dealing with the monetary policy and finally the difficulty bomb, ETC's protocol would become a rather stable one. This means most of the new consensus hard fork would be new features of the network, rather than fixing existing bugs. In that case, voting would be important to keep the whole network healthy.
+-
+-## Terms and conventions
+-
+-The version bits used by this proposal for signaling deployment of forks are
+-referred to as 'signaling bits' or shortened to 'bits' where unambiguous.
+-
+-The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
+-"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
+-document are to be interpreted as described in RFC 2119.
+-
+-## Specification
+-
+-### Signaling bits
+-
+-Ethereum's extraData field are 32-bytes, i.e. a 256-bit value. The field itself should be a RLP list that follows:
+-
+-```
+-[ version: P, signalingBits: S, clientIdentity: B ]
+-```
+-
+-For this ECIP, `version` should equal to `1`, and `signalingBits` and `clientIdentity` fulfill the rest of the extraData field as long as it does not exceed the maximum size allowed. This allows us to have way more concurrent signalings and better backward compatibility than Bitcoin.
+-
+-`signalingBits` are right-aligned, i.e. `0b1` has its bit at index 0 set, `0b10` has its bit at index 1 set, `0b100` has its bit at index 2 set.
+-
+-### Deployment states
+-
+-With each block and fork, we associate a deployment state. The possible states are:
+-
+-* **DEFINED** is the first state that each fork starts out as. The genesis block for any chain SHALL by definition be in this state for each deployment.
+-* **STARTED** for blocks past the starttime.
+-* **LOCKED_IN** after STARTED, if at least threshold out of windowsize blocks have the associated bit set in `signalingBits` in `extraData` block header, measured at next height that is evenly divisible by the windowsize.
+-* **ACTIVE** for all blocks after the grace period conditions have been met.
+-* **FAILED** if past the timeout time and LOCKED_IN was not reached.
+-
+-In accordance with BIP9, a block's state SHALL never depend on its own extraData; only on that of its ancestors.
+-
+-### Fork deployment parameters
+-
+-Each fork deployment is specified by the following per-chain parameters:
+-
+-* The **name** specifies a very brief description of the fork, reasonable for use as an identifier. For deployments described in a single BIP, it is recommended to use the name "bipN" where N is the appropriate BIP number.
+-* The **bit** determines which bit in the extraData field of the block is to be used to signal the fork deployment.
+-* The **start** specifies a block number at which the bit gains its meaning.
+-* The **timeout** specifies a time at which the deployment is considered failed. If the current block number >= (start + timeout) and the fork has not yet locked in (including this block's bit state), the deployment is considered failed on all descendants of the block.
+-* The **windowsize** specifies the number of past blocks (including the block under consideration) to be taken into account for locking in a fork.
+-* The **threshold** specifies a number of blocks, in the range of 1..windowsize, which must signal for a fork in order to lock it in. The support is measured when the chain height is evenly divisible by the windowsize. If the windowsize is set to 2016 (as in BIP9) this coincides with the 2016-block re-targeting intervals.
+-* The **minlockedblocks** specifies a minimum number of blocks which a fork must remain in locked-in state before it can become active. Both minlockedblocks and minlockedtime (see below) must be satisfied before a fork can become active. If the current block number >= (minlockedblocks + the block number that locked in the fork), then the fork becomes activated. 
+-
+-### Tallying
+-
+ If a block's extraData specifies a version other than `1`, all its signaling bits MUST be treated as if they are '0'.
+ 
+ A signaling bit value of '1' SHALL indicate support of a fork and SHALL count towards its tally on a chain.
+
+From 8344e1457a214284b65e53db9c4c84e53985a09e Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sat, 16 Nov 2019 19:44:17 +0100
+Subject: [PATCH 3/5] Fix formatting
+
+---
+ _specs/ecip-1022.md | 438 +++++++++++++++++++++++---------------------
+ 1 file changed, 233 insertions(+), 205 deletions(-)
+
+diff --git a/_specs/ecip-1022.md b/_specs/ecip-1022.md
+index 5589db1..1da3b1f 100644
+--- a/_specs/ecip-1022.md
++++ b/_specs/ecip-1022.md
+@@ -11,24 +11,61 @@ license: Apache-2.0
+ 
+ ## Abstract
+ 
+-The following ECIP tries to bring the best practices about how Bitcoin deals with consensus hard fork ([BIP-9](https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki) and [BIP-135](https://github.com/bitcoin/bips/blob/master/bip-0135.mediawiki)) into Ethereum Classic. Rather than hard-code a block number as we currently do, each block mined emits support of the new consensus hard-fork. Only when a large enough portion of the network support it, the hard-fork is "locked-in" and will be activated.
++The following ECIP tries to bring the best practices about how Bitcoin
++deals with consensus hard fork
++([BIP-9](https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki)
++and
++[BIP-135](https://github.com/bitcoin/bips/blob/master/bip-0135.mediawiki))
++into Ethereum Classic. Rather than hard-code a block number as we
++currently do, each block mined emits support of the new consensus
++hard-fork. Only when a large enough portion of the network support it,
++the hard-fork is "locked-in" and will be activated.
+ 
+ ## Motivation
+ 
+-**Lack of an appropriate voting method can results in network forking**. The DAO hard fork was such an example. Currently the way Ethereum used to gather opinions was through [CarbonVote](http://carbonvote.com/). It indeed has the advantage that it brings the opinions of Ethereum holders rather than miners. However, it is not enforceable and we all know the disastrous result it brought during the DAO hard fork period. We don't want that to happen again.
+-
+-**Miner community, stake holders and proof of work**. It is common knowledge that Ethereum Classic will probably stay in proof of work, rather than, like Ethereum, switch to a proof of stake algorithm. Combining this ECIP together with ECIP-1023, we combines opinions from both the miner community and ETC coin holders to reach consensus about whether a hard fork should occur.
+-
+-**Best practices from Bitcoin**. [BIP-9](https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki), which uses version bits mined in each blocks to vote for consensus soft fork has be successfully conducted for several. Its upgraded version, BIP-135, aims to deal with both soft forks and hard forks alike.
+-
+-**Potentially faster adoption of new consensus hard fork**. When dealing with emergency consensus hard fork for preventing network attacks, the developer would not need to artificially insert a "hard fork block number" (which must leave enough time for everyone else to upgrade their clients, and then wait for that block). The ETC coin holders and miners collectively decide when the hard fork happens, which potentially could be faster than hard coded block numbers.
+-
+-**Ethereum Classic will become a stable protocol soon**. When we finished dealing with the monetary policy and finally the difficulty bomb, ETC's protocol would become a rather stable one. This means most of the new consensus hard fork would be new features of the network, rather than fixing existing bugs. In that case, voting would be important to keep the whole network healthy.
++**Lack of an appropriate voting method can results in network
++forking**. The DAO hard fork was such an example. Currently the way
++Ethereum used to gather opinions was through
++[CarbonVote](http://carbonvote.com/). It indeed has the advantage that
++it brings the opinions of Ethereum holders rather than
++miners. However, it is not enforceable and we all know the disastrous
++result it brought during the DAO hard fork period. We don't want that
++to happen again.
++
++**Miner community, stake holders and proof of work**. It is common
++knowledge that Ethereum Classic will probably stay in proof of work,
++rather than, like Ethereum, switch to a proof of stake
++algorithm. Combining this ECIP together with ECIP-1023, we combines
++opinions from both the miner community and ETC coin holders to reach
++consensus about whether a hard fork should occur.
++
++**Best practices from
++Bitcoin**. [BIP-9](https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki),
++which uses version bits mined in each blocks to vote for consensus
++soft fork has be successfully conducted for several. Its upgraded
++version, BIP-135, aims to deal with both soft forks and hard forks
++alike.
++
++**Potentially faster adoption of new consensus hard fork**. When
++dealing with emergency consensus hard fork for preventing network
++attacks, the developer would not need to artificially insert a "hard
++fork block number" (which must leave enough time for everyone else to
++upgrade their clients, and then wait for that block). The ETC coin
++holders and miners collectively decide when the hard fork happens,
++which potentially could be faster than hard coded block numbers.
++
++**Ethereum Classic will become a stable protocol soon**. When we
++finished dealing with the monetary policy and finally the difficulty
++bomb, ETC's protocol would become a rather stable one. This means most
++of the new consensus hard fork would be new features of the network,
++rather than fixing existing bugs. In that case, voting would be
++important to keep the whole network healthy.
+ 
+ ## Terms and conventions
+ 
+-The version bits used by this proposal for signaling deployment of forks are
+-referred to as 'signaling bits' or shortened to 'bits' where unambiguous.
++The version bits used by this proposal for signaling deployment of
++forks are referred to as 'signaling bits' or shortened to 'bits' where
++unambiguous.
+ 
+ The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
+ "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
+@@ -38,161 +75,89 @@ document are to be interpreted as described in RFC 2119.
+ 
+ ### Signaling bits
+ 
+-Ethereum's extraData field are 32-bytes, i.e. a 256-bit value. The field itself should be a RLP list that follows:
++Ethereum's extraData field are 32-bytes, i.e. a 256-bit value. The
++field itself should be a RLP list that follows:
+ 
+ ```
+ [ version: P, signalingBits: S, clientIdentity: B ]
+ ```
+ 
+-For this ECIP, `version` should equal to `1`, and `signalingBits` and `clientIdentity` fulfill the rest of the extraData field as long as it does not exceed the maximum size allowed. This allows us to have way more concurrent signalings and better backward compatibility than Bitcoin.
++For this ECIP, `version` should equal to `1`, and `signalingBits` and
++`clientIdentity` fulfill the rest of the extraData field as long as it
++does not exceed the maximum size allowed. This allows us to have way
++more concurrent signalings and better backward compatibility than
++Bitcoin.
+ 
+-`signalingBits` are right-aligned, i.e. `0b1` has its bit at index 0 set, `0b10` has its bit at index 1 set, `0b100` has its bit at index 2 set.
++`signalingBits` are right-aligned, i.e. `0b1` has its bit at index 0
++set, `0b10` has its bit at index 1 set, `0b100` has its bit at index 2
++set.
+ 
+ ### Deployment states
+ 
+-With each block and fork, we associate a deployment state. The possible states are:
++With each block and fork, we associate a deployment state. The
++possible states are:
+ 
+-* **DEFINED** is the first state that each fork starts out as. The genesis block for any chain SHALL by definition be in this state for each deployment.
++* **DEFINED** is the first state that each fork starts out as. The
++  genesis block for any chain SHALL by definition be in this state for
++  each deployment.
+ * **STARTED** for blocks past the starttime.
+-* **LOCKED_IN** after STARTED, if at least threshold out of windowsize blocks have the associated bit set in `signalingBits` in `extraData` block header, measured at next height that is evenly divisible by the windowsize.
+-* **ACTIVE** for all blocks after the grace period conditions have been met.
++* **LOCKED_IN** after STARTED, if at least threshold out of windowsize
++  blocks have the associated bit set in `signalingBits` in `extraData`
++  block header, measured at next height that is evenly divisible by
++  the windowsize.
++* **ACTIVE** for all blocks after the grace period conditions have
++  been met.
+ * **FAILED** if past the timeout time and LOCKED_IN was not reached.
+ 
+-In accordance with BIP9, a block's state SHALL never depend on its own extraData; only on that of its ancestors.
++In accordance with BIP9, a block's state SHALL never depend on its own
++extraData; only on that of its ancestors.
+ 
+ ### Fork deployment parameters
+ 
+-Each fork deployment is specified by the following per-chain parameters:
+-
+-* The **name** specifies a very brief description of the fork, reasonable for use as an identifier. For deployments described in a single BIP, it is recommended to use the name "bipN" where N is the appropriate BIP number.
+-* The **bit** determines which bit in the extraData field of the block is to be used to signal the fork deployment.
+-* The **start** specifies a block number at which the bit gains its meaning.
+-* The **timeout** specifies a time at which the deployment is considered failed. If the current block number >= (start + timeout) and the fork has not yet locked in (including this block's bit state), the deployment is considered failed on all descendants of the block.
+-* The **windowsize** specifies the number of past blocks (including the block under consideration) to be taken into account for locking in a fork.
+-* The **threshold** specifies a number of blocks, in the range of 1..windowsize, which must signal for a fork in order to lock it in. The support is measured when the chain height is evenly divisible by the windowsize. If the windowsize is set to 2016 (as in BIP9) this coincides with the 2016-block re-targeting intervals.
+-* The **minlockedblocks** specifies a minimum number of blocks which a fork must remain in locked-in state before it can become active. Both minlockedblocks and minlockedtime (see below) must be satisfied before a fork can become active. If the current block number >= (minlockedblocks + the block number that locked in the fork), then the fork becomes activated. 
++Each fork deployment is specified by the following per-chain
++parameters:
++
++* The **name** specifies a very brief description of the fork,
++  reasonable for use as an identifier. For deployments described in a
++  single BIP, it is recommended to use the name "bipN" where N is the
++  appropriate BIP number.
++* The **bit** determines which bit in the extraData field of the block
++  is to be used to signal the fork deployment.
++* The **start** specifies a block number at which the bit gains its
++  meaning.
++* The **timeout** specifies a time at which the deployment is
++  considered failed. If the current block number >= (start + timeout)
++  and the fork has not yet locked in (including this block's bit
++  state), the deployment is considered failed on all descendants of
++  the block.
++* The **windowsize** specifies the number of past blocks (including
++  the block under consideration) to be taken into account for locking
++  in a fork.
++* The **threshold** specifies a number of blocks, in the range of
++  `1..windowsize`, which must signal for a fork in order to lock it
++  in. The support is measured when the chain height is evenly
++  divisible by the windowsize. If the windowsize is set to 2016 (as in
++  BIP9) this coincides with the 2016-block re-targeting intervals.
++* The **minlockedblocks** specifies a minimum number of blocks which a
++  fork must remain in locked-in state before it can become
++  active. Both minlockedblocks and minlockedtime (see below) must be
++  satisfied before a fork can become active. If the current block
++  number >= (minlockedblocks + the block number that locked in the
++  fork), then the fork becomes activated.
+ 
+ ### Tallying
+ 
+-If a block's extraData specifies a version other than `1`, all its signaling bits MUST be treated as if they are '0'.
+-
+-A signaling bit value of '1' SHALL indicate support of a fork and SHALL count towards its tally on a chain.
+-
+-A signaling bit value of '0' SHALL indicate absence of support of a fork and SHALL NOT count towards its tally on a chain.
+-
+-The signaling bits SHALL be tallied whenever the head of the active chain changes (including after reorganizations).
+-
+-### State transitions
+-
+-The following diagram illustrates the generalized state machine:
+-
+-![State transactions](ECIP-1022/bip-0135-states-small.png)
+-
+-The genesis block of any chain SHALL have the state DEFINED for each deployment.
+-
+-A given deployment SHALL remain in the DEFINED state until it either passes the start (and becomes STARTED) or the timeout time (and becomes FAILED).
+-
+-Once a deployment has STARTED, the signal for that deployment SHALL be tallied over the the past windowsize blocks whenever a new block is received on that chain.
+-
+-A transition from the STARTED state to the LOCKED_IN state SHALL only occur when all of these are true:
+-
+-* the height of the received block is an integer multiple of the window size
+-* the current block number is below (start + timeout)
+-* at least threshold out of windowsize blocks have signaled support
+-
+-A similar height synchronization precondition SHALL exist for the transition from LOCKED_IN to ACTIVE. These synchronization conditions are expressed by the "mod(height, windowsize) = 0" clauses in the diagram.
+-
+-A transition from LOCKED_IN to ACTIVE state SHALL only occur if the height synchronization criterion is met and the below configurable 'grace period' conditions are fulfilled:
+-
+-* current height MUST be at least minlockedblocks above LOCKED_IN height
+-
+-NOTE: If minlockedblocks is set to 0, then the fork will proceed directly to ACTIVE state once the chain height reaches a multiple of the windowsize.
+-
+-The ACTIVE and FAILED states are terminal; a deployment stays in these states once they are reached.
+-
+-Deployment states are maintained along block chain branches. They need re-computation when a reorganization happens.
+-
+-### New consensus rules
+-
+-New consensus rules deployed by a fork SHALL be enforced for each block that has ACTIVE state.
+-
+-### Optional operator notifications
+-
+-An implementation SHOULD notify the operator when a deployment transitions
+-to STARTED, LOCKED_IN, ACTIVE or FAILED states.
++If a block's extraData specifies a version other than `1`, all its
++signaling bits MUST be treated as if they are '0'.
+ 
+-It is RECOMMENDED that an implementation provide finer-grained notifications
+-to the operator which allow him/her to track the measured support level for
+-defined deployments.
++A signaling bit value of '1' SHALL indicate support of a fork and
++SHALL count towards its tally on a chain.
+ 
+-An implementation SHOULD warn the operator if the configured (emitted) nVersion
+-has been overridden to contain bits set to '1' in contravention of the above
+-non-signaling recommendations for DEFINED forks.
++A signaling bit value of '0' SHALL indicate absence of support of a
++fork and SHALL NOT count towards its tally on a chain.
+ 
+-It is RECOMMENDED that an implementation warn the operator if no signal has
+-been received for a given deployment during a full windowsize period after the
+-deployment has STARTED. This could indicate that something may be wrong with
+-the operator's configuration that is causing them not to receive the signal
+-correctly.
+-
+-For undefined signals, it is RECOMMENDED that implementation track these and
+-alert their operators with supportive upgrade notifications, e.g.
+-
+-* "warning: signaling started on unknown feature on version bit X"
+-* "warning: signaling on unknown feature reached X% (over last N blocks)"
+-* "info: signaling ceased on unknown feature (over last M blocks)"
+-
+-Since parameters of these deployments are unknown, it is RECOMMENDED that
+-implementations allow the user to configure the emission of such notifications
+-(e.g. suitable N and M parameters in the messages above, e.g. a best-guess
+-window of 100 blocks).
+-
+-## Rationale
+-
+-The timeout into FAILED state allows eventual reuse of bits if a fork was not successfully activated.
+-
+-A fallow period at the conclusion of a fork attempt allows some detection of buggy clients, and allows time for warnings and software upgrades for successful forks. The duration of a fallow period is not specified by this proposal, although a conventional fallow period of 3 months is RECOMMENDED.
+-
+-## Guidelines
+-
+-### Parameter selection guidelines
+-
+-The following guidelines are suggested for selecting the parameters for a fork:
+-
+-* **name** SHOULD be selected such that no two forks, concurrent or otherwise, ever use the same name.
+-* **bit** SHOULD be selected such that no two concurrent forks use the same bit. Implementors should make an effort to consult resources such as [2] to establish whether the bit they wish to use can reasonably be assumed to be unclaimed by a concurrent fork, and to announce their use ('claim') of a bit for a fork purpose on various project mailing lists, to reduce chance of collisions.
+-* **start** SHOULD be set to some block number in the future, approximately one month after a software release date which includes the fork signaling.  This allows for some release delays, while preventing triggers as a result of parties running pre-release software.
+-* **timeout** is RECOMMENDED to be a block number that is approximately 1 year after start.
+-* **windowsize** SHOULD be set large enough to allow reception of an adequately precise signal.
+-* **threshold** SHOULD be set as high as possible to ensure a smooth activation based on the estimated support and the nature of the proposed changes. It is strongly RECOMMENDED that threshold >= windowsize / 2 (rounded up) to ensure that a proposal is only activated by majority support.
+-* **minlockedblocks** is RECOMMENDED to be set >= windowsize, to ensure that a full window passes in LOCKED_IN state. Lower values will be ineffective as the transition from LOCKED_IN to ACTIVE is guarded by a synchronization based on the window size.
+-
+-NOTE: If minlockedblocks is set to 0, then the fork will proceed to ACTIVE state when the chain height reaches a multiple of the windowsize.
+-
+-A later deployment using the same bit is possible as long as the starttime is after the previous fork's timeout or activation, but it is discouraged until necessary, and even then recommended to have a pause in between to detect buggy software.
+-
+-### Signaling guidelines
+-
+-An implementation SHOULD signal '0' on a bit if one of the following holds true:
+-
+-* the deployment parameters are not DEFINED (not configured or explicitly undefined)
+-* the deployment is DEFINED and has not yet reached the STARTED state
+-* the deployment has succeeded (it has become ACTIVE)
+-* the deployment has FAILED
+-
+-An implementation SHOULD enable the operator to choose (override) whether to signal '0' or '1' on a bit, once its deployment has at least reached the STARTED state.
+-
+-A supporting miner SHOULD signal '1' on a bit for which the deployment is LOCKED_IN state so that uptake is visible. However, this has no effect on consensus rules. Once LOCKED_IN, a deployment proceeds to ACTIVE solely based on the configured grace period parameters (see 'Fork deployment parameters' above).
+-
+-A miner SHOULD signal '0' on a bit if they wish to suspend signaling of support for a fork that is DEFINED in their software.
+-
+-It is NOT RECOMMENDED to signal '1' for bits where the meaning is undefined (i.e. bits which are unclaimed by proposals).
+-
+-A signaling bit value of '1' SHALL indicate support of a fork and SHALL count towards its tally on a chain.
+-
+-A signaling bit value of '0' SHALL indicate absence of support of a fork and SHALL NOT count towards its tally on a chain.
+-
+-The signaling bits SHALL be tallied whenever the head of the active chain changes (including after reorganizations).
++The signaling bits SHALL be tallied whenever the head of the active
++chain changes (including after reorganizations).
+ 
+ ### State transitions
+ 
+@@ -200,110 +165,173 @@ The following diagram illustrates the generalized state machine:
+ 
+ ![State transactions](ECIP-1022/bip-0135-states-small.png)
+ 
+-The genesis block of any chain SHALL have the state DEFINED for each deployment.
++The genesis block of any chain SHALL have the state DEFINED for each
++deployment.
+ 
+-A given deployment SHALL remain in the DEFINED state until it either passes the start (and becomes STARTED) or the timeout time (and becomes FAILED).
++A given deployment SHALL remain in the DEFINED state until it either
++passes the start (and becomes STARTED) or the timeout time (and
++becomes FAILED).
+ 
+-Once a deployment has STARTED, the signal for that deployment SHALL be tallied over the the past windowsize blocks whenever a new block is received on that chain.
++Once a deployment has STARTED, the signal for that deployment SHALL be
++tallied over the the past windowsize blocks whenever a new block is
++received on that chain.
+ 
+-A transition from the STARTED state to the LOCKED_IN state SHALL only occur when all of these are true:
++A transition from the STARTED state to the LOCKED_IN state SHALL only
++occur when all of these are true:
+ 
+-* the height of the received block is an integer multiple of the window size
+-* the current block number is below (start + timeout)
+-* at least threshold out of windowsize blocks have signaled support
++* The height of the received block is an integer multiple of the
++  window size
++* The current block number is below (start + timeout)
++* At least threshold out of windowsize blocks have signaled support
+ 
+-A similar height synchronization precondition SHALL exist for the transition from LOCKED_IN to ACTIVE. These synchronization conditions are expressed by the "mod(height, windowsize) = 0" clauses in the diagram.
++A similar height synchronization precondition SHALL exist for the
++transition from LOCKED_IN to ACTIVE. These synchronization conditions
++are expressed by the "mod(height, windowsize) = 0" clauses in the
++diagram.
+ 
+-A transition from LOCKED_IN to ACTIVE state SHALL only occur if the height synchronization criterion is met and the below configurable 'grace period' conditions are fulfilled:
++A transition from LOCKED_IN to ACTIVE state SHALL only occur if the
++height synchronization criterion is met and the below configurable
++'grace period' conditions are fulfilled:
+ 
+-* current height MUST be at least minlockedblocks above LOCKED_IN height
++* Current height MUST be at least minlockedblocks above LOCKED_IN
++  height
+ 
+-NOTE: If minlockedblocks is set to 0, then the fork will proceed directly to ACTIVE state once the chain height reaches a multiple of the windowsize.
++NOTE: If minlockedblocks is set to 0, then the fork will proceed
++directly to ACTIVE state once the chain height reaches a multiple of
++the windowsize.
+ 
+-The ACTIVE and FAILED states are terminal; a deployment stays in these states once they are reached.
++The ACTIVE and FAILED states are terminal; a deployment stays in these
++states once they are reached.
+ 
+-Deployment states are maintained along block chain branches. They need re-computation when a reorganization happens.
++Deployment states are maintained along block chain branches. They need
++re-computation when a reorganization happens.
+ 
+ ### New consensus rules
+ 
+-New consensus rules deployed by a fork SHALL be enforced for each block that has ACTIVE state.
++New consensus rules deployed by a fork SHALL be enforced for each
++block that has ACTIVE state.
+ 
+ ### Optional operator notifications
+ 
+-An implementation SHOULD notify the operator when a deployment transitions
+-to STARTED, LOCKED_IN, ACTIVE or FAILED states.
++An implementation SHOULD notify the operator when a deployment
++transitions to STARTED, LOCKED_IN, ACTIVE or FAILED states.
+ 
+-It is RECOMMENDED that an implementation provide finer-grained notifications
+-to the operator which allow him/her to track the measured support level for
+-defined deployments.
++It is RECOMMENDED that an implementation provide finer-grained
++notifications to the operator which allow him/her to track the
++measured support level for defined deployments.
+ 
+-An implementation SHOULD warn the operator if the configured (emitted) nVersion
+-has been overridden to contain bits set to '1' in contravention of the above
+-non-signaling recommendations for DEFINED forks.
++An implementation SHOULD warn the operator if the configured (emitted)
++nVersion has been overridden to contain bits set to '1' in
++contravention of the above non-signaling recommendations for DEFINED
++forks.
+ 
+-It is RECOMMENDED that an implementation warn the operator if no signal has
+-been received for a given deployment during a full windowsize period after the
+-deployment has STARTED. This could indicate that something may be wrong with
+-the operator's configuration that is causing them not to receive the signal
+-correctly.
++It is RECOMMENDED that an implementation warn the operator if no
++signal has been received for a given deployment during a full
++windowsize period after the deployment has STARTED. This could
++indicate that something may be wrong with the operator's configuration
++that is causing them not to receive the signal correctly.
+ 
+-For undefined signals, it is RECOMMENDED that implementation track these and
+-alert their operators with supportive upgrade notifications, e.g.
++For undefined signals, it is RECOMMENDED that implementation track
++these and alert their operators with supportive upgrade notifications,
++e.g.
+ 
+ * "warning: signaling started on unknown feature on version bit X"
+-* "warning: signaling on unknown feature reached X% (over last N blocks)"
++* "warning: signaling on unknown feature reached X% (over last N
++  blocks)"
+ * "info: signaling ceased on unknown feature (over last M blocks)"
+ 
+-Since parameters of these deployments are unknown, it is RECOMMENDED that
+-implementations allow the user to configure the emission of such notifications
+-(e.g. suitable N and M parameters in the messages above, e.g. a best-guess
+-window of 100 blocks).
++Since parameters of these deployments are unknown, it is RECOMMENDED
++that implementations allow the user to configure the emission of such
++notifications (e.g. suitable N and M parameters in the messages above,
++e.g. a best-guess window of 100 blocks).
+ 
+ ## Rationale
+ 
+-The timeout into FAILED state allows eventual reuse of bits if a fork was not successfully activated.
++The timeout into FAILED state allows eventual reuse of bits if a fork
++was not successfully activated.
+ 
+-A fallow period at the conclusion of a fork attempt allows some detection of buggy clients, and allows time for warnings and software upgrades for successful forks. The duration of a fallow period is not specified by this proposal, although a conventional fallow period of 3 months is RECOMMENDED.
++A fallow period at the conclusion of a fork attempt allows some
++detection of buggy clients, and allows time for warnings and software
++upgrades for successful forks. The duration of a fallow period is not
++specified by this proposal, although a conventional fallow period of 3
++months is RECOMMENDED.
+ 
+ ## Guidelines
+ 
+ ### Parameter selection guidelines
+ 
+-The following guidelines are suggested for selecting the parameters for a fork:
+-
+-* **name** SHOULD be selected such that no two forks, concurrent or otherwise, ever use the same name.
+-* **bit** SHOULD be selected such that no two concurrent forks use the same bit. Implementors should make an effort to consult resources such as [2] to establish whether the bit they wish to use can reasonably be assumed to be unclaimed by a concurrent fork, and to announce their use ('claim') of a bit for a fork purpose on various project mailing lists, to reduce chance of collisions.
+-* **start** SHOULD be set to some block number in the future, approximately one month after a software release date which includes the fork signaling.  This allows for some release delays, while preventing triggers as a result of parties running pre-release software.
+-* **timeout** is RECOMMENDED to be a block number that is approximately 1 year after start.
+-* **windowsize** SHOULD be set large enough to allow reception of an adequately precise signal.
+-* **threshold** SHOULD be set as high as possible to ensure a smooth activation based on the estimated support and the nature of the proposed changes. It is strongly RECOMMENDED that threshold >= windowsize / 2 (rounded up) to ensure that a proposal is only activated by majority support.
+-* **minlockedblocks** is RECOMMENDED to be set >= windowsize, to ensure that a full window passes in LOCKED_IN state. Lower values will be ineffective as the transition from LOCKED_IN to ACTIVE is guarded by a synchronization based on the window size.
+-
+-NOTE: If minlockedblocks is set to 0, then the fork will proceed to ACTIVE state when the chain height reaches a multiple of the windowsize.
+-
+-A later deployment using the same bit is possible as long as the starttime is after the previous fork's timeout or activation, but it is discouraged until necessary, and even then recommended to have a pause in between to detect buggy software.
++The following guidelines are suggested for selecting the parameters
++for a fork:
++
++* **name** SHOULD be selected such that no two forks, concurrent or
++  otherwise, ever use the same name.
++* **bit** SHOULD be selected such that no two concurrent forks use the
++  same bit. Implementors should make an effort to consult resources
++  such as [2] to establish whether the bit they wish to use can
++  reasonably be assumed to be unclaimed by a concurrent fork, and to
++  announce their use ('claim') of a bit for a fork purpose on various
++  project mailing lists, to reduce chance of collisions.
++* **start** SHOULD be set to some block number in the future,
++  approximately one month after a software release date which includes
++  the fork signaling.  This allows for some release delays, while
++  preventing triggers as a result of parties running pre-release
++  software.
++* **timeout** is RECOMMENDED to be a block number that is
++  approximately 1 year after start.
++* **windowsize** SHOULD be set large enough to allow reception of an
++  adequately precise signal.
++* **threshold** SHOULD be set as high as possible to ensure a smooth
++  activation based on the estimated support and the nature of the
++  proposed changes. It is strongly RECOMMENDED that threshold >=
++  windowsize / 2 (rounded up) to ensure that a proposal is only
++  activated by majority support.
++* **minlockedblocks** is RECOMMENDED to be set >= windowsize, to
++  ensure that a full window passes in LOCKED_IN state. Lower values
++  will be ineffective as the transition from LOCKED_IN to ACTIVE is
++  guarded by a synchronization based on the window size.
++
++NOTE: If minlockedblocks is set to 0, then the fork will proceed to
++ACTIVE state when the chain height reaches a multiple of the
++windowsize.
++
++A later deployment using the same bit is possible as long as the
++starttime is after the previous fork's timeout or activation, but it
++is discouraged until necessary, and even then recommended to have a
++pause in between to detect buggy software.
+ 
+ ### Signaling guidelines
+ 
+-An implementation SHOULD signal '0' on a bit if one of the following holds true:
++An implementation SHOULD signal '0' on a bit if one of the following
++holds true:
+ 
+-* the deployment parameters are not DEFINED (not configured or explicitly undefined)
+-* the deployment is DEFINED and has not yet reached the STARTED state
+-* the deployment has succeeded (it has become ACTIVE)
+-* the deployment has FAILED
++* The deployment parameters are not DEFINED (not configured or
++  explicitly undefined)
++* The deployment is DEFINED and has not yet reached the STARTED state
++* The deployment has succeeded (it has become ACTIVE)
++* The deployment has FAILED
+ 
+-An implementation SHOULD enable the operator to choose (override) whether to signal '0' or '1' on a bit, once its deployment has at least reached the STARTED state.
++An implementation SHOULD enable the operator to choose (override)
++whether to signal '0' or '1' on a bit, once its deployment has at
++least reached the STARTED state.
+ 
+-A supporting miner SHOULD signal '1' on a bit for which the deployment is LOCKED_IN state so that uptake is visible. However, this has no effect on consensus rules. Once LOCKED_IN, a deployment proceeds to ACTIVE solely based on the configured grace period parameters (see 'Fork deployment parameters' above).
++A supporting miner SHOULD signal '1' on a bit for which the deployment
++is LOCKED_IN state so that uptake is visible. However, this has no
++effect on consensus rules. Once LOCKED_IN, a deployment proceeds to
++ACTIVE solely based on the configured grace period parameters (see
++'Fork deployment parameters' above).
+ 
+-A miner SHOULD signal '0' on a bit if they wish to suspend signaling of support for a fork that is DEFINED in their software.
++A miner SHOULD signal '0' on a bit if they wish to suspend signaling
++of support for a fork that is DEFINED in their software.
+ 
+-It is NOT RECOMMENDED to signal '1' for bits where the meaning is undefined (i.e. bits which are unclaimed by proposals).
++It is NOT RECOMMENDED to signal '1' for bits where the meaning is
++undefined (i.e. bits which are unclaimed by proposals).
+ 
+ ## References
+ 
+-This ECIP is a realization of [27-MINERVOTE](https://specs.that.world/27-minervote/).
++This ECIP is a realization of
++[27-MINERVOTE](https://specs.that.world/27-minervote/).
+ 
+ ## License
+ 
+-This work is licensed under [Apache License, Version 2.0](http://www.apache.org/licenses/).
++This work is licensed under [Apache License, Version
++2.0](http://www.apache.org/licenses/).
+
+From 86afe8ee3f2aba8078399c51569d78b1122cd2e2 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sat, 16 Nov 2019 19:47:29 +0100
+Subject: [PATCH 4/5] Fix image
+
+---
+ _specs/ecip-1022.md              |   2 +-
+ assets/bip-0135-states-small.png | Bin 0 -> 36260 bytes
+ 2 files changed, 1 insertion(+), 1 deletion(-)
+ create mode 100644 assets/bip-0135-states-small.png
+
+diff --git a/_specs/ecip-1022.md b/_specs/ecip-1022.md
+index 1da3b1f..bb5a97a 100644
+--- a/_specs/ecip-1022.md
++++ b/_specs/ecip-1022.md
+@@ -163,7 +163,7 @@ chain changes (including after reorganizations).
+ 
+ The following diagram illustrates the generalized state machine:
+ 
+-![State transactions](ECIP-1022/bip-0135-states-small.png)
++![State transactions](../assets/ecip-1022/bip-0135-states-small.png)
+ 
+ The genesis block of any chain SHALL have the state DEFINED for each
+ deployment.
+diff --git a/assets/bip-0135-states-small.png b/assets/bip-0135-states-small.png
+new file mode 100644
+index 0000000000000000000000000000000000000000..9191ae376b6fe68050c08faec59539faada1391a
+GIT binary patch
+literal 36260
+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
+YQ1V?MsIGb=zDNujcGiwo<rX-~pMl=jCIA2c
+
+literal 0
+HcmV?d00001
+
+
+From c42890a7a3ba19009c68edc1dbf71ccd1b29aaa6 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sun, 17 Nov 2019 18:07:54 +0100
+Subject: [PATCH 5/5] Update ecip-1022.md
+
+---
+ _specs/ecip-1022.md | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/_specs/ecip-1022.md b/_specs/ecip-1022.md
+index bb5a97a..de9a588 100644
+--- a/_specs/ecip-1022.md
++++ b/_specs/ecip-1022.md
+@@ -4,6 +4,7 @@ ecip: 1022
+ title: Generalized Version Bits Voting for Consensus Soft and Hard Forks
+ status: Draft
+ type: Meta
++discussions-to: https://github.com/ethereumclassic/ECIPs/issues/190
+ author: Wei Tang (@sorpaas)
+ created: 2017-06-28
+ license: Apache-2.0
diff --git a/.gh-pullrequests/00191.json b/.gh-pullrequests/00191.json
new file mode 100644
index 0000000..7228b37
--- /dev/null
+++ b/.gh-pullrequests/00191.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/191",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/191/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/191/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/191/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/191",
+    "id": 524017779,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQxODc2MDE4",
+    "number": 191,
+    "title": "Wording changes Security.md & ecip-1076",
+    "user": {
+      "login": "mikeyb",
+      "id": 36461,
+      "node_id": "MDQ6VXNlcjM2NDYx",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/36461?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/mikeyb",
+      "html_url": "https://github.com/mikeyb",
+      "followers_url": "https://api.github.com/users/mikeyb/followers",
+      "following_url": "https://api.github.com/users/mikeyb/following{/other_user}",
+      "gists_url": "https://api.github.com/users/mikeyb/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/mikeyb/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/mikeyb/subscriptions",
+      "organizations_url": "https://api.github.com/users/mikeyb/orgs",
+      "repos_url": "https://api.github.com/users/mikeyb/repos",
+      "events_url": "https://api.github.com/users/mikeyb/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/mikeyb/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-17T17:37:34Z",
+    "updated_at": "2019-11-17T17:52:40Z",
+    "closed_at": "2019-11-17T17:52:37Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/191",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/191",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/191.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/191.patch"
+    },
+    "body": "Some minor wording updates I think need to be made.  You be the judge :)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/191/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00191.patch b/.gh-pullrequests/00191.patch
new file mode 100644
index 0000000..8825d9c
--- /dev/null
+++ b/.gh-pullrequests/00191.patch
@@ -0,0 +1,58 @@
+From 29e84be33079c0d512abe1f3a740d3e1bbc9580e Mon Sep 17 00:00:00 2001
+From: mikeyb <mike@mikes.email>
+Date: Sun, 17 Nov 2019 10:34:30 -0700
+Subject: [PATCH 1/2] change wording publicly -> public
+
+---
+ SECURITY.md | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/SECURITY.md b/SECURITY.md
+index afa14b8..6c94f5e 100644
+--- a/SECURITY.md
++++ b/SECURITY.md
+@@ -2,10 +2,10 @@
+ 
+ Security concerns with each individual ECIP should be addressed to the ECIP authors, the specified `discussion-to` locations, or ECIP editors. Note that when an ECIP is already deployed, it is recommended to talk privately with the ECIP authors or ECIP editors first.
+ 
+-Security alerts related to the website source code will be addressed by ECIP editors. Security concerns related to hosting and delivery of the ecips.ethereumclassic.org website will be addressed by either org admins or ECIP editors. They will not be made publicly until mitigating solutions are identified. Once a remedy is found, part of the repair process may be automated by [Dependabot](https://dependabot.com/).
++Security alerts related to the website source code will be addressed by ECIP editors. Security concerns related to hosting and delivery of the ecips.ethereumclassic.org website will be addressed by either org admins or ECIP editors. They will not be made public until mitigating solutions are identified. Once a remedy is found, part of the repair process may be automated by [Dependabot](https://dependabot.com/).
+ 
+ This site is licensed via multiple permissive and open source licenses, as specified in each ECIP.
+- 
++
+ ## Supported Branches
+ 
+ The only supported branch for specifications and website is the `master` branch.
+
+From 48ead705c3524f736a3dac6549bcf2d17f176783 Mon Sep 17 00:00:00 2001
+From: mikeyb <mike@mikes.email>
+Date: Sun, 17 Nov 2019 10:36:24 -0700
+Subject: [PATCH 2/2] wording changes
+
+---
+ _specs/ecip-1076.md | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/_specs/ecip-1076.md b/_specs/ecip-1076.md
+index de8261f..f2864fe 100644
+--- a/_specs/ecip-1076.md
++++ b/_specs/ecip-1076.md
+@@ -13,7 +13,7 @@ created: 2019-11-16
+ This meta document is agnostic to any mining algorithm. Its sole purpose is specifying a process how to openly determine and select a mining algorithm for Ethereum Classic.
+ 
+ ### Motivation
+-The decision to change the Ethereum Classic mining algorithm - or to keep it as is - is not an easy one to make. It should be done by broad consensus with all stakeholders involved - miners, investors, application and core developers, and anyone else who feels having a stake in ETC. This meta document proposes a process of how to facilitate the potential change of the mining algorithm and parameters.
++The decision to change the Ethereum Classic mining algorithm - or to keep it as is - is not an easy one to make. It should be done by broad consensus with all stakeholders involved - miners, investors, application and core developers, and anyone else who feels they have a stake in ETC. This meta document proposes a process of how to facilitate the potential change of the mining algorithm and parameters.
+ 
+ ### Available Options
+ Currently, the following options are debatable.
+@@ -66,7 +66,7 @@ The miner prepend the miner's extra data with 5 bytes of signaling data which sh
+     - `08` (`0x30 0x38`): reject ECIP-1047 client defaults, explicitly supporting the 8 million gas block gas limit defaults
+     - `99` (`0x39 0x39`): any other number between `00` and `99` suggests a competing default block gas limit
+ 
+-In addition to the numeric vote on the gas limit with the extra data field, mining nodes are encouraged to utilized block gas target limit voting with the suitable configuration flags for their mining nodes.
++In addition to the numeric vote on the gas limit with the extra data field, mining nodes are encouraged to utilize block gas target limit voting with the suitable configuration flags for their mining nodes.
+ 
+ No signaling favors the status quo (ECBP-1076-A) and effectively rejects ECIPs 1041, 1043, 1047, 1049, and 1070.
+ 
diff --git a/.gh-pullrequests/00192.json b/.gh-pullrequests/00192.json
new file mode 100644
index 0000000..1fe8499
--- /dev/null
+++ b/.gh-pullrequests/00192.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/192",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/192/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/192/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/192/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/192",
+    "id": 526414746,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQzODg0MTMw",
+    "number": 192,
+    "title": "Inline specification for 39-GAS and 40-UNUSED from that.world.",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 2,
+    "created_at": "2019-11-21T07:29:46Z",
+    "updated_at": "2019-11-21T23:59:12Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/192",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/192",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/192.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/192.patch"
+    },
+    "body": "Better to have these self-contained specifications right here.\r\nThey are not complex.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/192/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00192.patch b/.gh-pullrequests/00192.patch
new file mode 100644
index 0000000..c86c19c
--- /dev/null
+++ b/.gh-pullrequests/00192.patch
@@ -0,0 +1,43 @@
+From dba82c1171cfddb53fc54fd1eb9f2be60b458a65 Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Wed, 20 Nov 2019 23:29:11 -0800
+Subject: [PATCH] Inline specification for 39-GAS and 40-UNUSED from
+ that.world. Better to have these self-contained specifications right here.
+ They are not complex.
+
+---
+ _specs/ecip-1065.md | 21 ++++++++++++++++-----
+ 1 file changed, 16 insertions(+), 5 deletions(-)
+
+diff --git a/_specs/ecip-1065.md b/_specs/ecip-1065.md
+index 1ac3526..b687297 100644
+--- a/_specs/ecip-1065.md
++++ b/_specs/ecip-1065.md
+@@ -28,11 +28,22 @@ At hard fork block, enable [EIP-1702](https://eips.ethereum.org/EIPS/eip-1702):
+ * Define the previous EVM version as version `0`.
+ * Define a new version `1`, with the following EVM modifications
+   applied on it.
+-  * **[39-UNGAS](https://specs.that.world/39-ungas/)**: Remove all
+-    observable behavior of gas cost in EVM and change out-of-gas
+-    exception to trap the whole transaction.
+-  * **[40-UNUSED](https://specs.that.world/40-unused/)**: Disable
+-    deployment of unused opcodes.
++  * Remove all observable behavior of gas cost in EVM by disabling
++    GAS code.
++  * Change out-of-gas exception to trap the whole transaction.
++  * For CALL, CALLCODE and DELEGATECALL, remove the gas parameter,
++    and instead always set the parameter to be the current
++    available gas left.
++  * Hard fork can change existing contract behavior. One of the
++    point can be raised about adding new opcodes is that it modifies existing unused opcodes from throwing out of gas to another behavior. While we can mostly argue that deploying unused opcode is not of much use so no sane developers would do that, it would be better to just disallow deployment of unused opcodes.
++  * Upon contract deployment, either through CREATE and CREATE2 opcode,
++    or via contract creation transaction, run an extra validation step:
++    * Iterate over the code bytes one by one.
++    * If the code byte is a PUSH(n) opcode, skip next n bytes.
++    * If the code byte is a valid opcode or designated invalid
++      instruction (0xfe), continue.
++    * Otherwise, throw out-of-gas.
++  * Note that this check is similar to jump destination checks.
+   
+ ### Discussion
+ 
diff --git a/.gh-pullrequests/00192_557323172.json b/.gh-pullrequests/00192_557323172.json
new file mode 100644
index 0000000..daabdd3
--- /dev/null
+++ b/.gh-pullrequests/00192_557323172.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557323172",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/192#issuecomment-557323172",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/192",
+    "id": 557323172,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzMyMzE3Mg==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-21T23:45:13Z",
+    "updated_at": "2019-11-21T23:45:13Z",
+    "author_association": "MEMBER",
+    "body": "@bobsummerwill The direction is fine for me. But I'll just need to do some tidy up work on the actual specifications before merging, as the thing presented in this PR is, IMO, unreadable.\r\n\r\nOn a side note, while 39-UNGAS itself currently looks not complex, it may actually require some refactorings in EVM, not yet sure the amount of work. I'll explain in more details about what I mean in this case. Specifically, there're some corner cases that must be clearly specified.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557323172/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00192_557326356.json b/.gh-pullrequests/00192_557326356.json
new file mode 100644
index 0000000..6391781
--- /dev/null
+++ b/.gh-pullrequests/00192_557326356.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557326356",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/192#issuecomment-557326356",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/192",
+    "id": 557326356,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzMyNjM1Ng==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-21T23:59:12Z",
+    "updated_at": "2019-11-21T23:59:12Z",
+    "author_association": "MEMBER",
+    "body": "If you want to redo something equivalent, but with better wording yourself, go for it, and I will close this.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557326356/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00193.json b/.gh-pullrequests/00193.json
new file mode 100644
index 0000000..ef786d3
--- /dev/null
+++ b/.gh-pullrequests/00193.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/193",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/193/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/193/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/193/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/193",
+    "id": 526705562,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ0MTIxOTEx",
+    "number": 193,
+    "title": "Update ECIP-1070 Status to Rejected",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2019-11-21T16:30:22Z",
+    "updated_at": "2019-11-21T17:13:50Z",
+    "closed_at": "2019-11-21T17:13:47Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/193",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/193",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/193.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/193.patch"
+    },
+    "body": "As per the Mining Call and Issue Link Summary: https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-557106181\r\n\r\nMoving ECIP-1070: ProgPoW on ETC to Rejected Status with the agreement that someone who wants to champion this proposal can do so on a new ECIP in the future.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/193/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00193.patch b/.gh-pullrequests/00193.patch
new file mode 100644
index 0000000..516e83a
--- /dev/null
+++ b/.gh-pullrequests/00193.patch
@@ -0,0 +1,22 @@
+From 6d8be64b6e0734d3b9b04cdcc9f6fdc7b748a64c Mon Sep 17 00:00:00 2001
+From: Yaz Khoury <yaz.khoury@gmail.com>
+Date: Thu, 21 Nov 2019 11:30:07 -0500
+Subject: [PATCH] feat: Update ECIP Status to Rejected
+
+---
+ _specs/ecip-1070.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1070.md b/_specs/ecip-1070.md
+index 15e1fc6..368e357 100644
+--- a/_specs/ecip-1070.md
++++ b/_specs/ecip-1070.md
+@@ -3,7 +3,7 @@ ecip: 1070
+ title: ProgPoW, a Programmatic Proof-of-Work, for Ethereum Classic
+ author: Yaz Khoury <yaz@etccooperative.org>
+ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/172
+-status: Draft
++status: Rejected
+ type: Standards Track
+ category: Core
+ created: 2019-11-06
diff --git a/.gh-pullrequests/00193_557183310.json b/.gh-pullrequests/00193_557183310.json
new file mode 100644
index 0000000..a59e31c
--- /dev/null
+++ b/.gh-pullrequests/00193_557183310.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557183310",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/193#issuecomment-557183310",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/193",
+    "id": 557183310,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzE4MzMxMA==",
+    "user": {
+      "login": "realcodywburns",
+      "id": 13103499,
+      "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/realcodywburns",
+      "html_url": "https://github.com/realcodywburns",
+      "followers_url": "https://api.github.com/users/realcodywburns/followers",
+      "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+      "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+      "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+      "repos_url": "https://api.github.com/users/realcodywburns/repos",
+      "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-21T17:12:38Z",
+    "updated_at": "2019-11-21T17:12:38Z",
+    "author_association": "MEMBER",
+    "body": "Ack, rejected due to lack of support. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557183310/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00194.json b/.gh-pullrequests/00194.json
new file mode 100644
index 0000000..0bb5fc3
--- /dev/null
+++ b/.gh-pullrequests/00194.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/194",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/194/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/194/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/194/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/194",
+    "id": 526728391,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ0MTQwNTEx",
+    "number": 194,
+    "title": "ecbp 1076: activate miner signaling process",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 2,
+    "created_at": "2019-11-21T17:09:04Z",
+    "updated_at": "2019-11-22T10:19:08Z",
+    "closed_at": "2019-11-22T10:19:05Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/194",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/194",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/194.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/194.patch"
+    },
+    "body": "activating the ecbp as per call today https://github.com/ethereumclassic/ECIPs/issues/174#issuecomment-557106181",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/194/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00194.patch b/.gh-pullrequests/00194.patch
new file mode 100644
index 0000000..61d5da5
--- /dev/null
+++ b/.gh-pullrequests/00194.patch
@@ -0,0 +1,119 @@
+From 745d44a93629ffc65613da753ff02f3a12f6861a Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Thu, 21 Nov 2019 18:08:13 +0100
+Subject: [PATCH 1/2] ecbp 1076: activate miner signaling process
+
+---
+ _specs/ecip-1076.md | 47 ++++++++++++++-------------------------------
+ 1 file changed, 14 insertions(+), 33 deletions(-)
+
+diff --git a/_specs/ecip-1076.md b/_specs/ecip-1076.md
+index f2864fe..37be834 100644
+--- a/_specs/ecip-1076.md
++++ b/_specs/ecip-1076.md
+@@ -1,19 +1,19 @@
+ ---
+ lang: en
+ ecip: 1076
+-title: Mining Algorithm Change Process
++title: Mining Algorithm Signaling Process
+ author: Talha Cross (@soc1c)
+ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/174
+-status: Draft
++status: Active
+ type: ECBP
+ created: 2019-11-16
+ ---
+ 
+ ### Abstract
+-This meta document is agnostic to any mining algorithm. Its sole purpose is specifying a process how to openly determine and select a mining algorithm for Ethereum Classic.
++This meta document is agnostic to any mining algorithm. Its sole purpose is specifying a process for miners to signal their preferred mining algorithm for Ethereum Classic.
+ 
+ ### Motivation
+-The decision to change the Ethereum Classic mining algorithm - or to keep it as is - is not an easy one to make. It should be done by broad consensus with all stakeholders involved - miners, investors, application and core developers, and anyone else who feels they have a stake in ETC. This meta document proposes a process of how to facilitate the potential change of the mining algorithm and parameters.
++The decision to change the Ethereum Classic mining algorithm - or to keep it as is - is not an easy one to make. It should be done by broad consensus with all stakeholders involved - miners, investors, application and core developers, and anyone else who feels they have a stake in ETC. This meta document proposes a process of how miners could signal in favor of one potential change of the mining algorithm and parameters.
+ 
+ ### Available Options
+ Currently, the following options are debatable.
+@@ -21,38 +21,19 @@ Currently, the following options are debatable.
+ - **ECBP-1076-A**: _"Ethash Status Quo."_ The mining algorithm will be untouched as it is since genesis, as **Ethash** function with a statically **increasing DAG**.
+ - **ECBP-1076-B**: _"Ethash Limited DAG."_ The mining algorithm will be untouched as it is since genesis, as **Ethash** function. However, the **DAG size will be limited** as specified in [ECIP-1043](https://ecips.ethereumclassic.org/ECIPs/ecip-1043).
+ - **ECBP-1076-C**: _"Keccak256 (SHA3)."_ The mining algorithm will be **changed to Keccak256** as specified in [ECIP-1049](https://ecips.ethereumclassic.org/ECIPs/ecip-1049).
+-- **ECBP-1076-D**: _"ProgPoW."_ The mining algorithm will be **changed to ProgPow** as specified in [ECIP-1070](https://ecips.ethereumclassic.org/ECIPs/ecip-1070).
++- ~~**ECBP-1076-D**: _"ProgPoW."_ The mining algorithm will be **changed to ProgPow** as specified in [ECIP-1070](https://ecips.ethereumclassic.org/ECIPs/ecip-1070).~~ 
+ 
+-Eventually, the community has to decide on one.
++    _Note: ProgPoW was rejected by the community on Nov/20, 2019. However, miners can still signal for this option if they prefer this over the other options._
+ 
+-### Process
+-The following process facilitates all stakeholders in various stages.
++Eventually, the miners have to signal in favor of one option.
+ 
+-1. _"Tech Stage."_ Core and application developers meet in regular calls to evaluate the feasibility of the Ethash status quo, the limited DAG size proposal (ECIP-1043), the Keccak256 proposal (ECIP-1049), and the ProgPoW proposal (ECIP-1070).
++### Signaling Process
++Solo miners, mining farms, and mining pools can signal support by adjusting their mining node to signal in favor of one of the proposals that was promoted to "Last Call" state in the previous stage. Details on the signaling can be found in the subsequent subsections.
+ 
+-    If there is no technical objection to each of the proposals, the proposals can be **moved to "Last Call"** state, regardless of whether they will be considered in future or not. As a result, none, one, or many competing proposals can be in "Last Call" state at the same time.
++This stage is finished once more than **70% of the last 100_000 blocks** were signed with a signal in favor of one proposal.
+ 
+-    This stage is finished once all proposals are either in "Last Call," "Withdrawn," or "Rejected" state.
+-
+-2. _"Miner Stage."_ Solo miners, mining farms, and mining pools can signal support by adjusting their mining node to signal in favor of one of the proposals that was promoted to "Last Call" state in the previous stage. Details on the signaling can be found in the subsequent section.
+-
+-    This stage is finished once more than **70% of the last 100_000 blocks** were signed with a signal in favor of one proposal.
+-3. _"Decision Stage."_ The proposal that passed the technical stage to "Last Call" state and received 70% approval by the miner community, **shall be considered as "Accepted,"** all other competing proposals shall be considered as "Rejected." The EIP Editors are responsible to facilitate this status update to the proposals according to this process definition.
+-
+-    The block number where the 70% threshold is breached the first time is called the `threshold_blocknumber`. It automatically defines the `activation_blocknumber` which is:
+-
+-    ```
+-    activation_blocknumber = threshold_blocknumber + 1_000_000
+-    ```
+-
+-    That gives clients a six months window of activating releases with the ECBP-1076 activation block number.
+-
+-    In case none of the proposals reaches the defined threshold, the status quo will remain indefinitely until either one of the proposals reaches the 70% majority or until this process is entirely rejected by the community.
+-
+-### Miner Signaling
+-The miner stage is specified as follows.
+-
+-The miner prepend the miner's extra data with 5 bytes of signaling data which shall be recorded in the Ethereum Classic block headers. The 5 bytes contain the following:
++##### Miner Extradata Prefix
++The miner signaling is specified as follows: The miner prepend the miner's extra data with 5 bytes of signaling data which shall be recorded in the Ethereum Classic block headers. The 5 bytes contain the following:
+ 
+ 1. Two start bytes that indicate a signal in terms of ECBP-1076, namely `76` (`0x37 0x36`)
+ 2. One option byte that favors one of the proposals:
+@@ -68,9 +49,9 @@ The miner prepend the miner's extra data with 5 bytes of signaling data which sh
+ 
+ In addition to the numeric vote on the gas limit with the extra data field, mining nodes are encouraged to utilize block gas target limit voting with the suitable configuration flags for their mining nodes.
+ 
+-No signaling favors the status quo (ECBP-1076-A) and effectively rejects ECIPs 1041, 1043, 1047, 1049, and 1070.
++No signaling abstains from voting and shall not be regarded as favoring the status quo.
+ 
+-### Mining Node Configuration Examples
++##### Mining Node Configuration Examples
+ The following configuration examples do not favor one option over another and only serve the purpose of demonstration.
+ 
+ A Parity Ethereum node configured to vote for Keccak256 (ECBP-1076-C) not caring about the block gas limit:
+
+From 91fd41171927dd80ad7217e964fd316a49b07767 Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Thu, 21 Nov 2019 18:11:45 +0100
+Subject: [PATCH 2/2] 1076: clarify on signaling range
+
+---
+ _specs/ecip-1076.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1076.md b/_specs/ecip-1076.md
+index 37be834..619d2ed 100644
+--- a/_specs/ecip-1076.md
++++ b/_specs/ecip-1076.md
+@@ -30,7 +30,7 @@ Eventually, the miners have to signal in favor of one option.
+ ### Signaling Process
+ Solo miners, mining farms, and mining pools can signal support by adjusting their mining node to signal in favor of one of the proposals that was promoted to "Last Call" state in the previous stage. Details on the signaling can be found in the subsequent subsections.
+ 
+-This stage is finished once more than **70% of the last 100_000 blocks** were signed with a signal in favor of one proposal.
++The signaling process shall be considered finished once more than **70% of the last 1_000_000 blocks** were signed with a signal in favor of one proposal.
+ 
+ ##### Miner Extradata Prefix
+ The miner signaling is specified as follows: The miner prepend the miner's extra data with 5 bytes of signaling data which shall be recorded in the Ethereum Classic block headers. The 5 bytes contain the following:
diff --git a/.gh-pullrequests/00194_557194760.json b/.gh-pullrequests/00194_557194760.json
new file mode 100644
index 0000000..9cdf065
--- /dev/null
+++ b/.gh-pullrequests/00194_557194760.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557194760",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/194#issuecomment-557194760",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/194",
+    "id": 557194760,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzE5NDc2MA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-21T17:40:12Z",
+    "updated_at": "2019-11-21T17:40:12Z",
+    "author_association": "MEMBER",
+    "body": "please allow editors and community members to review this change\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557194760/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00194_557268112.json b/.gh-pullrequests/00194_557268112.json
new file mode 100644
index 0000000..d3bb02d
--- /dev/null
+++ b/.gh-pullrequests/00194_557268112.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557268112",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/194#issuecomment-557268112",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/194",
+    "id": 557268112,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzI2ODExMg==",
+    "user": {
+      "login": "tzdybal",
+      "id": 1138893,
+      "node_id": "MDQ6VXNlcjExMzg4OTM=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/1138893?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/tzdybal",
+      "html_url": "https://github.com/tzdybal",
+      "followers_url": "https://api.github.com/users/tzdybal/followers",
+      "following_url": "https://api.github.com/users/tzdybal/following{/other_user}",
+      "gists_url": "https://api.github.com/users/tzdybal/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/tzdybal/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/tzdybal/subscriptions",
+      "organizations_url": "https://api.github.com/users/tzdybal/orgs",
+      "repos_url": "https://api.github.com/users/tzdybal/repos",
+      "events_url": "https://api.github.com/users/tzdybal/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/tzdybal/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-21T20:55:40Z",
+    "updated_at": "2019-11-21T20:55:40Z",
+    "author_association": "MEMBER",
+    "body": "1. ECBP is a category of \"standard track\" ECIPs.\r\n2. As per ECIP-1000 you cannot move ECIP/ECBP from `Draft` to `Active`. `Active` can be used only instead of `Final`. And there is also `Last call` and `Accepted` state between `Draft` and `Final`.\r\n    > Some Informational ECIPs, which are considered process ECIPs, may also be moved to a status of `Active` instead of `Final` if they are never meant to be completed, e.g. this ECIP-1000.\r\n3. I agree that `Active` is not a proper state for this ECBP. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557268112/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00196.json b/.gh-pullrequests/00196.json
new file mode 100644
index 0000000..a540572
--- /dev/null
+++ b/.gh-pullrequests/00196.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/196",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/196/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/196/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/196/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/196",
+    "id": 526743343,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ0MTUyNzcx",
+    "number": 196,
+    "title": "1000: demote wei tang from ecip editor status",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-21T17:38:54Z",
+    "updated_at": "2019-11-22T10:18:43Z",
+    "closed_at": "2019-11-22T10:18:38Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/196",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/196",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/196.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/196.patch"
+    },
+    "body": "I propose demoting wei tang as ecip editor for not stopping to block community efforts on ecbp 1076 in #194 which received rough consensus in the public community call in #174 without stating actual reasons.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/196/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 1
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00196.patch b/.gh-pullrequests/00196.patch
new file mode 100644
index 0000000..e1f8ce5
--- /dev/null
+++ b/.gh-pullrequests/00196.patch
@@ -0,0 +1,21 @@
+From 34403e8b0872bccfd15794c287ce59e9222d5f5d Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Thu, 21 Nov 2019 18:36:39 +0100
+Subject: [PATCH] 1000: demote wei tang from ecip editor status
+
+---
+ _specs/ecip-1000.md | 1 -
+ 1 file changed, 1 deletion(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index b5b50dd..5c076cc 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -72,7 +72,6 @@ A good reason to transfer ownership is because the original author no longer has
+ 
+ The current ECIP editors are:
+ 
+-* Wei Tang (@sorpaas)
+ * Isaac Ardis (@meowsbits)
+ * Cody Burns (@realcodywburns)
+ * Afri Schoedon (@soc1c)

From dedd522e9928559838abfcbe144d2f7ef1353a28 Mon Sep 17 00:00:00 2001
From: meows <b5c6@protonmail.com>
Date: Sun, 24 Nov 2019 04:16:42 -0500
Subject: [PATCH 2/5] update gh issues+prs (noop)

---
 .gh-issues/.state       | 2 +-
 .gh-pullrequests/.state | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/.gh-issues/.state b/.gh-issues/.state
index 882f88d..2d5af02 100644
--- a/.gh-issues/.state
+++ b/.gh-issues/.state
@@ -1 +1 @@
-2019-11-22T12:21:07Z
+2019-11-24T09:16:17Z
diff --git a/.gh-pullrequests/.state b/.gh-pullrequests/.state
index dbe61b7..04f3993 100644
--- a/.gh-pullrequests/.state
+++ b/.gh-pullrequests/.state
@@ -1 +1 @@
-2019-11-22T12:21:34Z
+2019-11-24T09:15:56Z

From e83007c2beacffbaeb278ce3409f69762b041ba7 Mon Sep 17 00:00:00 2001
From: ia <b5c6@protonmail.com>
Date: Fri, 29 Nov 2019 12:44:45 -0500
Subject: [PATCH 3/5] clone issues and prs

---
 .gh-issues/.state                     |   2 +-
 .gh-issues/00013.json                 |   4 +-
 .gh-issues/00013_557964975.json       |  43 +++++++
 .gh-issues/00013_558101694.json       |  43 +++++++
 .gh-issues/00013_558115358.json       |  43 +++++++
 .gh-issues/00013_558228538.json       |  43 +++++++
 .gh-issues/00063.json                 |   8 +-
 .gh-issues/00063_559163787.json       |  43 +++++++
 .gh-issues/00064.json                 |   8 +-
 .gh-issues/00064_559163964.json       |  43 +++++++
 .gh-issues/00148.json                 |   4 +-
 .gh-issues/00148_559164340.json       |  43 +++++++
 .gh-issues/00172.json                 |   8 +-
 .gh-issues/00172_558749543.json       |  43 +++++++
 .gh-issues/00175.json                 |  44 ++++++-
 .gh-issues/00175_559246169.json       |  43 +++++++
 .gh-issues/00175_559358882.json       |  43 +++++++
 .gh-issues/00175_559559294.json       |  43 +++++++
 .gh-issues/00175_559590207.json       |  43 +++++++
 .gh-issues/00177.json                 |  46 +++++++-
 .gh-issues/00177_559099424.json       |  43 +++++++
 .gh-issues/00182.json                 |   6 +-
 .gh-issues/00188.json                 |   6 +-
 .gh-issues/00190.json                 |   4 +-
 .gh-issues/00190_558750917.json       |  43 +++++++
 .gh-issues/00195.json                 |   4 +-
 .gh-issues/00195_559164709.json       |  43 +++++++
 .gh-issues/00195_559167273.json       |  43 +++++++
 .gh-issues/00204.json                 |  60 ++++++++++
 .gh-issues/00205.json                 |  60 ++++++++++
 .gh-issues/00206.json                 |  60 ++++++++++
 .gh-issues/00209.json                 |  60 ++++++++++
 .gh-issues/00209_559582354.json       |  43 +++++++
 .gh-issues/00209_559627507.json       |  43 +++++++
 .gh-issues/00210.json                 |  96 +++++++++++++++
 .gh-issues/00210_559657051.json       |  43 +++++++
 .gh-issues/00210_559732619.json       |  43 +++++++
 .gh-issues/00210_559776653.json       |  43 +++++++
 .gh-issues/00215.json                 |  60 ++++++++++
 .gh-issues/00215_559853302.json       |  43 +++++++
 .gh-pullrequests/.state               |   2 +-
 .gh-pullrequests/00157.json           |  54 ++++-----
 .gh-pullrequests/00157_557920706.json |  43 +++++++
 .gh-pullrequests/00157_557948410.json |  43 +++++++
 .gh-pullrequests/00157_559241944.json |  43 +++++++
 .gh-pullrequests/00183.json           |   8 +-
 .gh-pullrequests/00183_558246833.json |  43 +++++++
 .gh-pullrequests/00183_559094476.json |  43 +++++++
 .gh-pullrequests/00186.json           |   8 +-
 .gh-pullrequests/00186_559094036.json |  43 +++++++
 .gh-pullrequests/00186_559136714.json |  43 +++++++
 .gh-pullrequests/00186_559161960.json |  43 +++++++
 .gh-pullrequests/00192.json           |   8 +-
 .gh-pullrequests/00192_559124711.json |  43 +++++++
 .gh-pullrequests/00194.json           |   2 +-
 .gh-pullrequests/00197.json           |  66 +++++++++++
 .gh-pullrequests/00197.patch          |  64 ++++++++++
 .gh-pullrequests/00197_559125932.json |  43 +++++++
 .gh-pullrequests/00197_559130376.json |  43 +++++++
 .gh-pullrequests/00198.json           | 110 ++++++++++++++++++
 .gh-pullrequests/00198.patch          |  73 ++++++++++++
 .gh-pullrequests/00198_559633890.json |  43 +++++++
 .gh-pullrequests/00199.json           | 128 ++++++++++++++++++++
 .gh-pullrequests/00199.patch          | 161 ++++++++++++++++++++++++++
 .gh-pullrequests/00199_559185183.json |  43 +++++++
 .gh-pullrequests/00199_559222392.json |  43 +++++++
 .gh-pullrequests/00199_559591138.json |  43 +++++++
 .gh-pullrequests/00199_559591918.json |  43 +++++++
 .gh-pullrequests/00200.json           |  66 +++++++++++
 .gh-pullrequests/00200.patch          |  71 ++++++++++++
 .gh-pullrequests/00200_559176709.json |  43 +++++++
 .gh-pullrequests/00200_559185682.json |  43 +++++++
 .gh-pullrequests/00200_559186962.json |  43 +++++++
 .gh-pullrequests/00200_559223086.json |  43 +++++++
 .gh-pullrequests/00200_559285356.json |  43 +++++++
 .gh-pullrequests/00200_559285591.json |  43 +++++++
 .gh-pullrequests/00200_559703075.json |  43 +++++++
 .gh-pullrequests/00200_559791458.json |  43 +++++++
 .gh-pullrequests/00201.json           |  66 +++++++++++
 .gh-pullrequests/00201.patch          | 107 +++++++++++++++++
 .gh-pullrequests/00202.json           |  66 +++++++++++
 .gh-pullrequests/00202.patch          |  53 +++++++++
 .gh-pullrequests/00202_559284777.json |  43 +++++++
 .gh-pullrequests/00203.json           |  66 +++++++++++
 .gh-pullrequests/00203.patch          |  26 +++++
 .gh-pullrequests/00203_559177465.json |  43 +++++++
 .gh-pullrequests/00203_559185870.json |  43 +++++++
 .gh-pullrequests/00203_559186384.json |  43 +++++++
 .gh-pullrequests/00203_559285000.json |  43 +++++++
 .gh-pullrequests/00207.json           |  66 +++++++++++
 .gh-pullrequests/00207.patch          | 108 +++++++++++++++++
 .gh-pullrequests/00208.json           |  66 +++++++++++
 .gh-pullrequests/00208.patch          |  79 +++++++++++++
 .gh-pullrequests/00211.json           |  66 +++++++++++
 .gh-pullrequests/00211.patch          |  77 ++++++++++++
 .gh-pullrequests/00212.json           |  66 +++++++++++
 .gh-pullrequests/00212.patch          |  51 ++++++++
 .gh-pullrequests/00213.json           |  66 +++++++++++
 .gh-pullrequests/00213.patch          |  23 ++++
 .gh-pullrequests/00214.json           |  66 +++++++++++
 .gh-pullrequests/00214.patch          |  29 +++++
 101 files changed, 4624 insertions(+), 77 deletions(-)
 create mode 100644 .gh-issues/00013_557964975.json
 create mode 100644 .gh-issues/00013_558101694.json
 create mode 100644 .gh-issues/00013_558115358.json
 create mode 100644 .gh-issues/00013_558228538.json
 create mode 100644 .gh-issues/00063_559163787.json
 create mode 100644 .gh-issues/00064_559163964.json
 create mode 100644 .gh-issues/00148_559164340.json
 create mode 100644 .gh-issues/00172_558749543.json
 create mode 100644 .gh-issues/00175_559246169.json
 create mode 100644 .gh-issues/00175_559358882.json
 create mode 100644 .gh-issues/00175_559559294.json
 create mode 100644 .gh-issues/00175_559590207.json
 create mode 100644 .gh-issues/00177_559099424.json
 create mode 100644 .gh-issues/00190_558750917.json
 create mode 100644 .gh-issues/00195_559164709.json
 create mode 100644 .gh-issues/00195_559167273.json
 create mode 100644 .gh-issues/00204.json
 create mode 100644 .gh-issues/00205.json
 create mode 100644 .gh-issues/00206.json
 create mode 100644 .gh-issues/00209.json
 create mode 100644 .gh-issues/00209_559582354.json
 create mode 100644 .gh-issues/00209_559627507.json
 create mode 100644 .gh-issues/00210.json
 create mode 100644 .gh-issues/00210_559657051.json
 create mode 100644 .gh-issues/00210_559732619.json
 create mode 100644 .gh-issues/00210_559776653.json
 create mode 100644 .gh-issues/00215.json
 create mode 100644 .gh-issues/00215_559853302.json
 create mode 100644 .gh-pullrequests/00157_557920706.json
 create mode 100644 .gh-pullrequests/00157_557948410.json
 create mode 100644 .gh-pullrequests/00157_559241944.json
 create mode 100644 .gh-pullrequests/00183_558246833.json
 create mode 100644 .gh-pullrequests/00183_559094476.json
 create mode 100644 .gh-pullrequests/00186_559094036.json
 create mode 100644 .gh-pullrequests/00186_559136714.json
 create mode 100644 .gh-pullrequests/00186_559161960.json
 create mode 100644 .gh-pullrequests/00192_559124711.json
 create mode 100644 .gh-pullrequests/00197.json
 create mode 100644 .gh-pullrequests/00197.patch
 create mode 100644 .gh-pullrequests/00197_559125932.json
 create mode 100644 .gh-pullrequests/00197_559130376.json
 create mode 100644 .gh-pullrequests/00198.json
 create mode 100644 .gh-pullrequests/00198.patch
 create mode 100644 .gh-pullrequests/00198_559633890.json
 create mode 100644 .gh-pullrequests/00199.json
 create mode 100644 .gh-pullrequests/00199.patch
 create mode 100644 .gh-pullrequests/00199_559185183.json
 create mode 100644 .gh-pullrequests/00199_559222392.json
 create mode 100644 .gh-pullrequests/00199_559591138.json
 create mode 100644 .gh-pullrequests/00199_559591918.json
 create mode 100644 .gh-pullrequests/00200.json
 create mode 100644 .gh-pullrequests/00200.patch
 create mode 100644 .gh-pullrequests/00200_559176709.json
 create mode 100644 .gh-pullrequests/00200_559185682.json
 create mode 100644 .gh-pullrequests/00200_559186962.json
 create mode 100644 .gh-pullrequests/00200_559223086.json
 create mode 100644 .gh-pullrequests/00200_559285356.json
 create mode 100644 .gh-pullrequests/00200_559285591.json
 create mode 100644 .gh-pullrequests/00200_559703075.json
 create mode 100644 .gh-pullrequests/00200_559791458.json
 create mode 100644 .gh-pullrequests/00201.json
 create mode 100644 .gh-pullrequests/00201.patch
 create mode 100644 .gh-pullrequests/00202.json
 create mode 100644 .gh-pullrequests/00202.patch
 create mode 100644 .gh-pullrequests/00202_559284777.json
 create mode 100644 .gh-pullrequests/00203.json
 create mode 100644 .gh-pullrequests/00203.patch
 create mode 100644 .gh-pullrequests/00203_559177465.json
 create mode 100644 .gh-pullrequests/00203_559185870.json
 create mode 100644 .gh-pullrequests/00203_559186384.json
 create mode 100644 .gh-pullrequests/00203_559285000.json
 create mode 100644 .gh-pullrequests/00207.json
 create mode 100644 .gh-pullrequests/00207.patch
 create mode 100644 .gh-pullrequests/00208.json
 create mode 100644 .gh-pullrequests/00208.patch
 create mode 100644 .gh-pullrequests/00211.json
 create mode 100644 .gh-pullrequests/00211.patch
 create mode 100644 .gh-pullrequests/00212.json
 create mode 100644 .gh-pullrequests/00212.patch
 create mode 100644 .gh-pullrequests/00213.json
 create mode 100644 .gh-pullrequests/00213.patch
 create mode 100644 .gh-pullrequests/00214.json
 create mode 100644 .gh-pullrequests/00214.patch

diff --git a/.gh-issues/.state b/.gh-issues/.state
index 2d5af02..2b78f28 100644
--- a/.gh-issues/.state
+++ b/.gh-issues/.state
@@ -1 +1 @@
-2019-11-24T09:16:17Z
+2019-11-29T17:44:19Z
diff --git a/.gh-issues/00013.json b/.gh-issues/00013.json
index e0da85c..90b6367 100644
--- a/.gh-issues/00013.json
+++ b/.gh-issues/00013.json
@@ -56,9 +56,9 @@
 
     ],
     "milestone": null,
-    "comments": 62,
+    "comments": 66,
     "created_at": "2019-01-16T17:27:19Z",
-    "updated_at": "2019-11-21T02:12:07Z",
+    "updated_at": "2019-11-25T16:18:24Z",
     "closed_at": null,
     "author_association": "CONTRIBUTOR",
     "body": "## 🚨 WARNING: Because of the controversial nature of this ECIP, it has been targeted by bots and users with financial incentives to attack developers. 🚨 \r\n\r\n#### All references to SHA3 refer to Keccak256, the algorithm used throughout the Ethereum ecosystem.\r\n\r\n### Change the ETC Proof of Work Algorithm to SHA3 (Keccak256)\r\n\r\n    ECIP: 1049\r\n    Title: Change the ETC Proof of Work Algorithm to SHA3 (Keccak256)\r\n    Status: Draft\r\n    Type: Network\r\n    Discussion: https://github.com/ethereumclassic/ECIPs/issues/13\r\n    Author: Alexander Tsankov (alexander.tsankov@colorado.edu)\r\n    License: Apache-2.0\r\n    Created: 2019-01-08\r\n\r\n### Abstract\r\nA proposal to replace the current Ethereum Classic proof of work algorithm with Keccak-256.\r\n\r\n### Motivation\r\n* A response to the recent double-spend attacks against Ethereum Classic. Most of this hashpower was rented or came from other chains, specfically Ethereum (ETH). A seperate proof of work algorithm would encourage the development of a specialized Ethereum Classic mining community, and blunt the ability for attackers to purchase mercenary hash power on the open-market. \r\n\r\n* As a secondary benefit, deployed smart contracts and dapps running on chain are currently able to use `keccak256()` in their code. This ECIP could open the possibility of smart contracts being able to evaluate chain state, and simplify second layer (L2) development.\r\n\r\n### Rationale\r\n\r\n### Reason 1: Similarity to Bitcoin\r\nThe Bitcoin network currently uses the CPU-intensive SHA256 Algorithm to evaluate blocks. When Ethereum was deployed it used a different algorithm, Dagger-Hashimoto, which eventually became Ethash on 1.0 launch. Dagger-Hashimoto was explicitly designed to be memory-intensive with the goal of ASIC resistance [1]. It has been provably unsuccessful at this goal, with Ethash ASICs currently easily availalble on the market.\r\n\r\nKeccak256 (aka SHA3) is the product of decades of research and the winner of a multi-year contest held by NIST that has rigorously verified its robustness and quality as a hashing algorithm. It is one of the only hashing algorithms besides SHA256 that is allowed for military and scientific-grade applications, and can provide sufficient hashing entropy for a proof of work system. This algorithm would position Ethereum Classic at an advantage in mission-critical blockchain applications that are required to use provably high-strength algorithms. [2]\r\n\r\nA CPU-intensive algorithm like Keccak256 would allow both the uniqueness of a fresh PoW algorithm that has not had ASICs developed against it, while at the same time allowing for organic optimization of a dedicated and financially commited miner base, much the way Bitcoin did with its own SHA256 algorithm.\r\n\r\nIf Ethereum Classic is to succeed as a project, we need to take what we have learned from Bitcoin and move towards CPU-hard PoW algorithms.\r\n\r\n> At first, most users would run network nodes, but as the network grows beyond a certain point, it would be left more and more to specialists with server farms of specialized hardware. - Satoshi Nakamoto (2008-11-03) [3]\r\n\r\n*Note: Please consider this is from 2008, and the Bitcoin community at that time did not differentiate between node operators and miners. I interpret \"network nodes\" in this quote to refer to miners, and \"server farms of specialized hardware\" to refer to mining farms.*\r\n\r\n\r\n### Reason 2: Value to Smart Contract Developers\r\nIn Solidity, developers have access to the `keccak256()` function, which allows a smart contract to efficiently calculate the hash of a given input. This has been used in a number of interesting projects launched on both Ethereum and Ethereum-Classic. Most Specifcally a project called 0xBitcoin [4] - which the ERC-918 spec was based on.\r\n\r\n0xBitcoin is a security-audited [5] dapp that allows users to submit a proof of work hash directly to a smart contract running on the Ethereum blockchain. If the sent hash matches the given requirements, a token reward is trustlessly dispensed to the sender, along with the contract reevaluating difficulty parameters. This project has run successfully for over 10 months, and has minted over 3 million tokens [6].\r\n\r\nWith the direction that Ethereum Classic is taking: a focus on Layer-2 solutions and cross-chain compatibility; being able to evaluate proof of work on chain, will be tremendously valuable to developers of both smart-contracts and node software writers. This could greatly simplify interoperability. \r\n\r\n### Implementation\r\n\r\nExample of a Smart contract hashing being able to trustlessly Keccak hash a hypothetical block header.\r\n![example](https://i.imgur.com/xh3WgCF.png)\r\n\r\nHere is an analysis of Monero's nonce-distribution for \"cryptonight\", an algorithm similar to Ethash, which also attempts to be \"ASIC-Resistant\" it is very clear in the picture that before the hashing algorithm is changed there is a clear nonce-pattern. This is indicative of a major failure in a hashing algorithm, and should illustrate the dangers of disregarding proper cryptographic security. Finding a hashing pattern would be far harder using a proven system like Keccak:\r\n\r\n![example](https://i.imgur.com/vVdmzm9.jpg)\r\n\r\nBased on analysis of the EVM architecture [here](https://cdn.discordapp.com/attachments/223675625334898688/534597157693685760/eth.jpg) there are two main pieces that need to be changed:\r\n\r\n1. The Proof of work function needs to be replaced with Keccak256\r\n1. The Function that checks the nonce-header  in the block needs to know to accept Keccak256 hashes as valid for a block.\r\n\r\n![example](https://i.imgur.com/2hobqOL.png)\r\n\r\n#### Note on `mixHash` + `nonceHeader` \r\n\r\nIn the current Ethash system, the mixHash is a 256-bit string constructed based on the state of the blockchain. This is concatenated with the nonceHeader, 64-bit, and the entirety (320-bits) of it is hashed to verify proof of work.\r\n\r\nFor this proposal we recommend miners being able to fill the `mixHash` field with whatever data they desire. This will allow for a total of 320-bits for miners to use for both submitting proof of work, but also to signal mining pools and voting on certain ECIP proposals.\r\n\r\n### Implementation\r\n\r\n**PROPOSED ACTIVATION BLOCK: 11,000,000** contingent on acceptance of ECIP. \r\n\r\n![roadmap](https://user-images.githubusercontent.com/40745785/66788717-a919a700-eeb6-11e9-9773-c6a8d188a7dd.png)\r\n\r\n\r\n![spec](https://user-images.githubusercontent.com/40745785/66788715-a28b2f80-eeb6-11e9-8add-c3606a91a32d.png)\r\n\r\n\r\nA testnet implementing this ECIP, is currently live, with more information available at [Astor.host](https://astor.host)\r\n\r\n* Node Implementation (based on Parity). Located [here](https://github.com/antsankov/parity-ethereum/tree/sha3)\r\n* SHA3 CPU Miner. Located [here](https://github.com/antsankov/ethereum-cpu-miner)\r\n* Block Explorer. Located [here](https://explore.astor.host/)\r\n* Live Network Stats. Located [here](https://stats.astor.host/)\r\n\r\n### References: \r\n\r\n1. https://github.com/ethereum/wiki/wiki/Dagger-Hashimoto#introduction\r\n1. https://en.wikipedia.org/wiki/SHA-3\r\n1. https://satoshi.nakamotoinstitute.org/emails/cryptography/2/\r\n1. https://github.com/0xbitcoin/white-paper\r\n1. https://github.com/EthereumCommonwealth/Auditing/issues/102\r\n1. https://etherscan.io/address/0xb6ed7644c69416d67b522e20bc294a9a9b405b31\r\n\r\n### Previous discussion from [Pull request](https://github.com/ethereumclassic/ECIPs/pull/8)\r\n![example](https://i.imgur.com/09Rtv0V.png)\r\n![example](https://i.imgur.com/1TJtgO7.png)\r\n![example](https://i.imgur.com/TTLZunn.png)\r\n![example](https://i.imgur.com/uOoBFF9.png)\r\n![example](https://i.imgur.com/irYFhRy.png)\r\n![example](https://i.imgur.com/AoChMCy.png)\r\n\r\n\r\n",
diff --git a/.gh-issues/00013_557964975.json b/.gh-issues/00013_557964975.json
new file mode 100644
index 0000000..6cc14a2
--- /dev/null
+++ b/.gh-issues/00013_557964975.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557964975",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-557964975",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 557964975,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1Nzk2NDk3NQ==",
+    "user": {
+      "login": "p3c-bot",
+      "id": 40745785,
+      "node_id": "MDQ6VXNlcjQwNzQ1Nzg1",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/40745785?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/p3c-bot",
+      "html_url": "https://github.com/p3c-bot",
+      "followers_url": "https://api.github.com/users/p3c-bot/followers",
+      "following_url": "https://api.github.com/users/p3c-bot/following{/other_user}",
+      "gists_url": "https://api.github.com/users/p3c-bot/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/p3c-bot/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/p3c-bot/subscriptions",
+      "organizations_url": "https://api.github.com/users/p3c-bot/orgs",
+      "repos_url": "https://api.github.com/users/p3c-bot/repos",
+      "events_url": "https://api.github.com/users/p3c-bot/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/p3c-bot/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-25T02:43:38Z",
+    "updated_at": "2019-11-25T02:44:44Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "After the call last week, I propose the following as a compromise for the ECIP1049, and welcome feedback from interested parties:\r\n\r\n**Instead of replacing Ethash with Keccak256 entirely, the network can instead accept both of the hashes as valid for proof of work. A block can be sealed with both Ethash OR Keccak256**\r\n\r\nA dual proof of work system, how is this possible without adding lots of complexity to the system?\r\n\r\n![new](https://user-images.githubusercontent.com/40745785/69508217-264b2980-0f03-11ea-8af1-751016d6f642.png)\r\n\r\nWell it is actually quite simple. Part of the requirement for the DAG generation is what’s called a “mixHash” — which is a 256 bit string which can be used to generate the DAG. Because Keccak256 does not need a DAG (the DAG only exists for “ASIC resistance” purposes) we get this extra 256 bit string which is very useful, we really can fill it with anything we want.\r\n\r\nSo here are the nuts and bolts:\r\n\r\nIf a miner sees `0x0000` as the first 4 characters of the mixHash — then it checks if the block is sealed with Keccak256, if it is, then the block is valid. If it does not see `0x0000` it checks if it is sealed with Ethash, if it is, the block is valid.\r\n```\r\nif blockheader.mixHash[0:4] == '0x0000':\r\n   validateKeccak256PoW()\r\nelse:\r\n   validateEthashPow()\r\n```\r\nThis allows both sides to get exactly what they want:\r\n\r\nThose in favor of Keccak, can submit work to the blockchain that is considered valid. This means dedicated miners can create chips and ASICs for the network, and defend against potential rogue Ethash mining pools, the same ones that 51% attacked ETC numerous times in January 2019.\r\n\r\nThose in favor of staying with Ethash now know that, if we activate ECIP1049 and we don’t have any Keccak miners on the network, it’s not an issue because everybody can just keep business as usual.\r\n\r\nIf ECIP1049 is activated, no new tools need to be written, since now two PoW methods are considered valid as opposed to just one. Everyone agrees that both of these two PoW methods are collision resistant and can function for block sealing. In fact we believe, this solution qualifies as a soft fork, because Ethash is a composite of Keccak256 plus a lot of other things. By removing the clutter, we are accepting merely a subset of what we used to accept. However, it is not a conventional Soft Fork, because the client still needs to be updated. \r\n\r\nI am interested to hear what the community thinks of this and whether this would reach consensus.\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557964975/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_558101694.json b/.gh-issues/00013_558101694.json
new file mode 100644
index 0000000..b150f17
--- /dev/null
+++ b/.gh-issues/00013_558101694.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/558101694",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-558101694",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 558101694,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODEwMTY5NA==",
+    "user": {
+      "login": "AndreaLanfranchi",
+      "id": 15280851,
+      "node_id": "MDQ6VXNlcjE1MjgwODUx",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/15280851?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/AndreaLanfranchi",
+      "html_url": "https://github.com/AndreaLanfranchi",
+      "followers_url": "https://api.github.com/users/AndreaLanfranchi/followers",
+      "following_url": "https://api.github.com/users/AndreaLanfranchi/following{/other_user}",
+      "gists_url": "https://api.github.com/users/AndreaLanfranchi/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/AndreaLanfranchi/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/AndreaLanfranchi/subscriptions",
+      "organizations_url": "https://api.github.com/users/AndreaLanfranchi/orgs",
+      "repos_url": "https://api.github.com/users/AndreaLanfranchi/repos",
+      "events_url": "https://api.github.com/users/AndreaLanfranchi/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/AndreaLanfranchi/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-25T10:54:02Z",
+    "updated_at": "2019-11-25T11:11:35Z",
+    "author_association": "NONE",
+    "body": "@p3c-bot \r\nyou're probably mixing `mixHash` with `seedHash`. \r\nThe first has nothing to do with DAG generation and is partial output of Ethash algo for quick verification.\r\nThe latter is the hash used for linear search of DAG epoch and is **constant** during all epoch duration (i.e. 30k blocks). \r\n\r\nThere is no `mixHash` pushed from work provider (pool or node) to work consumer (miner).\r\n\r\nDue to this your method summarizes to _some epochs make use of Ethash some other make use of Keccak256 only_ : and this implies a huge work on nodes softwares as they need to adjust diff to hashrate which would vary a lot.\r\n\r\nImplementation of two algo with so different hashrates (given constant hardware) is not trivial for nodes. Also this would break ASIC/noASIC balance as a series of blocks would be mined by ASIC only and others by GPUs mostly.\r\n\r\n> If ECIP1049 is activated, no new tools need to be written, \r\n\r\nA lot of tools have to be (re)written, tested, deployed ... a lot of work.\r\nNodes **must** agree on hashing algorithm **before** the block gets mined.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/558101694/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_558115358.json b/.gh-issues/00013_558115358.json
new file mode 100644
index 0000000..cf8ba31
--- /dev/null
+++ b/.gh-issues/00013_558115358.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/558115358",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-558115358",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 558115358,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODExNTM1OA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-25T11:31:31Z",
+    "updated_at": "2019-11-25T11:31:31Z",
+    "author_association": "MEMBER",
+    "body": "I don't think this makes sense, @p3c-bot.\r\nBetter to stick with your original plan.\r\n\r\n@AndreaLanfranchi Thanks for the input.\r\n\r\nWould it make sense for ECIP-1049 to consider `keccak256(keccak256())` ?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/558115358/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00013_558228538.json b/.gh-issues/00013_558228538.json
new file mode 100644
index 0000000..af853d7
--- /dev/null
+++ b/.gh-issues/00013_558228538.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/558228538",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-558228538",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/13",
+    "id": 558228538,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODIyODUzOA==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-25T16:18:23Z",
+    "updated_at": "2019-11-25T16:18:23Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "@bobsummerwill @p3c-bot please see [my formatting comment here](https://github.com/ethereumclassic/ECIPs/issues/13#issuecomment-547223402)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/558228538/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 1,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00063.json b/.gh-issues/00063.json
index 577b365..790bb01 100644
--- a/.gh-issues/00063.json
+++ b/.gh-issues/00063.json
@@ -32,17 +32,17 @@
     "labels": [
 
     ],
-    "state": "open",
+    "state": "closed",
     "locked": false,
     "assignee": null,
     "assignees": [
 
     ],
     "milestone": null,
-    "comments": 1,
+    "comments": 2,
     "created_at": "2019-03-30T22:14:22Z",
-    "updated_at": "2019-04-02T10:03:40Z",
-    "closed_at": null,
+    "updated_at": "2019-11-27T17:15:50Z",
+    "closed_at": "2019-11-27T17:15:50Z",
     "author_association": "MEMBER",
     "body": "< Placeholder >",
     "reactions": {
diff --git a/.gh-issues/00063_559163787.json b/.gh-issues/00063_559163787.json
new file mode 100644
index 0000000..e781158
--- /dev/null
+++ b/.gh-issues/00063_559163787.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559163787",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/63#issuecomment-559163787",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/63",
+    "id": 559163787,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTE2Mzc4Nw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T16:38:57Z",
+    "updated_at": "2019-11-27T16:38:57Z",
+    "author_association": "MEMBER",
+    "body": "There is no actual proposal here.  Please can we close this?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559163787/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00064.json b/.gh-issues/00064.json
index f0ae423..02abfb6 100644
--- a/.gh-issues/00064.json
+++ b/.gh-issues/00064.json
@@ -32,17 +32,17 @@
     "labels": [
 
     ],
-    "state": "open",
+    "state": "closed",
     "locked": false,
     "assignee": null,
     "assignees": [
 
     ],
     "milestone": null,
-    "comments": 2,
+    "comments": 3,
     "created_at": "2019-03-30T22:15:50Z",
-    "updated_at": "2019-06-12T11:27:52Z",
-    "closed_at": null,
+    "updated_at": "2019-11-27T17:15:37Z",
+    "closed_at": "2019-11-27T17:15:37Z",
     "author_association": "MEMBER",
     "body": "< Placeholder >",
     "reactions": {
diff --git a/.gh-issues/00064_559163964.json b/.gh-issues/00064_559163964.json
new file mode 100644
index 0000000..e33ba28
--- /dev/null
+++ b/.gh-issues/00064_559163964.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559163964",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/64#issuecomment-559163964",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/64",
+    "id": 559163964,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTE2Mzk2NA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T16:39:22Z",
+    "updated_at": "2019-11-27T16:39:22Z",
+    "author_association": "MEMBER",
+    "body": "There is no actual proposal here.  Please can we close this?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559163964/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00148.json b/.gh-issues/00148.json
index 6ba4e96..4e84c24 100644
--- a/.gh-issues/00148.json
+++ b/.gh-issues/00148.json
@@ -39,9 +39,9 @@
 
     ],
     "milestone": null,
-    "comments": 0,
+    "comments": 1,
     "created_at": "2019-10-20T17:42:05Z",
-    "updated_at": "2019-10-20T17:42:05Z",
+    "updated_at": "2019-11-27T16:40:28Z",
     "closed_at": null,
     "author_association": "CONTRIBUTOR",
     "body": "Discussion section for ratchet-pricing proposal",
diff --git a/.gh-issues/00148_559164340.json b/.gh-issues/00148_559164340.json
new file mode 100644
index 0000000..7f3fdf6
--- /dev/null
+++ b/.gh-issues/00148_559164340.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559164340",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/148#issuecomment-559164340",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/148",
+    "id": 559164340,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTE2NDM0MA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T16:40:28Z",
+    "updated_at": "2019-11-27T16:40:28Z",
+    "author_association": "MEMBER",
+    "body": "Please could you link to the proposal, @zmitton?  I do not know what this refers to.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559164340/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00172.json b/.gh-issues/00172.json
index 4b9d96b..77dae4f 100644
--- a/.gh-issues/00172.json
+++ b/.gh-issues/00172.json
@@ -40,17 +40,17 @@
         "description": "Requires consensus consideration"
       }
     ],
-    "state": "open",
+    "state": "closed",
     "locked": false,
     "assignee": null,
     "assignees": [
 
     ],
     "milestone": null,
-    "comments": 6,
+    "comments": 7,
     "created_at": "2019-11-07T02:24:24Z",
-    "updated_at": "2019-11-08T21:14:28Z",
-    "closed_at": null,
+    "updated_at": "2019-11-26T18:22:03Z",
+    "closed_at": "2019-11-26T18:22:03Z",
     "author_association": "MEMBER",
     "body": "Discussions for ProgPoW for ETC Discussions concerning this Pull Request: https://github.com/ethereumclassic/ECIPs/pull/171",
     "reactions": {
diff --git a/.gh-issues/00172_558749543.json b/.gh-issues/00172_558749543.json
new file mode 100644
index 0000000..ce1ef9e
--- /dev/null
+++ b/.gh-issues/00172_558749543.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/558749543",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/172#issuecomment-558749543",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/172",
+    "id": 558749543,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODc0OTU0Mw==",
+    "user": {
+      "login": "GregTheGreek",
+      "id": 16929357,
+      "node_id": "MDQ6VXNlcjE2OTI5MzU3",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/16929357?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/GregTheGreek",
+      "html_url": "https://github.com/GregTheGreek",
+      "followers_url": "https://api.github.com/users/GregTheGreek/followers",
+      "following_url": "https://api.github.com/users/GregTheGreek/following{/other_user}",
+      "gists_url": "https://api.github.com/users/GregTheGreek/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/GregTheGreek/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/GregTheGreek/subscriptions",
+      "organizations_url": "https://api.github.com/users/GregTheGreek/orgs",
+      "repos_url": "https://api.github.com/users/GregTheGreek/repos",
+      "events_url": "https://api.github.com/users/GregTheGreek/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/GregTheGreek/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-26T18:02:12Z",
+    "updated_at": "2019-11-26T18:02:12Z",
+    "author_association": "NONE",
+    "body": "I believe this can be closed.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/558749543/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00175.json b/.gh-issues/00175.json
index 1094126..a577480 100644
--- a/.gh-issues/00175.json
+++ b/.gh-issues/00175.json
@@ -38,13 +38,49 @@
     "assignees": [
 
     ],
-    "milestone": null,
-    "comments": 3,
+    "milestone": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/1",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/milestone/1",
+      "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/1/labels",
+      "id": 4777611,
+      "node_id": "MDk6TWlsZXN0b25lNDc3NzYxMQ==",
+      "number": 1,
+      "title": "Agharta Hardfork   ",
+      "description": "",
+      "creator": {
+        "login": "realcodywburns",
+        "id": 13103499,
+        "node_id": "MDQ6VXNlcjEzMTAzNDk5",
+        "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/realcodywburns",
+        "html_url": "https://github.com/realcodywburns",
+        "followers_url": "https://api.github.com/users/realcodywburns/followers",
+        "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
+        "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
+        "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
+        "repos_url": "https://api.github.com/users/realcodywburns/repos",
+        "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+        "type": "User",
+        "site_admin": false
+      },
+      "open_issues": 3,
+      "closed_issues": 3,
+      "state": "open",
+      "created_at": "2019-10-23T14:38:36Z",
+      "updated_at": "2019-11-28T06:23:01Z",
+      "due_on": null,
+      "closed_at": null
+    },
+    "comments": 7,
     "created_at": "2019-11-07T16:53:08Z",
-    "updated_at": "2019-11-10T12:58:32Z",
+    "updated_at": "2019-11-29T12:56:14Z",
     "closed_at": null,
     "author_association": "MEMBER",
-    "body": "Ref [ECIP-1056](https://github.com/ethereumclassic/ECIPs/blob/master/_specs/ecip-1056.md) #75 #131 #135 \r\n\r\n### ETC Core Devs Call - Agharta Final Finalization\r\n\r\nWhen: **Thursday, December 12, 2019, 1pm UTC**, 60 minutes max.\r\n\r\nWhere: **Ethereum Classic Discord** https://discord.gg/dwxb6nf `#ecips` channel. Will use/create a voice channel _ad hoc._\r\n\r\n### Agenda\r\n\r\n- Quick client teams check-in\r\n  - Parity Ethereum / Parity Tech\r\n  - Geth Classic / ChainSafe, ETCLabs Core\r\n  - Multi-Geth / Multi-Geth, ETCLabs Core \r\n  - Hyperledger Besu / ChainSafe, PegaSys\r\n- Agharta (ECIP-1056) is in _\"last call\"_ state\r\n  - ECIP-1056 needs to be **accepted**\r\n    - evaluate testing on morden testnet\r\n    - evaluate testing on mordor testnet\r\n    - evaluate testing on kotti testnet\r\n  - discuss a timeline for the protocol upgrade\r\n    - **agree on a block number for mainnet**\r\n\r\nPlease comment to add items to the agenda",
+    "body": "Ref [ECIP-1056](https://github.com/ethereumclassic/ECIPs/blob/master/_specs/ecip-1056.md) #75 #131 #135 \r\n\r\n### ETC Core Devs Call - Agharta Final Finalization\r\n\r\nWhen: **Thursday, December 12, 2019, 1pm UTC**, 60 minutes max.\r\n\r\nWhere: **Ethereum Classic Discord** https://discord.gg/dwxb6nf `#ecips` channel. Will use/create a voice channel _ad hoc._\r\n\r\nMeeting Coordinator: @YazzyYaz \r\n\r\n### Agenda\r\n\r\n- Quick client teams check-in\r\n  - Parity Ethereum / Parity Tech\r\n  - Geth Classic / ChainSafe, ETCLabs Core\r\n  - Multi-Geth / Multi-Geth, ETCLabs Core \r\n  - Hyperledger Besu / ChainSafe, PegaSys\r\n- Agharta (ECIP-1056) is in _\"last call\"_ state\r\n  - ECIP-1056 needs to be **accepted**\r\n    - evaluate testing on morden testnet\r\n    - evaluate testing on mordor testnet\r\n    - evaluate testing on kotti testnet\r\n  - discuss a timeline for the protocol upgrade\r\n    - **agree on a block number for mainnet**\r\n\r\nPlease comment to add items to the agenda",
     "reactions": {
       "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/175/reactions",
       "total_count": 0,
diff --git a/.gh-issues/00175_559246169.json b/.gh-issues/00175_559246169.json
new file mode 100644
index 0000000..88630a1
--- /dev/null
+++ b/.gh-issues/00175_559246169.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559246169",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/175#issuecomment-559246169",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/175",
+    "id": 559246169,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTI0NjE2OQ==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T20:48:49Z",
+    "updated_at": "2019-11-27T20:48:49Z",
+    "author_association": "MEMBER",
+    "body": "This can be closed!?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559246169/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00175_559358882.json b/.gh-issues/00175_559358882.json
new file mode 100644
index 0000000..a42160e
--- /dev/null
+++ b/.gh-issues/00175_559358882.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559358882",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/175#issuecomment-559358882",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/175",
+    "id": 559358882,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTM1ODg4Mg==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-28T06:22:37Z",
+    "updated_at": "2019-11-28T06:22:37Z",
+    "author_association": "MEMBER",
+    "body": "No, 12/12 is a day in the future.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559358882/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00175_559559294.json b/.gh-issues/00175_559559294.json
new file mode 100644
index 0000000..c43cbaf
--- /dev/null
+++ b/.gh-issues/00175_559559294.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559559294",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/175#issuecomment-559559294",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/175",
+    "id": 559559294,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTU1OTI5NA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-28T16:52:09Z",
+    "updated_at": "2019-11-28T16:52:09Z",
+    "author_association": "MEMBER",
+    "body": "Hyperledger Besu support for Agharta was merged into the master branch two days ago (Including ETC mainnet, Mordor and Kotti configs), so barring bugs, etc, Besu is ready.   No doubt @GregTheGreek will have more details to share by 12/12.\r\n\r\nhttps://github.com/hyperledger/besu/pull/213\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559559294/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00175_559590207.json b/.gh-issues/00175_559590207.json
new file mode 100644
index 0000000..4862d79
--- /dev/null
+++ b/.gh-issues/00175_559590207.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559590207",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/175#issuecomment-559590207",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/175",
+    "id": 559590207,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTU5MDIwNw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-28T19:34:37Z",
+    "updated_at": "2019-11-28T19:34:37Z",
+    "author_association": "MEMBER",
+    "body": "Hyperledger Besu 1.3.6 point release with ETC Agharta support due on Tuesday 3rd December.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559590207/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177.json b/.gh-issues/00177.json
index dec2173..cf9f0f4 100644
--- a/.gh-issues/00177.json
+++ b/.gh-issues/00177.json
@@ -32,17 +32,53 @@
     "labels": [
 
     ],
-    "state": "open",
+    "state": "closed",
     "locked": false,
     "assignee": null,
     "assignees": [
 
     ],
-    "milestone": null,
-    "comments": 4,
+    "milestone": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/2",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/milestone/2",
+      "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/2/labels",
+      "id": 4885758,
+      "node_id": "MDk6TWlsZXN0b25lNDg4NTc1OA==",
+      "number": 2,
+      "title": "Aztlán Hardfork",
+      "description": "",
+      "creator": {
+        "login": "sorpaas",
+        "id": 6277322,
+        "node_id": "MDQ6VXNlcjYyNzczMjI=",
+        "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/sorpaas",
+        "html_url": "https://github.com/sorpaas",
+        "followers_url": "https://api.github.com/users/sorpaas/followers",
+        "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+        "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+        "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+        "repos_url": "https://api.github.com/users/sorpaas/repos",
+        "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+        "type": "User",
+        "site_admin": false
+      },
+      "open_issues": 1,
+      "closed_issues": 4,
+      "state": "open",
+      "created_at": "2019-11-27T20:32:02Z",
+      "updated_at": "2019-11-29T16:18:06Z",
+      "due_on": null,
+      "closed_at": null
+    },
+    "comments": 5,
     "created_at": "2019-11-07T17:22:16Z",
-    "updated_at": "2019-11-10T12:04:02Z",
-    "closed_at": null,
+    "updated_at": "2019-11-28T06:29:12Z",
+    "closed_at": "2019-11-28T06:29:12Z",
     "author_association": "MEMBER",
     "body": "Ref [ECIP-1061](https://github.com/ethereumclassic/ECIPs/blob/master/_specs/ecip-1061.md) #81 #157 #176 \r\n\r\n### ETC Core Devs Call - Aztlán Finalization\r\n\r\nWhen: **Wednesday, November 27, 2019, 1pm UTC**, 60 minutes max.\r\n\r\nWhere: **Ethereum Classic Discord** https://discord.gg/dwxb6nf `#ecips` channel. Will use/create a voice channel _ad hoc._\r\n\r\n### Agenda\r\n\r\n- Quick client teams check-in\r\n  - Parity Ethereum / Parity Tech\r\n  - Geth Classic / ChainSafe, ETCLabs Core\r\n  - Multi-Geth / Multi-Geth, ETCLabs Core \r\n  - Hyperledger Besu / ChainSafe, PegaSys\r\n- Aztlán (ECIP-1061) needs to be either **accepted** or _updated_ (or _rejected_)\r\n  - discuss included EIPs\r\n  - discuss a timeline for the protocol upgrade\r\n    - Mordor Classic and Kotti Classic testnet (February?)\r\n    - Ethereum Classic mainnet (March?)\r\n- anything else related to Aztlán\r\n\r\nPlease comment to add items to the agenda",
     "reactions": {
diff --git a/.gh-issues/00177_559099424.json b/.gh-issues/00177_559099424.json
new file mode 100644
index 0000000..2d30c59
--- /dev/null
+++ b/.gh-issues/00177_559099424.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559099424",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-559099424",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 559099424,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTA5OTQyNA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T14:01:29Z",
+    "updated_at": "2019-11-27T14:01:29Z",
+    "author_association": "MEMBER",
+    "body": "\r\n### Attendees\r\n- bobsummerwill\r\n- Classic_Kevin_IOHK\r\n- DontPanicBurns\r\n- GregTheGreek\r\n- husainfazel\r\n- soc1c\r\n- sorpaas\r\n- Tj\r\n- tzdybal\r\n- wolf_li\r\n- yaz\r\n- zacmitton\r\n\r\n### Call minutes\r\n- Afri: Let's start discussing Aztlan ECIP variants\r\n- Afri: Main difference is inclusion of EIP 1884 - yes or no? any comments?\r\n- Tomek: We don't want to break existing contracts\r\n- Wei: EIP 1884 actually fixes a DoS vector that should be considered\r\n- Wei: If we want to enable we should analyze the ETC blockchain first\r\n- Bob: We should not exclude EIP 1884 as it is an optimization\r\n- Bob: Ideally, we want to do that in a backward-compatible way\r\n- Bob: Safe choice would be Istanbul without EIP 1884, the even better choice is Istanbul with EIP 1884 plus account versioning\r\n- Wei: Proposes account versioning hardfork first\r\n- Tomek: What would be the distance between the two hardforks?\r\n- Wei: Normal hardfork, no minimal distance, maybe a couple of weeks\r\n- Terry: Do you have a recommendation what to do first?\r\n- Zac: Why would contracts break from EIP 1884?\r\n- Bob: Especially the 600 Aragon contracts would break\r\n- Afri: Explicit gas price assumptions written in the contract\r\n- Cody: But that is a programming issue not protocol issue\r\n- Zac: If it's a weird assembly thing, then it's just more unlikely\r\n- Wei: Some weird hack\r\n- Afri: What's the sentiment, with or without EIP 1884?\r\n- Yaz: EIP 1884 should be excluded and come together with account versioning\r\n- Terry: Would you consider account versioning first\r\n- Yaz: Sure\r\n- Afri: Aztlan could be activated easily in 3 months because all clients support it and bundle EIP 1884 with account versioning later\r\n- Bob: EIP 1702 was implemented in all clients already\r\n- Bob: We should stick to 3 months without delay though\r\n- Wei: 1702 has an extension, new version could be implemented easily and in a backward-compatible way\r\n- Wei: We should have account versioning after Istanbul\r\n- Greg: Asks a sleepy question about EIP 1884\r\n- Wei: Answers something\r\n- Greg: \"Ooooh\" (good morning!)\r\n- Yaz: For Aztlan we can use opportunity to talk about other ECIPs, too\r\n- Tomek: Anyone proposing any ECIP? If not, we shouldn't discuss them\r\n- Bob: No proposals\r\n- Afri: EF network will act as a testnet for Classic with the upcoming Istanbul fork\r\n- Tomek: Best idea would be to have Aztlan without EIP 1884 and then have EIP 1884 with account versioning?\r\n- Wei: Yeah right, we would need a new specification\r\n- Afri: Shall we lock in Aztlan?\r\n- **Rough consensus on Aztlan without EIP 1884 (Yingchun flavor)**\r\n- Afri: Shall we add EIP 1884 plus account versioning in a subsequent hardfork?\r\n- Bob: Maybe new ECIP, doesn't necessarily have to be EIP 1884\r\n- Yaz: Do we need other tooling if we exclude 1884?\r\n- Bob: Not required\r\n- Wei: It's only gas assumptions. The correct answer is \"yes\" but the differences are only very slight.\r\n- Bob: Differences are slight anyways\r\n- Back and forth between Bob and Wei\r\n- Greg: Doesn't think the gas table affects compiler, we are probably good\r\n- Zac: Why is it in there?\r\n- Afri: Aztlan on mainnet March 2020, testnet in February 2020?\r\n- Yaz: Might break anything, so careful\r\n- Bob: Just be clear, we don't have to maintain any tooling\r\n- Greg also says something\r\n- Afri: Let's move Aztlan to last call? Testnets in February and decided block numbers offline?\r\n- _Silence..._\r\n- Afri: Is this \"don't care\" or \"rough consensus?\"\r\n- Cody: _Rough consensus..._\r\n- Wei: Just to be clear? Are we using ECIP 1072? How long should \"last call\" last?\r\n- Afri: Three weeks \"last call\" would be sufficient to evaluate Istanbul on EF network\r\n- Everyone: Sounds good\r\n- Afri: Any final comments?\r\n- Bob: Are we calling it Yingchun now?\r\n- Wei: No, let's stick with Aztlan\r\n- Yaz: We already communicated Aztlan\r\n- Afri: Let's call it Yingchun flavored Aztlan (ECIP 1061)\r\n- _Thanks everyone_\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559099424/reactions",
+      "total_count": 4,
+      "+1": 4,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00182.json b/.gh-issues/00182.json
index 4482b35..61dcdd2 100644
--- a/.gh-issues/00182.json
+++ b/.gh-issues/00182.json
@@ -32,7 +32,7 @@
     "labels": [
 
     ],
-    "state": "open",
+    "state": "closed",
     "locked": false,
     "assignee": {
       "login": "bobsummerwill",
@@ -79,8 +79,8 @@
     "milestone": null,
     "comments": 1,
     "created_at": "2019-11-13T01:34:32Z",
-    "updated_at": "2019-11-13T01:45:03Z",
-    "closed_at": null,
+    "updated_at": "2019-11-27T13:48:57Z",
+    "closed_at": "2019-11-27T13:48:57Z",
     "author_association": "MEMBER",
     "body": "Discussion related to https://github.com/ethereumclassic/ECIPs/pull/183.\r\n\r\n**\"ASIC resistance\" is a myth.  The ETC ecosystem rejects this myth.**",
     "reactions": {
diff --git a/.gh-issues/00188.json b/.gh-issues/00188.json
index c54055d..8c2a3f1 100644
--- a/.gh-issues/00188.json
+++ b/.gh-issues/00188.json
@@ -32,7 +32,7 @@
     "labels": [
 
     ],
-    "state": "open",
+    "state": "closed",
     "locked": false,
     "assignee": null,
     "assignees": [
@@ -41,8 +41,8 @@
     "milestone": null,
     "comments": 0,
     "created_at": "2019-11-16T16:08:17Z",
-    "updated_at": "2019-11-16T16:08:17Z",
-    "closed_at": null,
+    "updated_at": "2019-11-27T13:48:47Z",
+    "closed_at": "2019-11-27T13:48:47Z",
     "author_association": "MEMBER",
     "body": "Discussion for https://github.com/ethereumclassic/ECIPs/pull/186",
     "reactions": {
diff --git a/.gh-issues/00190.json b/.gh-issues/00190.json
index 029ba8e..dad3c6b 100644
--- a/.gh-issues/00190.json
+++ b/.gh-issues/00190.json
@@ -39,9 +39,9 @@
 
     ],
     "milestone": null,
-    "comments": 0,
+    "comments": 1,
     "created_at": "2019-11-17T17:07:31Z",
-    "updated_at": "2019-11-17T17:07:31Z",
+    "updated_at": "2019-11-26T18:05:44Z",
     "closed_at": null,
     "author_association": "MEMBER",
     "body": "",
diff --git a/.gh-issues/00190_558750917.json b/.gh-issues/00190_558750917.json
new file mode 100644
index 0000000..c363047
--- /dev/null
+++ b/.gh-issues/00190_558750917.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/558750917",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/190#issuecomment-558750917",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/190",
+    "id": 558750917,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODc1MDkxNw==",
+    "user": {
+      "login": "GregTheGreek",
+      "id": 16929357,
+      "node_id": "MDQ6VXNlcjE2OTI5MzU3",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/16929357?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/GregTheGreek",
+      "html_url": "https://github.com/GregTheGreek",
+      "followers_url": "https://api.github.com/users/GregTheGreek/followers",
+      "following_url": "https://api.github.com/users/GregTheGreek/following{/other_user}",
+      "gists_url": "https://api.github.com/users/GregTheGreek/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/GregTheGreek/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/GregTheGreek/subscriptions",
+      "organizations_url": "https://api.github.com/users/GregTheGreek/orgs",
+      "repos_url": "https://api.github.com/users/GregTheGreek/repos",
+      "events_url": "https://api.github.com/users/GregTheGreek/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/GregTheGreek/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-26T18:05:43Z",
+    "updated_at": "2019-11-26T18:05:43Z",
+    "author_association": "NONE",
+    "body": "Any description?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/558750917/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00195.json b/.gh-issues/00195.json
index d765bff..38a04e9 100644
--- a/.gh-issues/00195.json
+++ b/.gh-issues/00195.json
@@ -39,9 +39,9 @@
 
     ],
     "milestone": null,
-    "comments": 4,
+    "comments": 6,
     "created_at": "2019-11-21T17:25:34Z",
-    "updated_at": "2019-11-21T18:07:06Z",
+    "updated_at": "2019-11-27T16:47:36Z",
     "closed_at": null,
     "author_association": "MEMBER",
     "body": "* When: To be decided.\r\n* Where: **Ethereum Classic Discord** https://discord.gg/dwxb6nf `#ecips` channel. Will use/create a voice channel _ad hoc._\r\n\r\nDiscuss several signaling proposals, as this is not resolved since last call. cc @soc1c ",
diff --git a/.gh-issues/00195_559164709.json b/.gh-issues/00195_559164709.json
new file mode 100644
index 0000000..8dada0c
--- /dev/null
+++ b/.gh-issues/00195_559164709.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559164709",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/195#issuecomment-559164709",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/195",
+    "id": 559164709,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTE2NDcwOQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T16:41:27Z",
+    "updated_at": "2019-11-27T16:41:27Z",
+    "author_association": "MEMBER",
+    "body": "Is there any specific proposal or TODO here, @sorpaas?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559164709/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00195_559167273.json b/.gh-issues/00195_559167273.json
new file mode 100644
index 0000000..b587b10
--- /dev/null
+++ b/.gh-issues/00195_559167273.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559167273",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/195#issuecomment-559167273",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/195",
+    "id": 559167273,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTE2NzI3Mw==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T16:47:36Z",
+    "updated_at": "2019-11-27T16:47:36Z",
+    "author_association": "MEMBER",
+    "body": "@bobsummerwill 1076, 1022 and STATEVOTE (https://specs.that.world/36-statevote/)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559167273/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00204.json b/.gh-issues/00204.json
new file mode 100644
index 0000000..22c7b1f
--- /dev/null
+++ b/.gh-issues/00204.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/204",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/204/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/204/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/204/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/204",
+    "id": 529616385,
+    "node_id": "MDU6SXNzdWU1Mjk2MTYzODU=",
+    "number": 204,
+    "title": "Correct status for various ECIPs which appear wrong",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-27T23:28:49Z",
+    "updated_at": "2019-11-27T23:28:49Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "Discussion for https://github.com/ethereumclassic/ECIPs/pull/202",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/204/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00205.json b/.gh-issues/00205.json
new file mode 100644
index 0000000..3b783d7
--- /dev/null
+++ b/.gh-issues/00205.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/205",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/205/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/205/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/205/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/205",
+    "id": 529616681,
+    "node_id": "MDU6SXNzdWU1Mjk2MTY2ODE=",
+    "number": 205,
+    "title": "Reject ECIP-1063 - Integrated decentralized oracles and smart contracts",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-27T23:30:01Z",
+    "updated_at": "2019-11-27T23:30:01Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "Discussion for https://github.com/ethereumclassic/ECIPs/pull/203\r\n\r\nThis is just a bad idea, and is never going to happen.\r\nSorry, Jesse.\r\nBut we should reject this and clear out cognitive load.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/205/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 1,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00206.json b/.gh-issues/00206.json
new file mode 100644
index 0000000..904e9c3
--- /dev/null
+++ b/.gh-issues/00206.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/206",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/206/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/206/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/206/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/206",
+    "id": 529617094,
+    "node_id": "MDU6SXNzdWU1Mjk2MTcwOTQ=",
+    "number": 206,
+    "title": "Proposal to reject ECIP-1021, ECIP-1051, ECIP-1052 and ECIP-1057",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-27T23:31:32Z",
+    "updated_at": "2019-11-27T23:31:32Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "Discussion for https://github.com/ethereumclassic/ECIPs/pull/200.\r\n\r\nProposal to reject the following ECIPs:\r\n\r\nECIP-1021 - Token standard (= ERC-223 in Ethereum)\r\nECIP-1051 - Ethereum Classic Treasury system\r\nECIP-1052 - Smart-contract Security Auditing core\r\nECIP-1057 - Cold Staking\r\n\r\nThere is no support for these proposals.\r\nRealistically they will never happen.\r\n\r\nIf new champions wish to propose similar changes in the future they should create new ECIPs.\r\nWe should reduce our cognitive load and the clarify of our \"working set\" by pruning out such inactive or \"never going to happen\" proposals.\r\n\r\nDexaran has indicated that his efforts will now be applied against EOS and I wish him the best with that approach. https://twitter.com/BobSummerwill/status/1199718315683237888\r\n\r\nNobody has championed treasury proposals except for Dexaran either, and treasury proposals are deeply unpopular within ETC.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/206/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 1,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00209.json b/.gh-issues/00209.json
new file mode 100644
index 0000000..5d5de6a
--- /dev/null
+++ b/.gh-issues/00209.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/209",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/209/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/209/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/209/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/209",
+    "id": 530045129,
+    "node_id": "MDU6SXNzdWU1MzAwNDUxMjk=",
+    "number": 209,
+    "title": "Proposing Meeting Coordinators",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 2,
+    "created_at": "2019-11-28T18:45:07Z",
+    "updated_at": "2019-11-29T01:01:19Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "The current core dev meeting coordinator is informally Afri. Afri has said we \"can replace me anytime\". Given recent actions that Afri were not exactly following the \"protocol\" and were not exactly \"neutral\" in his position, I think it would be important to have some coordinator name list ready, in case we want to appoint a new one for all of our meetings.\r\n\r\nPlease feel free to propose names or propose yourself. Current list:\r\n\r\n@YazzyYaz \r\n@phyro \r\n@TokenHash \r\n@developerkevin ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/209/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00209_559582354.json b/.gh-issues/00209_559582354.json
new file mode 100644
index 0000000..79be174
--- /dev/null
+++ b/.gh-issues/00209_559582354.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559582354",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/209#issuecomment-559582354",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/209",
+    "id": 559582354,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTU4MjM1NA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-28T18:46:09Z",
+    "updated_at": "2019-11-28T18:46:09Z",
+    "author_association": "MEMBER",
+    "body": "I'm proposing @YazzyYaz and @TokenHash. @YazzyYaz has always been an peacemaker during all controversial discussions, and @TokenHash is a long-time member of the Ethereum Classic community who has contributed a lot and has been sticking to the ETC principles.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559582354/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00209_559627507.json b/.gh-issues/00209_559627507.json
new file mode 100644
index 0000000..6da829b
--- /dev/null
+++ b/.gh-issues/00209_559627507.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559627507",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/209#issuecomment-559627507",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/209",
+    "id": 559627507,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTYyNzUwNw==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T01:01:18Z",
+    "updated_at": "2019-11-29T01:01:18Z",
+    "author_association": "MEMBER",
+    "body": "I think @bitcoinheartless has proposed @phyro in addition, and @developerkevin self-proposed to be a coordinator. Thank you!",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559627507/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00210.json b/.gh-issues/00210.json
new file mode 100644
index 0000000..0538c80
--- /dev/null
+++ b/.gh-issues/00210.json
@@ -0,0 +1,96 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/210",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/210/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/210/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/210/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/210",
+    "id": 530073678,
+    "node_id": "MDU6SXNzdWU1MzAwNzM2Nzg=",
+    "number": 210,
+    "title": "Proposing a Picture for the Aztlán Hardfork",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/2",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/milestone/2",
+      "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/2/labels",
+      "id": 4885758,
+      "node_id": "MDk6TWlsZXN0b25lNDg4NTc1OA==",
+      "number": 2,
+      "title": "Aztlán Hardfork",
+      "description": "",
+      "creator": {
+        "login": "sorpaas",
+        "id": 6277322,
+        "node_id": "MDQ6VXNlcjYyNzczMjI=",
+        "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/sorpaas",
+        "html_url": "https://github.com/sorpaas",
+        "followers_url": "https://api.github.com/users/sorpaas/followers",
+        "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+        "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+        "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+        "repos_url": "https://api.github.com/users/sorpaas/repos",
+        "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+        "type": "User",
+        "site_admin": false
+      },
+      "open_issues": 1,
+      "closed_issues": 4,
+      "state": "open",
+      "created_at": "2019-11-27T20:32:02Z",
+      "updated_at": "2019-11-29T16:18:06Z",
+      "due_on": null,
+      "closed_at": null
+    },
+    "comments": 3,
+    "created_at": "2019-11-28T20:56:09Z",
+    "updated_at": "2019-11-29T12:36:07Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "![etc Aztlán hardfork](https://user-images.githubusercontent.com/48069525/69831442-b6ea7800-1229-11ea-8217-7e793754313a.png)\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/210/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00210_559657051.json b/.gh-issues/00210_559657051.json
new file mode 100644
index 0000000..c2a7490
--- /dev/null
+++ b/.gh-issues/00210_559657051.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559657051",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/210#issuecomment-559657051",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/210",
+    "id": 559657051,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTY1NzA1MQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T04:38:50Z",
+    "updated_at": "2019-11-29T04:38:50Z",
+    "author_association": "MEMBER",
+    "body": "Nice!",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559657051/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00210_559732619.json b/.gh-issues/00210_559732619.json
new file mode 100644
index 0000000..2774b6c
--- /dev/null
+++ b/.gh-issues/00210_559732619.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559732619",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/210#issuecomment-559732619",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/210",
+    "id": 559732619,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTczMjYxOQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T09:59:05Z",
+    "updated_at": "2019-11-29T09:59:05Z",
+    "author_association": "MEMBER",
+    "body": "I had this, needs some more green though.\r\n\r\n![Aztlan-Legendary-Aztec-Land](https://user-images.githubusercontent.com/47772477/69860778-38c4ba80-1297-11ea-86e2-5c66a0c4bbc0.jpg)\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559732619/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00210_559776653.json b/.gh-issues/00210_559776653.json
new file mode 100644
index 0000000..4ddd4cc
--- /dev/null
+++ b/.gh-issues/00210_559776653.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559776653",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/210#issuecomment-559776653",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/210",
+    "id": 559776653,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTc3NjY1Mw==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T12:36:07Z",
+    "updated_at": "2019-11-29T12:36:07Z",
+    "author_association": "MEMBER",
+    "body": "I will put the ETC logo and text to your one later today. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559776653/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 1,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215.json b/.gh-issues/00215.json
new file mode 100644
index 0000000..85948d1
--- /dev/null
+++ b/.gh-issues/00215.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215",
+    "id": 530444529,
+    "node_id": "MDU6SXNzdWU1MzA0NDQ1Mjk=",
+    "number": 215,
+    "title": "Core Devs Call: Confirm consensus for Aztlán Upgrade (Yingchun Edition)",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2019-11-29T17:35:39Z",
+    "updated_at": "2019-11-29T17:41:55Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "Ref [ECIP-1061](https://ecips.ethereumclassic.org/ECIPs/ecip-1061) [ECIP-1072](https://ecips.ethereumclassic.org/ECIPs/ecip-1072) #198 #199 #212 #213 #214\r\n\r\n### ETC Core Devs Call - Confirm consensus for Aztlán Upgrade (Yingchun Edition)\r\n\r\nWhen: **Thursday, December 5, 2019, 1pm UTC**, 60 minutes max.\r\n\r\nWhere: **Ethereum Classic Discord** https://discord.gg/dwxb6nf `#ecips` channel. Will use/create a voice channel _ad hoc._\r\n\r\nMeeting Coordinator: TBD\r\n\r\n### Agenda\r\n\r\n- Quick client teams check-in\r\n  - Parity Ethereum / Parity Tech\r\n  - Geth Classic / ChainSafe, ETCLabs Core\r\n  - Multi-Geth / Multi-Geth, ETCLabs Core \r\n  - Hyperledger Besu / ChainSafe, PegaSys\r\n- Aztlán Upgrade (Yingchun Edition) (ECIP-1061) is in _\"Draft\"_ state\r\n  - In the previous meeting we agreed on scope for Aztlán Upgrade (Istanbul - 1884)\r\n  - There remains confusion on whether we  proceed with updated 1061 or \"switch horse\" to 1072\r\n  - Let's decide that here.\r\n  - Either ECIP-1061 or ECIP-1072 needs to be moved to **Last Call** and the other to **Withdrawn**.\r\n  - And then we move on with our lives.\r\n\r\nPlease comment to add items to the agenda",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_559853302.json b/.gh-issues/00215_559853302.json
new file mode 100644
index 0000000..38c3a6c
--- /dev/null
+++ b/.gh-issues/00215_559853302.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559853302",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-559853302",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 559853302,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg1MzMwMg==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T17:41:54Z",
+    "updated_at": "2019-11-29T17:41:54Z",
+    "author_association": "MEMBER",
+    "body": "I am for it. It is fair to both (1061; 1072) particiapants",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559853302/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/.state b/.gh-pullrequests/.state
index 04f3993..170c890 100644
--- a/.gh-pullrequests/.state
+++ b/.gh-pullrequests/.state
@@ -1 +1 @@
-2019-11-24T09:15:56Z
+2019-11-29T17:43:58Z
diff --git a/.gh-pullrequests/00157.json b/.gh-pullrequests/00157.json
index 90d05d4..b066e77 100644
--- a/.gh-pullrequests/00157.json
+++ b/.gh-pullrequests/00157.json
@@ -56,45 +56,45 @@
 
     ],
     "milestone": {
-      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/1",
-      "html_url": "https://github.com/ethereumclassic/ECIPs/milestone/1",
-      "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/1/labels",
-      "id": 4777611,
-      "node_id": "MDk6TWlsZXN0b25lNDc3NzYxMQ==",
-      "number": 1,
-      "title": "Agharta Hardfork   ",
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/2",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/milestone/2",
+      "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/2/labels",
+      "id": 4885758,
+      "node_id": "MDk6TWlsZXN0b25lNDg4NTc1OA==",
+      "number": 2,
+      "title": "Aztlán Hardfork",
       "description": "",
       "creator": {
-        "login": "realcodywburns",
-        "id": 13103499,
-        "node_id": "MDQ6VXNlcjEzMTAzNDk5",
-        "avatar_url": "https://avatars1.githubusercontent.com/u/13103499?v=4",
+        "login": "sorpaas",
+        "id": 6277322,
+        "node_id": "MDQ6VXNlcjYyNzczMjI=",
+        "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
         "gravatar_id": "",
-        "url": "https://api.github.com/users/realcodywburns",
-        "html_url": "https://github.com/realcodywburns",
-        "followers_url": "https://api.github.com/users/realcodywburns/followers",
-        "following_url": "https://api.github.com/users/realcodywburns/following{/other_user}",
-        "gists_url": "https://api.github.com/users/realcodywburns/gists{/gist_id}",
-        "starred_url": "https://api.github.com/users/realcodywburns/starred{/owner}{/repo}",
-        "subscriptions_url": "https://api.github.com/users/realcodywburns/subscriptions",
-        "organizations_url": "https://api.github.com/users/realcodywburns/orgs",
-        "repos_url": "https://api.github.com/users/realcodywburns/repos",
-        "events_url": "https://api.github.com/users/realcodywburns/events{/privacy}",
-        "received_events_url": "https://api.github.com/users/realcodywburns/received_events",
+        "url": "https://api.github.com/users/sorpaas",
+        "html_url": "https://github.com/sorpaas",
+        "followers_url": "https://api.github.com/users/sorpaas/followers",
+        "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+        "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+        "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+        "repos_url": "https://api.github.com/users/sorpaas/repos",
+        "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/sorpaas/received_events",
         "type": "User",
         "site_admin": false
       },
-      "open_issues": 2,
+      "open_issues": 1,
       "closed_issues": 4,
       "state": "open",
-      "created_at": "2019-10-23T14:38:36Z",
-      "updated_at": "2019-10-28T22:17:15Z",
+      "created_at": "2019-11-27T20:32:02Z",
+      "updated_at": "2019-11-29T16:18:06Z",
       "due_on": null,
       "closed_at": null
     },
-    "comments": 0,
+    "comments": 3,
     "created_at": "2019-10-27T18:29:39Z",
-    "updated_at": "2019-10-29T06:50:05Z",
+    "updated_at": "2019-11-27T20:36:49Z",
     "closed_at": "2019-10-28T22:17:15Z",
     "author_association": "MEMBER",
     "pull_request": {
diff --git a/.gh-pullrequests/00157_557920706.json b/.gh-pullrequests/00157_557920706.json
new file mode 100644
index 0000000..7f9f748
--- /dev/null
+++ b/.gh-pullrequests/00157_557920706.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557920706",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/157#issuecomment-557920706",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/157",
+    "id": 557920706,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzkyMDcwNg==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-24T19:39:51Z",
+    "updated_at": "2019-11-24T19:39:51Z",
+    "author_association": "MEMBER",
+    "body": "Is there a reason why is this Atzlan issue tagged with Agharta Hardfork milestone and assigned as Agharta Hardfork project?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557920706/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00157_557948410.json b/.gh-pullrequests/00157_557948410.json
new file mode 100644
index 0000000..533c0d6
--- /dev/null
+++ b/.gh-pullrequests/00157_557948410.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557948410",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/157#issuecomment-557948410",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/157",
+    "id": 557948410,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1Nzk0ODQxMA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-25T00:50:05Z",
+    "updated_at": "2019-11-25T00:50:05Z",
+    "author_association": "MEMBER",
+    "body": "\" tagged with Agharta Hardfork milestone\"\r\n\r\nThis in the Kanban board which @realcodywburns set up, you mean, @TheEnthusiasticAs?\r\n\r\nMaybe we are just missing a board for Aztlán tasks?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/557948410/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00157_559241944.json b/.gh-pullrequests/00157_559241944.json
new file mode 100644
index 0000000..541e272
--- /dev/null
+++ b/.gh-pullrequests/00157_559241944.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559241944",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/157#issuecomment-559241944",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/157",
+    "id": 559241944,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTI0MTk0NA==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T20:33:15Z",
+    "updated_at": "2019-11-27T20:36:49Z",
+    "author_association": "MEMBER",
+    "body": "ok. I created one tagged it the right way. Or better one of the admins should create one?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559241944/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00183.json b/.gh-pullrequests/00183.json
index 487c1c6..e53caf7 100644
--- a/.gh-pullrequests/00183.json
+++ b/.gh-pullrequests/00183.json
@@ -32,17 +32,17 @@
     "labels": [
 
     ],
-    "state": "open",
+    "state": "closed",
     "locked": false,
     "assignee": null,
     "assignees": [
 
     ],
     "milestone": null,
-    "comments": 1,
+    "comments": 3,
     "created_at": "2019-11-13T01:42:38Z",
-    "updated_at": "2019-11-16T15:48:34Z",
-    "closed_at": null,
+    "updated_at": "2019-11-27T13:48:09Z",
+    "closed_at": "2019-11-27T13:48:08Z",
     "author_association": "MEMBER",
     "pull_request": {
       "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/183",
diff --git a/.gh-pullrequests/00183_558246833.json b/.gh-pullrequests/00183_558246833.json
new file mode 100644
index 0000000..976765a
--- /dev/null
+++ b/.gh-pullrequests/00183_558246833.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/558246833",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/183#issuecomment-558246833",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/183",
+    "id": 558246833,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODI0NjgzMw==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-25T17:00:28Z",
+    "updated_at": "2019-11-25T17:00:28Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Mostly agree. Not sure myth is the right word. It's a game of whack-a-mole. I think it is the constant \"configuring\" required to make it work which ETC should reject. It puts too much power to the teams and gives a given software implementation a limited lifespan (before it needs upgrade to avoid ASICs)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/558246833/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00183_559094476.json b/.gh-pullrequests/00183_559094476.json
new file mode 100644
index 0000000..97d9642
--- /dev/null
+++ b/.gh-pullrequests/00183_559094476.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559094476",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/183#issuecomment-559094476",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/183",
+    "id": 559094476,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTA5NDQ3Ng==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T13:48:08Z",
+    "updated_at": "2019-11-27T13:48:08Z",
+    "author_association": "MEMBER",
+    "body": "Obsoleted by rejection of ProgPOW.   I will just turn this into a blog post instead.\r\n\r\nhttps://github.com/ethereumclassic/ECIPs/pull/193",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559094476/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 1,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00186.json b/.gh-pullrequests/00186.json
index 8fd6c7a..c211007 100644
--- a/.gh-pullrequests/00186.json
+++ b/.gh-pullrequests/00186.json
@@ -32,17 +32,17 @@
     "labels": [
 
     ],
-    "state": "open",
+    "state": "closed",
     "locked": false,
     "assignee": null,
     "assignees": [
 
     ],
     "milestone": null,
-    "comments": 1,
+    "comments": 4,
     "created_at": "2019-11-16T14:04:19Z",
-    "updated_at": "2019-11-16T20:47:36Z",
-    "closed_at": null,
+    "updated_at": "2019-11-27T16:34:23Z",
+    "closed_at": "2019-11-27T16:34:23Z",
     "author_association": "MEMBER",
     "pull_request": {
       "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/186",
diff --git a/.gh-pullrequests/00186_559094036.json b/.gh-pullrequests/00186_559094036.json
new file mode 100644
index 0000000..dca42ba
--- /dev/null
+++ b/.gh-pullrequests/00186_559094036.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559094036",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/186#issuecomment-559094036",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/186",
+    "id": 559094036,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTA5NDAzNg==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T13:46:55Z",
+    "updated_at": "2019-11-27T13:46:55Z",
+    "author_association": "MEMBER",
+    "body": "Obsoleted by https://github.com/ethereumclassic/ECIPs/pull/198.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559094036/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00186_559136714.json b/.gh-pullrequests/00186_559136714.json
new file mode 100644
index 0000000..c4308af
--- /dev/null
+++ b/.gh-pullrequests/00186_559136714.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559136714",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/186#issuecomment-559136714",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/186",
+    "id": 559136714,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTEzNjcxNA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T15:33:02Z",
+    "updated_at": "2019-11-27T15:33:02Z",
+    "author_association": "MEMBER",
+    "body": "I don't understand why this is closed. We certainly need either https://github.com/ethereumclassic/ECIPs/pull/185 or this. Given we decided not to move #185 forward, that means we need to find a way to merge this?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559136714/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00186_559161960.json b/.gh-pullrequests/00186_559161960.json
new file mode 100644
index 0000000..4e59d89
--- /dev/null
+++ b/.gh-pullrequests/00186_559161960.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559161960",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/186#issuecomment-559161960",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/186",
+    "id": 559161960,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTE2MTk2MA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T16:34:23Z",
+    "updated_at": "2019-11-27T16:34:23Z",
+    "author_association": "MEMBER",
+    "body": "No need.   https://github.com/ethereumclassic/ECIPs/pull/199/files covers it, @sorpaas.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559161960/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00192.json b/.gh-pullrequests/00192.json
index 1fe8499..238bc83 100644
--- a/.gh-pullrequests/00192.json
+++ b/.gh-pullrequests/00192.json
@@ -32,17 +32,17 @@
     "labels": [
 
     ],
-    "state": "open",
+    "state": "closed",
     "locked": false,
     "assignee": null,
     "assignees": [
 
     ],
     "milestone": null,
-    "comments": 2,
+    "comments": 3,
     "created_at": "2019-11-21T07:29:46Z",
-    "updated_at": "2019-11-21T23:59:12Z",
-    "closed_at": null,
+    "updated_at": "2019-11-27T15:04:38Z",
+    "closed_at": "2019-11-27T15:04:38Z",
     "author_association": "MEMBER",
     "pull_request": {
       "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/192",
diff --git a/.gh-pullrequests/00192_559124711.json b/.gh-pullrequests/00192_559124711.json
new file mode 100644
index 0000000..0700791
--- /dev/null
+++ b/.gh-pullrequests/00192_559124711.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559124711",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/192#issuecomment-559124711",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/192",
+    "id": 559124711,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTEyNDcxMQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T15:04:38Z",
+    "updated_at": "2019-11-27T15:04:38Z",
+    "author_association": "MEMBER",
+    "body": "I am going to close this, @sorpaas.\r\n\r\nYou know what I meant with this direction, but it is better for you to do the work.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559124711/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00194.json b/.gh-pullrequests/00194.json
index 0bb5fc3..e61b69f 100644
--- a/.gh-pullrequests/00194.json
+++ b/.gh-pullrequests/00194.json
@@ -41,7 +41,7 @@
     "milestone": null,
     "comments": 2,
     "created_at": "2019-11-21T17:09:04Z",
-    "updated_at": "2019-11-22T10:19:08Z",
+    "updated_at": "2019-11-24T18:36:31Z",
     "closed_at": "2019-11-22T10:19:05Z",
     "author_association": "MEMBER",
     "pull_request": {
diff --git a/.gh-pullrequests/00197.json b/.gh-pullrequests/00197.json
new file mode 100644
index 0000000..08da853
--- /dev/null
+++ b/.gh-pullrequests/00197.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/197",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/197/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/197/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/197/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/197",
+    "id": 529056046,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ2MDA0MDcy",
+    "number": 197,
+    "title": "Enable 44-VERTXN extension to make ecosystem tooling backward compatible",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 2,
+    "created_at": "2019-11-27T01:11:22Z",
+    "updated_at": "2019-11-27T21:37:46Z",
+    "closed_at": "2019-11-27T21:37:46Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/197",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/197",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/197.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/197.patch"
+    },
+    "body": "This enables 44-VERTXN extension for EIP-1702, so that ecosystem tooling remains backward compatible.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/197/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00197.patch b/.gh-pullrequests/00197.patch
new file mode 100644
index 0000000..4d18923
--- /dev/null
+++ b/.gh-pullrequests/00197.patch
@@ -0,0 +1,64 @@
+From 841bbb00186d685ebfd5cef5d4e0c174a0304867 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Wed, 27 Nov 2019 02:09:38 +0100
+Subject: [PATCH] Enable 44-VERTXN to make ecosystem tooling backward
+ compatible
+
+---
+ _specs/ecip-1065.md | 36 ++++++++++++++++++------------------
+ 1 file changed, 18 insertions(+), 18 deletions(-)
+
+diff --git a/_specs/ecip-1065.md b/_specs/ecip-1065.md
+index 1ac3526..ec46be9 100644
+--- a/_specs/ecip-1065.md
++++ b/_specs/ecip-1065.md
+@@ -23,7 +23,9 @@ changes specified in "Specification" section.
+ 
+ ### Specification
+ 
+-At hard fork block, enable [EIP-1702](https://eips.ethereum.org/EIPS/eip-1702):
++At hard fork block, enable
++[EIP-1702](https://eips.ethereum.org/EIPS/eip-1702) with
++[44-VERTXN](https://specs.that.world/44-vertxn/) extension.
+ 
+ * Define the previous EVM version as version `0`.
+ * Define a new version `1`, with the following EVM modifications
+@@ -52,23 +54,21 @@ about.
+ 
+ #### Ecosystem
+ 
+-It is possible to deploy a helper contract to allow version `0`
+-contracts continue to be created. This allows unmodified Solidity code
+-to be deployed, just like what we have now.
+-
+-However, for version `1`, because we made several changes related to
+-gas cost, which impacts the semantics of certain opcodes such as
+-`CALL*` and `CREATE*`, Solidity compiler must be modified to support
+-version `1`.
+-
+-Existing common practices might need to change as well. Some practices
+-relies on the observable behavior of gas cost. Relying on gas cost is
+-usually considered to be a bad practice because gas cost can and will
+-change.
+-
+-On the other hand, version `1` enables some new practices that wasn't
+-possible before. For example, a contract can now refuse to be invoked
+-by any other contracts.
++Ecosystem tooling remains backward compatible. We can continue to use
++unmodified Solidity compiler, as well as other smart contract tools,
++to develop and deploy contracts on legacy EVM at version `0`.
++
++If developers want to take advantage of forward-compatible EVM at
++version `1`, because we made several changes related to gas cost,
++which impacts the semantics of certain opcodes such as `CALL*` and
++`CREATE*`, Solidity compiler must be modified to support it. For
++version `1`, existing common practices might need to change as
++well. Some practices relies on the observable behavior of gas
++cost. Relying on gas cost is usually considered to be a bad practice
++because gas cost can and will change. On the other hand, version `1`
++also enables some new practices that wasn't possible before. For
++example, a contract can now refuse to be invoked by any other
++contracts.
+ 
+ #### Emergency Hard Fork
+ 
diff --git a/.gh-pullrequests/00197_559125932.json b/.gh-pullrequests/00197_559125932.json
new file mode 100644
index 0000000..e01e6ba
--- /dev/null
+++ b/.gh-pullrequests/00197_559125932.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559125932",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/197#issuecomment-559125932",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/197",
+    "id": 559125932,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTEyNTkzMg==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T15:07:45Z",
+    "updated_at": "2019-11-27T15:07:45Z",
+    "author_association": "MEMBER",
+    "body": "Please could you \"inline\" 44-VERTXN to be an ECIP, so that this proposal is self-contained within the ECIP repo?   Either inline, or create a new ECIP for it, and reference that from this?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559125932/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00197_559130376.json b/.gh-pullrequests/00197_559130376.json
new file mode 100644
index 0000000..f349d1c
--- /dev/null
+++ b/.gh-pullrequests/00197_559130376.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559130376",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/197#issuecomment-559130376",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/197",
+    "id": 559130376,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTEzMDM3Ng==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T15:18:20Z",
+    "updated_at": "2019-11-27T15:18:20Z",
+    "author_association": "MEMBER",
+    "body": "Yep just need some editing work. Probably going to take a few days.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559130376/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00198.json b/.gh-pullrequests/00198.json
new file mode 100644
index 0000000..eb87e2e
--- /dev/null
+++ b/.gh-pullrequests/00198.json
@@ -0,0 +1,110 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/198",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/198/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/198/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/198/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/198",
+    "id": 529355983,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ2MjQ4MDA5",
+    "number": 198,
+    "title": "ECIP-1072: Fix name and move it to last call",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1702098127,
+        "node_id": "MDU6TGFiZWwxNzAyMDk4MTI3",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/status:%20last-call",
+        "name": "status: last-call",
+        "color": "c2e0c6",
+        "default": false,
+        "description": ""
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/2",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/milestone/2",
+      "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/2/labels",
+      "id": 4885758,
+      "node_id": "MDk6TWlsZXN0b25lNDg4NTc1OA==",
+      "number": 2,
+      "title": "Aztlán Hardfork",
+      "description": "",
+      "creator": {
+        "login": "sorpaas",
+        "id": 6277322,
+        "node_id": "MDQ6VXNlcjYyNzczMjI=",
+        "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/sorpaas",
+        "html_url": "https://github.com/sorpaas",
+        "followers_url": "https://api.github.com/users/sorpaas/followers",
+        "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+        "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+        "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+        "repos_url": "https://api.github.com/users/sorpaas/repos",
+        "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+        "type": "User",
+        "site_admin": false
+      },
+      "open_issues": 1,
+      "closed_issues": 4,
+      "state": "open",
+      "created_at": "2019-11-27T20:32:02Z",
+      "updated_at": "2019-11-29T16:18:06Z",
+      "due_on": null,
+      "closed_at": null
+    },
+    "comments": 1,
+    "created_at": "2019-11-27T13:45:54Z",
+    "updated_at": "2019-11-29T16:18:13Z",
+    "closed_at": "2019-11-29T16:18:06Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/198",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/198",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/198.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/198.patch"
+    },
+    "body": "This moves ECIP-1072 into last call status, with review period of 3 weeks, as discussed on the call.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/198/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 1,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00198.patch b/.gh-pullrequests/00198.patch
new file mode 100644
index 0000000..d032381
--- /dev/null
+++ b/.gh-pullrequests/00198.patch
@@ -0,0 +1,73 @@
+From fadc28cd37b93849539c018f1c15a8770d542607 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Wed, 27 Nov 2019 14:45:32 +0100
+Subject: [PATCH 1/3] Update ecip-1072.md
+
+---
+ _specs/ecip-1072.md | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/_specs/ecip-1072.md b/_specs/ecip-1072.md
+index 185b2ec..9c49b9f 100644
+--- a/_specs/ecip-1072.md
++++ b/_specs/ecip-1072.md
+@@ -1,10 +1,10 @@
+ ---
+ lang: en
+ ecip: 1072
+-title: Yingchun EVM and Protocol Upgrades
++title: Aztlán EVM and Protocol Upgrades (Yingchun Edition)
+ status: Draft
+ type: Meta
+-author: Wei Tang (@sorpaas)
++author: Wei Tang (@sorpaas), Talha Cross (@soc1c)
+ created: 2019-11-14
+ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
+ license: Apache-2.0
+
+From 6e3099efb4b00f908bdcb26691d4e05ec3fbadcd Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Wed, 27 Nov 2019 14:47:07 +0100
+Subject: [PATCH 2/3] Update ecip-1072.md
+
+---
+ _specs/ecip-1072.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1072.md b/_specs/ecip-1072.md
+index 9c49b9f..8d0cecc 100644
+--- a/_specs/ecip-1072.md
++++ b/_specs/ecip-1072.md
+@@ -4,7 +4,7 @@ ecip: 1072
+ title: Aztlán EVM and Protocol Upgrades (Yingchun Edition)
+ status: Draft
+ type: Meta
+-author: Wei Tang (@sorpaas), Talha Cross (@soc1c)
++author: Wei Tang (@sorpaas), Talha Cross (@soc1c), Bob Summerwill (@bobsummerwill)
+ created: 2019-11-14
+ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
+ license: Apache-2.0
+
+From 515434e43c75bc6a2dcc7b052177b59f75af696b Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Wed, 27 Nov 2019 21:29:48 +0100
+Subject: [PATCH 3/3] Update ecip-1072.md
+
+---
+ _specs/ecip-1072.md | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1072.md b/_specs/ecip-1072.md
+index 8d0cecc..843176c 100644
+--- a/_specs/ecip-1072.md
++++ b/_specs/ecip-1072.md
+@@ -2,7 +2,8 @@
+ lang: en
+ ecip: 1072
+ title: Aztlán EVM and Protocol Upgrades (Yingchun Edition)
+-status: Draft
++status: Last Call
++review-period-end: 2019-12-21
+ type: Meta
+ author: Wei Tang (@sorpaas), Talha Cross (@soc1c), Bob Summerwill (@bobsummerwill)
+ created: 2019-11-14
diff --git a/.gh-pullrequests/00198_559633890.json b/.gh-pullrequests/00198_559633890.json
new file mode 100644
index 0000000..91034eb
--- /dev/null
+++ b/.gh-pullrequests/00198_559633890.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559633890",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/198#issuecomment-559633890",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/198",
+    "id": 559633890,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTYzMzg5MA==",
+    "user": {
+      "login": "developerkevin",
+      "id": 29807183,
+      "node_id": "MDQ6VXNlcjI5ODA3MTgz",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/29807183?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/developerkevin",
+      "html_url": "https://github.com/developerkevin",
+      "followers_url": "https://api.github.com/users/developerkevin/followers",
+      "following_url": "https://api.github.com/users/developerkevin/following{/other_user}",
+      "gists_url": "https://api.github.com/users/developerkevin/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/developerkevin/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/developerkevin/subscriptions",
+      "organizations_url": "https://api.github.com/users/developerkevin/orgs",
+      "repos_url": "https://api.github.com/users/developerkevin/repos",
+      "events_url": "https://api.github.com/users/developerkevin/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/developerkevin/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T01:52:54Z",
+    "updated_at": "2019-11-29T02:34:06Z",
+    "author_association": "MEMBER",
+    "body": "If 1072 was agreed upon in the recent core development call then I believe that should be the one moved to \"accepted\" not 1061. ECIP-1061 should be moved to withdrawn per the ECIP process.  1072 is in fact the Yingchun Edition, which is what was agreed upon. Would love to hear other feedback on this move.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559633890/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00199.json b/.gh-pullrequests/00199.json
new file mode 100644
index 0000000..5143051
--- /dev/null
+++ b/.gh-pullrequests/00199.json
@@ -0,0 +1,128 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/199",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/199/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/199/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/199/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/199",
+    "id": 529372689,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ2MjYxODI0",
+    "number": 199,
+    "title": "ecip-1061: move aztlan to last call",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+      {
+        "id": 1705353570,
+        "node_id": "MDU6TGFiZWwxNzA1MzUzNTcw",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/editor:%20invalid",
+        "name": "editor: invalid",
+        "color": "d93f0b",
+        "default": false,
+        "description": ""
+      },
+      {
+        "id": 1705353145,
+        "node_id": "MDU6TGFiZWwxNzA1MzUzMTQ1",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/status:%20withdrawn",
+        "name": "status: withdrawn",
+        "color": "c2e0c6",
+        "default": false,
+        "description": ""
+      },
+      {
+        "id": 1154785129,
+        "node_id": "MDU6TGFiZWwxMTU0Nzg1MTI5",
+        "url": "https://api.github.com/repos/ethereumclassic/ECIPs/labels/type:%20meta",
+        "name": "type: meta",
+        "color": "cfd3d7",
+        "default": false,
+        "description": "Accepted best practices"
+      }
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/2",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/milestone/2",
+      "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/2/labels",
+      "id": 4885758,
+      "node_id": "MDk6TWlsZXN0b25lNDg4NTc1OA==",
+      "number": 2,
+      "title": "Aztlán Hardfork",
+      "description": "",
+      "creator": {
+        "login": "sorpaas",
+        "id": 6277322,
+        "node_id": "MDQ6VXNlcjYyNzczMjI=",
+        "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/sorpaas",
+        "html_url": "https://github.com/sorpaas",
+        "followers_url": "https://api.github.com/users/sorpaas/followers",
+        "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+        "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+        "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+        "repos_url": "https://api.github.com/users/sorpaas/repos",
+        "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+        "type": "User",
+        "site_admin": false
+      },
+      "open_issues": 1,
+      "closed_issues": 4,
+      "state": "open",
+      "created_at": "2019-11-27T20:32:02Z",
+      "updated_at": "2019-11-29T16:18:06Z",
+      "due_on": null,
+      "closed_at": null
+    },
+    "comments": 4,
+    "created_at": "2019-11-27T14:14:11Z",
+    "updated_at": "2019-11-29T14:41:37Z",
+    "closed_at": "2019-11-28T06:29:12Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/199",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/199",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/199.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/199.patch"
+    },
+    "body": "closes #177 ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/199/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00199.patch b/.gh-pullrequests/00199.patch
new file mode 100644
index 0000000..f6807bf
--- /dev/null
+++ b/.gh-pullrequests/00199.patch
@@ -0,0 +1,161 @@
+From 243eeb25ce023315923d1d0cab870e7b37c16911 Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Wed, 27 Nov 2019 15:13:55 +0100
+Subject: [PATCH 1/4] ecip-1061: move aztlan to last call
+
+---
+ _specs/ecip-1061.md | 23 +++++++++++++----------
+ 1 file changed, 13 insertions(+), 10 deletions(-)
+
+diff --git a/_specs/ecip-1061.md b/_specs/ecip-1061.md
+index e410baf..299b514 100644
+--- a/_specs/ecip-1061.md
++++ b/_specs/ecip-1061.md
+@@ -1,10 +1,10 @@
+ ---
+ lang: en
+ ecip: 1061
+-title: Aztlán EVM and Protocol Upgrades
+-status: Draft
++title: Aztlán EVM and Protocol Upgrades (Yingchun Flavor)
++status: Last Call
+ type: Meta
+-author: Talha Cross (@soc1c)
++author: Talha Cross (@soc1c), Wei Tang (@sorpaas)
+ created: 2019-06-06
+ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
+ ---
+@@ -12,7 +12,11 @@ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
+ ### Simple Summary
+ 
+ Enable the outstanding Ethereum Foundation _Istanbul_ network protocol upgrades on the Ethereum
+-Classic network in a hard-fork code-named _Aztlán_ to enable maximum compatibility across these networks.
++Classic network without any gas-cost assumptions in a hard-fork code-named _Aztlán_ to enable 
++maximum compatibility across these networks. 
++
++The _Yingchun_ Flavor refers to the preferred variant of _Aztlán_ without any repricing of state-trie 
++dependent opcodes as previously proposed in ECIP-1072.
+ 
+ ### Abstract
+ 
+@@ -22,14 +26,13 @@ _Istanbul_ hardforks. The proposed changes for Ethereum Classic's _Aztlán_ upgr
+ - Add Blake2 compression function `F` precompile
+ - Reduce alt_bn128 precompile gas costs
+ - Add ChainID opcode
+-- Repricing for trie-size-dependent opcodes
+ - Calldata gas cost reduction
+ - Rebalance net-metered SSTORE gas cost with consideration of SLOAD gas cost change
+ 
+ This document proposes the following blocks at which to implement these changes in the Classic networks:
+ 
+-- `TBD` on Mordor Classic PoW-testnet (Feb 5th, 2020)
+-- `TBD` on Kotti Classic PoA-testnet (Feb 12th, 2020)
++- `778_507` on Mordor Classic PoW-testnet (Feb 5th, 2020)
++- `2_058_191` on Kotti Classic PoA-testnet (Feb 12th, 2020)
+ - `TBD` on Ethereum Classic PoW-mainnet (March 25th, 2020)
+ 
+ For more information on the opcodes and their respective EIPs and implementations, please see the _Specification_
+@@ -47,7 +50,6 @@ Technical specifications for each EIP can be found at those documents respective
+ - [EIP-152](https://eips.ethereum.org/EIPS/eip-152): Add Blake2 compression function `F` precompile
+ - [EIP-1108](https://eips.ethereum.org/EIPS/eip-1108): Reduce alt_bn128 precompile gas costs
+ - [EIP-1344](https://eips.ethereum.org/EIPS/eip-1344): Add ChainID opcode
+-- [EIP-1884](https://eips.ethereum.org/EIPS/eip-1884): Repricing for trie-size-dependent opcodes
+ - [EIP-2028](https://eips.ethereum.org/EIPS/eip-2028): Calldata gas cost reduction
+ - [EIP-2200](https://eips.ethereum.org/EIPS/eip-2200): Rebalance net-metered SSTORE gas cost with consideration of SLOAD gas cost change
+ 
+@@ -60,7 +62,8 @@ Görli and Kotti).
+ __Immutability__: None of the introduced new opcodes in the EVM has the potential to change the behavior of existing
+ contracts; in the case where previously an arbitrary invalid bytecode would have been deployed to the network, none of
+ them would be able to modify the state of the Ethereum Classic networks retrospectively. Adding opcodes to the EVM
+-increases its functionality and should be considered a feature upgrade rather than a modification.
++increases its functionality and should be considered a feature upgrade rather than a modification. In particular, a delay
++of Istanbul's EIP-1884 activation should be considered until backward-compatibility solutions are in place on Ethereum Classic.
+ 
+ ### Implementation
+ 
+@@ -74,7 +77,7 @@ The following clients with Ethereum Classic support implement the _Istanbul_ fea
+ 
+ ### Final Note
+ 
+-Both, the Geth Classic client and the Morden testnet will no longer be supported by the community and not recieve the Aztlán ugrades.
++Both, the Geth Classic client and the Morden testnet will no longer be supported by the community and not recieve the _Aztlán_ ugrades.
+ 
+ - Users of the Geth Classic client are urged to migrate their services to Parity Ethereum, Multi-Geth, or Hyperledger Besu. It is no longer recommended to run Geth Classic in production.
+ - Users of the Morden Classic testnet are urged to migrate their applications to the Kotti Classic or Morder Classic testnets.
+
+From af6db56caa613784197aa9ddf61e95fa03a98a63 Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Wed, 27 Nov 2019 16:19:50 +0100
+Subject: [PATCH 2/4] 1061: s/flavor/edition
+
+---
+ _specs/ecip-1061.md | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/_specs/ecip-1061.md b/_specs/ecip-1061.md
+index 299b514..7357d15 100644
+--- a/_specs/ecip-1061.md
++++ b/_specs/ecip-1061.md
+@@ -1,7 +1,7 @@
+ ---
+ lang: en
+ ecip: 1061
+-title: Aztlán EVM and Protocol Upgrades (Yingchun Flavor)
++title: Aztlán EVM and Protocol Upgrades (Yingchun Edition)
+ status: Last Call
+ type: Meta
+ author: Talha Cross (@soc1c), Wei Tang (@sorpaas)
+@@ -15,7 +15,7 @@ Enable the outstanding Ethereum Foundation _Istanbul_ network protocol upgrades
+ Classic network without any gas-cost assumptions in a hard-fork code-named _Aztlán_ to enable 
+ maximum compatibility across these networks. 
+ 
+-The _Yingchun_ Flavor refers to the preferred variant of _Aztlán_ without any repricing of state-trie 
++The _Yingchun_ Edition refers to the preferred variant of _Aztlán_ without any repricing of state-trie 
+ dependent opcodes as previously proposed in ECIP-1072.
+ 
+ ### Abstract
+
+From 59eee826ea70c117d46d173d14a69dedd0926c6c Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Thu, 28 Nov 2019 07:21:01 +0100
+Subject: [PATCH 3/4] 1061: add link to 1072
+
+---
+ _specs/ecip-1061.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1061.md b/_specs/ecip-1061.md
+index 7357d15..d4e6fd1 100644
+--- a/_specs/ecip-1061.md
++++ b/_specs/ecip-1061.md
+@@ -16,7 +16,7 @@ Classic network without any gas-cost assumptions in a hard-fork code-named _Aztl
+ maximum compatibility across these networks. 
+ 
+ The _Yingchun_ Edition refers to the preferred variant of _Aztlán_ without any repricing of state-trie 
+-dependent opcodes as previously proposed in ECIP-1072.
++dependent opcodes as previously proposed in [ECIP-1072](https://ecips.ethereumclassic.org/ECIPs/ecip-1072).
+ 
+ ### Abstract
+ 
+
+From b240214fe3e5d65ff5d1839736d7e5e184e5d787 Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Thu, 28 Nov 2019 07:24:59 +0100
+Subject: [PATCH 4/4] 1061: add review period end
+
+---
+ _specs/ecip-1061.md | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/_specs/ecip-1061.md b/_specs/ecip-1061.md
+index d4e6fd1..ba6bc17 100644
+--- a/_specs/ecip-1061.md
++++ b/_specs/ecip-1061.md
+@@ -3,6 +3,7 @@ lang: en
+ ecip: 1061
+ title: Aztlán EVM and Protocol Upgrades (Yingchun Edition)
+ status: Last Call
++review-period-end: 2019-12-19
+ type: Meta
+ author: Talha Cross (@soc1c), Wei Tang (@sorpaas)
+ created: 2019-06-06
diff --git a/.gh-pullrequests/00199_559185183.json b/.gh-pullrequests/00199_559185183.json
new file mode 100644
index 0000000..9a8d812
--- /dev/null
+++ b/.gh-pullrequests/00199_559185183.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559185183",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/199#issuecomment-559185183",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/199",
+    "id": 559185183,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTE4NTE4Mw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T17:35:04Z",
+    "updated_at": "2019-11-27T17:35:04Z",
+    "author_association": "MEMBER",
+    "body": "It would probably make sense, I agree, @sorpaas, to withdraw ECIP-1061 and replace it with ECIP-1072.\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559185183/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00199_559222392.json b/.gh-pullrequests/00199_559222392.json
new file mode 100644
index 0000000..2e651c3
--- /dev/null
+++ b/.gh-pullrequests/00199_559222392.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559222392",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/199#issuecomment-559222392",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/199",
+    "id": 559222392,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTIyMjM5Mg==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T19:29:07Z",
+    "updated_at": "2019-11-27T19:29:07Z",
+    "author_association": "MEMBER",
+    "body": "1061 is the aztlan ecip and I'm updating it to reflect changes. that's how we always did it before you decided it's better to have multiple competing specs for the very same thing without even having a call. you are free to update your proposals. I'm updating mine and I will not get into a fight on that, so if you don't have to comment on the content of the spec, I will not spend any more time on this discussion.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559222392/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 1,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00199_559591138.json b/.gh-pullrequests/00199_559591138.json
new file mode 100644
index 0000000..d0cbceb
--- /dev/null
+++ b/.gh-pullrequests/00199_559591138.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559591138",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/199#issuecomment-559591138",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/199",
+    "id": 559591138,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTU5MTEzOA==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-28T19:40:17Z",
+    "updated_at": "2019-11-28T19:40:17Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "I'm not finding it particularly easy to follow all this.\r\n\r\n@sorpaas do you have any technical objections to the modifications made in 1061 that are different than what was agreed in the meeting or what was implied when agreeing to 1072?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559591138/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00199_559591918.json b/.gh-pullrequests/00199_559591918.json
new file mode 100644
index 0000000..38f6f2d
--- /dev/null
+++ b/.gh-pullrequests/00199_559591918.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559591918",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/199#issuecomment-559591918",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/199",
+    "id": 559591918,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTU5MTkxOA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-28T19:45:54Z",
+    "updated_at": "2019-11-29T00:43:35Z",
+    "author_association": "MEMBER",
+    "body": "@zmitton It's a procedural issue rather than a technical objection. You can:\r\n\r\n* Listen to the meeting recording yourself to confirm that in the end we decided to move forward 1072.\r\n* Read https://github.com/ethereumclassic/ECIPs/pull/199#pullrequestreview-323755348 and #176 to understand the objection, and why we decided to go with the \"option\" ECIP model due to Afri rushing to merge a change meant for the \"just-one Aztlan\". Check `#ecips` history to confirm that Afri agreed on this.\r\n* Read below to know that Afri has since refused to discuss and maliciously dismissed any objections. https://github.com/ethereumclassic/ECIPs/pull/199#event-2837816513",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559591918/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00200.json b/.gh-pullrequests/00200.json
new file mode 100644
index 0000000..b927afc
--- /dev/null
+++ b/.gh-pullrequests/00200.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/200",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/200/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/200/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/200/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/200",
+    "id": 529455415,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ2MzI5NjIx",
+    "number": 200,
+    "title": "Proposal to reject ECIP-1021, ECIP-1051, ECIP-1052 and ECIP-1057",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 8,
+    "created_at": "2019-11-27T16:31:13Z",
+    "updated_at": "2019-11-29T13:33:37Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/200",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/200",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/200.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/200.patch"
+    },
+    "body": "Proposal to reject the following ECIPs:\r\n\r\nECIP-1021 - Token standard (= ERC-223 in Ethereum)\r\nECIP-1051 - Ethereum Classic Treasury system\r\nECIP-1052 - Smart-contract Security Auditing core\r\nECIP-1057 - Cold Staking\r\n\r\nThere is no support for these proposals.\r\nRealistically they will never happen.\r\n\r\nIf new champions wish to propose similar changes in the future they should create new ECIPs.\r\nWe should reduce our cognitive load and the clarify of our \"working set\" by pruning out such inactive or \"never going to happen\" proposals.\r\n\r\nDexaran has indicated that his efforts will now be applied against EOS and I wish him the best with that approach.   https://twitter.com/BobSummerwill/status/1199718315683237888\r\n\r\nNobody has championed treasury proposals except for Dexaran either, and treasury proposals are deeply unpopular within ETC.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/200/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00200.patch b/.gh-pullrequests/00200.patch
new file mode 100644
index 0000000..60e7a49
--- /dev/null
+++ b/.gh-pullrequests/00200.patch
@@ -0,0 +1,71 @@
+From f99cc5705ca31624a02bee8fa8c632110a0897e0 Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Wed, 27 Nov 2019 08:21:31 -0800
+Subject: [PATCH] Proposal to reject the following proposals:
+
+ECIP-1021 - Token standard (= ERC-223 in Ethereum)
+ECIP-1051 - Ethereum Classic Treasury system
+ECIP-1052 - Smart-contract Security Auditing core
+ECIP-1057 - Cold Staking
+
+There is no real support for these proposals.
+Realistically they will never happen.
+If new champions wish to propose similar changes in the future they should create new ECIPs.
+We should reduce our cognitive load and the clarify of our "working set" by pruning out such inactive or "never going to happen" proposals.
+
+Dexaran has indicated that his efforts will now be applied against EOS and I wish him the best with that approach.
+
+Nobody has championed treasury proposals except for Dexaran either, and treasury proposals are deeply unpopular within ETC.
+---
+ _specs/ecip-1021.md | 4 ++--
+ _specs/ecip-1052.md | 4 ++--
+ _specs/ecip-1057.md | 4 ++--
+ 3 files changed, 6 insertions(+), 6 deletions(-)
+
+diff --git a/_specs/ecip-1021.md b/_specs/ecip-1021.md
+index f1a5c02..a020d1e 100644
+--- a/_specs/ecip-1021.md
++++ b/_specs/ecip-1021.md
+@@ -2,8 +2,8 @@
+ lang: en
+ ecip: 1021
+ title: Token standard
+-author: Dexaran, <dexaran820@gmail.com>
+-status: Draft
++author: Dexaran (@Dexaran)
++status: Rejected
+ type: Standards Track
+ category: ECBP
+ created: 2017-03-07
+diff --git a/_specs/ecip-1052.md b/_specs/ecip-1052.md
+index 6bc89bc..687b868 100644
+--- a/_specs/ecip-1052.md
++++ b/_specs/ecip-1052.md
+@@ -2,9 +2,9 @@
+ lang: en
+ ecip: 1052
+ title: Smart-contract Security Auditing core
+-status: Draft
++status: Rejected
+ type: Meta
+-author: Dexaran, dexaran@ethereumclassic.org
++author: Dexaran (@Dexaran)
+ created: 2018-12-31
+ ---
+ 
+diff --git a/_specs/ecip-1057.md b/_specs/ecip-1057.md
+index 3761165..a162539 100644
+--- a/_specs/ecip-1057.md
++++ b/_specs/ecip-1057.md
+@@ -2,9 +2,9 @@
+ lang: en
+ ecip: 1057
+ title: Cold Staking
+-author: Dexaran, dexaran@ethereumclassic.org
++author: Dexaran (@Dexaran)
+ discussions-To: https://github.com/ethereumclassic/ECIPs/issues/65
+-status: Draft
++status: Rejected
+ type: Standards Track
+ category: Core
+ created: 2019-03-31
diff --git a/.gh-pullrequests/00200_559176709.json b/.gh-pullrequests/00200_559176709.json
new file mode 100644
index 0000000..e566025
--- /dev/null
+++ b/.gh-pullrequests/00200_559176709.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559176709",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/200#issuecomment-559176709",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/200",
+    "id": 559176709,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTE3NjcwOQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T17:11:42Z",
+    "updated_at": "2019-11-27T17:11:42Z",
+    "author_association": "MEMBER",
+    "body": "I don't think you can decide this. I believe there is a huge difference between someone not championing a proposal (forever in draft) and an community actively rejecting a proposal (i.e., progpow).",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559176709/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00200_559185682.json b/.gh-pullrequests/00200_559185682.json
new file mode 100644
index 0000000..d13f00e
--- /dev/null
+++ b/.gh-pullrequests/00200_559185682.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559185682",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/200#issuecomment-559185682",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/200",
+    "id": 559185682,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTE4NTY4Mg==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T17:36:35Z",
+    "updated_at": "2019-11-27T17:36:35Z",
+    "author_association": "MEMBER",
+    "body": "I cannot DECIDE that, no, @soc1c, which is why this is a PROPOSAL for us to discuss.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559185682/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00200_559186962.json b/.gh-pullrequests/00200_559186962.json
new file mode 100644
index 0000000..859b862
--- /dev/null
+++ b/.gh-pullrequests/00200_559186962.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559186962",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/200#issuecomment-559186962",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/200",
+    "id": 559186962,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTE4Njk2Mg==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T17:40:27Z",
+    "updated_at": "2019-11-27T17:40:27Z",
+    "author_association": "MEMBER",
+    "body": "Why would we want ECIPs forever in draft?\r\nWhat good does that do anybody?\r\nIf there is no support or champion for something and there is general consensus that the proposal is a bad idea which will never be passed, why keep it in draft?\r\n\r\nEven rejected proposals can be revived trivially in the future.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559186962/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00200_559223086.json b/.gh-pullrequests/00200_559223086.json
new file mode 100644
index 0000000..082134f
--- /dev/null
+++ b/.gh-pullrequests/00200_559223086.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559223086",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/200#issuecomment-559223086",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/200",
+    "id": 559223086,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTIyMzA4Ng==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T19:31:16Z",
+    "updated_at": "2019-11-27T19:31:16Z",
+    "author_association": "MEMBER",
+    "body": "there is a higher barrier to champion rejected proposals. i refuse rejecting proposals for the sake of rejection.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559223086/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00200_559285356.json b/.gh-pullrequests/00200_559285356.json
new file mode 100644
index 0000000..acd1d3d
--- /dev/null
+++ b/.gh-pullrequests/00200_559285356.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559285356",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/200#issuecomment-559285356",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/200",
+    "id": 559285356,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTI4NTM1Ng==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T23:32:08Z",
+    "updated_at": "2019-11-27T23:32:08Z",
+    "author_association": "MEMBER",
+    "body": "Discussion -> https://github.com/ethereumclassic/ECIPs/issues/206",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559285356/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00200_559285591.json b/.gh-pullrequests/00200_559285591.json
new file mode 100644
index 0000000..5c09872
--- /dev/null
+++ b/.gh-pullrequests/00200_559285591.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559285591",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/200#issuecomment-559285591",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/200",
+    "id": 559285591,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTI4NTU5MQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T23:33:19Z",
+    "updated_at": "2019-11-27T23:33:19Z",
+    "author_association": "MEMBER",
+    "body": "@soc1c said \"there is a higher barrier to champion rejected proposals. i refuse rejecting proposals for the sake of rejection.\"\r\n\r\nBob says \"There is no support for these proposals.\"",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559285591/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00200_559703075.json b/.gh-pullrequests/00200_559703075.json
new file mode 100644
index 0000000..872370a
--- /dev/null
+++ b/.gh-pullrequests/00200_559703075.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559703075",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/200#issuecomment-559703075",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/200",
+    "id": 559703075,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTcwMzA3NQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T08:24:42Z",
+    "updated_at": "2019-11-29T08:24:42Z",
+    "author_association": "MEMBER",
+    "body": "How about this?  for ...\r\n\r\nECIP-1051, ECIP-1052 and ECIP-1057\r\n\r\n\"The ECIP editor may also change the status to Deferred when no progress is being made on the ECIP.\"\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559703075/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00200_559791458.json b/.gh-pullrequests/00200_559791458.json
new file mode 100644
index 0000000..77e2dea
--- /dev/null
+++ b/.gh-pullrequests/00200_559791458.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559791458",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/200#issuecomment-559791458",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/200",
+    "id": 559791458,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTc5MTQ1OA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T13:33:37Z",
+    "updated_at": "2019-11-29T13:33:37Z",
+    "author_association": "MEMBER",
+    "body": "Would go with Deferred here... makes sense.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559791458/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00201.json b/.gh-pullrequests/00201.json
new file mode 100644
index 0000000..a3526ae
--- /dev/null
+++ b/.gh-pullrequests/00201.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/201",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/201/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/201/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/201/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/201",
+    "id": 529472497,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ2MzQzNjgx",
+    "number": 201,
+    "title": "Tidying up author formatting, so it displays cleanly in the web view",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-27T17:02:24Z",
+    "updated_at": "2019-11-27T17:13:18Z",
+    "closed_at": "2019-11-27T17:13:18Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/201",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/201",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/201.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/201.patch"
+    },
+    "body": "",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/201/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00201.patch b/.gh-pullrequests/00201.patch
new file mode 100644
index 0000000..15b5f9b
--- /dev/null
+++ b/.gh-pullrequests/00201.patch
@@ -0,0 +1,107 @@
+From 2a3e76264f1c58dd3bbb8a368eafe54cabe77318 Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Wed, 27 Nov 2019 09:00:59 -0800
+Subject: [PATCH] Tidying up author formatting, so it displays cleanly in the
+ web view.
+
+---
+ _specs/ecip-1047.md    | 2 +-
+ _specs/ecip-1050.md    | 2 +-
+ _specs/ecip-1053.md    | 2 +-
+ _specs/ecip-1062.md    | 2 +-
+ _specs/ecip-1064.md    | 2 +-
+ _specs/ecip-1067.md    | 2 +-
+ _specs/zh/ecip-1017.md | 2 +-
+ 7 files changed, 7 insertions(+), 7 deletions(-)
+
+diff --git a/_specs/ecip-1047.md b/_specs/ecip-1047.md
+index aa3ce7a..427f56f 100644
+--- a/_specs/ecip-1047.md
++++ b/_specs/ecip-1047.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1047
+ title: Reduce Gas Limit to 1 Million
+-author: Anthony Lusardi (ethereumclassicanthony@gmail.com)
++author: Anthony Lusardi (@pyskell)
+ status: Draft
+ type: Informational
+ created: 2019/1/3
+diff --git a/_specs/ecip-1050.md b/_specs/ecip-1050.md
+index 515dce0..c311910 100644
+--- a/_specs/ecip-1050.md
++++ b/_specs/ecip-1050.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1050
+ title: Status Codes
+-author: Brooklyn Zelenka [@expede](https://github.com/expede), [Boris Mann](https://github.com/bmann)
++author: Brooklyn Zelenka (@expede), Boris Mann (@bmann)
+ discussions-to: https://fission.codes/blockchain/ethclassic
+ status: Last Call
+ type: Standars Track
+diff --git a/_specs/ecip-1053.md b/_specs/ecip-1053.md
+index eb764a2..9f61874 100644
+--- a/_specs/ecip-1053.md
++++ b/_specs/ecip-1053.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1053
+ title: Add OpenRPC Service Discovery To JSON-RPC Services
+-author: Shane Jonas, Zachary Belford
++author: Shane Jonas (@shanejonas), Zachary Belford (@BelfordZ)
+ discussions-to: https://github.com/etclabscore/ECIPs/issues/16
+ status: Draft
+ type: Standards Track
+diff --git a/_specs/ecip-1062.md b/_specs/ecip-1062.md
+index d215a9d..e878c42 100644
+--- a/_specs/ecip-1062.md
++++ b/_specs/ecip-1062.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1062
+ title: Submit Block RPC
+-author: Zachary Belford, zachary.b@etclabs.org
++author: Zachary Belford (@BelfordZ)
+ discussions-to: Community Discord #ecips
+ status: Draft
+ type: Standards Track
+diff --git a/_specs/ecip-1064.md b/_specs/ecip-1064.md
+index e1661f4..5388f0d 100644
+--- a/_specs/ecip-1064.md
++++ b/_specs/ecip-1064.md
+@@ -4,7 +4,7 @@ ecip: 1064
+ title: Communicating with 3rd parties
+ status: Draft
+ type: Meta
+-author: Dean Pappas (deancpappas@gmail.com)
++author: Dean Pappas (@bobthegrownup)
+ discussions-to: Community Discord #ecips
+ created: 2019-08-06
+ ---
+diff --git a/_specs/ecip-1067.md b/_specs/ecip-1067.md
+index e565861..f2012b6 100644
+--- a/_specs/ecip-1067.md
++++ b/_specs/ecip-1067.md
+@@ -5,7 +5,7 @@ title: Standardize OS Level Management of Signature Handling ("invoke-signer")
+ status: Draft
+ type: Interface
+ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/147
+-author: Zac Mitton
++author: Zac Mitton (@zmitton)
+ created: 2019-02-07
+ ---
+ 
+diff --git a/_specs/zh/ecip-1017.md b/_specs/zh/ecip-1017.md
+index 0a4542a..8a88790 100644
+--- a/_specs/zh/ecip-1017.md
++++ b/_specs/zh/ecip-1017.md
+@@ -2,7 +2,7 @@
+ lang: zh
+ ecip: 1017
+ title: ETC 货币政策和铸币方案最终修改 
+-author: Matthew Mazur 5n4pr011@gmail.com 
++author: Matthew Mazur <5n4pr011@gmail.com>
+ translator: Roy (以太坊原链协会 ECC) QQ:1251433202 
+ status: Final
+ type: Standards Track
diff --git a/.gh-pullrequests/00202.json b/.gh-pullrequests/00202.json
new file mode 100644
index 0000000..4ba36ed
--- /dev/null
+++ b/.gh-pullrequests/00202.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/202",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/202/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/202/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/202/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/202",
+    "id": 529474875,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ2MzQ1NjI1",
+    "number": 202,
+    "title": "Correct status for various ECIPs which appear wrong",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2019-11-27T17:07:00Z",
+    "updated_at": "2019-11-27T23:29:08Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/202",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/202",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/202.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/202.patch"
+    },
+    "body": "ECIP-1019 (to withdrawn, was obsoleted by other ECIPs)\r\nECIP-1045 (to withdrawn, was obsoleted by other ECIPs)\r\nECIP-1048 (to last call, because we already implemented it with Kotti)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/202/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00202.patch b/.gh-pullrequests/00202.patch
new file mode 100644
index 0000000..ac73962
--- /dev/null
+++ b/.gh-pullrequests/00202.patch
@@ -0,0 +1,53 @@
+From 1569949170c18fa5a4f4d84cc866c9eb34354f7f Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Wed, 27 Nov 2019 09:06:30 -0800
+Subject: [PATCH] Correct status for various ECIPs which appear wrong:
+
+ECIP-1019 (to withdrawn, was obsoleted by other ECIPs)
+ECIP-1045 (to withdrawn, was obsoleted by other ECIPs)
+ECIP-1048 (to last call, because we already implemented it with Kotti)
+---
+ _specs/ecip-1019.md | 2 +-
+ _specs/ecip-1045.md | 2 +-
+ _specs/ecip-1048.md | 2 +-
+ 3 files changed, 3 insertions(+), 3 deletions(-)
+
+diff --git a/_specs/ecip-1019.md b/_specs/ecip-1019.md
+index ca345bd..1afb3d7 100644
+--- a/_specs/ecip-1019.md
++++ b/_specs/ecip-1019.md
+@@ -3,7 +3,7 @@ lang: en
+ ecip: 1019
+ title: (Epoch Decay 10) Monetary Policy and Final Modification to the Ethereum Classic Emission Schedule
+ author: Mike Boremi <ecip-1019@mikes.email>
+-status: Draft
++status: Withdrawn
+ type: Standards Track
+ category: Core
+ created: 2017-01-19
+diff --git a/_specs/ecip-1045.md b/_specs/ecip-1045.md
+index a77553b..af0454b 100644
+--- a/_specs/ecip-1045.md
++++ b/_specs/ecip-1045.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1045
+ title: Support for ETH Byzantium & Constantinople EVM and Protocol Upgrades
+-status: Draft
++status: Withdrawn
+ type: Meta
+ author: Isaac Ardis <isaac@etcdevteam.com>
+ created: 2018-06-18
+diff --git a/_specs/ecip-1048.md b/_specs/ecip-1048.md
+index 121a65f..640b652 100644
+--- a/_specs/ecip-1048.md
++++ b/_specs/ecip-1048.md
+@@ -4,7 +4,7 @@ ecip: 1048
+ title: Clique proof-of-authority consensus protocol
+ author: Péter Szilágyi <peterke@gmail.com>
+ discussions-to: https://github.com/ethereum/EIPs/issues/225
+-status: Draft
++status: Last Call
+ type: Standards Track
+ category: Core
+ created: 2017-03-06
diff --git a/.gh-pullrequests/00202_559284777.json b/.gh-pullrequests/00202_559284777.json
new file mode 100644
index 0000000..83fddd8
--- /dev/null
+++ b/.gh-pullrequests/00202_559284777.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559284777",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/202#issuecomment-559284777",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/202",
+    "id": 559284777,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTI4NDc3Nw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T23:29:07Z",
+    "updated_at": "2019-11-27T23:29:07Z",
+    "author_association": "MEMBER",
+    "body": "Discussion => https://github.com/ethereumclassic/ECIPs/issues/204",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559284777/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00203.json b/.gh-pullrequests/00203.json
new file mode 100644
index 0000000..7a6627a
--- /dev/null
+++ b/.gh-pullrequests/00203.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/203",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/203/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/203/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/203/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/203",
+    "id": 529476225,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ2MzQ2NzQ5",
+    "number": 203,
+    "title": "Reject ECIP-1063 - Integrated decentralized oracles and smart contracts",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 4,
+    "created_at": "2019-11-27T17:09:35Z",
+    "updated_at": "2019-11-27T23:30:22Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/203",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/203",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/203.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/203.patch"
+    },
+    "body": "This is just a bad idea, and is never going to happen.\r\nSorry, Jesse.\r\nBut we should reject this and clear out cognitive load.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/203/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00203.patch b/.gh-pullrequests/00203.patch
new file mode 100644
index 0000000..1d17ff3
--- /dev/null
+++ b/.gh-pullrequests/00203.patch
@@ -0,0 +1,26 @@
+From 2c4bf1ed5c2b3a57a6de01d3df1c4cc96e79bf25 Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Wed, 27 Nov 2019 09:09:17 -0800
+Subject: [PATCH] Reject ECIP-1063 - Integrated decentralized oracles and smart
+ contracts.
+
+This is just a bad idea, and is never going to happen.
+Sorry, Jesse.
+But we should reject this and clear out cognitive load.
+---
+ _specs/ecip-1063.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1063.md b/_specs/ecip-1063.md
+index 46fb8e8..2994bd9 100644
+--- a/_specs/ecip-1063.md
++++ b/_specs/ecip-1063.md
+@@ -4,7 +4,7 @@ ecip: 1063
+ title: Ethereum Classic Integrated Decentralized Oracles and Smart Contracts
+ author: Jesse Nguyen, <jessebaotruong@gmail.com>
+ discussions-to: Community Discord #ecips
+-status: Draft
++status: Rejected
+ type: Standard Track
+ created: 2019-07-21
+ ---
diff --git a/.gh-pullrequests/00203_559177465.json b/.gh-pullrequests/00203_559177465.json
new file mode 100644
index 0000000..27921e9
--- /dev/null
+++ b/.gh-pullrequests/00203_559177465.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559177465",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/203#issuecomment-559177465",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/203",
+    "id": 559177465,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTE3NzQ2NQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T17:13:39Z",
+    "updated_at": "2019-11-27T17:13:39Z",
+    "author_association": "MEMBER",
+    "body": "You can't just reject proposals on Github... This needs a process.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559177465/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00203_559185870.json b/.gh-pullrequests/00203_559185870.json
new file mode 100644
index 0000000..fad96c1
--- /dev/null
+++ b/.gh-pullrequests/00203_559185870.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559185870",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/203#issuecomment-559185870",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/203",
+    "id": 559185870,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTE4NTg3MA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T17:37:14Z",
+    "updated_at": "2019-11-27T17:37:14Z",
+    "author_association": "MEMBER",
+    "body": "This is a proposal.   Let's discuss.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559185870/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00203_559186384.json b/.gh-pullrequests/00203_559186384.json
new file mode 100644
index 0000000..b614b20
--- /dev/null
+++ b/.gh-pullrequests/00203_559186384.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559186384",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/203#issuecomment-559186384",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/203",
+    "id": 559186384,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTE4NjM4NA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T17:38:45Z",
+    "updated_at": "2019-11-27T17:38:45Z",
+    "author_association": "MEMBER",
+    "body": "From ECIP-1000:\r\n\r\n\"Reasons for rejecting ECIPs include duplication of effort, disregard for formatting rules, being too unfocused or too broad, being technically unsound, not providing proper motivation or addressing backwards compatibility, or *not in keeping with the Ethereum Classic philosophy*\"",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559186384/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00203_559285000.json b/.gh-pullrequests/00203_559285000.json
new file mode 100644
index 0000000..c731bf0
--- /dev/null
+++ b/.gh-pullrequests/00203_559285000.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559285000",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/203#issuecomment-559285000",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/203",
+    "id": 559285000,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTI4NTAwMA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-27T23:30:22Z",
+    "updated_at": "2019-11-27T23:30:22Z",
+    "author_association": "MEMBER",
+    "body": "Discussion -> https://github.com/ethereumclassic/ECIPs/issues/205",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559285000/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00207.json b/.gh-pullrequests/00207.json
new file mode 100644
index 0000000..c52148b
--- /dev/null
+++ b/.gh-pullrequests/00207.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/207",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/207/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/207/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/207/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/207",
+    "id": 529741259,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ2NTYwMzE5",
+    "number": 207,
+    "title": "ECIP-1061: Move to withdrawn status",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-28T07:33:55Z",
+    "updated_at": "2019-11-29T16:17:02Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/207",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/207",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/207.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/207.patch"
+    },
+    "body": "As mentioned in ECIP-1061's \"summay section\":\r\n\r\n> The _Yingchun_ Edition refers to the preferred variant of _Aztlán_ without any repricing of state-trie \t\r\ndependent opcodes as previously proposed in [ECIP-1072](https://ecips.ethereumclassic.org/ECIPs/ecip-1072).\r\n\r\nThis clearly marks ECIP-1061 to be a duplication of ECIP-1072. As mentioned in https://github.com/ethereumclassic/ECIPs/pull/199#pullrequestreview-323755348 and echoed by https://github.com/ethereumclassic/ECIPs/pull/199#issuecomment-559185183, it's better to move this to withdrawn status to avoid unnecessary duplication.\r\n\r\nI believe I have the rights to propose the withdrawn status because I'm listed as an author of this ECIP. :)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/207/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00207.patch b/.gh-pullrequests/00207.patch
new file mode 100644
index 0000000..bccdbc2
--- /dev/null
+++ b/.gh-pullrequests/00207.patch
@@ -0,0 +1,108 @@
+From e83658ba3f9e0c361ed2e25a43fe0a663e5e9cb4 Mon Sep 17 00:00:00 2001
+From: Wei Tang <accounts@that.world>
+Date: Thu, 28 Nov 2019 08:29:39 +0100
+Subject: [PATCH 1/2] Revert "ecip-1061: move aztlan to last call"
+
+---
+ _specs/ecip-1061.md | 24 ++++++++++--------------
+ 1 file changed, 10 insertions(+), 14 deletions(-)
+
+diff --git a/_specs/ecip-1061.md b/_specs/ecip-1061.md
+index ba6bc17..e410baf 100644
+--- a/_specs/ecip-1061.md
++++ b/_specs/ecip-1061.md
+@@ -1,11 +1,10 @@
+ ---
+ lang: en
+ ecip: 1061
+-title: Aztlán EVM and Protocol Upgrades (Yingchun Edition)
+-status: Last Call
+-review-period-end: 2019-12-19
++title: Aztlán EVM and Protocol Upgrades
++status: Draft
+ type: Meta
+-author: Talha Cross (@soc1c), Wei Tang (@sorpaas)
++author: Talha Cross (@soc1c)
+ created: 2019-06-06
+ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
+ ---
+@@ -13,11 +12,7 @@ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
+ ### Simple Summary
+ 
+ Enable the outstanding Ethereum Foundation _Istanbul_ network protocol upgrades on the Ethereum
+-Classic network without any gas-cost assumptions in a hard-fork code-named _Aztlán_ to enable 
+-maximum compatibility across these networks. 
+-
+-The _Yingchun_ Edition refers to the preferred variant of _Aztlán_ without any repricing of state-trie 
+-dependent opcodes as previously proposed in [ECIP-1072](https://ecips.ethereumclassic.org/ECIPs/ecip-1072).
++Classic network in a hard-fork code-named _Aztlán_ to enable maximum compatibility across these networks.
+ 
+ ### Abstract
+ 
+@@ -27,13 +22,14 @@ _Istanbul_ hardforks. The proposed changes for Ethereum Classic's _Aztlán_ upgr
+ - Add Blake2 compression function `F` precompile
+ - Reduce alt_bn128 precompile gas costs
+ - Add ChainID opcode
++- Repricing for trie-size-dependent opcodes
+ - Calldata gas cost reduction
+ - Rebalance net-metered SSTORE gas cost with consideration of SLOAD gas cost change
+ 
+ This document proposes the following blocks at which to implement these changes in the Classic networks:
+ 
+-- `778_507` on Mordor Classic PoW-testnet (Feb 5th, 2020)
+-- `2_058_191` on Kotti Classic PoA-testnet (Feb 12th, 2020)
++- `TBD` on Mordor Classic PoW-testnet (Feb 5th, 2020)
++- `TBD` on Kotti Classic PoA-testnet (Feb 12th, 2020)
+ - `TBD` on Ethereum Classic PoW-mainnet (March 25th, 2020)
+ 
+ For more information on the opcodes and their respective EIPs and implementations, please see the _Specification_
+@@ -51,6 +47,7 @@ Technical specifications for each EIP can be found at those documents respective
+ - [EIP-152](https://eips.ethereum.org/EIPS/eip-152): Add Blake2 compression function `F` precompile
+ - [EIP-1108](https://eips.ethereum.org/EIPS/eip-1108): Reduce alt_bn128 precompile gas costs
+ - [EIP-1344](https://eips.ethereum.org/EIPS/eip-1344): Add ChainID opcode
++- [EIP-1884](https://eips.ethereum.org/EIPS/eip-1884): Repricing for trie-size-dependent opcodes
+ - [EIP-2028](https://eips.ethereum.org/EIPS/eip-2028): Calldata gas cost reduction
+ - [EIP-2200](https://eips.ethereum.org/EIPS/eip-2200): Rebalance net-metered SSTORE gas cost with consideration of SLOAD gas cost change
+ 
+@@ -63,8 +60,7 @@ Görli and Kotti).
+ __Immutability__: None of the introduced new opcodes in the EVM has the potential to change the behavior of existing
+ contracts; in the case where previously an arbitrary invalid bytecode would have been deployed to the network, none of
+ them would be able to modify the state of the Ethereum Classic networks retrospectively. Adding opcodes to the EVM
+-increases its functionality and should be considered a feature upgrade rather than a modification. In particular, a delay
+-of Istanbul's EIP-1884 activation should be considered until backward-compatibility solutions are in place on Ethereum Classic.
++increases its functionality and should be considered a feature upgrade rather than a modification.
+ 
+ ### Implementation
+ 
+@@ -78,7 +74,7 @@ The following clients with Ethereum Classic support implement the _Istanbul_ fea
+ 
+ ### Final Note
+ 
+-Both, the Geth Classic client and the Morden testnet will no longer be supported by the community and not recieve the _Aztlán_ ugrades.
++Both, the Geth Classic client and the Morden testnet will no longer be supported by the community and not recieve the Aztlán ugrades.
+ 
+ - Users of the Geth Classic client are urged to migrate their services to Parity Ethereum, Multi-Geth, or Hyperledger Besu. It is no longer recommended to run Geth Classic in production.
+ - Users of the Morden Classic testnet are urged to migrate their applications to the Kotti Classic or Morder Classic testnets.
+
+From 726490b04f1f4259c9e57e9a71114dbac7bed705 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Thu, 28 Nov 2019 08:34:09 +0100
+Subject: [PATCH 2/2] Update ecip-1061.md
+
+---
+ _specs/ecip-1061.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1061.md b/_specs/ecip-1061.md
+index e410baf..49d0024 100644
+--- a/_specs/ecip-1061.md
++++ b/_specs/ecip-1061.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1061
+ title: Aztlán EVM and Protocol Upgrades
+-status: Draft
++status: Withdrawn
+ type: Meta
+ author: Talha Cross (@soc1c)
+ created: 2019-06-06
diff --git a/.gh-pullrequests/00208.json b/.gh-pullrequests/00208.json
new file mode 100644
index 0000000..0bab891
--- /dev/null
+++ b/.gh-pullrequests/00208.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/208",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/208/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/208/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/208/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/208",
+    "id": 530035905,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ2ODAyMTE3",
+    "number": 208,
+    "title": "Another batch of ECIP author tag fix-ups so web display is clean",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-28T18:07:20Z",
+    "updated_at": "2019-11-29T13:32:03Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/208",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/208",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/208.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/208.patch"
+    },
+    "body": "",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/208/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00208.patch b/.gh-pullrequests/00208.patch
new file mode 100644
index 0000000..907ac39
--- /dev/null
+++ b/.gh-pullrequests/00208.patch
@@ -0,0 +1,79 @@
+From f8664f47204acd0fd5b439fd52b032ff1b7ebef7 Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Thu, 28 Nov 2019 10:06:52 -0800
+Subject: [PATCH] Another batch of ECIP author tag fix-ups so web display is
+ clean.
+
+---
+ _specs/ecip-1021.md | 2 +-
+ _specs/ecip-1049.md | 2 +-
+ _specs/ecip-1051.md | 2 +-
+ _specs/ecip-1057.md | 2 +-
+ _specs/ecip-1063.md | 2 +-
+ 5 files changed, 5 insertions(+), 5 deletions(-)
+
+diff --git a/_specs/ecip-1021.md b/_specs/ecip-1021.md
+index f1a5c02..3c94514 100644
+--- a/_specs/ecip-1021.md
++++ b/_specs/ecip-1021.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1021
+ title: Token standard
+-author: Dexaran, <dexaran820@gmail.com>
++Author: Dexaran (@dexaran)
+ status: Draft
+ type: Standards Track
+ category: ECBP
+diff --git a/_specs/ecip-1049.md b/_specs/ecip-1049.md
+index 72f5604..a3576da 100644
+--- a/_specs/ecip-1049.md
++++ b/_specs/ecip-1049.md
+@@ -6,7 +6,7 @@ status: Draft
+ type: Standards Track
+ category: Core
+ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/13
+-author: Alexander Tsankov (alexander.tsankov@colorado.edu)
++author: Alexander Tsankov <alexander.tsankov@colorado.edu>
+ created: 2019-01-08
+ ---
+ 
+diff --git a/_specs/ecip-1051.md b/_specs/ecip-1051.md
+index 73a0678..1a64aaf 100644
+--- a/_specs/ecip-1051.md
++++ b/_specs/ecip-1051.md
+@@ -5,7 +5,7 @@ title: Ethereum Classic Treasury system
+ status: Draft
+ type: Standards Track
+ category: Core
+-Author: Dexaran, dexaran@ethereumclassic.org
++author: Dexaran (@dexaran)
+ created: 2018-12-31
+ ---
+ 
+diff --git a/_specs/ecip-1057.md b/_specs/ecip-1057.md
+index 3761165..51b5b9f 100644
+--- a/_specs/ecip-1057.md
++++ b/_specs/ecip-1057.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1057
+ title: Cold Staking
+-author: Dexaran, dexaran@ethereumclassic.org
++Author: Dexaran (@dexaran)
+ discussions-To: https://github.com/ethereumclassic/ECIPs/issues/65
+ status: Draft
+ type: Standards Track
+diff --git a/_specs/ecip-1063.md b/_specs/ecip-1063.md
+index 46fb8e8..fb720f5 100644
+--- a/_specs/ecip-1063.md
++++ b/_specs/ecip-1063.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1063
+ title: Ethereum Classic Integrated Decentralized Oracles and Smart Contracts
+-author: Jesse Nguyen, <jessebaotruong@gmail.com>
++author: Jesse Nguyen <jessebaotruong@gmail.com>
+ discussions-to: Community Discord #ecips
+ status: Draft
+ type: Standard Track
diff --git a/.gh-pullrequests/00211.json b/.gh-pullrequests/00211.json
new file mode 100644
index 0000000..ca00a48
--- /dev/null
+++ b/.gh-pullrequests/00211.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/211",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/211/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/211/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/211/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/211",
+    "id": 530328564,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3MDMzMjI4",
+    "number": 211,
+    "title": "ECIP-1000: ECIP Coordinators",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-29T12:45:33Z",
+    "updated_at": "2019-11-29T12:49:45Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/211",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/211",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/211.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/211.patch"
+    },
+    "body": "For important ECIP issues, core developers regularly hold meetings to gather rough consensus from the community. Those meetings may be conducted by ECIP editors, ECIP coordinators, or anyone else in the community who might be willing to volunteer. Coordinators of a meeting should:\r\n\r\n* Decide on a meeting date, time and location that is available to as many community members as possible.\r\n* Provide an acceptable meeting agenda, and on the call, drive the meeting agenda forward for participants.\r\n* Record the meeting notes and make it available to the public.\r\n\r\nMeeting coordinators should be rotating, in order to offload the burden, and to avoid abuse of the meeting process.\r\n\r\nFor this PR, I'm adding the initial ECIP Coordinators list as https://github.com/ethereumclassic/ECIPs/issues/209 grows (excluding already-assigned ECIP editors, as I assume they're already coordinators).",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/211/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00211.patch b/.gh-pullrequests/00211.patch
new file mode 100644
index 0000000..c9a60a5
--- /dev/null
+++ b/.gh-pullrequests/00211.patch
@@ -0,0 +1,77 @@
+From ae57467044eb6d876d9e691e1e9a5693d9a7d05b Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Fri, 29 Nov 2019 13:45:06 +0100
+Subject: [PATCH 1/2] ECIP-1000: ECIP Coordinators
+
+---
+ _specs/ecip-1000.md | 22 ++++++++++++++++++++--
+ 1 file changed, 20 insertions(+), 2 deletions(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index b5b50dd..6f9be28 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -78,13 +78,21 @@ The current ECIP editors are:
+ * Afri Schoedon (@soc1c)
+ * Yaz Khoury (@YazzyYaz)
+ 
+-## ECIP Editor Responsibilities & Workflow
++## ECIP Coordinators
++
++The current ECIP coordinators are:
++
++* @phyro
++* @TokenHash
++* @developerkevin
++
++## Responsibilities & Workflow
+ 
+ ### Introduction
+ 
+ ECIP editors are intended to fulfill administrative and editorial responsibilities. ECIP editors monitor ECIP changes, and update ECIP headers as appropriate.
+ 
+-### Steps
++### Editing Steps
+ 
+ **1:** Each new ECIP should first be submitted as a **"pull request"** to the [ECIPs git repository](https://github.com/ethereumclassic/ECIPs). Then, an editor does the following:
+ 
+@@ -102,6 +110,16 @@ ECIP editors are intended to fulfill administrative and editorial responsibiliti
+ * Merge the pull request when it is ready.
+ * List the ECIP in [[README.mediawiki]]
+ 
++### Corrdinating Steps
++
++For important ECIP issues, core developers regularly hold meetings to gather rough consensus from the community. Those meetings may be conducted by ECIP editors, ECIP coordinators, or anyone else in the community who might be willing to volunteer. Coordinators of a meeting should:
++
++* Decide on a meeting date, time and location that is available to as many community members as possible.
++* Provide an acceptable meeting agenda, and on the call, drive the meeting agenda forward for participants.
++* Record the meeting notes and make it available to the public.
++
++Meeting coordinators should be rotating, in order to offload the burden, and to avoid abuse of the meeting process.
++
+ # ECIP Format and Structure
+ 
+ ## Specification
+
+From 12faff78e6cfd304dfe17b4ec2ac443b2900a34e Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Fri, 29 Nov 2019 13:49:45 +0100
+Subject: [PATCH 2/2] Update ecip-1000.md
+
+---
+ _specs/ecip-1000.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index 6f9be28..57b0962 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -110,7 +110,7 @@ ECIP editors are intended to fulfill administrative and editorial responsibiliti
+ * Merge the pull request when it is ready.
+ * List the ECIP in [[README.mediawiki]]
+ 
+-### Corrdinating Steps
++### Coordinating Steps
+ 
+ For important ECIP issues, core developers regularly hold meetings to gather rough consensus from the community. Those meetings may be conducted by ECIP editors, ECIP coordinators, or anyone else in the community who might be willing to volunteer. Coordinators of a meeting should:
+ 
diff --git a/.gh-pullrequests/00212.json b/.gh-pullrequests/00212.json
new file mode 100644
index 0000000..87eb174
--- /dev/null
+++ b/.gh-pullrequests/00212.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/212",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/212/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/212/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/212/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/212",
+    "id": 530424622,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3MTA5NTMz",
+    "number": 212,
+    "title": "ECIP-1072: Move to withdrawn status",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-29T16:29:11Z",
+    "updated_at": "2019-11-29T17:42:03Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/212",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/212",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/212.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/212.patch"
+    },
+    "body": "Reverts #198 and move ECIP-1072 to withdrawn status.\r\n\r\nCloses #207.\r\n\r\nWe already have ECIP-1061 that specifies the hardfork. Stop messing around with Ethereum Classic.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/212/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00212.patch b/.gh-pullrequests/00212.patch
new file mode 100644
index 0000000..8db980b
--- /dev/null
+++ b/.gh-pullrequests/00212.patch
@@ -0,0 +1,51 @@
+From 590d6e54bcb0e77167e297820ce2cb5c9ac758fe Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Fri, 29 Nov 2019 17:24:23 +0100
+Subject: [PATCH 1/2] Revert "ECIP-1072: Fix name and move it to last call"
+
+---
+ _specs/ecip-1072.md | 7 +++----
+ 1 file changed, 3 insertions(+), 4 deletions(-)
+
+diff --git a/_specs/ecip-1072.md b/_specs/ecip-1072.md
+index 843176c..185b2ec 100644
+--- a/_specs/ecip-1072.md
++++ b/_specs/ecip-1072.md
+@@ -1,11 +1,10 @@
+ ---
+ lang: en
+ ecip: 1072
+-title: Aztlán EVM and Protocol Upgrades (Yingchun Edition)
+-status: Last Call
+-review-period-end: 2019-12-21
++title: Yingchun EVM and Protocol Upgrades
++status: Draft
+ type: Meta
+-author: Wei Tang (@sorpaas), Talha Cross (@soc1c), Bob Summerwill (@bobsummerwill)
++author: Wei Tang (@sorpaas)
+ created: 2019-11-14
+ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
+ license: Apache-2.0
+
+From 03dd0434170e81abda275e777f9d7bfd448e7a9b Mon Sep 17 00:00:00 2001
+From: Talha Cross <47772477+soc1c@users.noreply.github.com>
+Date: Fri, 29 Nov 2019 17:25:51 +0100
+Subject: [PATCH 2/2] ECIP-1072: Move to withdrawn status
+
+---
+ _specs/ecip-1072.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1072.md b/_specs/ecip-1072.md
+index 185b2ec..179b269 100644
+--- a/_specs/ecip-1072.md
++++ b/_specs/ecip-1072.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1072
+ title: Yingchun EVM and Protocol Upgrades
+-status: Draft
++status: Withdrawn
+ type: Meta
+ author: Wei Tang (@sorpaas)
+ created: 2019-11-14
diff --git a/.gh-pullrequests/00213.json b/.gh-pullrequests/00213.json
new file mode 100644
index 0000000..2bb16a9
--- /dev/null
+++ b/.gh-pullrequests/00213.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/213",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/213/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/213/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/213/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/213",
+    "id": 530437503,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3MTE5ODM0",
+    "number": 213,
+    "title": "Remove Bob as author of ECIP-1072",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-29T17:09:30Z",
+    "updated_at": "2019-11-29T17:20:20Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/213",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/213",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/213.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/213.patch"
+    },
+    "body": "He did not author this ECIP.\r\nThere was no consent to add him.\r\nHe actively opposes this ECIP, and supports ECIP-1061.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/213/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00213.patch b/.gh-pullrequests/00213.patch
new file mode 100644
index 0000000..29f9490
--- /dev/null
+++ b/.gh-pullrequests/00213.patch
@@ -0,0 +1,23 @@
+From f18b8a35681d2bb9da385db9dd9206488a800376 Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Fri, 29 Nov 2019 09:08:42 -0800
+Subject: [PATCH] Remove Bob as author. He did not author this ECIP. There was
+ no consent to add him. He actively opposes this ECIP, and supports ECIP-1061.
+
+---
+ _specs/ecip-1072.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1072.md b/_specs/ecip-1072.md
+index 843176c..033e575 100644
+--- a/_specs/ecip-1072.md
++++ b/_specs/ecip-1072.md
+@@ -5,7 +5,7 @@ title: Aztlán EVM and Protocol Upgrades (Yingchun Edition)
+ status: Last Call
+ review-period-end: 2019-12-21
+ type: Meta
+-author: Wei Tang (@sorpaas), Talha Cross (@soc1c), Bob Summerwill (@bobsummerwill)
++author: Wei Tang (@sorpaas), Talha Cross (@soc1c)
+ created: 2019-11-14
+ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
+ license: Apache-2.0
diff --git a/.gh-pullrequests/00214.json b/.gh-pullrequests/00214.json
new file mode 100644
index 0000000..aa0e333
--- /dev/null
+++ b/.gh-pullrequests/00214.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/214",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/214/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/214/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/214/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/214",
+    "id": 530439160,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3MTIxMTc3",
+    "number": 214,
+    "title": "Move ECIP-1072 back to Draft",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-11-29T17:15:27Z",
+    "updated_at": "2019-11-29T17:41:38Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/214",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/214",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/214.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/214.patch"
+    },
+    "body": "There is significant confusion around ECIP-1061 and ECIP-1072.\r\nWe need to go around the loop again on consensus / consent.\r\n\r\nI am listed as an author of ECIP-1072, for example, but did not author it, did not give my consent to be listed as an author and actively oppose ECIP-1072 given the way it has been pushed through.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/214/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00214.patch b/.gh-pullrequests/00214.patch
new file mode 100644
index 0000000..6ac7ac9
--- /dev/null
+++ b/.gh-pullrequests/00214.patch
@@ -0,0 +1,29 @@
+From 6106bb4ef6032b582e7c283c81d7053f2cdcfb4b Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Fri, 29 Nov 2019 09:13:36 -0800
+Subject: [PATCH] Move ECIP-1072 back to Draft. There is significant confusion
+ around ECIP-1061 and ECIP-1072. We need to go around the loop again on
+ consensus / consent.
+
+I am listed as an author of ECIP-1072, for example, but did not author it, did not give my consent to be listed as an author and actively oppose ECIP-1072 given the way it has been pushed through.
+---
+ _specs/ecip-1072.md | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/_specs/ecip-1072.md b/_specs/ecip-1072.md
+index 843176c..a267fd2 100644
+--- a/_specs/ecip-1072.md
++++ b/_specs/ecip-1072.md
+@@ -2,10 +2,10 @@
+ lang: en
+ ecip: 1072
+ title: Aztlán EVM and Protocol Upgrades (Yingchun Edition)
+-status: Last Call
++status: Draft
+ review-period-end: 2019-12-21
+ type: Meta
+-author: Wei Tang (@sorpaas), Talha Cross (@soc1c), Bob Summerwill (@bobsummerwill)
++author: Wei Tang (@sorpaas), Talha Cross (@soc1c)
+ created: 2019-11-14
+ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
+ license: Apache-2.0

From 24ea11b1f724bfddccdd93fda5bf9b2d423dead0 Mon Sep 17 00:00:00 2001
From: meows <b5c6@protonmail.com>
Date: Sat, 30 Nov 2019 16:18:14 -0500
Subject: [PATCH 4/5] clone prs and issues

---
 .gh-issues/.state               |  2 +-
 .gh-issues/00209.json           |  4 +--
 .gh-issues/00209_559907758.json | 43 +++++++++++++++++++++++
 .gh-issues/00209_559909598.json | 43 +++++++++++++++++++++++
 .gh-issues/00210.json           |  8 ++---
 .gh-issues/00210_559859557.json | 43 +++++++++++++++++++++++
 .gh-issues/00210_559956511.json | 43 +++++++++++++++++++++++
 .gh-issues/00210_559956742.json | 43 +++++++++++++++++++++++
 .gh-issues/00210_559986064.json | 43 +++++++++++++++++++++++
 .gh-issues/00210_560013774.json | 43 +++++++++++++++++++++++
 .gh-issues/00215.json           | 10 +++---
 .gh-issues/00215_559854128.json | 43 +++++++++++++++++++++++
 .gh-issues/00215_559854582.json | 43 +++++++++++++++++++++++
 .gh-issues/00215_559855292.json | 43 +++++++++++++++++++++++
 .gh-issues/00215_559855591.json | 43 +++++++++++++++++++++++
 .gh-issues/00215_559861859.json | 43 +++++++++++++++++++++++
 .gh-issues/00215_559865761.json | 43 +++++++++++++++++++++++
 .gh-issues/00215_559886324.json | 43 +++++++++++++++++++++++
 .gh-issues/00215_559886491.json | 43 +++++++++++++++++++++++
 .gh-issues/00215_559886761.json | 43 +++++++++++++++++++++++
 .gh-issues/00215_559891247.json | 43 +++++++++++++++++++++++
 .gh-issues/00215_559899483.json | 43 +++++++++++++++++++++++
 .gh-issues/00215_559900287.json | 43 +++++++++++++++++++++++
 .gh-issues/00217.json           | 60 +++++++++++++++++++++++++++++++++
 .gh-issues/00217_559861432.json | 43 +++++++++++++++++++++++
 .gh-issues/00217_559862589.json | 43 +++++++++++++++++++++++
 .gh-issues/00217_559863168.json | 43 +++++++++++++++++++++++
 .gh-issues/00217_559865482.json | 43 +++++++++++++++++++++++
 .gh-issues/00217_559866580.json | 43 +++++++++++++++++++++++
 .gh-issues/00217_559881215.json | 43 +++++++++++++++++++++++
 30 files changed, 1147 insertions(+), 12 deletions(-)
 create mode 100644 .gh-issues/00209_559907758.json
 create mode 100644 .gh-issues/00209_559909598.json
 create mode 100644 .gh-issues/00210_559859557.json
 create mode 100644 .gh-issues/00210_559956511.json
 create mode 100644 .gh-issues/00210_559956742.json
 create mode 100644 .gh-issues/00210_559986064.json
 create mode 100644 .gh-issues/00210_560013774.json
 create mode 100644 .gh-issues/00215_559854128.json
 create mode 100644 .gh-issues/00215_559854582.json
 create mode 100644 .gh-issues/00215_559855292.json
 create mode 100644 .gh-issues/00215_559855591.json
 create mode 100644 .gh-issues/00215_559861859.json
 create mode 100644 .gh-issues/00215_559865761.json
 create mode 100644 .gh-issues/00215_559886324.json
 create mode 100644 .gh-issues/00215_559886491.json
 create mode 100644 .gh-issues/00215_559886761.json
 create mode 100644 .gh-issues/00215_559891247.json
 create mode 100644 .gh-issues/00215_559899483.json
 create mode 100644 .gh-issues/00215_559900287.json
 create mode 100644 .gh-issues/00217.json
 create mode 100644 .gh-issues/00217_559861432.json
 create mode 100644 .gh-issues/00217_559862589.json
 create mode 100644 .gh-issues/00217_559863168.json
 create mode 100644 .gh-issues/00217_559865482.json
 create mode 100644 .gh-issues/00217_559866580.json
 create mode 100644 .gh-issues/00217_559881215.json

diff --git a/.gh-issues/.state b/.gh-issues/.state
index 2b78f28..ac823c1 100644
--- a/.gh-issues/.state
+++ b/.gh-issues/.state
@@ -1 +1 @@
-2019-11-29T17:44:19Z
+2019-11-30T20:22:23Z
diff --git a/.gh-issues/00209.json b/.gh-issues/00209.json
index 5d5de6a..4c7a8eb 100644
--- a/.gh-issues/00209.json
+++ b/.gh-issues/00209.json
@@ -39,9 +39,9 @@
 
     ],
     "milestone": null,
-    "comments": 2,
+    "comments": 4,
     "created_at": "2019-11-28T18:45:07Z",
-    "updated_at": "2019-11-29T01:01:19Z",
+    "updated_at": "2019-11-30T03:46:28Z",
     "closed_at": null,
     "author_association": "MEMBER",
     "body": "The current core dev meeting coordinator is informally Afri. Afri has said we \"can replace me anytime\". Given recent actions that Afri were not exactly following the \"protocol\" and were not exactly \"neutral\" in his position, I think it would be important to have some coordinator name list ready, in case we want to appoint a new one for all of our meetings.\r\n\r\nPlease feel free to propose names or propose yourself. Current list:\r\n\r\n@YazzyYaz \r\n@phyro \r\n@TokenHash \r\n@developerkevin ",
diff --git a/.gh-issues/00209_559907758.json b/.gh-issues/00209_559907758.json
new file mode 100644
index 0000000..a631dcd
--- /dev/null
+++ b/.gh-issues/00209_559907758.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559907758",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/209#issuecomment-559907758",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/209",
+    "id": 559907758,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTkwNzc1OA==",
+    "user": {
+      "login": "zoulaihui",
+      "id": 15258122,
+      "node_id": "MDQ6VXNlcjE1MjU4MTIy",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/15258122?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zoulaihui",
+      "html_url": "https://github.com/zoulaihui",
+      "followers_url": "https://api.github.com/users/zoulaihui/followers",
+      "following_url": "https://api.github.com/users/zoulaihui/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zoulaihui/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zoulaihui/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zoulaihui/subscriptions",
+      "organizations_url": "https://api.github.com/users/zoulaihui/orgs",
+      "repos_url": "https://api.github.com/users/zoulaihui/repos",
+      "events_url": "https://api.github.com/users/zoulaihui/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zoulaihui/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T03:06:44Z",
+    "updated_at": "2019-11-30T03:07:37Z",
+    "author_association": "MEMBER",
+    "body": "I'm proposing @developerkevin  & @TokenHash. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559907758/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00209_559909598.json b/.gh-issues/00209_559909598.json
new file mode 100644
index 0000000..aa15da9
--- /dev/null
+++ b/.gh-issues/00209_559909598.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559909598",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/209#issuecomment-559909598",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/209",
+    "id": 559909598,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTkwOTU5OA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T03:46:28Z",
+    "updated_at": "2019-11-30T03:46:28Z",
+    "author_association": "MEMBER",
+    "body": "@zoulaihui Donald has already indicated that he cannot commit to ETC volunteering.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559909598/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00210.json b/.gh-issues/00210.json
index 0538c80..e993554 100644
--- a/.gh-issues/00210.json
+++ b/.gh-issues/00210.json
@@ -68,16 +68,16 @@
         "site_admin": false
       },
       "open_issues": 1,
-      "closed_issues": 4,
+      "closed_issues": 5,
       "state": "open",
       "created_at": "2019-11-27T20:32:02Z",
-      "updated_at": "2019-11-29T16:18:06Z",
+      "updated_at": "2019-11-29T19:52:44Z",
       "due_on": null,
       "closed_at": null
     },
-    "comments": 3,
+    "comments": 8,
     "created_at": "2019-11-28T20:56:09Z",
-    "updated_at": "2019-11-29T12:36:07Z",
+    "updated_at": "2019-11-30T19:20:32Z",
     "closed_at": null,
     "author_association": "MEMBER",
     "body": "![etc Aztlán hardfork](https://user-images.githubusercontent.com/48069525/69831442-b6ea7800-1229-11ea-8217-7e793754313a.png)\r\n",
diff --git a/.gh-issues/00210_559859557.json b/.gh-issues/00210_559859557.json
new file mode 100644
index 0000000..f425e1c
--- /dev/null
+++ b/.gh-issues/00210_559859557.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559859557",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/210#issuecomment-559859557",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/210",
+    "id": 559859557,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg1OTU1Nw==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T18:21:21Z",
+    "updated_at": "2019-11-29T18:21:21Z",
+    "author_association": "MEMBER",
+    "body": "here you go: \r\n![etc Aztlán hardfork v2](https://user-images.githubusercontent.com/48069525/69885434-603e7600-12dd-11ea-8f90-ee07be8f7176.png)\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559859557/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00210_559956511.json b/.gh-issues/00210_559956511.json
new file mode 100644
index 0000000..3182d80
--- /dev/null
+++ b/.gh-issues/00210_559956511.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559956511",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/210#issuecomment-559956511",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/210",
+    "id": 559956511,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTk1NjUxMQ==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T12:00:54Z",
+    "updated_at": "2019-11-30T12:01:07Z",
+    "author_association": "MEMBER",
+    "body": "ok, I need some more OKs to close and use it as an Aztlán Hardfork photo - the last one",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559956511/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00210_559956742.json b/.gh-issues/00210_559956742.json
new file mode 100644
index 0000000..2c7a257
--- /dev/null
+++ b/.gh-issues/00210_559956742.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559956742",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/210#issuecomment-559956742",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/210",
+    "id": 559956742,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTk1Njc0Mg==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T12:02:35Z",
+    "updated_at": "2019-11-30T12:02:35Z",
+    "author_association": "MEMBER",
+    "body": "I don't think you can unilaterally decide that Github-OKs are sufficient here. Consensus does not happen on the repository. Can you please schedule a call?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559956742/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00210_559986064.json b/.gh-issues/00210_559986064.json
new file mode 100644
index 0000000..68308f8
--- /dev/null
+++ b/.gh-issues/00210_559986064.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559986064",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/210#issuecomment-559986064",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/210",
+    "id": 559986064,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTk4NjA2NA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T15:49:43Z",
+    "updated_at": "2019-11-30T15:49:43Z",
+    "author_association": "MEMBER",
+    "body": "Or before a call, just socialize the options on Discord.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559986064/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00210_560013774.json b/.gh-issues/00210_560013774.json
new file mode 100644
index 0000000..15acd46
--- /dev/null
+++ b/.gh-issues/00210_560013774.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560013774",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/210#issuecomment-560013774",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/210",
+    "id": 560013774,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAxMzc3NA==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T19:20:32Z",
+    "updated_at": "2019-11-30T19:20:32Z",
+    "author_association": "MEMBER",
+    "body": "there is a third one :grin: by one of the responsers to my poll:\r\nhttps://twitter.com/asis_slm/status/1200847009147695104\r\n![image](https://user-images.githubusercontent.com/48069525/69905033-b7604b80-13ae-11ea-9acf-3d5cd46b0b7c.png)\r\nit is nice too",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560013774/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215.json b/.gh-issues/00215.json
index 85948d1..f93cea8 100644
--- a/.gh-issues/00215.json
+++ b/.gh-issues/00215.json
@@ -32,19 +32,19 @@
     "labels": [
 
     ],
-    "state": "open",
+    "state": "closed",
     "locked": false,
     "assignee": null,
     "assignees": [
 
     ],
     "milestone": null,
-    "comments": 1,
+    "comments": 13,
     "created_at": "2019-11-29T17:35:39Z",
-    "updated_at": "2019-11-29T17:41:55Z",
-    "closed_at": null,
+    "updated_at": "2019-11-30T00:46:29Z",
+    "closed_at": "2019-11-29T23:29:15Z",
     "author_association": "MEMBER",
-    "body": "Ref [ECIP-1061](https://ecips.ethereumclassic.org/ECIPs/ecip-1061) [ECIP-1072](https://ecips.ethereumclassic.org/ECIPs/ecip-1072) #198 #199 #212 #213 #214\r\n\r\n### ETC Core Devs Call - Confirm consensus for Aztlán Upgrade (Yingchun Edition)\r\n\r\nWhen: **Thursday, December 5, 2019, 1pm UTC**, 60 minutes max.\r\n\r\nWhere: **Ethereum Classic Discord** https://discord.gg/dwxb6nf `#ecips` channel. Will use/create a voice channel _ad hoc._\r\n\r\nMeeting Coordinator: TBD\r\n\r\n### Agenda\r\n\r\n- Quick client teams check-in\r\n  - Parity Ethereum / Parity Tech\r\n  - Geth Classic / ChainSafe, ETCLabs Core\r\n  - Multi-Geth / Multi-Geth, ETCLabs Core \r\n  - Hyperledger Besu / ChainSafe, PegaSys\r\n- Aztlán Upgrade (Yingchun Edition) (ECIP-1061) is in _\"Draft\"_ state\r\n  - In the previous meeting we agreed on scope for Aztlán Upgrade (Istanbul - 1884)\r\n  - There remains confusion on whether we  proceed with updated 1061 or \"switch horse\" to 1072\r\n  - Let's decide that here.\r\n  - Either ECIP-1061 or ECIP-1072 needs to be moved to **Last Call** and the other to **Withdrawn**.\r\n  - And then we move on with our lives.\r\n\r\nPlease comment to add items to the agenda",
+    "body": "Ref [ECIP-1061](https://ecips.ethereumclassic.org/ECIPs/ecip-1061) [ECIP-1072](https://ecips.ethereumclassic.org/ECIPs/ecip-1072) #198 #199 #207 #212 #213 #216 #218 \r\n\r\n### ETC Core Devs Call - Confirm consensus for Aztlán Upgrade (Yingchun Edition)\r\n\r\nWhen: **Thursday, December 5, 2019, 1pm UTC**, 60 minutes max.\r\n\r\nWhere: **Ethereum Classic Discord** https://discord.gg/dwxb6nf `#ecips` channel. Will use/create a voice channel _ad hoc._\r\n\r\nMeeting Coordinator: TBD\r\n\r\n### Agenda\r\n\r\n- Aztlán Upgrade (Yingchun Edition) ([ECIP-1061](https://ecips.ethereumclassic.org/ECIPs/ecip-1061)) is in _\"Draft\"_ state\r\n  - In the [Nov 27 meeting](https://github.com/ethereumclassic/ECIPs/issues/177) we agreed on scope for Aztlán Upgrade (= Istanbul - 1884)\r\n  - There was agreement that we should move forward with [ECIP-1072](https://ecips.ethereumclassic.org/ECIPs/ecip-1072)\r\n  - However, members in the community, such as Afri, have done actions which violated the common editing protocol, such as [dismissing other editors' review without reason](https://github.com/ethereumclassic/ECIPs/pull/199#event-2837816513).\r\n  - This has resulted in intensive community reactions, with Afri, Shane and Bob supporting reverting the previous community consensus (ECIP-1072) and move back to ECIP-1061, while others, such as Wei, @phyro, @TheEnthusiasticAs insisted on continuing on with ECIP-1072.\r\n  - Wei concluded that this is basically a contentious hard fork, due to community fight, and decided to implement it in `multi-geth` as a contentious hard fork.\r\n- Bob's recommendation\r\n  - Confirm in this call that there is no contention (except Wei).\r\n  - Confirm to move [ECIP-1061](https://ecips.ethereumclassic.org/ECIPs/ecip-1061) to  **Last Call** (#199)\r\n  - Confirm to move [ECIP-1072](https://ecips.ethereumclassic.org/ECIPs/ecip-1072) to **Rejected** (#218)\r\n  - Better yet would be for Wei to move [ECIP-1072](https://ecips.ethereumclassic.org/ECIPs/ecip-1072) to **Withdrawn** himself, but that does not seem likely (#212)\r\n\r\nThis is the full scope of the agenda.  We won't add any items to this call.  Laser focus.",
     "reactions": {
       "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215/reactions",
       "total_count": 0,
diff --git a/.gh-issues/00215_559854128.json b/.gh-issues/00215_559854128.json
new file mode 100644
index 0000000..22a950d
--- /dev/null
+++ b/.gh-issues/00215_559854128.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559854128",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-559854128",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 559854128,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg1NDEyOA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T17:46:30Z",
+    "updated_at": "2019-11-29T17:46:30Z",
+    "author_association": "MEMBER",
+    "body": "Given there's just too much politics in Ethereum Classic currently, I'll be openly oppose this meeting and the result of this meeting. The meeting does not represents the Ethereum Classic community and we will be treating this as a contentious hard fork.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559854128/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 1,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_559854582.json b/.gh-issues/00215_559854582.json
new file mode 100644
index 0000000..8bb1505
--- /dev/null
+++ b/.gh-issues/00215_559854582.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559854582",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-559854582",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 559854582,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg1NDU4Mg==",
+    "user": {
+      "login": "shanejonas",
+      "id": 364566,
+      "node_id": "MDQ6VXNlcjM2NDU2Ng==",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/364566?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/shanejonas",
+      "html_url": "https://github.com/shanejonas",
+      "followers_url": "https://api.github.com/users/shanejonas/followers",
+      "following_url": "https://api.github.com/users/shanejonas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/shanejonas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/shanejonas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/shanejonas/subscriptions",
+      "organizations_url": "https://api.github.com/users/shanejonas/orgs",
+      "repos_url": "https://api.github.com/users/shanejonas/repos",
+      "events_url": "https://api.github.com/users/shanejonas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/shanejonas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T17:49:19Z",
+    "updated_at": "2019-11-29T18:01:07Z",
+    "author_association": "MEMBER",
+    "body": "there should only be one ecip: 1061, and we can update it to reflect the changes to the hard fork. Not sure why a second one was created. Doing so does not follow any ECIP process.\r\n\r\nIf this IS a process we want to follow then it will allow me to create 30 copy meta ECIPs for this next hard fork and DDoS the ECIP process as it’s doing right now.\r\n\r\nAtlantis did not have 8 diff meta ecips for every possible combination, we talked through it and updated one ecip.\r\n\r\nWhy are we changing the process now? \r\n\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559854582/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_559855292.json b/.gh-issues/00215_559855292.json
new file mode 100644
index 0000000..27a3163
--- /dev/null
+++ b/.gh-issues/00215_559855292.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559855292",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-559855292",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 559855292,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg1NTI5Mg==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T17:54:09Z",
+    "updated_at": "2019-11-29T17:57:45Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "I have no issues with duplicates; in my opinion the bickering over duplicate documents at this point _is_ the DDoS.\r\n\r\nIn this vain: given that the documents (ECIP 1061 and ECIP 1072) are conceptually equivalent, I see no benefit to my being at the meeting since I have no input regarding their differentiation.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559855292/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_559855591.json b/.gh-issues/00215_559855591.json
new file mode 100644
index 0000000..3682f93
--- /dev/null
+++ b/.gh-issues/00215_559855591.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559855591",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-559855591",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 559855591,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg1NTU5MQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T17:55:56Z",
+    "updated_at": "2019-11-29T17:57:42Z",
+    "author_association": "MEMBER",
+    "body": "As stated in https://github.com/ethereumclassic/ECIPs/issues/175#issuecomment-552188293 I'm not available for a call on Dec/5.\r\n\r\nAlso, I believe there is a process in place for these cases and we should just stick to the ECIP-1000 process which allows editing draft ECIPs and therefore does not require ECIPs 1072, ..73, ..74, and ..75. Everything went downhill when Wei tried to prevent me from updating the draft ECIP 1061.\r\n\r\nWe always updated working-specs as we did for Atlantis and Agharta. I don't see why we should now change the process for Aztlan.\r\n\r\nOn the last call, we agreed on Aztlan moving to \"last call\" in the Yingchuan flavor as proposed by Wei without 1884. We did not agree on withdrawing 1061 which is the original Aztlan ECIP for months now. Having another call is superfluous in my humble opinion and I will not be willing to attend it as there are no technical differences to be discussed between 1061 and 1072.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559855591/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_559861859.json b/.gh-issues/00215_559861859.json
new file mode 100644
index 0000000..518e367
--- /dev/null
+++ b/.gh-issues/00215_559861859.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559861859",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-559861859",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 559861859,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg2MTg1OQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T18:38:00Z",
+    "updated_at": "2019-11-29T18:38:00Z",
+    "author_association": "MEMBER",
+    "body": "See also:\r\nhttps://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-559861432",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559861859/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_559865761.json b/.gh-issues/00215_559865761.json
new file mode 100644
index 0000000..3bb27b2
--- /dev/null
+++ b/.gh-issues/00215_559865761.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559865761",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-559865761",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 559865761,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg2NTc2MQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T19:05:49Z",
+    "updated_at": "2019-11-29T19:05:49Z",
+    "author_association": "MEMBER",
+    "body": "RE: \"Too much politics\"\r\n\r\nhttps://en.wikipedia.org/wiki/Politics\r\n\r\n\"Politics is a set of activities associated with the governance of a country, state or an area. It involves **making decisions** that apply to group of members.\"",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559865761/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_559886324.json b/.gh-issues/00215_559886324.json
new file mode 100644
index 0000000..ce1c6d0
--- /dev/null
+++ b/.gh-issues/00215_559886324.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559886324",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-559886324",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 559886324,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg4NjMyNA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T22:01:50Z",
+    "updated_at": "2019-11-29T22:01:50Z",
+    "author_association": "MEMBER",
+    "body": "Wei is just closing issues without justification.\r\nReopening\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559886324/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_559886491.json b/.gh-issues/00215_559886491.json
new file mode 100644
index 0000000..c424e59
--- /dev/null
+++ b/.gh-issues/00215_559886491.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559886491",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-559886491",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 559886491,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg4NjQ5MQ==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T22:03:09Z",
+    "updated_at": "2019-11-29T22:03:09Z",
+    "author_association": "MEMBER",
+    "body": "This call will be useless now as we do have consensus.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559886491/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_559886761.json b/.gh-issues/00215_559886761.json
new file mode 100644
index 0000000..89e5851
--- /dev/null
+++ b/.gh-issues/00215_559886761.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559886761",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-559886761",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 559886761,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg4Njc2MQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T22:06:09Z",
+    "updated_at": "2019-11-29T22:06:09Z",
+    "author_association": "MEMBER",
+    "body": "You are not attending.\r\nYou have made that clear.\r\n\r\nI am proposing this meeting.\r\nIt is not your place to keep closing it down.\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559886761/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_559891247.json b/.gh-issues/00215_559891247.json
new file mode 100644
index 0000000..ba0b0fa
--- /dev/null
+++ b/.gh-issues/00215_559891247.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559891247",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-559891247",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 559891247,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg5MTI0Nw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T22:51:39Z",
+    "updated_at": "2019-11-29T22:51:39Z",
+    "author_association": "MEMBER",
+    "body": "\"This call will be useless now as we do have consensus.\"\r\n\r\nThis is not your decision to make unilaterally, @sorpaas.\r\nPlease do not close this a third time.\r\nI will discuss with everyone, and we may or may not move forward.\r\n\r\nBut you are not helping yourself by keeping shutting this down.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559891247/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_559899483.json b/.gh-issues/00215_559899483.json
new file mode 100644
index 0000000..9c181ab
--- /dev/null
+++ b/.gh-issues/00215_559899483.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559899483",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-559899483",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 559899483,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg5OTQ4Mw==",
+    "user": {
+      "login": "husainfazel",
+      "id": 418404,
+      "node_id": "MDQ6VXNlcjQxODQwNA==",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/418404?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/husainfazel",
+      "html_url": "https://github.com/husainfazel",
+      "followers_url": "https://api.github.com/users/husainfazel/followers",
+      "following_url": "https://api.github.com/users/husainfazel/following{/other_user}",
+      "gists_url": "https://api.github.com/users/husainfazel/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/husainfazel/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/husainfazel/subscriptions",
+      "organizations_url": "https://api.github.com/users/husainfazel/orgs",
+      "repos_url": "https://api.github.com/users/husainfazel/repos",
+      "events_url": "https://api.github.com/users/husainfazel/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/husainfazel/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T00:32:24Z",
+    "updated_at": "2019-11-30T00:32:41Z",
+    "author_association": "NONE",
+    "body": "```\r\nHey everyone. First of all, I want to post an apology for my actions in the last few hours. I have certainly been hugely over-reacting and caused a lot of unnecessary fusions. That is my fault. I think there are few things I want to say and actions to correct.\r\n\r\n• Regarding 1061 vs 1072, I won't back down on my position that it's indeed Afri's fault not following the ECIP process in the first place. However, given that it's also largely my fault that I over-reacted and was being too aggressive in the past two days, I'll agree to move forward with 1061, and withdraw 1072.\r\n• During the last minute review I done on the Aztlan specification we currently have, I indeed find a few additional concerns that will have some impacts. From technical point of view, my recommendations would be we hold off Aztlan until account versioning is implemented. However, given that in the core dev meetings we have accepted the Aztlan hard fork, I will not oppose the hard fork. In the mean time, I may still make those technical concerns public, even though it's hard to fix.\r\n• I have not yet decided how much engagement I'll devote to Ethereum Classic in the future. However, I'll not cancel any of the current ECIP initiatives. In particular, I strongly think rotations of meeting coordinators will be an important process we should implement, starting with Yaz and Afri.\r\n\r\nGood luck everyone. And have a nice weekend!\r\n```\r\n\r\n@sorpaas why do you keep closing this issue? I think you and Bob need to have a private chat and stop playing silly buggers. The call doesn't need to happen, it probably won't happen... but let's leave it to Bob to handle that. \r\n\r\nYour comments in the Discord were really mature but what you're doing here is ridiculous and undermines all the bridge building you were magnanimous enough to start a few hours ago.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559899483/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_559900287.json b/.gh-issues/00215_559900287.json
new file mode 100644
index 0000000..a38ce41
--- /dev/null
+++ b/.gh-issues/00215_559900287.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559900287",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-559900287",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 559900287,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTkwMDI4Nw==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T00:46:28Z",
+    "updated_at": "2019-11-30T00:46:28Z",
+    "author_association": "MEMBER",
+    "body": "@bobsummerwill @husainfazel Please stop spamming the ECIP repo.\r\n\r\n> The call doesn't need to happen, it probably won't happen.\r\n\r\nAs you have correctly stated. It's Bob's job to provide justifications if he really wants to keep this issue open, but apparently he hasn't yet.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559900287/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00217.json b/.gh-issues/00217.json
new file mode 100644
index 0000000..919a0cf
--- /dev/null
+++ b/.gh-issues/00217.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/217",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/217/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/217/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/217/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/217",
+    "id": 530454511,
+    "node_id": "MDU6SXNzdWU1MzA0NTQ1MTE=",
+    "number": 217,
+    "title": "Preparing for Aztlan hard fork issues",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 6,
+    "created_at": "2019-11-29T18:16:28Z",
+    "updated_at": "2019-11-29T22:10:07Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "Recently, a few community members have decided to implement the Aztlan hard fork. The issue with Aztlan is that without EIP-1884, it effectively left an account trie attack vector open. Most current clients do not have other protections currently other than increasing gas cost. The paper for the attack is actually public, meaning anyone who knows the method can do it. As the security analysis for Aztlan is inadequate, we should prepare for its issues properly.\r\n\r\nMy recommendations would be we do not implement Aztlan before account versioning. However, given the consensus was already reached, I won't oppose the hard fork.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/217/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00217_559861432.json b/.gh-issues/00217_559861432.json
new file mode 100644
index 0000000..b900b25
--- /dev/null
+++ b/.gh-issues/00217_559861432.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559861432",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-559861432",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/217",
+    "id": 559861432,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg2MTQzMg==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T18:34:56Z",
+    "updated_at": "2019-11-29T18:35:35Z",
+    "author_association": "MEMBER",
+    "body": "You realize that the outcome here, @sorpaas, is going to be the effective death of Multi-Geth?\r\n\r\nClassic Geth will be END-of-LIFE after Agharta.\r\nYou can obviously add support to Parity-Ethereum.\r\nHyperledger Besu won't support your \"Ethereum Classic Classic\" flavor.\r\n\r\nSo Ethereum Classic will end up with Parity-Ethereum (majority client) and Hyperledger Besu (minority client) only for Aztlan HF.    Maybe I can get Mantis revived too by March as a third client?\r\n\r\nBut Multi-Geth will only be used on Ethereum Classic Classic.\r\n\r\nI actually personally like that outcome for clients, to be honest, because Geth has an unsolvable backlog of IP risks (no known provenance for contributions, GPLv3 licensing which restricts who can use it).\r\n\r\nI have long stated that I think the whole Geth-family will likely die out in the next couple of years because of these IP issues:\r\n\r\n- Geth\r\n- Classic Geth\r\n- Multi-Geth\r\n- TurboGeth (will prove @ledgerwatch's ideas on data-structures, but not a long life itself)\r\n- JPM Quorum\r\n- Clearmatics Autonity\r\n- Axioni AxCore\r\n\r\nYour actions here would just accelerate that process.\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559861432/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 1,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00217_559862589.json b/.gh-issues/00217_559862589.json
new file mode 100644
index 0000000..2564ee2
--- /dev/null
+++ b/.gh-issues/00217_559862589.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559862589",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-559862589",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/217",
+    "id": 559862589,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg2MjU4OQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T18:43:17Z",
+    "updated_at": "2019-11-29T18:43:17Z",
+    "author_association": "MEMBER",
+    "body": "I think there is a decent opportunity here to get TurboGeth as a replacement Geth-family codebase for ETC by March.\r\n\r\nhttps://github.com/ledgerwatch/turbo-geth/issues/162 (by @antsankov)\r\n\r\nA community member approached me looking for ways he could help ETC and I pointed him at that potential opportunity.   It would just involve side-porting of ETC support diffs from Multi-Geth into TurboGeth.\r\n\r\nFirst step would be just the ETC support.\r\nThen from there we could do the SHA3/Keccak256 support and Astor testnet support.\r\n\r\n@zmitton would you be happy to do SHA3/Keccak256 support against TurboGeth rather than Multi-Geth?  CC @YazzyYaz ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559862589/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00217_559863168.json b/.gh-issues/00217_559863168.json
new file mode 100644
index 0000000..0a111e6
--- /dev/null
+++ b/.gh-issues/00217_559863168.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559863168",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-559863168",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/217",
+    "id": 559863168,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg2MzE2OA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T18:47:32Z",
+    "updated_at": "2019-11-29T18:47:32Z",
+    "author_association": "MEMBER",
+    "body": "@bobsummerwill I won't mind multi-geth being on Ethereum Classic Classic only at all. After all, I do not have financial involvement in Ethereum Classic, and it's all volunteering work to support a network. If other clients can offload the burden on multi-geth, I would hugely appreciate it.\r\n\r\nBesides, if a user do not want to support the contentious hard fork, the only thing they need to do is not to update the client.\r\n\r\nGiven the nature of contentious hard fork, it's better if you start promoting your fork soon. Otherwise your chain might end up becoming Ethereum Classic Classic.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559863168/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00217_559865482.json b/.gh-issues/00217_559865482.json
new file mode 100644
index 0000000..f4c850e
--- /dev/null
+++ b/.gh-issues/00217_559865482.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559865482",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-559865482",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/217",
+    "id": 559865482,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg2NTQ4Mg==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T19:03:41Z",
+    "updated_at": "2019-11-29T19:07:56Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "> I won't mind multi-geth being on Ethereum Classic Classic only at all\r\n\r\n@sorpaas I think the whole point of multi-geth is to be network-extensible, so it should - with adequate and relative developer support - provide configurable use for as many a wide set of EVM-based (and even beyond). _Multi_. I don't care which networks it ends up on; but it should strive to remove opinions for the sake of the code and the technology.\r\n\r\n@bobsummerwill \r\n\r\n> these IP issues\r\n\r\nI don't see IP issues, I see forks. Varying forks for varying use cases. Do you mean name-dilution (eg geth-x)?\r\n\r\n> no known provenance for contributions,\r\n\r\n[Git history](https://github.com/multi-geth/multi-geth/commits/master), or? \r\n\r\n> GPLv3 licensing which restricts who can use it\r\n\r\nCan you say more about your reasoning on this?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559865482/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00217_559866580.json b/.gh-issues/00217_559866580.json
new file mode 100644
index 0000000..2cda9cc
--- /dev/null
+++ b/.gh-issues/00217_559866580.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559866580",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-559866580",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/217",
+    "id": 559866580,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg2NjU4MA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T19:12:09Z",
+    "updated_at": "2019-11-29T19:12:09Z",
+    "author_association": "MEMBER",
+    "body": "@meowsbits As mentioned, there'll be a flag in multi-geth that supports ECIP-1061. It will just not be Ethereum Classic's default flag.\r\n\r\n```\r\n./geth --ecip1061\r\n```",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559866580/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00217_559881215.json b/.gh-issues/00217_559881215.json
new file mode 100644
index 0000000..d8d6bf4
--- /dev/null
+++ b/.gh-issues/00217_559881215.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559881215",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-559881215",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/217",
+    "id": 559881215,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg4MTIxNQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T21:11:30Z",
+    "updated_at": "2019-11-29T21:11:30Z",
+    "author_association": "MEMBER",
+    "body": "@sorpaas RE: Flag - cool.\r\n\r\n./geth --ecip1061\r\n\r\n@meowsbits https://bobsummerwill.com/2016/07/12/ethereum-everywhere/\r\n\r\nThe source code for Geth and all downstreams has unknown provenance.   We do not know the full set of authors and there is zero defence there against future IP claims.   Patent trolling, etc.\r\n\r\nGPLv3 repels use by legal entities, which is why there has been a huge shift from copyleft to permissive licensing, from \"free software\" to \"open source\" over the last 30 years.\r\n\r\nThe GPL is still fighting the last war.   It was an awesome tool when it was RMS vs the world.   Now things have done a complete 180 and open source is the default.\r\n\r\nThree reasons why IBM created Fabric:\r\n\r\n1. Licensing\r\n2. Lack of maturity of Ethereum technology (will it work?)\r\n3. Governance\r\n\r\nAll three of those had solutions in 2016.   If Gav and Parity had not blocked this relicensing effort then the likely alternative timeline we would have been following would be for IBM to throw away Fabric and to have built IBM Blockchain on top of Ethereum.\r\n\r\nIBM had a 30 engineer team ready to pile onto cpp-ethereum when the relicensing was done.   Never happened:\r\n\r\nhttps://www.ibtimes.co.uk/hyperledger-project-reflects-blockchain-politics-1603381\r\n\r\nLicensing aside, the bulk of my work those 5 months was chasing all prior contributors and getting consent to the relicencing AND DCO attestions that they had authored the code, and that they had the right to contribute it under that license.   Consent from employers too, if they had them.\r\n\r\nBasically getting certainty that no legal claims could be launched in the future.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559881215/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file

From d26d39d1a43e20f3527a649a6f6f68c0e4d7932d Mon Sep 17 00:00:00 2001
From: meows <b5c6@protonmail.com>
Date: Mon, 2 Dec 2019 09:42:26 -0500
Subject: [PATCH 5/5] clone issues and pull requests

---
 .gh-issues/.state                     |   2 +-
 .gh-issues/00058.json                 |   8 +-
 .gh-issues/00058_560141869.json       |  43 ++
 .gh-issues/00169.json                 |   4 +-
 .gh-issues/00169_560169468.json       |  43 ++
 .gh-issues/00169_560173332.json       |  43 ++
 .gh-issues/00177.json                 |  12 +-
 .gh-issues/00177_560057744.json       |  43 ++
 .gh-issues/00177_560081676.json       |  43 ++
 .gh-issues/00177_560103329.json       |  43 ++
 .gh-issues/00177_560103483.json       |  43 ++
 .gh-issues/00177_560106271.json       |  43 ++
 .gh-issues/00177_560131953.json       |  43 ++
 .gh-issues/00177_560133378.json       |  43 ++
 .gh-issues/00177_560137571.json       |  43 ++
 .gh-issues/00177_560139062.json       |  43 ++
 .gh-issues/00177_560147543.json       |  43 ++
 .gh-issues/00177_560148450.json       |  43 ++
 .gh-issues/00177_560174636.json       |  43 ++
 .gh-issues/00177_560256708.json       |  43 ++
 .gh-issues/00177_560323134.json       |  43 ++
 .gh-issues/00177_560328546.json       |  43 ++
 .gh-issues/00177_560332163.json       |  43 ++
 .gh-issues/00177_560342068.json       |  43 ++
 .gh-issues/00177_560345630.json       |  43 ++
 .gh-issues/00177_560349879.json       |  43 ++
 .gh-issues/00204.json                 |   8 +-
 .gh-issues/00204_560141719.json       |  43 ++
 .gh-issues/00205.json                 |   4 +-
 .gh-issues/00205_560139946.json       |  43 ++
 .gh-issues/00205_560147985.json       |  43 ++
 .gh-issues/00206.json                 |   8 +-
 .gh-issues/00206_560141650.json       |  43 ++
 .gh-issues/00209.json                 |   4 +-
 .gh-issues/00210.json                 |   4 +-
 .gh-issues/00210_560093304.json       |  43 ++
 .gh-issues/00215.json                 |  10 +-
 .gh-issues/00215_560141411.json       |  43 ++
 .gh-issues/00215_560142950.json       |  43 ++
 .gh-issues/00215_560145088.json       |  43 ++
 .gh-issues/00215_560145348.json       |  43 ++
 .gh-issues/00215_560145395.json       |  43 ++
 .gh-issues/00215_560146686.json       |  43 ++
 .gh-issues/00215_560147116.json       |  43 ++
 .gh-issues/00215_560147428.json       |  43 ++
 .gh-issues/00215_560151556.json       |  43 ++
 .gh-issues/00215_560154881.json       |  43 ++
 .gh-issues/00215_560156352.json       |  43 ++
 .gh-issues/00217.json                 |   8 +-
 .gh-issues/00217_560098079.json       |  43 ++
 .gh-issues/00217_560099224.json       |  43 ++
 .gh-issues/00217_560102235.json       |  43 ++
 .gh-issues/00217_560131250.json       |  43 ++
 .gh-issues/00217_560132790.json       |  43 ++
 .gh-issues/00225.json                 |  60 ++
 .gh-issues/00225_560133388.json       |  43 ++
 .gh-issues/00225_560133602.json       |  43 ++
 .gh-issues/00225_560133852.json       |  43 ++
 .gh-issues/00225_560133962.json       |  43 ++
 .gh-issues/00225_560134684.json       |  43 ++
 .gh-issues/00225_560134836.json       |  43 ++
 .gh-issues/00225_560135086.json       |  43 ++
 .gh-issues/00225_560140308.json       |  43 ++
 .gh-issues/00225_560141274.json       |  43 ++
 .gh-issues/00225_560144181.json       |  43 ++
 .gh-issues/00225_560144766.json       |  43 ++
 .gh-issues/00225_560147941.json       |  43 ++
 .gh-issues/00225_560148226.json       |  43 ++
 .gh-issues/00225_560150265.json       |  43 ++
 .gh-issues/00226.json                 |  60 ++
 .gh-issues/00226_560141551.json       |  43 ++
 .gh-issues/00226_560143999.json       |  43 ++
 .gh-issues/00226_560147255.json       |  43 ++
 .gh-issues/00227.json                 |  60 ++
 .gh-issues/00227_560144792.json       |  43 ++
 .gh-issues/00227_560147041.json       |  43 ++
 .gh-issues/00227_560151388.json       |  43 ++
 .gh-issues/00227_560153813.json       |  43 ++
 .gh-issues/00227_560164214.json       |  43 ++
 .gh-issues/00227_560179494.json       |  43 ++
 .gh-issues/00233.json                 |  60 ++
 .gh-issues/00233_560150492.json       |  43 ++
 .gh-pullrequests/.state               |   2 +-
 .gh-pullrequests/00200.json           |   8 +-
 .gh-pullrequests/00200_560139636.json |  43 ++
 .gh-pullrequests/00202.json           |   4 +-
 .gh-pullrequests/00202_560057559.json |  43 ++
 .gh-pullrequests/00202_560061540.json |  43 ++
 .gh-pullrequests/00202_560082089.json |  43 ++
 .gh-pullrequests/00202_560103298.json |  43 ++
 .gh-pullrequests/00202_560107873.json |  43 ++
 .gh-pullrequests/00202_560108221.json |  43 ++
 .gh-pullrequests/00202_560109496.json |  43 ++
 .gh-pullrequests/00203.json           |   4 +-
 .gh-pullrequests/00203_560108748.json |  43 ++
 .gh-pullrequests/00203_560139813.json |  43 ++
 .gh-pullrequests/00207.json           |   6 +-
 .gh-pullrequests/00208.json           |   6 +-
 .gh-pullrequests/00212.json           |   6 +-
 .gh-pullrequests/00212.patch          |  50 +-
 .gh-pullrequests/00213.json           |   8 +-
 .gh-pullrequests/00213_559886131.json |  43 ++
 .gh-pullrequests/00213_559886388.json |  43 ++
 .gh-pullrequests/00213_559886651.json |  43 ++
 .gh-pullrequests/00214.json           |  46 +-
 .gh-pullrequests/00214_559867809.json |  43 ++
 .gh-pullrequests/00216.json           |  66 ++
 .gh-pullrequests/00216.patch          |  31 +
 .gh-pullrequests/00216_559857531.json |  43 ++
 .gh-pullrequests/00216_559859049.json |  43 ++
 .gh-pullrequests/00216_559869674.json |  43 ++
 .gh-pullrequests/00216_559956888.json |  43 ++
 .gh-pullrequests/00216_560057439.json |  43 ++
 .gh-pullrequests/00218.json           |  66 ++
 .gh-pullrequests/00218.patch          |  24 +
 .gh-pullrequests/00218_559878110.json |  43 ++
 .gh-pullrequests/00219.json           |  66 ++
 .gh-pullrequests/00219.patch          | 269 ++++++++
 .gh-pullrequests/00219_560017380.json |  43 ++
 .gh-pullrequests/00220.json           |  66 ++
 .gh-pullrequests/00220.patch          |  26 +
 .gh-pullrequests/00220_560004992.json |  43 ++
 .gh-pullrequests/00220_560010768.json |  43 ++
 .gh-pullrequests/00220_560011165.json |  43 ++
 .gh-pullrequests/00220_560012662.json |  43 ++
 .gh-pullrequests/00220_560013262.json |  43 ++
 .gh-pullrequests/00220_560013643.json |  43 ++
 .gh-pullrequests/00220_560013803.json |  43 ++
 .gh-pullrequests/00220_560014083.json |  43 ++
 .gh-pullrequests/00220_560014481.json |  43 ++
 .gh-pullrequests/00220_560015224.json |  43 ++
 .gh-pullrequests/00220_560015672.json |  43 ++
 .gh-pullrequests/00220_560016117.json |  43 ++
 .gh-pullrequests/00220_560016260.json |  43 ++
 .gh-pullrequests/00220_560017107.json |  43 ++
 .gh-pullrequests/00220_560018007.json |  43 ++
 .gh-pullrequests/00220_560063925.json |  43 ++
 .gh-pullrequests/00220_560100602.json |  43 ++
 .gh-pullrequests/00220_560102394.json |  43 ++
 .gh-pullrequests/00220_560103503.json |  43 ++
 .gh-pullrequests/00220_560124812.json |  43 ++
 .gh-pullrequests/00220_560125293.json |  43 ++
 .gh-pullrequests/00220_560141304.json |  43 ++
 .gh-pullrequests/00220_560142780.json |  43 ++
 .gh-pullrequests/00220_560417451.json |  43 ++
 .gh-pullrequests/00220_560420766.json |  43 ++
 .gh-pullrequests/00220_560421927.json |  43 ++
 .gh-pullrequests/00220_560422663.json |  43 ++
 .gh-pullrequests/00220_560425017.json |  43 ++
 .gh-pullrequests/00221.json           |  66 ++
 .gh-pullrequests/00221.patch          |  98 +++
 .gh-pullrequests/00221_560012667.json |  43 ++
 .gh-pullrequests/00221_560013317.json |  43 ++
 .gh-pullrequests/00221_560125553.json |  43 ++
 .gh-pullrequests/00222.json           |  66 ++
 .gh-pullrequests/00222.patch          | 269 ++++++++
 .gh-pullrequests/00222_560108449.json |  43 ++
 .gh-pullrequests/00223.json           |  66 ++
 .gh-pullrequests/00223.patch          | 179 ++++++
 .gh-pullrequests/00223_560026465.json |  43 ++
 .gh-pullrequests/00223_560108484.json |  43 ++
 .gh-pullrequests/00224.json           |  66 ++
 .gh-pullrequests/00224.patch          | 886 ++++++++++++++++++++++++++
 .gh-pullrequests/00224_560095572.json |  43 ++
 .gh-pullrequests/00224_560126046.json |  43 ++
 .gh-pullrequests/00224_560129335.json |  43 ++
 .gh-pullrequests/00224_560142429.json |  43 ++
 .gh-pullrequests/00228.json           |  66 ++
 .gh-pullrequests/00228.patch          |  22 +
 .gh-pullrequests/00228_560359844.json |  43 ++
 .gh-pullrequests/00229.json           |  66 ++
 .gh-pullrequests/00229.patch          |  28 +
 .gh-pullrequests/00229_560360690.json |  43 ++
 .gh-pullrequests/00230.json           |  66 ++
 .gh-pullrequests/00230.patch          |  30 +
 .gh-pullrequests/00230_560363971.json |  43 ++
 .gh-pullrequests/00231.json           |  66 ++
 .gh-pullrequests/00231.patch          |  30 +
 .gh-pullrequests/00231_560365591.json |  43 ++
 .gh-pullrequests/00232.json           |  66 ++
 .gh-pullrequests/00232.patch          |  26 +
 .gh-pullrequests/00232_560147680.json |  43 ++
 .gh-pullrequests/00232_560368429.json |  43 ++
 .gh-pullrequests/00234.json           |  66 ++
 .gh-pullrequests/00234.patch          |  50 ++
 185 files changed, 8955 insertions(+), 65 deletions(-)
 create mode 100644 .gh-issues/00058_560141869.json
 create mode 100644 .gh-issues/00169_560169468.json
 create mode 100644 .gh-issues/00169_560173332.json
 create mode 100644 .gh-issues/00177_560057744.json
 create mode 100644 .gh-issues/00177_560081676.json
 create mode 100644 .gh-issues/00177_560103329.json
 create mode 100644 .gh-issues/00177_560103483.json
 create mode 100644 .gh-issues/00177_560106271.json
 create mode 100644 .gh-issues/00177_560131953.json
 create mode 100644 .gh-issues/00177_560133378.json
 create mode 100644 .gh-issues/00177_560137571.json
 create mode 100644 .gh-issues/00177_560139062.json
 create mode 100644 .gh-issues/00177_560147543.json
 create mode 100644 .gh-issues/00177_560148450.json
 create mode 100644 .gh-issues/00177_560174636.json
 create mode 100644 .gh-issues/00177_560256708.json
 create mode 100644 .gh-issues/00177_560323134.json
 create mode 100644 .gh-issues/00177_560328546.json
 create mode 100644 .gh-issues/00177_560332163.json
 create mode 100644 .gh-issues/00177_560342068.json
 create mode 100644 .gh-issues/00177_560345630.json
 create mode 100644 .gh-issues/00177_560349879.json
 create mode 100644 .gh-issues/00204_560141719.json
 create mode 100644 .gh-issues/00205_560139946.json
 create mode 100644 .gh-issues/00205_560147985.json
 create mode 100644 .gh-issues/00206_560141650.json
 create mode 100644 .gh-issues/00210_560093304.json
 create mode 100644 .gh-issues/00215_560141411.json
 create mode 100644 .gh-issues/00215_560142950.json
 create mode 100644 .gh-issues/00215_560145088.json
 create mode 100644 .gh-issues/00215_560145348.json
 create mode 100644 .gh-issues/00215_560145395.json
 create mode 100644 .gh-issues/00215_560146686.json
 create mode 100644 .gh-issues/00215_560147116.json
 create mode 100644 .gh-issues/00215_560147428.json
 create mode 100644 .gh-issues/00215_560151556.json
 create mode 100644 .gh-issues/00215_560154881.json
 create mode 100644 .gh-issues/00215_560156352.json
 create mode 100644 .gh-issues/00217_560098079.json
 create mode 100644 .gh-issues/00217_560099224.json
 create mode 100644 .gh-issues/00217_560102235.json
 create mode 100644 .gh-issues/00217_560131250.json
 create mode 100644 .gh-issues/00217_560132790.json
 create mode 100644 .gh-issues/00225.json
 create mode 100644 .gh-issues/00225_560133388.json
 create mode 100644 .gh-issues/00225_560133602.json
 create mode 100644 .gh-issues/00225_560133852.json
 create mode 100644 .gh-issues/00225_560133962.json
 create mode 100644 .gh-issues/00225_560134684.json
 create mode 100644 .gh-issues/00225_560134836.json
 create mode 100644 .gh-issues/00225_560135086.json
 create mode 100644 .gh-issues/00225_560140308.json
 create mode 100644 .gh-issues/00225_560141274.json
 create mode 100644 .gh-issues/00225_560144181.json
 create mode 100644 .gh-issues/00225_560144766.json
 create mode 100644 .gh-issues/00225_560147941.json
 create mode 100644 .gh-issues/00225_560148226.json
 create mode 100644 .gh-issues/00225_560150265.json
 create mode 100644 .gh-issues/00226.json
 create mode 100644 .gh-issues/00226_560141551.json
 create mode 100644 .gh-issues/00226_560143999.json
 create mode 100644 .gh-issues/00226_560147255.json
 create mode 100644 .gh-issues/00227.json
 create mode 100644 .gh-issues/00227_560144792.json
 create mode 100644 .gh-issues/00227_560147041.json
 create mode 100644 .gh-issues/00227_560151388.json
 create mode 100644 .gh-issues/00227_560153813.json
 create mode 100644 .gh-issues/00227_560164214.json
 create mode 100644 .gh-issues/00227_560179494.json
 create mode 100644 .gh-issues/00233.json
 create mode 100644 .gh-issues/00233_560150492.json
 create mode 100644 .gh-pullrequests/00200_560139636.json
 create mode 100644 .gh-pullrequests/00202_560057559.json
 create mode 100644 .gh-pullrequests/00202_560061540.json
 create mode 100644 .gh-pullrequests/00202_560082089.json
 create mode 100644 .gh-pullrequests/00202_560103298.json
 create mode 100644 .gh-pullrequests/00202_560107873.json
 create mode 100644 .gh-pullrequests/00202_560108221.json
 create mode 100644 .gh-pullrequests/00202_560109496.json
 create mode 100644 .gh-pullrequests/00203_560108748.json
 create mode 100644 .gh-pullrequests/00203_560139813.json
 create mode 100644 .gh-pullrequests/00213_559886131.json
 create mode 100644 .gh-pullrequests/00213_559886388.json
 create mode 100644 .gh-pullrequests/00213_559886651.json
 create mode 100644 .gh-pullrequests/00214_559867809.json
 create mode 100644 .gh-pullrequests/00216.json
 create mode 100644 .gh-pullrequests/00216.patch
 create mode 100644 .gh-pullrequests/00216_559857531.json
 create mode 100644 .gh-pullrequests/00216_559859049.json
 create mode 100644 .gh-pullrequests/00216_559869674.json
 create mode 100644 .gh-pullrequests/00216_559956888.json
 create mode 100644 .gh-pullrequests/00216_560057439.json
 create mode 100644 .gh-pullrequests/00218.json
 create mode 100644 .gh-pullrequests/00218.patch
 create mode 100644 .gh-pullrequests/00218_559878110.json
 create mode 100644 .gh-pullrequests/00219.json
 create mode 100644 .gh-pullrequests/00219.patch
 create mode 100644 .gh-pullrequests/00219_560017380.json
 create mode 100644 .gh-pullrequests/00220.json
 create mode 100644 .gh-pullrequests/00220.patch
 create mode 100644 .gh-pullrequests/00220_560004992.json
 create mode 100644 .gh-pullrequests/00220_560010768.json
 create mode 100644 .gh-pullrequests/00220_560011165.json
 create mode 100644 .gh-pullrequests/00220_560012662.json
 create mode 100644 .gh-pullrequests/00220_560013262.json
 create mode 100644 .gh-pullrequests/00220_560013643.json
 create mode 100644 .gh-pullrequests/00220_560013803.json
 create mode 100644 .gh-pullrequests/00220_560014083.json
 create mode 100644 .gh-pullrequests/00220_560014481.json
 create mode 100644 .gh-pullrequests/00220_560015224.json
 create mode 100644 .gh-pullrequests/00220_560015672.json
 create mode 100644 .gh-pullrequests/00220_560016117.json
 create mode 100644 .gh-pullrequests/00220_560016260.json
 create mode 100644 .gh-pullrequests/00220_560017107.json
 create mode 100644 .gh-pullrequests/00220_560018007.json
 create mode 100644 .gh-pullrequests/00220_560063925.json
 create mode 100644 .gh-pullrequests/00220_560100602.json
 create mode 100644 .gh-pullrequests/00220_560102394.json
 create mode 100644 .gh-pullrequests/00220_560103503.json
 create mode 100644 .gh-pullrequests/00220_560124812.json
 create mode 100644 .gh-pullrequests/00220_560125293.json
 create mode 100644 .gh-pullrequests/00220_560141304.json
 create mode 100644 .gh-pullrequests/00220_560142780.json
 create mode 100644 .gh-pullrequests/00220_560417451.json
 create mode 100644 .gh-pullrequests/00220_560420766.json
 create mode 100644 .gh-pullrequests/00220_560421927.json
 create mode 100644 .gh-pullrequests/00220_560422663.json
 create mode 100644 .gh-pullrequests/00220_560425017.json
 create mode 100644 .gh-pullrequests/00221.json
 create mode 100644 .gh-pullrequests/00221.patch
 create mode 100644 .gh-pullrequests/00221_560012667.json
 create mode 100644 .gh-pullrequests/00221_560013317.json
 create mode 100644 .gh-pullrequests/00221_560125553.json
 create mode 100644 .gh-pullrequests/00222.json
 create mode 100644 .gh-pullrequests/00222.patch
 create mode 100644 .gh-pullrequests/00222_560108449.json
 create mode 100644 .gh-pullrequests/00223.json
 create mode 100644 .gh-pullrequests/00223.patch
 create mode 100644 .gh-pullrequests/00223_560026465.json
 create mode 100644 .gh-pullrequests/00223_560108484.json
 create mode 100644 .gh-pullrequests/00224.json
 create mode 100644 .gh-pullrequests/00224.patch
 create mode 100644 .gh-pullrequests/00224_560095572.json
 create mode 100644 .gh-pullrequests/00224_560126046.json
 create mode 100644 .gh-pullrequests/00224_560129335.json
 create mode 100644 .gh-pullrequests/00224_560142429.json
 create mode 100644 .gh-pullrequests/00228.json
 create mode 100644 .gh-pullrequests/00228.patch
 create mode 100644 .gh-pullrequests/00228_560359844.json
 create mode 100644 .gh-pullrequests/00229.json
 create mode 100644 .gh-pullrequests/00229.patch
 create mode 100644 .gh-pullrequests/00229_560360690.json
 create mode 100644 .gh-pullrequests/00230.json
 create mode 100644 .gh-pullrequests/00230.patch
 create mode 100644 .gh-pullrequests/00230_560363971.json
 create mode 100644 .gh-pullrequests/00231.json
 create mode 100644 .gh-pullrequests/00231.patch
 create mode 100644 .gh-pullrequests/00231_560365591.json
 create mode 100644 .gh-pullrequests/00232.json
 create mode 100644 .gh-pullrequests/00232.patch
 create mode 100644 .gh-pullrequests/00232_560147680.json
 create mode 100644 .gh-pullrequests/00232_560368429.json
 create mode 100644 .gh-pullrequests/00234.json
 create mode 100644 .gh-pullrequests/00234.patch

diff --git a/.gh-issues/.state b/.gh-issues/.state
index ac823c1..42d5926 100644
--- a/.gh-issues/.state
+++ b/.gh-issues/.state
@@ -1 +1 @@
-2019-11-30T20:22:23Z
+2019-12-02T14:41:50Z
diff --git a/.gh-issues/00058.json b/.gh-issues/00058.json
index 0739e20..f3174fd 100644
--- a/.gh-issues/00058.json
+++ b/.gh-issues/00058.json
@@ -40,17 +40,17 @@
         "description": "Accepted best practices"
       }
     ],
-    "state": "open",
+    "state": "closed",
     "locked": false,
     "assignee": null,
     "assignees": [
 
     ],
     "milestone": null,
-    "comments": 15,
+    "comments": 16,
     "created_at": "2019-02-27T20:05:40Z",
-    "updated_at": "2019-10-23T14:41:57Z",
-    "closed_at": null,
+    "updated_at": "2019-12-01T18:38:28Z",
+    "closed_at": "2019-12-01T18:38:28Z",
     "author_association": "MEMBER",
     "body": "[Rendered](https://github.com/ethereumclassic/ECIPs/blob/master/ECIPs/ECIP-1000.mediawiki)\r\n\r\nAn Ethereum Classic Improvement Proposal (ECIP) is a design document providing information to the Ethereum Classic community, or describing a new feature for Ethereum Classic or its processes or environment. The ECIP should provide a concise technical specification of the feature and a rationale for the feature.\r\n\r\nWe intend ECIPs to be the primary mechanisms for proposing new features, for collecting community input on an issue, and for documenting the design decisions that have gone into Ethereum Classic. The ECIP author is responsible for building consensus within the community and documenting dissenting opinions.\r\n\r\nBecause the ECIPs are maintained as text files in a versioned repository, their revision history is the historical record of the feature proposal. ",
     "reactions": {
diff --git a/.gh-issues/00058_560141869.json b/.gh-issues/00058_560141869.json
new file mode 100644
index 0000000..4c79ae4
--- /dev/null
+++ b/.gh-issues/00058_560141869.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560141869",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/58#issuecomment-560141869",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/58",
+    "id": 560141869,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0MTg2OQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T18:37:09Z",
+    "updated_at": "2019-12-01T18:37:09Z",
+    "author_association": "MEMBER",
+    "body": "Can we close this issue now, @sorpaas?  It was merged.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560141869/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00169.json b/.gh-issues/00169.json
index d41b9d2..6e8504f 100644
--- a/.gh-issues/00169.json
+++ b/.gh-issues/00169.json
@@ -39,9 +39,9 @@
 
     ],
     "milestone": null,
-    "comments": 0,
+    "comments": 2,
     "created_at": "2019-11-06T20:23:14Z",
-    "updated_at": "2019-11-08T23:00:49Z",
+    "updated_at": "2019-12-01T23:22:57Z",
     "closed_at": null,
     "author_association": "MEMBER",
     "body": "Discussion page for ECIP-1040.",
diff --git a/.gh-issues/00169_560169468.json b/.gh-issues/00169_560169468.json
new file mode 100644
index 0000000..9fca015
--- /dev/null
+++ b/.gh-issues/00169_560169468.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560169468",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/169#issuecomment-560169468",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/169",
+    "id": 560169468,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE2OTQ2OA==",
+    "user": {
+      "login": "zmitton",
+      "id": 6954889,
+      "node_id": "MDQ6VXNlcjY5NTQ4ODk=",
+      "avatar_url": "https://avatars0.githubusercontent.com/u/6954889?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/zmitton",
+      "html_url": "https://github.com/zmitton",
+      "followers_url": "https://api.github.com/users/zmitton/followers",
+      "following_url": "https://api.github.com/users/zmitton/following{/other_user}",
+      "gists_url": "https://api.github.com/users/zmitton/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/zmitton/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/zmitton/subscriptions",
+      "organizations_url": "https://api.github.com/users/zmitton/orgs",
+      "repos_url": "https://api.github.com/users/zmitton/repos",
+      "events_url": "https://api.github.com/users/zmitton/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/zmitton/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T22:47:17Z",
+    "updated_at": "2019-12-01T22:47:17Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Reposting in correct PR\r\n\r\n> The gas cost of contracts is often the cause of DOS vectors. The response to these vectors therefore must be to change existing gas costs. If existing gas costs are allowed to continue, DOS vector still exists.\r\n\r\n> In fact, I'm pretty sure all the DOS vectors so far discovered have been of this kind, fixed by changing gas costs. If this ECIP had been implemented, it would have had to have been overridden to change gas costs of already-deployed contracts.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560169468/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00169_560173332.json b/.gh-issues/00169_560173332.json
new file mode 100644
index 0000000..028d05f
--- /dev/null
+++ b/.gh-issues/00169_560173332.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560173332",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/169#issuecomment-560173332",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/169",
+    "id": 560173332,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE3MzMzMg==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T23:22:57Z",
+    "updated_at": "2019-12-01T23:22:57Z",
+    "author_association": "MEMBER",
+    "body": "@zmitton We do have solutions for backward compatible DoS gas repricing fix, currently documented here https://ep.corepaper.org/compatibility/#encouraging-using-forward-compatible-version\r\n\r\nThe basic idea is that instead of increasing exploit opcode's gas cost, we systematically decrease other opcode's gas cost (in the newer version). Combined with gas price change (either automatically done by miners, or can be a hard reset in the hard fork), this fixes the exploit in the legacy version EVM, while also preserves full backward compatibility.\r\n\r\nI did get some feedback that some of the texts in the article might be confusing, so please let me know if you have any questions. I'll also be improving the section in the next few days.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560173332/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177.json b/.gh-issues/00177.json
index cf9f0f4..c4c6187 100644
--- a/.gh-issues/00177.json
+++ b/.gh-issues/00177.json
@@ -8,7 +8,7 @@
     "id": 519405348,
     "node_id": "MDU6SXNzdWU1MTk0MDUzNDg=",
     "number": 177,
-    "title": "Core Devs Call: ECIP-1061 Aztlán Upgrade",
+    "title": "Core Devs Call: Aztlán Upgrade",
     "user": {
       "login": "soc1c",
       "id": 47772477,
@@ -68,19 +68,19 @@
         "site_admin": false
       },
       "open_issues": 1,
-      "closed_issues": 4,
+      "closed_issues": 5,
       "state": "open",
       "created_at": "2019-11-27T20:32:02Z",
-      "updated_at": "2019-11-29T16:18:06Z",
+      "updated_at": "2019-11-29T19:52:44Z",
       "due_on": null,
       "closed_at": null
     },
-    "comments": 5,
+    "comments": 24,
     "created_at": "2019-11-07T17:22:16Z",
-    "updated_at": "2019-11-28T06:29:12Z",
+    "updated_at": "2019-12-02T11:10:25Z",
     "closed_at": "2019-11-28T06:29:12Z",
     "author_association": "MEMBER",
-    "body": "Ref [ECIP-1061](https://github.com/ethereumclassic/ECIPs/blob/master/_specs/ecip-1061.md) #81 #157 #176 \r\n\r\n### ETC Core Devs Call - Aztlán Finalization\r\n\r\nWhen: **Wednesday, November 27, 2019, 1pm UTC**, 60 minutes max.\r\n\r\nWhere: **Ethereum Classic Discord** https://discord.gg/dwxb6nf `#ecips` channel. Will use/create a voice channel _ad hoc._\r\n\r\n### Agenda\r\n\r\n- Quick client teams check-in\r\n  - Parity Ethereum / Parity Tech\r\n  - Geth Classic / ChainSafe, ETCLabs Core\r\n  - Multi-Geth / Multi-Geth, ETCLabs Core \r\n  - Hyperledger Besu / ChainSafe, PegaSys\r\n- Aztlán (ECIP-1061) needs to be either **accepted** or _updated_ (or _rejected_)\r\n  - discuss included EIPs\r\n  - discuss a timeline for the protocol upgrade\r\n    - Mordor Classic and Kotti Classic testnet (February?)\r\n    - Ethereum Classic mainnet (March?)\r\n- anything else related to Aztlán\r\n\r\nPlease comment to add items to the agenda",
+    "body": "Ref [ECIP-1061](https://github.com/ethereumclassic/ECIPs/blob/master/_specs/ecip-1061.md) #81 #157 #176 \r\n\r\n### ETC Core Devs Call - ECIP-1061 Aztlán Finalization\r\n\r\nWhen: **Wednesday, November 27, 2019, 1pm UTC**, 60 minutes max.\r\n\r\nWhere: **Ethereum Classic Discord** https://discord.gg/dwxb6nf `#ecips` channel. Will use/create a voice channel _ad hoc._\r\n\r\n### Agenda\r\n\r\n- Quick client teams check-in\r\n  - Parity Ethereum / Parity Tech\r\n  - Geth Classic / ChainSafe, ETCLabs Core\r\n  - Multi-Geth / Multi-Geth, ETCLabs Core \r\n  - Hyperledger Besu / ChainSafe, PegaSys\r\n- Aztlán (ECIP-1061) needs to be either **accepted** or _updated_ (or _rejected_)\r\n  - discuss included EIPs\r\n  - discuss a timeline for the protocol upgrade\r\n    - Mordor Classic and Kotti Classic testnet (February?)\r\n    - Ethereum Classic mainnet (March?)\r\n- anything else related to Aztlán\r\n\r\nPlease comment to add items to the agenda",
     "reactions": {
       "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177/reactions",
       "total_count": 0,
diff --git a/.gh-issues/00177_560057744.json b/.gh-issues/00177_560057744.json
new file mode 100644
index 0000000..6f65a49
--- /dev/null
+++ b/.gh-issues/00177_560057744.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560057744",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-560057744",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 560057744,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDA1Nzc0NA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T05:19:20Z",
+    "updated_at": "2019-12-01T05:19:20Z",
+    "author_association": "MEMBER",
+    "body": "My meeting notes for the last section of the call:\r\n\r\n* Wei: Just to make it clear, does this mean we move forward with 1072 to \"Last Call\" status? If that is the case, how long should be the last call period? Three weeks?\r\n* Afri: Three weeks should be sufficient. We also get to evaluate it on the Ethereum network first.\r\n* [No further comments, assumed everyone agreed.]\r\n* Bob: Since we decide to move forward with 1072, does this mean we will change the hard fork name to Yingchun?\r\n* Wei: No. I'll modify the title of 1072 to make Yingchun the edition name, but since Aztlan was already decided, let's still call it the hard fork name.\r\n* Yaz: [Repeat what Wei has said] The hard fork name is already decided to be Aztlan, so that's what it should be called. I do not object giving it a small \"hat\" name Yingchun.\r\n* Afri: Okay, then let's call it Aztlan with Yingchun edition.\r\n\r\nI do not think Afri's meeting notes on this part is correct.\r\n\r\n* It logically does not follow if we are talking about 1072 for the whole section, and then suddenly jumped back to 1061 just for the last sentence.\r\n* It contradicts to Bob's question -- if we were indeed talking about 1061, Bob wouldn't have asked the question whether the hard fork will be named \"Yingchun\", because when the meeting happened, 1061 does not have that name at all.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560057744/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 1,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_560081676.json b/.gh-issues/00177_560081676.json
new file mode 100644
index 0000000..b65ad71
--- /dev/null
+++ b/.gh-issues/00177_560081676.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560081676",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-560081676",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 560081676,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDA4MTY3Ng==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T09:25:11Z",
+    "updated_at": "2019-12-01T09:25:11Z",
+    "author_association": "MEMBER",
+    "body": "Oh, suddenly, 5 days later you have notes? Very creative!\r\n\r\nAre we playing this game now after every meeting? On the call we make decisions and afterwards Wei is opening a can of worms to waste everyone's time disputing the consensus we reached on the calls even though you were on these calls?\r\n\r\nFor the future of humanity, what does it matter if Ethereum Classic specifies a hardfork in 1061 or 1072? Nothing!\r\n\r\nI suggest you zoom out a bit and do some reality checks. Maybe spend a day with your girlfriend in the mountains, go hiking, or fishing at the sea and reflect your actions a bit from distance.\r\n\r\nI understand that you are hurt because you didn't get to write the specification but that does not allow you to blackmail an entire community by threatening you stopping to support Ethereum Classic in Multi-Geth, removing Sputnik VM from Classic, and even proposing a Classic Classic one-man fork... just over a god damn number!\r\n\r\nLet's move on.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560081676/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_560103329.json b/.gh-issues/00177_560103329.json
new file mode 100644
index 0000000..a8ca84b
--- /dev/null
+++ b/.gh-issues/00177_560103329.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560103329",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-560103329",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 560103329,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEwMzMyOQ==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T12:42:12Z",
+    "updated_at": "2019-12-01T12:42:12Z",
+    "author_association": "MEMBER",
+    "body": "@soc1c I do not see why this issue should be locked, as it doesn't feel heated at all. Well, okay, probably you are..\r\n\r\nThis thing matters because of the process. If someone can bypass the process today, they may bypass it tomorrow to move forward a DAO-like hard fork on Ethereum Classic. This is the only process we have at this moment. As the author of the currently accepted ECIP process, it's important for me, and for community members, to make sure it is functional.\r\n\r\nI find the rest of your post was just... name calling and personal attacks? Anyway, I'll just pretend I didn't see them! :)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560103329/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_560103483.json b/.gh-issues/00177_560103483.json
new file mode 100644
index 0000000..2d592ab
--- /dev/null
+++ b/.gh-issues/00177_560103483.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560103483",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-560103483",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 560103483,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEwMzQ4Mw==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T12:43:37Z",
+    "updated_at": "2019-12-01T12:43:37Z",
+    "author_association": "MEMBER",
+    "body": "I only wrote the last section of the meeting notes, because that's what I care about. I'll not be the only person to publish the meeting notes. @developerkevin also has meeting notes of this not yet published.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560103483/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_560106271.json b/.gh-issues/00177_560106271.json
new file mode 100644
index 0000000..65917c1
--- /dev/null
+++ b/.gh-issues/00177_560106271.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560106271",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-560106271",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 560106271,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEwNjI3MQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T13:09:58Z",
+    "updated_at": "2019-12-01T13:09:58Z",
+    "author_association": "MEMBER",
+    "body": "Cool, a week later everyone writes his own notes. That's how history is _made_. Can't wait to _read_ it.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560106271/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_560131953.json b/.gh-issues/00177_560131953.json
new file mode 100644
index 0000000..7e5478b
--- /dev/null
+++ b/.gh-issues/00177_560131953.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560131953",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-560131953",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 560131953,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEzMTk1Mw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T17:05:40Z",
+    "updated_at": "2019-12-01T17:05:40Z",
+    "author_association": "MEMBER",
+    "body": "@sorpaas AGAIN you are trying to use my words in support of your interpretation.\r\n\r\nWhen I said \"Should we change the hard fork name to Yingchun?\" I was NOT \"jumping between ECIPs\", because 1061 (updated) and 1072 had become the same.\r\n\r\nI really did not care whether we \"adopt 1072\" or \"update 1061\" because the outcome was identical.\r\n\r\nWe had come to HUMAN CONSENSUS within the meeting that the scope of Aztlan was \"Istanbul - 1884\".    Whether that happened via 1061 or 1072 is utterly unimportant.\r\n\r\nAfri's actions reflected what was agreed in the meeting.\r\n\r\nYou may think you are fighting some holy war here which is protecting the sanctity of the ECIP-1000 process, but that is not what you are actually doing.    What you are actually doing is creating a hugely frustrating and unnecessary \"civil war\" within ETC, but with only you on the \"1072 side\" of it.\r\n\r\nYou have called me malicious in the very recent past.    You have called Afri malicious.   You have threatened the ETC ecosystem that you will not support \"ETC 1061\" in SputnikVM or MultiGeth.   You have threatened to create Ethereum Classic Classic.\r\n\r\nEven yesterday and today you continue to fight and fight and waste more time.\r\n\r\nPlease for the love of God step away from the keyboard for a day or two.    You are destroying all of the huge credibility and good karma you had built up within ETC.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560131953/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_560133378.json b/.gh-issues/00177_560133378.json
new file mode 100644
index 0000000..864f36b
--- /dev/null
+++ b/.gh-issues/00177_560133378.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560133378",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-560133378",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 560133378,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEzMzM3OA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T17:18:59Z",
+    "updated_at": "2019-12-01T17:19:59Z",
+    "author_association": "MEMBER",
+    "body": "@bobsummerwill Well, since you have repeatedly brought this up, let's continue this. Again, I'll ignore your personal attack part. I believe readers can judge it themselves.\r\n\r\nWe have human consensus to move forward with 1072, as said above. No matter how you want to interpret it now, you have said those words in the meeting, and things do not follow logic if the decision was to move forward with 1061, based on plain words, as explained above. You have failed to provide any justifications or explanations.\r\n\r\nIt's also not only me on the \"1072 side\". Multiple community members, if you care about to read the Discord channel, have voiced that the decision was to move forward with 1072. It's rather that just you, Afri, and Yaz said otherwise, had been pretty loud (for what purpose, exactly?), and even had to use dirty tricks to discredit me. Most people who are on the \"1072 side\" do not want to make a fuss about it, because the specifications will be technically the same. I switched to that group as well, as I do not object moving forward with 1061 lately. However, I will not tolerate you, Afri and Yaz continuing to spread false information saying that the decision reached was 1061.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560133378/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_560137571.json b/.gh-issues/00177_560137571.json
new file mode 100644
index 0000000..bba6fc3
--- /dev/null
+++ b/.gh-issues/00177_560137571.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560137571",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-560137571",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 560137571,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEzNzU3MQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T18:00:20Z",
+    "updated_at": "2019-12-01T18:00:20Z",
+    "author_association": "MEMBER",
+    "body": "We agreed on THE SCOPE which was Istanbul - 1884.\r\n\r\n1072 captured that scope.\r\nAfri updated 1061 to reflect that scope too, adding you as an author too.\r\nYou later pointed out licensing issue.  That was addressed yesterday (#216).\r\n\r\nEveryone is in consensus on the content.\r\n\r\nIf Afri \"breached process\" here is was in some tiny way which really does not matter.   If we need to update ECIP-1000 to ensure that does not happen again then we will.\r\n\r\n#221 from @shanejonas and #224 from @meowsbits are seeking to do exactly that.\r\n\r\nYou on the other hand are throwing around \"malicious\" and creating days and day worth of drama over nothing.   The whole ecosystem agreed on that scope - yourself included.\r\n\r\nEven your threats of breaking away with 1072 would have actually been IDENTICAL protocol.  Literally exactly the same.   \"1016 clients\" and \"1072 clients\" would have been the same.\r\n\r\nYou have generated days and days of wasted effort and drama over the tiniest little breach of process, and even that \"breach\" is pretty subjective.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560137571/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_560139062.json b/.gh-issues/00177_560139062.json
new file mode 100644
index 0000000..6a97746
--- /dev/null
+++ b/.gh-issues/00177_560139062.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560139062",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-560139062",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 560139062,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEzOTA2Mg==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T18:14:41Z",
+    "updated_at": "2019-12-01T18:15:31Z",
+    "author_association": "MEMBER",
+    "body": "@bobsummerwill We not only agreed on the scope, but also, we agreed on the ECIP to move forward in the meeting. This can be proved in the meeting notes that I explicitly asked whether the the specification we will move forward is ECIP-1072:\r\n\r\n> Wei: Just to make it clear, does this mean we move forward with 1072 to \"Last Call\" status? If that is the case, how long should be the last call period? Three weeks?\r\n\r\nNow. I do not know why you want to bring up all those controversy again. You can read Discord chat history to know that the above is a fact independently acknowledged by multiple community members.\r\n\r\nAnd again, allow me to ignore the personal attack points you made in your comments. That's just pointless to reply.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560139062/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_560147543.json b/.gh-issues/00177_560147543.json
new file mode 100644
index 0000000..eb2c4f6
--- /dev/null
+++ b/.gh-issues/00177_560147543.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560147543",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-560147543",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 560147543,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0NzU0Mw==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T19:19:08Z",
+    "updated_at": "2019-12-01T19:19:08Z",
+    "author_association": "MEMBER",
+    "body": "> This thing matters because of the process. If someone can bypass the process today, they may bypass it tomorrow to move forward a DAO-like hard fork on Ethereum Classic. This is the only process we have at this moment.\r\n\r\nThis. Always follow the process or open an attack vector. Yes, even if it's us, the good guys and it will slow us down a bit. This specific case is a bit unfortunate because it makes it seem unimportant, but precision matters in the long run because you can't be exact on one ECIP and less exact on the other. It opens up the same issue that the DAO HF did e.g. who decides when things are important? It's literally the same pandora's box opening as the DAO but in a different setting.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560147543/reactions",
+      "total_count": 2,
+      "+1": 2,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_560148450.json b/.gh-issues/00177_560148450.json
new file mode 100644
index 0000000..88a374c
--- /dev/null
+++ b/.gh-issues/00177_560148450.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560148450",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-560148450",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 560148450,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0ODQ1MA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T19:25:25Z",
+    "updated_at": "2019-12-01T19:25:25Z",
+    "author_association": "MEMBER",
+    "body": "Having precise process which we follow is very important, yes, @phyro.\r\nI do not disagree.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560148450/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_560174636.json b/.gh-issues/00177_560174636.json
new file mode 100644
index 0000000..d342fe4
--- /dev/null
+++ b/.gh-issues/00177_560174636.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560174636",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-560174636",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 560174636,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE3NDYzNg==",
+    "user": {
+      "login": "drd34d",
+      "id": 30156189,
+      "node_id": "MDQ6VXNlcjMwMTU2MTg5",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/30156189?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/drd34d",
+      "html_url": "https://github.com/drd34d",
+      "followers_url": "https://api.github.com/users/drd34d/followers",
+      "following_url": "https://api.github.com/users/drd34d/following{/other_user}",
+      "gists_url": "https://api.github.com/users/drd34d/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/drd34d/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/drd34d/subscriptions",
+      "organizations_url": "https://api.github.com/users/drd34d/orgs",
+      "repos_url": "https://api.github.com/users/drd34d/repos",
+      "events_url": "https://api.github.com/users/drd34d/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/drd34d/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T23:35:36Z",
+    "updated_at": "2019-12-01T23:35:36Z",
+    "author_association": "NONE",
+    "body": "Call consensus, as noted, was 1072 not \"1061 after being edited\". @sorpaas thank you for standing your ground against another attempt to \"run the show\". ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560174636/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 1,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_560256708.json b/.gh-issues/00177_560256708.json
new file mode 100644
index 0000000..8741c1c
--- /dev/null
+++ b/.gh-issues/00177_560256708.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560256708",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-560256708",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 560256708,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDI1NjcwOA==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-02T06:45:52Z",
+    "updated_at": "2019-12-02T06:45:52Z",
+    "author_association": "MEMBER",
+    "body": "@drd34d you weren't even on the call and it wasn't recorded, so not sure what you're doing other than trying to add fuel to the fire for your own amusement. \r\n\r\nIt is amusing you are certain we are talking about 1072 only on an issue ticket about ECIP-1061 call.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560256708/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_560323134.json b/.gh-issues/00177_560323134.json
new file mode 100644
index 0000000..8c003c9
--- /dev/null
+++ b/.gh-issues/00177_560323134.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560323134",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-560323134",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 560323134,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDMyMzEzNA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-02T10:00:27Z",
+    "updated_at": "2019-12-02T10:01:23Z",
+    "author_association": "MEMBER",
+    "body": "@YazzyYaz I think @drd34d is rather making his own conclusions as an outsider, after reading all the arguments above about what has happened. So far, I've only seen logical inconsistency from the side still arguing \"1061 after being edited\". If you want to find attestations from people who attended the call to confirm that the call consensus was indeed 1072, look for Discord chat history.\r\n\r\nAs the content of the call was indeed about 1061/1702, let me modify the issue title to reflect that.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560323134/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_560328546.json b/.gh-issues/00177_560328546.json
new file mode 100644
index 0000000..f599308
--- /dev/null
+++ b/.gh-issues/00177_560328546.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560328546",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-560328546",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 560328546,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDMyODU0Ng==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-02T10:14:18Z",
+    "updated_at": "2019-12-02T10:14:18Z",
+    "author_association": "MEMBER",
+    "body": "Sorry @sorpaas you can't change the historic title of a call just to prove your point, this isn't how it works and is just invalid. The call was about ECIP-1061 flavors, not 1072 specifically.\r\n\r\nYou also conveniently only have notes of the end of the call written 1 week after the call happened and no notes of the entire call at all. We weren't born yesterday, @sorpaas.\r\n\r\nChanging the title back to its original state. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560328546/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_560332163.json b/.gh-issues/00177_560332163.json
new file mode 100644
index 0000000..561cc36
--- /dev/null
+++ b/.gh-issues/00177_560332163.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560332163",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-560332163",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 560332163,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDMzMjE2Mw==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-02T10:23:32Z",
+    "updated_at": "2019-12-02T10:23:32Z",
+    "author_association": "MEMBER",
+    "body": "@YazzyYaz Well. As I mentioned, even if you use Afri's note, there will be several logic inconsistency if you argue the conclusion was ECIP-1061. It was not about 1072 specifically, of course, but it's also not about 1061 specifically, based on the content.\r\n\r\nI don't know what's wrong with only having notes towards the end of the call, because that's usually when decisions happen. Besides, I asked a question near the end about 1072, so it's reasonable I'll take notes just from the point when I started to ask questions.\r\n\r\nIf you still have doubt that the conclusions we reached was 1072, again, as I said, look in Discord chat history to find other people who has also reached the same conclusion!",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560332163/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_560342068.json b/.gh-issues/00177_560342068.json
new file mode 100644
index 0000000..275272a
--- /dev/null
+++ b/.gh-issues/00177_560342068.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560342068",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-560342068",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 560342068,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDM0MjA2OA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-02T10:49:25Z",
+    "updated_at": "2019-12-02T10:49:25Z",
+    "author_association": "MEMBER",
+    "body": "Stop changing the title of this call @sorpaas.\r\n\r\nYou are overstepping your permissions as editor and abusing your rights here. I understand you have a different view on the things but you should be mindful about your push access to this repository. \r\n\r\nThanks.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560342068/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_560345630.json b/.gh-issues/00177_560345630.json
new file mode 100644
index 0000000..69f19e2
--- /dev/null
+++ b/.gh-issues/00177_560345630.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560345630",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-560345630",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 560345630,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDM0NTYzMA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-02T10:59:07Z",
+    "updated_at": "2019-12-02T10:59:07Z",
+    "author_association": "MEMBER",
+    "body": "@soc1c What's wrong for editing the title for more accurate information? I have not been removing anything you wrote after all!\r\n\r\nThe call was indeed about both 1061 and 1072. Maybe removing both from the title will satisfy you?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560345630/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00177_560349879.json b/.gh-issues/00177_560349879.json
new file mode 100644
index 0000000..5009218
--- /dev/null
+++ b/.gh-issues/00177_560349879.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560349879",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-560349879",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/177",
+    "id": 560349879,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDM0OTg3OQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-02T11:10:25Z",
+    "updated_at": "2019-12-02T11:10:25Z",
+    "author_association": "MEMBER",
+    "body": "Ok, that works. But please be more mindful about these changes in future.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560349879/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00204.json b/.gh-issues/00204.json
index 22c7b1f..85f58bc 100644
--- a/.gh-issues/00204.json
+++ b/.gh-issues/00204.json
@@ -32,17 +32,17 @@
     "labels": [
 
     ],
-    "state": "open",
+    "state": "closed",
     "locked": false,
     "assignee": null,
     "assignees": [
 
     ],
     "milestone": null,
-    "comments": 0,
+    "comments": 1,
     "created_at": "2019-11-27T23:28:49Z",
-    "updated_at": "2019-11-27T23:28:49Z",
-    "closed_at": null,
+    "updated_at": "2019-12-01T18:36:20Z",
+    "closed_at": "2019-12-01T18:36:20Z",
     "author_association": "MEMBER",
     "body": "Discussion for https://github.com/ethereumclassic/ECIPs/pull/202",
     "reactions": {
diff --git a/.gh-issues/00204_560141719.json b/.gh-issues/00204_560141719.json
new file mode 100644
index 0000000..edb2596
--- /dev/null
+++ b/.gh-issues/00204_560141719.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560141719",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/204#issuecomment-560141719",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/204",
+    "id": 560141719,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0MTcxOQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T18:36:20Z",
+    "updated_at": "2019-12-01T18:36:20Z",
+    "author_association": "MEMBER",
+    "body": "Split up.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560141719/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00205.json b/.gh-issues/00205.json
index 3b783d7..e42e632 100644
--- a/.gh-issues/00205.json
+++ b/.gh-issues/00205.json
@@ -39,9 +39,9 @@
 
     ],
     "milestone": null,
-    "comments": 0,
+    "comments": 2,
     "created_at": "2019-11-27T23:30:01Z",
-    "updated_at": "2019-11-27T23:30:01Z",
+    "updated_at": "2019-12-01T19:22:06Z",
     "closed_at": null,
     "author_association": "MEMBER",
     "body": "Discussion for https://github.com/ethereumclassic/ECIPs/pull/203\r\n\r\nThis is just a bad idea, and is never going to happen.\r\nSorry, Jesse.\r\nBut we should reject this and clear out cognitive load.",
diff --git a/.gh-issues/00205_560139946.json b/.gh-issues/00205_560139946.json
new file mode 100644
index 0000000..f546e07
--- /dev/null
+++ b/.gh-issues/00205_560139946.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560139946",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/205#issuecomment-560139946",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/205",
+    "id": 560139946,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEzOTk0Ng==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T18:23:17Z",
+    "updated_at": "2019-12-01T18:23:17Z",
+    "author_association": "MEMBER",
+    "body": "My suggestion, @meowsbits, would be that we raise this in an ETC Core Developers meeting.\r\nI think there is likely very broad consensus that this makes no sense at the protocol level, and we should Reject this issue to reduce our \"working set\" and also to avoid giving @26jesse false hope that this might ever happen.\r\n\r\nIt would actually have been a service to say that to him before he went to all the effort of making this ECIP.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560139946/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00205_560147985.json b/.gh-issues/00205_560147985.json
new file mode 100644
index 0000000..9233548
--- /dev/null
+++ b/.gh-issues/00205_560147985.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560147985",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/205#issuecomment-560147985",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/205",
+    "id": 560147985,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0Nzk4NQ==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T19:22:05Z",
+    "updated_at": "2019-12-01T19:22:05Z",
+    "author_association": "MEMBER",
+    "body": "let's have it in a meeting",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560147985/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00206.json b/.gh-issues/00206.json
index 904e9c3..c201978 100644
--- a/.gh-issues/00206.json
+++ b/.gh-issues/00206.json
@@ -32,17 +32,17 @@
     "labels": [
 
     ],
-    "state": "open",
+    "state": "closed",
     "locked": false,
     "assignee": null,
     "assignees": [
 
     ],
     "milestone": null,
-    "comments": 0,
+    "comments": 1,
     "created_at": "2019-11-27T23:31:32Z",
-    "updated_at": "2019-11-27T23:31:32Z",
-    "closed_at": null,
+    "updated_at": "2019-12-01T18:35:54Z",
+    "closed_at": "2019-12-01T18:35:53Z",
     "author_association": "MEMBER",
     "body": "Discussion for https://github.com/ethereumclassic/ECIPs/pull/200.\r\n\r\nProposal to reject the following ECIPs:\r\n\r\nECIP-1021 - Token standard (= ERC-223 in Ethereum)\r\nECIP-1051 - Ethereum Classic Treasury system\r\nECIP-1052 - Smart-contract Security Auditing core\r\nECIP-1057 - Cold Staking\r\n\r\nThere is no support for these proposals.\r\nRealistically they will never happen.\r\n\r\nIf new champions wish to propose similar changes in the future they should create new ECIPs.\r\nWe should reduce our cognitive load and the clarify of our \"working set\" by pruning out such inactive or \"never going to happen\" proposals.\r\n\r\nDexaran has indicated that his efforts will now be applied against EOS and I wish him the best with that approach. https://twitter.com/BobSummerwill/status/1199718315683237888\r\n\r\nNobody has championed treasury proposals except for Dexaran either, and treasury proposals are deeply unpopular within ETC.",
     "reactions": {
diff --git a/.gh-issues/00206_560141650.json b/.gh-issues/00206_560141650.json
new file mode 100644
index 0000000..200dd23
--- /dev/null
+++ b/.gh-issues/00206_560141650.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560141650",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/206#issuecomment-560141650",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/206",
+    "id": 560141650,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0MTY1MA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T18:35:53Z",
+    "updated_at": "2019-12-01T18:35:53Z",
+    "author_association": "MEMBER",
+    "body": "Superceded by multiple more granularity PRs.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560141650/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00209.json b/.gh-issues/00209.json
index 4c7a8eb..5b57107 100644
--- a/.gh-issues/00209.json
+++ b/.gh-issues/00209.json
@@ -41,10 +41,10 @@
     "milestone": null,
     "comments": 4,
     "created_at": "2019-11-28T18:45:07Z",
-    "updated_at": "2019-11-30T03:46:28Z",
+    "updated_at": "2019-12-01T20:17:35Z",
     "closed_at": null,
     "author_association": "MEMBER",
-    "body": "The current core dev meeting coordinator is informally Afri. Afri has said we \"can replace me anytime\". Given recent actions that Afri were not exactly following the \"protocol\" and were not exactly \"neutral\" in his position, I think it would be important to have some coordinator name list ready, in case we want to appoint a new one for all of our meetings.\r\n\r\nPlease feel free to propose names or propose yourself. Current list:\r\n\r\n@YazzyYaz \r\n@phyro \r\n@TokenHash \r\n@developerkevin ",
+    "body": "The current core dev meeting coordinator is informally Afri. Afri has said we \"can replace me anytime\". Given recent actions that Afri were not exactly following the \"protocol\" and were not exactly \"neutral\" in his position, I think it would be important to have some coordinator name list ready, in case we want to appoint a new one for all of our meetings.\r\n\r\nPlease feel free to propose names or propose yourself. Current list:\r\n\r\n@YazzyYaz \r\n@phyro \r\n@TokenHash \r\n@developerkevin \r\n@mikeyb",
     "reactions": {
       "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/209/reactions",
       "total_count": 0,
diff --git a/.gh-issues/00210.json b/.gh-issues/00210.json
index e993554..edfd7fa 100644
--- a/.gh-issues/00210.json
+++ b/.gh-issues/00210.json
@@ -75,9 +75,9 @@
       "due_on": null,
       "closed_at": null
     },
-    "comments": 8,
+    "comments": 9,
     "created_at": "2019-11-28T20:56:09Z",
-    "updated_at": "2019-11-30T19:20:32Z",
+    "updated_at": "2019-12-01T11:10:28Z",
     "closed_at": null,
     "author_association": "MEMBER",
     "body": "![etc Aztlán hardfork](https://user-images.githubusercontent.com/48069525/69831442-b6ea7800-1229-11ea-8217-7e793754313a.png)\r\n",
diff --git a/.gh-issues/00210_560093304.json b/.gh-issues/00210_560093304.json
new file mode 100644
index 0000000..a6dd97c
--- /dev/null
+++ b/.gh-issues/00210_560093304.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560093304",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/210#issuecomment-560093304",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/210",
+    "id": 560093304,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDA5MzMwNA==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T11:10:04Z",
+    "updated_at": "2019-12-01T11:10:28Z",
+    "author_association": "MEMBER",
+    "body": "another two. 1st version's prism got darker, 3rd got a modification\r\n![etc Aztlán hardfork 1 2](https://user-images.githubusercontent.com/48069525/69913058-5595f500-1433-11ea-8b5e-c7e1c65c8388.png)\r\n![etc Aztlán hardfork v3 1](https://user-images.githubusercontent.com/48069525/69913059-5595f500-1433-11ea-973f-d00c727105ad.png)\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560093304/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215.json b/.gh-issues/00215.json
index f93cea8..c29d5bd 100644
--- a/.gh-issues/00215.json
+++ b/.gh-issues/00215.json
@@ -32,19 +32,19 @@
     "labels": [
 
     ],
-    "state": "closed",
+    "state": "open",
     "locked": false,
     "assignee": null,
     "assignees": [
 
     ],
     "milestone": null,
-    "comments": 13,
+    "comments": 24,
     "created_at": "2019-11-29T17:35:39Z",
-    "updated_at": "2019-11-30T00:46:29Z",
-    "closed_at": "2019-11-29T23:29:15Z",
+    "updated_at": "2019-12-01T20:39:36Z",
+    "closed_at": null,
     "author_association": "MEMBER",
-    "body": "Ref [ECIP-1061](https://ecips.ethereumclassic.org/ECIPs/ecip-1061) [ECIP-1072](https://ecips.ethereumclassic.org/ECIPs/ecip-1072) #198 #199 #207 #212 #213 #216 #218 \r\n\r\n### ETC Core Devs Call - Confirm consensus for Aztlán Upgrade (Yingchun Edition)\r\n\r\nWhen: **Thursday, December 5, 2019, 1pm UTC**, 60 minutes max.\r\n\r\nWhere: **Ethereum Classic Discord** https://discord.gg/dwxb6nf `#ecips` channel. Will use/create a voice channel _ad hoc._\r\n\r\nMeeting Coordinator: TBD\r\n\r\n### Agenda\r\n\r\n- Aztlán Upgrade (Yingchun Edition) ([ECIP-1061](https://ecips.ethereumclassic.org/ECIPs/ecip-1061)) is in _\"Draft\"_ state\r\n  - In the [Nov 27 meeting](https://github.com/ethereumclassic/ECIPs/issues/177) we agreed on scope for Aztlán Upgrade (= Istanbul - 1884)\r\n  - There was agreement that we should move forward with [ECIP-1072](https://ecips.ethereumclassic.org/ECIPs/ecip-1072)\r\n  - However, members in the community, such as Afri, have done actions which violated the common editing protocol, such as [dismissing other editors' review without reason](https://github.com/ethereumclassic/ECIPs/pull/199#event-2837816513).\r\n  - This has resulted in intensive community reactions, with Afri, Shane and Bob supporting reverting the previous community consensus (ECIP-1072) and move back to ECIP-1061, while others, such as Wei, @phyro, @TheEnthusiasticAs insisted on continuing on with ECIP-1072.\r\n  - Wei concluded that this is basically a contentious hard fork, due to community fight, and decided to implement it in `multi-geth` as a contentious hard fork.\r\n- Bob's recommendation\r\n  - Confirm in this call that there is no contention (except Wei).\r\n  - Confirm to move [ECIP-1061](https://ecips.ethereumclassic.org/ECIPs/ecip-1061) to  **Last Call** (#199)\r\n  - Confirm to move [ECIP-1072](https://ecips.ethereumclassic.org/ECIPs/ecip-1072) to **Rejected** (#218)\r\n  - Better yet would be for Wei to move [ECIP-1072](https://ecips.ethereumclassic.org/ECIPs/ecip-1072) to **Withdrawn** himself, but that does not seem likely (#212)\r\n\r\nThis is the full scope of the agenda.  We won't add any items to this call.  Laser focus.",
+    "body": "### ETC Core Devs Call - Confirm consensus for Aztlán Upgrade (Yingchun Edition)\r\n\r\nWhen: **Thursday, December 5, 2019, 1pm UTC**, 60 minutes max.\r\n\r\nWhere: **Ethereum Classic Discord** https://discord.gg/dwxb6nf `#ecips` channel. Will use/create a voice channel _ad hoc._\r\n\r\nMeeting Coordinator: TBD\r\n\r\n### Agenda\r\n\r\n- Aztlán Upgrade (Yingchun Edition) ([ECIP-1061](https://ecips.ethereumclassic.org/ECIPs/ecip-1061)) is in _\"Last Call\"_ status with review ending on 19th Dec 2019.\r\n  - Establish that we have new consensus on ECIP-1061, after several days of crisis.\r\n  - No finger-pointing, blame or post-mortem in this specific meeting.   It would make a lot of sense to do a post-mortem on the last few days, and anybody is welcome to create an issue to start that process, or to publish their own post-mortem, etc.    Just out of scope HERE.\r\n  - No discussion of #221 and #224 or other process clarifications.   Similar to post-mortem, these have value and when we have fully-formed ECIPs we should certainly discuss those.   Just out of scope HERE.\r\n\r\nThis is the full scope of the agenda.  We won't add any items to this call.  Laser focus.\r\n\r\nThe aim of the meeting is to calm everybody's nerves and to get back on track.   We should record the audio.   Multiple people should take minutes.   The outcome should be reported on.",
     "reactions": {
       "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215/reactions",
       "total_count": 0,
diff --git a/.gh-issues/00215_560141411.json b/.gh-issues/00215_560141411.json
new file mode 100644
index 0000000..307f98e
--- /dev/null
+++ b/.gh-issues/00215_560141411.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560141411",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-560141411",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 560141411,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0MTQxMQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T18:34:08Z",
+    "updated_at": "2019-12-01T18:34:08Z",
+    "author_association": "MEMBER",
+    "body": "Reopening as per https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560141304.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560141411/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_560142950.json b/.gh-issues/00215_560142950.json
new file mode 100644
index 0000000..3c95171
--- /dev/null
+++ b/.gh-issues/00215_560142950.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560142950",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-560142950",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 560142950,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0Mjk1MA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T18:43:19Z",
+    "updated_at": "2019-12-01T18:43:19Z",
+    "author_association": "MEMBER",
+    "body": "Not sure if I have time to join this meeting, but I agree to switch consensus from last meeting, which was ECIP-1072, to the new one, ECIP-1061.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560142950/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_560145088.json b/.gh-issues/00215_560145088.json
new file mode 100644
index 0000000..1f7bc65
--- /dev/null
+++ b/.gh-issues/00215_560145088.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560145088",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-560145088",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 560145088,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0NTA4OA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T18:58:08Z",
+    "updated_at": "2019-12-01T18:58:08Z",
+    "author_association": "MEMBER",
+    "body": "I don't think it needs to be a long call.\r\n\r\n@soc1c said he is at a conference this Thursday, but maybe he can \"sneak out\" for 15 mins?  Afri?\r\n\r\nEven if neither of you are there, I think we need this meeting.    Perhaps it is even better WITHOUT both of you there, because the meeting is really for the good of people on the outside looking in and thinking \"WTF!   So are we cool here?   Are we in the middle of a civil war?   Is there doing to be a contentious fork here?   I thought we were catching up on ETH protocol and having a majestic Phoenix from the flames moment.   Is everything just going to be a disaster instead?\"\r\n\r\nThe answer to all of those is NO.    But we could use that affirmation in a meeting, I think.   Recorded.  Minuted.  Reported on.\r\n\r\nMaybe @YazzyYaz can host?   Or I can host?   See also #233.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560145088/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_560145348.json b/.gh-issues/00215_560145348.json
new file mode 100644
index 0000000..3965e58
--- /dev/null
+++ b/.gh-issues/00215_560145348.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560145348",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-560145348",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 560145348,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0NTM0OA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T19:00:49Z",
+    "updated_at": "2019-12-01T19:00:49Z",
+    "author_association": "MEMBER",
+    "body": "@bobsummerwill I would advise against you or @YazzyYaz hosting this meeting because ETC Coop's position is not neutral this time. It would be much better choosing one from this list https://github.com/ethereumclassic/ECIPs/issues/209\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560145348/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_560145395.json b/.gh-issues/00215_560145395.json
new file mode 100644
index 0000000..2959813
--- /dev/null
+++ b/.gh-issues/00215_560145395.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560145395",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-560145395",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 560145395,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0NTM5NQ==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T19:01:28Z",
+    "updated_at": "2019-12-01T19:01:28Z",
+    "author_association": "MEMBER",
+    "body": "Of course, I wouldn't mind it as a last resort, if you indeed cannot find anyone else to be the coordinator.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560145395/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_560146686.json b/.gh-issues/00215_560146686.json
new file mode 100644
index 0000000..3c29777
--- /dev/null
+++ b/.gh-issues/00215_560146686.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560146686",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-560146686",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 560146686,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0NjY4Ng==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T19:12:44Z",
+    "updated_at": "2019-12-01T19:12:44Z",
+    "author_association": "MEMBER",
+    "body": "@developerkevin?  @phyro?   Can either of you host, please?\r\n\r\n@sorpaas Looks like we were editing on top of each at the top of this.   I have just done a rewrite.   Does this wording work for you?\r\n\r\nIe. scope is ONLY to clarify that we have consensus on 1016 as it NOW exists - including with you as co-author, and with Apache 2.0 licensing now.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560146686/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_560147116.json b/.gh-issues/00215_560147116.json
new file mode 100644
index 0000000..fc77ac3
--- /dev/null
+++ b/.gh-issues/00215_560147116.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560147116",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-560147116",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 560147116,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0NzExNg==",
+    "user": {
+      "login": "phyro",
+      "id": 157733,
+      "node_id": "MDQ6VXNlcjE1NzczMw==",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/phyro",
+      "html_url": "https://github.com/phyro",
+      "followers_url": "https://api.github.com/users/phyro/followers",
+      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
+      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
+      "organizations_url": "https://api.github.com/users/phyro/orgs",
+      "repos_url": "https://api.github.com/users/phyro/repos",
+      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/phyro/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T19:16:09Z",
+    "updated_at": "2019-12-01T19:16:09Z",
+    "author_association": "MEMBER",
+    "body": "@bobsummerwill unfortunately, lately I've not been able to join the calls due to being busy with other stuff and very likely won't be able to attend this one as well.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560147116/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_560147428.json b/.gh-issues/00215_560147428.json
new file mode 100644
index 0000000..051b06a
--- /dev/null
+++ b/.gh-issues/00215_560147428.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560147428",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-560147428",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 560147428,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0NzQyOA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T19:18:17Z",
+    "updated_at": "2019-12-01T19:18:17Z",
+    "author_association": "MEMBER",
+    "body": "Too bad, @phyro.  Thanks for the reply.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560147428/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_560151556.json b/.gh-issues/00215_560151556.json
new file mode 100644
index 0000000..94e737d
--- /dev/null
+++ b/.gh-issues/00215_560151556.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560151556",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-560151556",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 560151556,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE1MTU1Ng==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T19:55:07Z",
+    "updated_at": "2019-12-01T19:55:07Z",
+    "author_association": "MEMBER",
+    "body": "What about @mikeyb ?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560151556/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_560154881.json b/.gh-issues/00215_560154881.json
new file mode 100644
index 0000000..d36840b
--- /dev/null
+++ b/.gh-issues/00215_560154881.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560154881",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-560154881",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 560154881,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE1NDg4MQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T20:26:58Z",
+    "updated_at": "2019-12-01T20:26:58Z",
+    "author_association": "MEMBER",
+    "body": "Or YOU, @TheEnthusiasticAs!",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560154881/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00215_560156352.json b/.gh-issues/00215_560156352.json
new file mode 100644
index 0000000..9effcd2
--- /dev/null
+++ b/.gh-issues/00215_560156352.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560156352",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/215#issuecomment-560156352",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/215",
+    "id": 560156352,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE1NjM1Mg==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T20:39:36Z",
+    "updated_at": "2019-12-01T20:39:36Z",
+    "author_association": "MEMBER",
+    "body": "I would gladly, but I have a general language barrier in english speaking at the moment (not using it in everyday life). I understand the spoken, but, when it gets more (software) technical/topic specific I need more time for understanding. It is not my native language. I am working on it ;-)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560156352/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00217.json b/.gh-issues/00217.json
index 919a0cf..c373ce4 100644
--- a/.gh-issues/00217.json
+++ b/.gh-issues/00217.json
@@ -32,17 +32,17 @@
     "labels": [
 
     ],
-    "state": "open",
+    "state": "closed",
     "locked": false,
     "assignee": null,
     "assignees": [
 
     ],
     "milestone": null,
-    "comments": 6,
+    "comments": 11,
     "created_at": "2019-11-29T18:16:28Z",
-    "updated_at": "2019-11-29T22:10:07Z",
-    "closed_at": null,
+    "updated_at": "2019-12-01T17:13:40Z",
+    "closed_at": "2019-12-01T16:58:38Z",
     "author_association": "MEMBER",
     "body": "Recently, a few community members have decided to implement the Aztlan hard fork. The issue with Aztlan is that without EIP-1884, it effectively left an account trie attack vector open. Most current clients do not have other protections currently other than increasing gas cost. The paper for the attack is actually public, meaning anyone who knows the method can do it. As the security analysis for Aztlan is inadequate, we should prepare for its issues properly.\r\n\r\nMy recommendations would be we do not implement Aztlan before account versioning. However, given the consensus was already reached, I won't oppose the hard fork.",
     "reactions": {
diff --git a/.gh-issues/00217_560098079.json b/.gh-issues/00217_560098079.json
new file mode 100644
index 0000000..d7b0c3b
--- /dev/null
+++ b/.gh-issues/00217_560098079.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560098079",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-560098079",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/217",
+    "id": 560098079,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDA5ODA3OQ==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T11:54:03Z",
+    "updated_at": "2019-12-01T11:55:57Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "> Basically getting certainty that no legal claims could be launched in the future.\r\n\r\nAgainst whom?\r\n\r\n> The source code for Geth and all downstreams has unknown provenance. We do not know the full set of authors and there is zero defence there against future IP claims. Patent trolling, etc.\r\n\r\nMaybe 11k+ commits and years worth of available surrounding Github metadata (at least), might suggest a notion a _little less_ boisterous than \"unknown provenance\" and \"zero defense\"...  \r\n\r\nAre you a lawyer? Have you spoken with one or have documentation from a lawyer about the claims you're making here? Why haven't the patent trolls already taken over? And again, _whose_ interests are we protecting here against these alleged inevitable patent troll lawsuits? IBM's?\r\n ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560098079/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00217_560099224.json b/.gh-issues/00217_560099224.json
new file mode 100644
index 0000000..b2ad7ac
--- /dev/null
+++ b/.gh-issues/00217_560099224.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560099224",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-560099224",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/217",
+    "id": 560099224,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDA5OTIyNA==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T12:04:36Z",
+    "updated_at": "2019-12-01T13:10:10Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Oh, and [`3. Governance`](https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-559881215) -- what was the solution for that which supposedly existed in 2016 for Ethereum that would have been (according to you) agreeable to IBM? The Foundation (Stiftung Ethereum)? [EthSuisse](https://en.m.wikipedia.org/wiki/Ethereum_(company))? \r\n\r\nAnd...\r\n\r\n> Three reasons why IBM created Fabric:\r\n> [...]\r\n> IBM had a 30 engineer team ready to pile onto cpp-ethereum when the relicensing was done. Never happened\r\n> https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-559881215\r\n\r\nCan you cite a source for IBM's decision making process here that isn't [a cameo for Hyperledger](https://www.ibtimes.co.uk/hyperledger-project-reflects-blockchain-politics-1603381) ([a legal entity](https://www.hyperledger.org/trademark-usage), which[ ETC Cooperative recently announced being an \"Associate Member\" of](https://bobsummerwill.com/2019/11/20/etc-cooperative-joins-hyperledger/)).\r\n\r\n(Noting that the only occurrence of the word \"IBM\" in your https://www.ibtimes.co.uk/hyperledger-project-reflects-blockchain-politics-1603381 link is:\r\n\r\n> So when you use Hyperledger you don't have to worry about patent risk from IBM, from DTCC, or anyone else on the projects they participate in.\r\n\r\n)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560099224/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00217_560102235.json b/.gh-issues/00217_560102235.json
new file mode 100644
index 0000000..d81e287
--- /dev/null
+++ b/.gh-issues/00217_560102235.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560102235",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-560102235",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/217",
+    "id": 560102235,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEwMjIzNQ==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T12:31:47Z",
+    "updated_at": "2019-12-01T13:12:24Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Anyways.... @bobsummerwill while an important discussion we're having here -- maybe we're diving down a tangential rabbit hole here. \r\n\r\n_Please let's use #225 to continue this conversation's thread._\r\n\r\n---\r\n\r\nLet's try to shift back to @sorpaas 's initial topic:\r\n\r\n__The issue with Aztlan is that without EIP-1884, it effectively left an account trie attack vector open. Most current clients do not have other protections currently other than increasing gas cost. The paper for the attack is actually public, meaning anyone who knows the method can do it. As the security analysis for Aztlan is inadequate, we should prepare for its issues properly.__\r\n\r\n... and @sorpaas -- Would you be willing to rename this Issue something like `Aztlan Fork without EIP-1884 leaves an account trie attack vector open` ? I think this is a really important critique and a more descriptive title can help garner attention.\r\n\r\n... **OR, maybe better,** rename this issue to have it replace #225, and open a new issue with original intentions of this one (before Bob and I derailed it :joy_cat: )... might help with legibility.\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560102235/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00217_560131250.json b/.gh-issues/00217_560131250.json
new file mode 100644
index 0000000..8ece13a
--- /dev/null
+++ b/.gh-issues/00217_560131250.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560131250",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-560131250",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/217",
+    "id": 560131250,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEzMTI1MA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T16:58:38Z",
+    "updated_at": "2019-12-01T16:58:38Z",
+    "author_association": "MEMBER",
+    "body": "@meowsbits I created issue https://github.com/ethereumclassic/ECIPs/issues/226 for this purpose!",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560131250/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00217_560132790.json b/.gh-issues/00217_560132790.json
new file mode 100644
index 0000000..f1ae513
--- /dev/null
+++ b/.gh-issues/00217_560132790.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560132790",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-560132790",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/217",
+    "id": 560132790,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEzMjc5MA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T17:13:40Z",
+    "updated_at": "2019-12-01T17:13:40Z",
+    "author_association": "MEMBER",
+    "body": "@meowsbits, I created \"Aztlan Fork without EIP-1884 leaves an account trie attack vector open\"\r\nhttps://github.com/ethereumclassic/ECIPs/issues/227\r\n\r\nAnd will continue with the IP chat on #225.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560132790/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00225.json b/.gh-issues/00225.json
new file mode 100644
index 0000000..0866d86
--- /dev/null
+++ b/.gh-issues/00225.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/225",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/225/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/225/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/225/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/225",
+    "id": 530724241,
+    "node_id": "MDU6SXNzdWU1MzA3MjQyNDE=",
+    "number": 225,
+    "title": "Discussion/Informational: Random thoughts on the longevity and network participartions of client software ",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 14,
+    "created_at": "2019-12-01T12:32:02Z",
+    "updated_at": "2019-12-01T19:48:00Z",
+    "closed_at": null,
+    "author_association": "CONTRIBUTOR",
+    "body": "Intended to pick up a tangential comment thread from #217, particularly the following comments:\r\n- https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-559861432\r\n- https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-559862589\r\n- https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-559865482\r\n- https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-559866580\r\n- https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-559881215\r\n- https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-560098079\r\n- https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-560099224\r\n- https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-560102235\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/225/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00225_560133388.json b/.gh-issues/00225_560133388.json
new file mode 100644
index 0000000..415a3c6
--- /dev/null
+++ b/.gh-issues/00225_560133388.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560133388",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/225#issuecomment-560133388",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/225",
+    "id": 560133388,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEzMzM4OA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T17:19:02Z",
+    "updated_at": "2019-12-01T17:19:02Z",
+    "author_association": "MEMBER",
+    "body": "\"Maybe 11k+ commits and years worth of available surrounding Github metadata (at least), might suggest a notion a little less boisterous than \"unknown provenance\" and \"zero defense\"...\"\r\n\r\nObviously not completely unknown, but IP attacks only single \"bad commits\" to be ruinous.    Especially if those commits are to core algorithms.   You get something \"in deep\" such that it is part of the protocol which you cannot change and you are screwed forever.   Pending case in point is ProgPOW.\r\n\r\nSee also Microsoft's patent trolling on Linux.\r\n\r\nWe have two attack vectors here - insertion of patented content into particular client implementations (Geth here being the case in point) - which is BAD, but can be worked around because we have multiple clients - but the worse of all is insertion of patented content into the protocol spec itself, because that poisons every client.\r\n\r\n\"zero defense\" is true.   What is your objection to that?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560133388/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00225_560133602.json b/.gh-issues/00225_560133602.json
new file mode 100644
index 0000000..8d0db62
--- /dev/null
+++ b/.gh-issues/00225_560133602.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560133602",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/225#issuecomment-560133602",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/225",
+    "id": 560133602,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEzMzYwMg==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T17:21:08Z",
+    "updated_at": "2019-12-01T17:21:08Z",
+    "author_association": "MEMBER",
+    "body": "\"Are you a lawyer? Have you spoken with one or have documentation from a lawyer about the claims you're making here?\"\r\n\r\nYes I have.  Myself and @YazzyYaz met with Eben Moglen and Mishi Chaudhary a week or so ago.\r\n\r\nEben is the author of GPLv3.   I think he knows a little about the law.   Both of them consulted on cpp-ethereum relicensing too.\r\n\r\nhttps://en.wikipedia.org/wiki/Eben_Moglen\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560133602/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00225_560133852.json b/.gh-issues/00225_560133852.json
new file mode 100644
index 0000000..aaee153
--- /dev/null
+++ b/.gh-issues/00225_560133852.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560133852",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/225#issuecomment-560133852",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/225",
+    "id": 560133852,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEzMzg1Mg==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T17:23:41Z",
+    "updated_at": "2019-12-01T17:23:41Z",
+    "author_association": "MEMBER",
+    "body": "\"Why haven't the patent trolls already taken over?\"\r\n\r\nProgPOW is perhaps the first major play to do just that.    I hope to goodness that there are not any \"submarine patents\" which already made it into Ethereum or ETC protocol or into Geth, but we just do not know.\r\n\r\nWhat SHOULD have happened in 2016 is that the Geth team should have gone through the process which I did for cpp-ethereum over several tedious months to establish provenance and consent, even with the license remaining as LGPLv3 / GPLv3.    Of course that did not happen, because \"Duty of Care\" is a foreign language to the EF.\r\n\r\nhttps://bobsummerwill.com/2016/07/12/c-re-licensing-plan/\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560133852/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00225_560133962.json b/.gh-issues/00225_560133962.json
new file mode 100644
index 0000000..a45ff3a
--- /dev/null
+++ b/.gh-issues/00225_560133962.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560133962",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/225#issuecomment-560133962",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/225",
+    "id": 560133962,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEzMzk2Mg==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T17:24:54Z",
+    "updated_at": "2019-12-01T17:24:54Z",
+    "author_association": "MEMBER",
+    "body": "\"And again, whose interests are we protecting here against these alleged inevitable patent troll lawsuits? IBM's?\"\r\n\r\nWe are protecting every participant in the ETC ecosystem.   Those entities most at risk are exchanges, miners, businesses using ETC, developers using ETC.\r\n\r\nAnybody who has a legal entity which can be attacked.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560133962/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00225_560134684.json b/.gh-issues/00225_560134684.json
new file mode 100644
index 0000000..7bc361b
--- /dev/null
+++ b/.gh-issues/00225_560134684.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560134684",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/225#issuecomment-560134684",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/225",
+    "id": 560134684,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEzNDY4NA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T17:31:52Z",
+    "updated_at": "2019-12-01T17:31:52Z",
+    "author_association": "MEMBER",
+    "body": "\"Oh, and 3. Governance -- what was the solution for that which supposedly existed in 2016 for Ethereum that would have been (according to you) agreeable to IBM?\"\r\n\r\nNo - it was actually seeing things like my actions with the C++ relicensing, like seeing ConsenSys actions in building \"Enterprise Ethereum\".   It really was not anything which the EF themselves were doing, other than to the degree that I was driving while being employed by the EF.\r\n\r\nIn the end the EF failed the governance test there, failed it again when they did not support the EEA, and have failed it again and again since.\r\n\r\nDo you know who has not failed that test?   ETC.\r\n\r\nThe ETC Coop is building that bridge to the EEA and Hyperledger now because we are all adults, with responsible actions and with a Duty of Care to all ecosystem participants in a way which the EF has never done.\r\n\r\nWith regard to \"Geth family will die\", I absolutely stand by that.   Because the Geth codebase and it's lack of responsible IP protections make it unacceptable for use by businesses which are savvy to these very real threats.\r\n\r\nWant to have potential for future lawsuits if you use this code?  No.  I did not think so.\r\n\r\nUse Parity-Ethereum, Hyperledger Besu or IOHK Mantis (if you could <sad face/>) and you will not have these problems.\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560134684/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00225_560134836.json b/.gh-issues/00225_560134836.json
new file mode 100644
index 0000000..aff2bf6
--- /dev/null
+++ b/.gh-issues/00225_560134836.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560134836",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/225#issuecomment-560134836",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/225",
+    "id": 560134836,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEzNDgzNg==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T17:33:13Z",
+    "updated_at": "2019-12-01T17:33:13Z",
+    "author_association": "MEMBER",
+    "body": "Everything I am saying here, @meowsbits, is the result of 3.5 years of looking deeply into these issues, talking to world-class lawyers, talking to businesses, talking to the most knowledgable people on the planet on these topics.\r\n\r\nNot pulling stuff out of my arse.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560134836/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00225_560135086.json b/.gh-issues/00225_560135086.json
new file mode 100644
index 0000000..8f47d25
--- /dev/null
+++ b/.gh-issues/00225_560135086.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560135086",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/225#issuecomment-560135086",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/225",
+    "id": 560135086,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEzNTA4Ng==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T17:35:54Z",
+    "updated_at": "2019-12-01T17:35:54Z",
+    "author_association": "MEMBER",
+    "body": "Current reality for Geth family - BAD\r\nBetter reality - GPLv3 + DCOs\r\nBest reality - Apache 2.0 + DCOs\r\n\r\nI know this will never happen while EF is steering the ship, so the inevitable consequence is death of Geth-family.   That happens when ETH2 ships and Geth gets defunded.    If ETH2 even happens.\r\n\r\nThe only thing keeping the lights on for Geth is the EF's ongoing investment.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560135086/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00225_560140308.json b/.gh-issues/00225_560140308.json
new file mode 100644
index 0000000..6ef1715
--- /dev/null
+++ b/.gh-issues/00225_560140308.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560140308",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/225#issuecomment-560140308",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/225",
+    "id": 560140308,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0MDMwOA==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T18:26:27Z",
+    "updated_at": "2019-12-01T18:26:27Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Thanks for your answers so far, Bob -- I'm not trying to troll your or push your buttons, and I appreciate your earnesty and thoroughness :smile_cat: \r\n\r\nI'm just trying to dig for careful and documented reasoning around these lines of thought.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560140308/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00225_560141274.json b/.gh-issues/00225_560141274.json
new file mode 100644
index 0000000..f2bbb57
--- /dev/null
+++ b/.gh-issues/00225_560141274.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560141274",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/225#issuecomment-560141274",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/225",
+    "id": 560141274,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0MTI3NA==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T18:33:20Z",
+    "updated_at": "2019-12-01T18:33:20Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "> Myself and @YazzyYaz met with Eben Moglen and Mishi Chaudhary a week or so ago.\r\n> https://github.com/ethereumclassic/ECIPs/issues/225#issuecomment-560133602\r\n\r\nDo you have anything in writing or any other documentation that came as a result of the meeting?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560141274/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00225_560144181.json b/.gh-issues/00225_560144181.json
new file mode 100644
index 0000000..92c0cfd
--- /dev/null
+++ b/.gh-issues/00225_560144181.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560144181",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/225#issuecomment-560144181",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/225",
+    "id": 560144181,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0NDE4MQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T18:50:29Z",
+    "updated_at": "2019-12-01T18:50:29Z",
+    "author_association": "MEMBER",
+    "body": "TODO.  In my pile of hundreds of TODOs!\r\n\r\nI will make a new ECIP soon enough with all this detail.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560144181/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00225_560144766.json b/.gh-issues/00225_560144766.json
new file mode 100644
index 0000000..ed7b988
--- /dev/null
+++ b/.gh-issues/00225_560144766.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560144766",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/225#issuecomment-560144766",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/225",
+    "id": 560144766,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0NDc2Ng==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T18:54:56Z",
+    "updated_at": "2019-12-01T18:54:56Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Re: https://github.com/ethereumclassic/ECIPs/issues/225#issuecomment-560133388\r\n\r\n> Pending case in point is ProgPOW.\r\n\r\nWould you please cite your reference for this?\r\n\r\n> See also Microsoft's patent trolling on Linux.\r\n\r\nI tried looking up Microsoft vs. Linux and found the following. Is this near what you're referring to?\r\n\r\n> Microsoft CEO Steve Ballmer likened Linux to a kind of cancer on intellectual property. Microsoft sued Lindows, a Linux operating system that could run Microsoft Windows applications, as a trademark violation. The court rejected the claim and after Microsoft purchased its trademark, the software changed its name to Linspire.\r\n> [...]\r\n> In the 2010s and under new CEO Satya Nadella, Microsoft began to adopt open source into its core business. In contrast to Ballmer's stance, Nadella presented a slide that read, \"Microsoft loves Linux\".\r\n> [...]\r\n>  In 2016, Microsoft introduced Windows Subsystem for Linux, which lets Linux applications run on the Windows operating system. The company invested in Linux server technology and Linux development to promote cross-platform compatibility and collaboration with open source companies and communities, culminating with Microsoft's platinum sponsorship of the Linux Foundation and seat on its Board of Directors.\r\n> https://en.wikipedia.org/wiki/Microsoft_and_open_source\r\n\r\n---\r\n\r\n> \"zero defense\" is true. What is your objection to that?\r\n\r\nI, of course, have no objection to raising awareness, if not alarms, if this is a serious threat. But so far I don't see any __concrete legal precedent or clause__ that would suggest what it seems you understand as a certain and deterministic outcome. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560144766/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00225_560147941.json b/.gh-issues/00225_560147941.json
new file mode 100644
index 0000000..b121a77
--- /dev/null
+++ b/.gh-issues/00225_560147941.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560147941",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/225#issuecomment-560147941",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/225",
+    "id": 560147941,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0Nzk0MQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T19:21:49Z",
+    "updated_at": "2019-12-01T19:21:49Z",
+    "author_association": "MEMBER",
+    "body": "RE: Microsoft patent trolling on Android.   I said Linux, but it was actually Android:\r\n\r\n https://www.howtogeek.com/183766/why-microsoft-makes-5-to-15-from-every-android-device-sold/\r\n\r\nMicrosoft have done a 180 on Linux in the meantime.   They are huge allies for us on open source, but NOT on censorship resistance:\r\n\r\nhttps://www.hanselman.com/blog/MicrosoftKilledMyPappy.aspx\r\n\r\nRE: ProgPOW - I have written enough.  Pointless to carry on with that here.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560147941/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00225_560148226.json b/.gh-issues/00225_560148226.json
new file mode 100644
index 0000000..4b1b0d8
--- /dev/null
+++ b/.gh-issues/00225_560148226.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560148226",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/225#issuecomment-560148226",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/225",
+    "id": 560148226,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0ODIyNg==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T19:23:46Z",
+    "updated_at": "2019-12-01T19:24:05Z",
+    "author_association": "MEMBER",
+    "body": "I am just going to put this thread on pause until I have written up the ECIP for my proposal for IP protection for ECIPs.   Until I have that in a concrete form which we can discuss this is not an effective use of time for either of us.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560148226/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00225_560150265.json b/.gh-issues/00225_560150265.json
new file mode 100644
index 0000000..7661106
--- /dev/null
+++ b/.gh-issues/00225_560150265.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560150265",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/225#issuecomment-560150265",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/225",
+    "id": 560150265,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE1MDI2NQ==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T19:42:02Z",
+    "updated_at": "2019-12-01T19:48:00Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "> Use Parity-Ethereum, Hyperledger Besu or IOHK Mantis (if you could ) and you will not have these problems.\r\n> https://github.com/ethereumclassic/ECIPs/issues/225#issuecomment-560134684\r\n\r\n> Current reality for Geth family - BAD\r\n> Better reality - GPLv3 + DCOs\r\n> Best reality - Apache 2.0 + DCOs\r\n> https://github.com/ethereumclassic/ECIPs/issues/225#issuecomment-560135086\r\n\r\n[Parity uses GPLv3](https://github.com/paritytech/parity-ethereum/blob/master/LICENSE), just like [go-ethereum](https://github.com/ethereum/go-ethereum/blob/master/COPYING). Which leads me to reason that Parity's differential use of CLA, eg. https://github.com/paritytech/parity-ethereum/pull/6810#issuecomment-337245715, is what you're talking about when you say `DCO`.\r\n\r\nFollowing the CLA-bot's link to Wikipedia finds me at https://en.wikipedia.org/wiki/Contributor_License_Agreement, where I see:\r\n\r\n> CLAs can be used to enable vendors to easily pursue legal resolution in the case of copyright disputes,[1] or to relicense products to which contributions have been received from third parties.[2]\r\n>\r\n> The purpose of a CLA is to ensure that the guardian of a project's outputs has the necessary ownership or grants of rights over all contributions to allow them to distribute under the chosen license.\r\n\r\nWhere I interpret the legal benefactors of CLA's as \"vendors\" and \"guardians\" and \"maintainers\" of projects. And where in this case we're talking a specifically about \"geth-family\" codebases, these translate to entities who... _fund_ development efforts on these projects? Who _own_ these projects? Who _steward_ these projects? Who are listed on Github as _maintainers_ of these projects? \r\n\r\nWith some just-believe-the-hand-waving I can start to be convinced of potential risks for, say, [`The go-ethereum Authors`](https://github.com/ethereum/go-ethereum/blob/master/consensus/ethash/consensus.go#L1) (listed [here](https://github.com/ethereum/go-ethereum/blob/master/AUTHORS)), but I'm not clear on how the Swiss-based supposedly non-profit entity Ethereum Foundation would fit into this concern, let alone those you've cited as being most at risk:\r\n\r\n> Those entities most at risk are exchanges, miners, businesses using ETC, developers using ETC.\r\n> https://github.com/ethereumclassic/ECIPs/issues/225#issuecomment-560133962\r\n\r\nCan you explain what exactly you're anticipating as a risk for, say, an exchange (in... pick any country) running a go-ethereum instance in order to utilize the Ethereum Classic network, in the case that a patent troll fires up a suit against `<whoever you think the patent troll would sue>` suing for a protocol specification copyright (your worst-case scenario).\r\n\r\n\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560150265/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00226.json b/.gh-issues/00226.json
new file mode 100644
index 0000000..ab57bff
--- /dev/null
+++ b/.gh-issues/00226.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/226",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/226/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/226/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/226/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/226",
+    "id": 530761195,
+    "node_id": "MDU6SXNzdWU1MzA3NjExOTU=",
+    "number": 226,
+    "title": "Review of Aztlan hard fork",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 3,
+    "created_at": "2019-12-01T16:58:21Z",
+    "updated_at": "2019-12-01T19:17:01Z",
+    "closed_at": "2019-12-01T18:49:07Z",
+    "author_association": "MEMBER",
+    "body": "",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/226/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00226_560141551.json b/.gh-issues/00226_560141551.json
new file mode 100644
index 0000000..e0e5609
--- /dev/null
+++ b/.gh-issues/00226_560141551.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560141551",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/226#issuecomment-560141551",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/226",
+    "id": 560141551,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0MTU1MQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T18:35:14Z",
+    "updated_at": "2019-12-01T18:35:14Z",
+    "author_association": "MEMBER",
+    "body": "Is the purpose of this review the same as #227?\r\nIf so, maybe let's close this and move the discussion there?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560141551/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00226_560143999.json b/.gh-issues/00226_560143999.json
new file mode 100644
index 0000000..436d546
--- /dev/null
+++ b/.gh-issues/00226_560143999.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560143999",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/226#issuecomment-560143999",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/226",
+    "id": 560143999,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0Mzk5OQ==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T18:49:07Z",
+    "updated_at": "2019-12-01T18:49:07Z",
+    "author_association": "MEMBER",
+    "body": "@bobsummerwill When opening an issue next time, please first check whether existing similar issues have existed. #226 is definitely older than #227 so the technically correct way would be to close the other issue.\r\n\r\nBut anyway, since this has nothing to do with ECIP process this time, let me just close #226 to avoid duplication.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560143999/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00226_560147255.json b/.gh-issues/00226_560147255.json
new file mode 100644
index 0000000..1342270
--- /dev/null
+++ b/.gh-issues/00226_560147255.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560147255",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/226#issuecomment-560147255",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/226",
+    "id": 560147255,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0NzI1NQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T19:17:00Z",
+    "updated_at": "2019-12-01T19:17:00Z",
+    "author_association": "MEMBER",
+    "body": "Fair enough, except that #227 had a clear description.\r\n\r\n#226 had no description to make clear your intent.   You might have been thinking about other kinds of review which made sense.\r\n\r\nBut thank you!",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560147255/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00227.json b/.gh-issues/00227.json
new file mode 100644
index 0000000..703b4cd
--- /dev/null
+++ b/.gh-issues/00227.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/227",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/227/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/227/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/227/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/227",
+    "id": 530763131,
+    "node_id": "MDU6SXNzdWU1MzA3NjMxMzE=",
+    "number": 227,
+    "title": "Aztlan Fork without EIP-1884 leaves an account trie attack vector open",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 6,
+    "created_at": "2019-12-01T17:12:43Z",
+    "updated_at": "2019-12-02T00:21:14Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "So how do we handle that?\r\n\r\nThe ETC Coop has asked ChainSafe for a statement of work analyzing the last 100K blocks in both ETC and ETH to look at frequency of opcodes and actual execution times of those within Hyperledger Besu.\r\n\r\nMaybe that is even two separate work items?\r\n\r\nHoped for outcome:\r\n\r\n1. Identification of places where client optimization is essential to avoid DOS vectors and actually making those optimizations in Besu (disaster averted)\r\n\r\n2. Identification of ways in which the current gasprices are sub-optimal and could be tweaked to be better (EVM optimization - no disaster variant)\r\n\r\nAnd it would also be helpful to do the same systemic \"essential optimizations\" pass for Parity-Ethereum and Multi-Geth, and I would love that to happen, but the ETC Coop does not have spare money hanging around for that work.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/227/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00227_560144792.json b/.gh-issues/00227_560144792.json
new file mode 100644
index 0000000..8828e43
--- /dev/null
+++ b/.gh-issues/00227_560144792.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560144792",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/227#issuecomment-560144792",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/227",
+    "id": 560144792,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0NDc5Mg==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T18:55:10Z",
+    "updated_at": "2019-12-01T18:55:10Z",
+    "author_association": "MEMBER",
+    "body": "As said on Twitter, my recommendation would be to call off and skip Aztlan until all issues have been fixed, because based on my last-minute review, ECIP-1061 is certainly rushed, and we'd be better fixing those issues first and/or apply account versioning. I currently cannot think of a way to fix this without account versioning.\r\n\r\nHowever, as the consensus is to move forward with Aztlan, I do not object ECIP-1061 and am certainly fine to just go ahead with the hard fork, because in theory, you can always fix any issues of hard forks with just more hard forks.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560144792/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00227_560147041.json b/.gh-issues/00227_560147041.json
new file mode 100644
index 0000000..abf1ed0
--- /dev/null
+++ b/.gh-issues/00227_560147041.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560147041",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/227#issuecomment-560147041",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/227",
+    "id": 560147041,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0NzA0MQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T19:15:31Z",
+    "updated_at": "2019-12-01T19:15:31Z",
+    "author_association": "MEMBER",
+    "body": "I think the rational for moving ahead with Atzlan is that potential attack vectors are currently present and will remain present until we address them.\r\n\r\nSo if we aren't ready with account versioning then we shouldn't make any gaspricing changes.\r\n\r\nBut that is no reason NOT to move forward on the other updates which are completely orthogonal.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560147041/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00227_560151388.json b/.gh-issues/00227_560151388.json
new file mode 100644
index 0000000..719ab1e
--- /dev/null
+++ b/.gh-issues/00227_560151388.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560151388",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/227#issuecomment-560151388",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/227",
+    "id": 560151388,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE1MTM4OA==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T19:53:38Z",
+    "updated_at": "2019-12-01T19:55:46Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "@bobsummerwill Can you please describe in detail the attack vector given the current Atlzan specification set before we start working to approach resolution(s)? (I would encourage you to edit the first https://github.com/ethereumclassic/ECIPs/issues/227#issue-530763131, since I think a clear statement of problem is essential to understanding best paths to solutions).",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560151388/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00227_560153813.json b/.gh-issues/00227_560153813.json
new file mode 100644
index 0000000..cc3a071
--- /dev/null
+++ b/.gh-issues/00227_560153813.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560153813",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/227#issuecomment-560153813",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/227",
+    "id": 560153813,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE1MzgxMw==",
+    "user": {
+      "login": "GregTheGreek",
+      "id": 16929357,
+      "node_id": "MDQ6VXNlcjE2OTI5MzU3",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/16929357?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/GregTheGreek",
+      "html_url": "https://github.com/GregTheGreek",
+      "followers_url": "https://api.github.com/users/GregTheGreek/followers",
+      "following_url": "https://api.github.com/users/GregTheGreek/following{/other_user}",
+      "gists_url": "https://api.github.com/users/GregTheGreek/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/GregTheGreek/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/GregTheGreek/subscriptions",
+      "organizations_url": "https://api.github.com/users/GregTheGreek/orgs",
+      "repos_url": "https://api.github.com/users/GregTheGreek/repos",
+      "events_url": "https://api.github.com/users/GregTheGreek/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/GregTheGreek/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T20:16:43Z",
+    "updated_at": "2019-12-01T20:16:43Z",
+    "author_association": "NONE",
+    "body": "@meowsbits Naturally we can't fully disclose the attack. The vector is real, and must be applied to the next HF IMO.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560153813/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00227_560164214.json b/.gh-issues/00227_560164214.json
new file mode 100644
index 0000000..e9da7dd
--- /dev/null
+++ b/.gh-issues/00227_560164214.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560164214",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/227#issuecomment-560164214",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/227",
+    "id": 560164214,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE2NDIxNA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T21:53:42Z",
+    "updated_at": "2019-12-01T22:08:42Z",
+    "author_association": "MEMBER",
+    "body": "If we are really *that* worried about the attack -- I also want to note that EIP-1884 does not fully fix the attack -- it provides some reliefs, but because the attack was disclosed after 1884 is made, the attack itself is still possible, just more expensive.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560164214/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00227_560179494.json b/.gh-issues/00227_560179494.json
new file mode 100644
index 0000000..4709eb7
--- /dev/null
+++ b/.gh-issues/00227_560179494.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560179494",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/227#issuecomment-560179494",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/227",
+    "id": 560179494,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE3OTQ5NA==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-02T00:18:53Z",
+    "updated_at": "2019-12-02T00:21:14Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "@GregTheGreek \r\n\r\n> Naturally we can't fully disclose the attack\r\n\r\nI hear you on this and understand the motivation. \r\n\r\nBut please keep in mind that this is not \"__naturally__\". This is not a given characteristic of _all_ attacks. This is unique (there many many known attacks with known solutions) and should be noted as being of particular interest for being theoretically unresolved. \r\n\r\nFor good form and good documentation, a general outline of what is at stake (scale, scope), status of resolution, and intended logistics to achieving acceptable resolutions (which Bob has started) would be useful. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560179494/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00233.json b/.gh-issues/00233.json
new file mode 100644
index 0000000..6f9ec5c
--- /dev/null
+++ b/.gh-issues/00233.json
@@ -0,0 +1,60 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/233",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/233/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/233/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/233/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/233",
+    "id": 530777573,
+    "node_id": "MDU6SXNzdWU1MzA3Nzc1NzM=",
+    "number": 233,
+    "title": "Fun Suggestion - Phoenix Day",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2019-12-01T18:57:52Z",
+    "updated_at": "2019-12-01T19:44:46Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "body": "Just a fun suggestion.\r\n\r\nI propose that we should start referring to 25th March 2020 as \"Phoenix Day\".\r\n\r\nThis is when Atzlan hits the ETC mainnet and when it becomes trivial to migrate ETH1 smart contracts for ETC.\r\n\r\nThat is when Ethereum Classic is truly reborn.\r\n\r\nI was talking about renaming of Agharta and Aztlan as Ethereum Classic \"Phoenix\", phase 1 and 2.\r\n\r\nThat didn't fly, but what about \"Phoenix Day\"?    We can meme it up the wazoo and generate so much buzz around that branding.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/233/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-issues/00233_560150492.json b/.gh-issues/00233_560150492.json
new file mode 100644
index 0000000..6bc3170
--- /dev/null
+++ b/.gh-issues/00233_560150492.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560150492",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/233#issuecomment-560150492",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/233",
+    "id": 560150492,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE1MDQ5Mg==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T19:44:46Z",
+    "updated_at": "2019-12-01T19:44:46Z",
+    "author_association": "MEMBER",
+    "body": "It would be more a Phoenix Day 2 (:. But I am joining it. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560150492/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/.state b/.gh-pullrequests/.state
index 170c890..b268802 100644
--- a/.gh-pullrequests/.state
+++ b/.gh-pullrequests/.state
@@ -1 +1 @@
-2019-11-29T17:43:58Z
+2019-12-02T14:41:59Z
diff --git a/.gh-pullrequests/00200.json b/.gh-pullrequests/00200.json
index b927afc..6263060 100644
--- a/.gh-pullrequests/00200.json
+++ b/.gh-pullrequests/00200.json
@@ -32,17 +32,17 @@
     "labels": [
 
     ],
-    "state": "open",
+    "state": "closed",
     "locked": false,
     "assignee": null,
     "assignees": [
 
     ],
     "milestone": null,
-    "comments": 8,
+    "comments": 9,
     "created_at": "2019-11-27T16:31:13Z",
-    "updated_at": "2019-11-29T13:33:37Z",
-    "closed_at": null,
+    "updated_at": "2019-12-01T18:20:07Z",
+    "closed_at": "2019-12-01T18:20:06Z",
     "author_association": "MEMBER",
     "pull_request": {
       "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/200",
diff --git a/.gh-pullrequests/00200_560139636.json b/.gh-pullrequests/00200_560139636.json
new file mode 100644
index 0000000..8696c1f
--- /dev/null
+++ b/.gh-pullrequests/00200_560139636.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560139636",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/200#issuecomment-560139636",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/200",
+    "id": 560139636,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEzOTYzNg==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T18:20:06Z",
+    "updated_at": "2019-12-01T18:20:06Z",
+    "author_association": "MEMBER",
+    "body": "Thanks for the suggestion, @meowsbits.\r\n\r\nSee #229, #230, #231, #232.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560139636/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00202.json b/.gh-pullrequests/00202.json
index 4ba36ed..14edc1a 100644
--- a/.gh-pullrequests/00202.json
+++ b/.gh-pullrequests/00202.json
@@ -39,9 +39,9 @@
 
     ],
     "milestone": null,
-    "comments": 1,
+    "comments": 8,
     "created_at": "2019-11-27T17:07:00Z",
-    "updated_at": "2019-11-27T23:29:08Z",
+    "updated_at": "2019-12-02T00:22:45Z",
     "closed_at": null,
     "author_association": "MEMBER",
     "pull_request": {
diff --git a/.gh-pullrequests/00202_560057559.json b/.gh-pullrequests/00202_560057559.json
new file mode 100644
index 0000000..68cec1c
--- /dev/null
+++ b/.gh-pullrequests/00202_560057559.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560057559",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/202#issuecomment-560057559",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/202",
+    "id": 560057559,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDA1NzU1OQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T05:17:50Z",
+    "updated_at": "2019-12-01T05:17:50Z",
+    "author_association": "MEMBER",
+    "body": "@sorpaas @soc1c  @meowsbits @YazzyYaz @realcodywburns ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560057559/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00202_560061540.json b/.gh-pullrequests/00202_560061540.json
new file mode 100644
index 0000000..443579e
--- /dev/null
+++ b/.gh-pullrequests/00202_560061540.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560061540",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/202#issuecomment-560061540",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/202",
+    "id": 560061540,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDA2MTU0MA==",
+    "user": {
+      "login": "YazzyYaz",
+      "id": 9094204,
+      "node_id": "MDQ6VXNlcjkwOTQyMDQ=",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/9094204?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/YazzyYaz",
+      "html_url": "https://github.com/YazzyYaz",
+      "followers_url": "https://api.github.com/users/YazzyYaz/followers",
+      "following_url": "https://api.github.com/users/YazzyYaz/following{/other_user}",
+      "gists_url": "https://api.github.com/users/YazzyYaz/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/YazzyYaz/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/YazzyYaz/subscriptions",
+      "organizations_url": "https://api.github.com/users/YazzyYaz/orgs",
+      "repos_url": "https://api.github.com/users/YazzyYaz/repos",
+      "events_url": "https://api.github.com/users/YazzyYaz/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/YazzyYaz/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T05:56:01Z",
+    "updated_at": "2019-12-01T05:56:01Z",
+    "author_association": "MEMBER",
+    "body": "Can ECIP editors modify a status of an ECIP to Withdrawn without asking the author of the ECIP themselves? I hesitate to approve this till I have more clarity on this.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560061540/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00202_560082089.json b/.gh-pullrequests/00202_560082089.json
new file mode 100644
index 0000000..5ecc75e
--- /dev/null
+++ b/.gh-pullrequests/00202_560082089.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560082089",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/202#issuecomment-560082089",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/202",
+    "id": 560082089,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDA4MjA4OQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T09:30:27Z",
+    "updated_at": "2019-12-01T09:30:27Z",
+    "author_association": "MEMBER",
+    "body": "Clique is final",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560082089/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00202_560103298.json b/.gh-pullrequests/00202_560103298.json
new file mode 100644
index 0000000..40b83ae
--- /dev/null
+++ b/.gh-pullrequests/00202_560103298.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560103298",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/202#issuecomment-560103298",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/202",
+    "id": 560103298,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEwMzI5OA==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T12:41:57Z",
+    "updated_at": "2019-12-01T12:41:57Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "@YazzyYaz see my proposed edits above, using `Rejected` instead of `Withdrawn`. Does this seem more sensible to you?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560103298/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00202_560107873.json b/.gh-pullrequests/00202_560107873.json
new file mode 100644
index 0000000..fda45a5
--- /dev/null
+++ b/.gh-pullrequests/00202_560107873.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560107873",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/202#issuecomment-560107873",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/202",
+    "id": 560107873,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEwNzg3Mw==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T13:23:40Z",
+    "updated_at": "2019-12-01T13:23:40Z",
+    "author_association": "MEMBER",
+    "body": "Should be deferred @meowsbits ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560107873/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00202_560108221.json b/.gh-pullrequests/00202_560108221.json
new file mode 100644
index 0000000..5422de4
--- /dev/null
+++ b/.gh-pullrequests/00202_560108221.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560108221",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/202#issuecomment-560108221",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/202",
+    "id": 560108221,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEwODIyMQ==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T13:26:52Z",
+    "updated_at": "2019-12-01T13:26:52Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "@soc1c Roger, have updated.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560108221/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00202_560109496.json b/.gh-pullrequests/00202_560109496.json
new file mode 100644
index 0000000..1ba0245
--- /dev/null
+++ b/.gh-pullrequests/00202_560109496.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560109496",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/202#issuecomment-560109496",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/202",
+    "id": 560109496,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEwOTQ5Ng==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T13:38:37Z",
+    "updated_at": "2019-12-01T13:39:26Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Note that I am inclined to allow this _broad_ change set because it seems to handle chore-ish and housekeeping efforts, as opposed to https://github.com/ethereumclassic/ECIPs/pull/200#pullrequestreview-324940392 which proposes to reject several proposals which are still technically available/feasible in a single sweep.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560109496/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00203.json b/.gh-pullrequests/00203.json
index 7a6627a..7835190 100644
--- a/.gh-pullrequests/00203.json
+++ b/.gh-pullrequests/00203.json
@@ -39,9 +39,9 @@
 
     ],
     "milestone": null,
-    "comments": 4,
+    "comments": 6,
     "created_at": "2019-11-27T17:09:35Z",
-    "updated_at": "2019-11-27T23:30:22Z",
+    "updated_at": "2019-12-01T18:21:53Z",
     "closed_at": null,
     "author_association": "MEMBER",
     "pull_request": {
diff --git a/.gh-pullrequests/00203_560108748.json b/.gh-pullrequests/00203_560108748.json
new file mode 100644
index 0000000..dcdbf33
--- /dev/null
+++ b/.gh-pullrequests/00203_560108748.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560108748",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/203#issuecomment-560108748",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/203",
+    "id": 560108748,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEwODc0OA==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T13:31:42Z",
+    "updated_at": "2019-12-01T13:31:54Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Why not discussion here?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560108748/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00203_560139813.json b/.gh-pullrequests/00203_560139813.json
new file mode 100644
index 0000000..1a2ccea
--- /dev/null
+++ b/.gh-pullrequests/00203_560139813.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560139813",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/203#issuecomment-560139813",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/203",
+    "id": 560139813,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEzOTgxMw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T18:21:53Z",
+    "updated_at": "2019-12-01T18:21:53Z",
+    "author_association": "MEMBER",
+    "body": "@meowsbits Just better to have the discussions in Issues, rather than cluttering the PRs (which should be code reviews) with \"peanut gallery\".",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560139813/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00207.json b/.gh-pullrequests/00207.json
index c52148b..1daf496 100644
--- a/.gh-pullrequests/00207.json
+++ b/.gh-pullrequests/00207.json
@@ -32,7 +32,7 @@
     "labels": [
 
     ],
-    "state": "open",
+    "state": "closed",
     "locked": false,
     "assignee": null,
     "assignees": [
@@ -41,8 +41,8 @@
     "milestone": null,
     "comments": 0,
     "created_at": "2019-11-28T07:33:55Z",
-    "updated_at": "2019-11-29T16:17:02Z",
-    "closed_at": null,
+    "updated_at": "2019-11-30T11:54:51Z",
+    "closed_at": "2019-11-29T21:56:38Z",
     "author_association": "MEMBER",
     "pull_request": {
       "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/207",
diff --git a/.gh-pullrequests/00208.json b/.gh-pullrequests/00208.json
index 0bab891..5d91957 100644
--- a/.gh-pullrequests/00208.json
+++ b/.gh-pullrequests/00208.json
@@ -32,7 +32,7 @@
     "labels": [
 
     ],
-    "state": "open",
+    "state": "closed",
     "locked": false,
     "assignee": null,
     "assignees": [
@@ -41,8 +41,8 @@
     "milestone": null,
     "comments": 0,
     "created_at": "2019-11-28T18:07:20Z",
-    "updated_at": "2019-11-29T13:32:03Z",
-    "closed_at": null,
+    "updated_at": "2019-11-29T22:00:51Z",
+    "closed_at": "2019-11-29T22:00:51Z",
     "author_association": "MEMBER",
     "pull_request": {
       "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/208",
diff --git a/.gh-pullrequests/00212.json b/.gh-pullrequests/00212.json
index 87eb174..4822c60 100644
--- a/.gh-pullrequests/00212.json
+++ b/.gh-pullrequests/00212.json
@@ -32,7 +32,7 @@
     "labels": [
 
     ],
-    "state": "open",
+    "state": "closed",
     "locked": false,
     "assignee": null,
     "assignees": [
@@ -41,8 +41,8 @@
     "milestone": null,
     "comments": 0,
     "created_at": "2019-11-29T16:29:11Z",
-    "updated_at": "2019-11-29T17:42:03Z",
-    "closed_at": null,
+    "updated_at": "2019-11-30T03:51:13Z",
+    "closed_at": "2019-11-30T03:51:10Z",
     "author_association": "MEMBER",
     "pull_request": {
       "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/212",
diff --git a/.gh-pullrequests/00212.patch b/.gh-pullrequests/00212.patch
index 8db980b..75054d0 100644
--- a/.gh-pullrequests/00212.patch
+++ b/.gh-pullrequests/00212.patch
@@ -1,7 +1,7 @@
 From 590d6e54bcb0e77167e297820ce2cb5c9ac758fe Mon Sep 17 00:00:00 2001
 From: Talha Cross <47772477+soc1c@users.noreply.github.com>
 Date: Fri, 29 Nov 2019 17:24:23 +0100
-Subject: [PATCH 1/2] Revert "ECIP-1072: Fix name and move it to last call"
+Subject: [PATCH 1/4] Revert "ECIP-1072: Fix name and move it to last call"
 
 ---
  _specs/ecip-1072.md | 7 +++----
@@ -30,7 +30,7 @@ index 843176c..185b2ec 100644
 From 03dd0434170e81abda275e777f9d7bfd448e7a9b Mon Sep 17 00:00:00 2001
 From: Talha Cross <47772477+soc1c@users.noreply.github.com>
 Date: Fri, 29 Nov 2019 17:25:51 +0100
-Subject: [PATCH 2/2] ECIP-1072: Move to withdrawn status
+Subject: [PATCH 2/4] ECIP-1072: Move to withdrawn status
 
 ---
  _specs/ecip-1072.md | 2 +-
@@ -49,3 +49,49 @@ index 185b2ec..179b269 100644
  type: Meta
  author: Wei Tang (@sorpaas)
  created: 2019-11-14
+
+From ad800675e39672f5015fb23e9b8d1fa424e3ca68 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Fri, 29 Nov 2019 23:00:01 +0100
+Subject: [PATCH 3/4] Update ecip-1073.md
+
+---
+ _specs/ecip-1073.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1073.md b/_specs/ecip-1073.md
+index 5e27f26..6cf9a3a 100644
+--- a/_specs/ecip-1073.md
++++ b/_specs/ecip-1073.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1073
+ title: Xichun EVM and Protocol Upgrades
+-status: Draft
++status: Withdrawn
+ type: Meta
+ author: Wei Tang (@sorpaas)
+ created: 2019-11-14
+
+From 1ec2f41072016e550e4b73b8bf701224833bfa7e Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Fri, 29 Nov 2019 23:00:19 +0100
+Subject: [PATCH 4/4] Update ecip-1074.md
+
+---
+ _specs/ecip-1074.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1074.md b/_specs/ecip-1074.md
+index 5d577ba..0228960 100644
+--- a/_specs/ecip-1074.md
++++ b/_specs/ecip-1074.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1074
+ title: Tanchun EVM and Protocol Upgrades
+-status: Draft
++status: Withdrawn
+ type: Meta
+ author: Wei Tang (@sorpaas)
+ created: 2019-11-14
diff --git a/.gh-pullrequests/00213.json b/.gh-pullrequests/00213.json
index 2bb16a9..95da912 100644
--- a/.gh-pullrequests/00213.json
+++ b/.gh-pullrequests/00213.json
@@ -32,17 +32,17 @@
     "labels": [
 
     ],
-    "state": "open",
+    "state": "closed",
     "locked": false,
     "assignee": null,
     "assignees": [
 
     ],
     "milestone": null,
-    "comments": 0,
+    "comments": 3,
     "created_at": "2019-11-29T17:09:30Z",
-    "updated_at": "2019-11-29T17:20:20Z",
-    "closed_at": null,
+    "updated_at": "2019-11-29T22:04:46Z",
+    "closed_at": "2019-11-29T22:02:15Z",
     "author_association": "MEMBER",
     "pull_request": {
       "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/213",
diff --git a/.gh-pullrequests/00213_559886131.json b/.gh-pullrequests/00213_559886131.json
new file mode 100644
index 0000000..c38eb55
--- /dev/null
+++ b/.gh-pullrequests/00213_559886131.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559886131",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/213#issuecomment-559886131",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/213",
+    "id": 559886131,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg4NjEzMQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T22:00:43Z",
+    "updated_at": "2019-11-29T22:00:43Z",
+    "author_association": "MEMBER",
+    "body": "There is no reason for this to be closed.\r\n\r\nI am listed as an author and so is Afri and our consent was not given.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559886131/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00213_559886388.json b/.gh-pullrequests/00213_559886388.json
new file mode 100644
index 0000000..c979791
--- /dev/null
+++ b/.gh-pullrequests/00213_559886388.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559886388",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/213#issuecomment-559886388",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/213",
+    "id": 559886388,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg4NjM4OA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T22:02:15Z",
+    "updated_at": "2019-11-29T22:02:15Z",
+    "author_association": "MEMBER",
+    "body": "Superseded by https://github.com/ethereumclassic/ECIPs/pull/212",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559886388/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00213_559886651.json b/.gh-pullrequests/00213_559886651.json
new file mode 100644
index 0000000..7a1209a
--- /dev/null
+++ b/.gh-pullrequests/00213_559886651.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559886651",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/213#issuecomment-559886651",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/213",
+    "id": 559886651,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg4NjY1MQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T22:04:46Z",
+    "updated_at": "2019-11-29T22:04:46Z",
+    "author_association": "MEMBER",
+    "body": "Gotcha.  Thanks for the clarification.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559886651/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00214.json b/.gh-pullrequests/00214.json
index aa0e333..041ed99 100644
--- a/.gh-pullrequests/00214.json
+++ b/.gh-pullrequests/00214.json
@@ -32,17 +32,53 @@
     "labels": [
 
     ],
-    "state": "open",
+    "state": "closed",
     "locked": false,
     "assignee": null,
     "assignees": [
 
     ],
-    "milestone": null,
-    "comments": 0,
+    "milestone": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/2",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/milestone/2",
+      "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/milestones/2/labels",
+      "id": 4885758,
+      "node_id": "MDk6TWlsZXN0b25lNDg4NTc1OA==",
+      "number": 2,
+      "title": "Aztlán Hardfork",
+      "description": "",
+      "creator": {
+        "login": "sorpaas",
+        "id": 6277322,
+        "node_id": "MDQ6VXNlcjYyNzczMjI=",
+        "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+        "gravatar_id": "",
+        "url": "https://api.github.com/users/sorpaas",
+        "html_url": "https://github.com/sorpaas",
+        "followers_url": "https://api.github.com/users/sorpaas/followers",
+        "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+        "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+        "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+        "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+        "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+        "repos_url": "https://api.github.com/users/sorpaas/repos",
+        "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+        "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+        "type": "User",
+        "site_admin": false
+      },
+      "open_issues": 1,
+      "closed_issues": 5,
+      "state": "open",
+      "created_at": "2019-11-27T20:32:02Z",
+      "updated_at": "2019-11-29T19:52:44Z",
+      "due_on": null,
+      "closed_at": null
+    },
+    "comments": 1,
     "created_at": "2019-11-29T17:15:27Z",
-    "updated_at": "2019-11-29T17:41:38Z",
-    "closed_at": null,
+    "updated_at": "2019-11-29T19:52:44Z",
+    "closed_at": "2019-11-29T19:21:23Z",
     "author_association": "MEMBER",
     "pull_request": {
       "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/214",
diff --git a/.gh-pullrequests/00214_559867809.json b/.gh-pullrequests/00214_559867809.json
new file mode 100644
index 0000000..df7418c
--- /dev/null
+++ b/.gh-pullrequests/00214_559867809.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559867809",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/214#issuecomment-559867809",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/214",
+    "id": 559867809,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg2NzgwOQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T19:21:23Z",
+    "updated_at": "2019-11-29T19:21:23Z",
+    "author_association": "MEMBER",
+    "body": "Closed as a dupe of #212 ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559867809/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00216.json b/.gh-pullrequests/00216.json
new file mode 100644
index 0000000..b239410
--- /dev/null
+++ b/.gh-pullrequests/00216.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/216",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/216/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/216/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/216/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/216",
+    "id": 530448058,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3MTI4MTU2",
+    "number": 216,
+    "title": "Update licensing to Apache 2.0 for ECIP-1061",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 5,
+    "created_at": "2019-11-29T17:50:21Z",
+    "updated_at": "2019-12-01T05:51:56Z",
+    "closed_at": "2019-12-01T05:51:55Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/216",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/216",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/216.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/216.patch"
+    },
+    "body": "Update licensing to Apache 2.0, to reflect inclusion of specifications authored by Wei Tang under Apache 2.0 licensing.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/216/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00216.patch b/.gh-pullrequests/00216.patch
new file mode 100644
index 0000000..631afbd
--- /dev/null
+++ b/.gh-pullrequests/00216.patch
@@ -0,0 +1,31 @@
+From 033c4cccf9d85e4c992a448f08fa721fbc50186f Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Fri, 29 Nov 2019 09:49:36 -0800
+Subject: [PATCH] Update licensing to Apache 2.0, to reflect inclusion of
+ specifications authored by Wei Tang under Apache 2.0 licensing.
+
+---
+ _specs/ecip-1061.md | 5 +++--
+ 1 file changed, 3 insertions(+), 2 deletions(-)
+
+diff --git a/_specs/ecip-1061.md b/_specs/ecip-1061.md
+index ba6bc17..242c0d0 100644
+--- a/_specs/ecip-1061.md
++++ b/_specs/ecip-1061.md
+@@ -13,7 +13,7 @@ discussions-to: https://github.com/ethereumclassic/ECIPs/issues/81
+ ### Simple Summary
+ 
+ Enable the outstanding Ethereum Foundation _Istanbul_ network protocol upgrades on the Ethereum
+-Classic network without any gas-cost assumptions in a hard-fork code-named _Aztlán_ to enable 
++Classic network without any gas-cost assumptions in a hard-fork code-named _Aztlán (Yingchun Edition)_ to enable 
+ maximum compatibility across these networks. 
+ 
+ The _Yingchun_ Edition refers to the preferred variant of _Aztlán_ without any repricing of state-trie 
+@@ -85,4 +85,5 @@ Both, the Geth Classic client and the Morden testnet will no longer be supported
+ 
+ ## Copyright
+ 
+-Copyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).
++This work is licensed under [Apache License, Version
++2.0](http://www.apache.org/licenses/).
+\ No newline at end of file
diff --git a/.gh-pullrequests/00216_559857531.json b/.gh-pullrequests/00216_559857531.json
new file mode 100644
index 0000000..da57943
--- /dev/null
+++ b/.gh-pullrequests/00216_559857531.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559857531",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/216#issuecomment-559857531",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/216",
+    "id": 559857531,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg1NzUzMQ==",
+    "user": {
+      "login": "shanejonas",
+      "id": 364566,
+      "node_id": "MDQ6VXNlcjM2NDU2Ng==",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/364566?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/shanejonas",
+      "html_url": "https://github.com/shanejonas",
+      "followers_url": "https://api.github.com/users/shanejonas/followers",
+      "following_url": "https://api.github.com/users/shanejonas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/shanejonas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/shanejonas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/shanejonas/subscriptions",
+      "organizations_url": "https://api.github.com/users/shanejonas/orgs",
+      "repos_url": "https://api.github.com/users/shanejonas/repos",
+      "events_url": "https://api.github.com/users/shanejonas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/shanejonas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T18:07:22Z",
+    "updated_at": "2019-11-29T18:07:22Z",
+    "author_association": "MEMBER",
+    "body": "@soc1c apache 2.0 is to also be used with technical documentation and specs, which i believe applies here.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559857531/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00216_559859049.json b/.gh-pullrequests/00216_559859049.json
new file mode 100644
index 0000000..effd7f1
--- /dev/null
+++ b/.gh-pullrequests/00216_559859049.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559859049",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/216#issuecomment-559859049",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/216",
+    "id": 559859049,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg1OTA0OQ==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T18:17:48Z",
+    "updated_at": "2019-11-29T18:17:48Z",
+    "author_association": "MEMBER",
+    "body": "Ok",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559859049/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00216_559869674.json b/.gh-pullrequests/00216_559869674.json
new file mode 100644
index 0000000..cf58c71
--- /dev/null
+++ b/.gh-pullrequests/00216_559869674.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559869674",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/216#issuecomment-559869674",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/216",
+    "id": 559869674,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg2OTY3NA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T19:35:27Z",
+    "updated_at": "2019-11-29T19:35:27Z",
+    "author_association": "MEMBER",
+    "body": "@soc1c After the call with Mishi and Eben, I have a better understanding of what would be best moving forward (CC-BY-SA + patent covenant + DCOs (not real name).\r\n\r\nI will make a new ECIP about that at some point soon, but in the meantime there is no specific DOWNSIDE to switching to Apache 2.0.   It won't protect us either, but is not actively bad, and gets us past Wei's concern on this specific ECIP.\r\n\r\nPlease can you approve so we can move on?  Thank you :-)\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559869674/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00216_559956888.json b/.gh-pullrequests/00216_559956888.json
new file mode 100644
index 0000000..057cafe
--- /dev/null
+++ b/.gh-pullrequests/00216_559956888.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559956888",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/216#issuecomment-559956888",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/216",
+    "id": 559956888,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTk1Njg4OA==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T12:04:02Z",
+    "updated_at": "2019-11-30T12:04:02Z",
+    "author_association": "MEMBER",
+    "body": "I abstain. Someone else would have to go ahead with this.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559956888/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00216_560057439.json b/.gh-pullrequests/00216_560057439.json
new file mode 100644
index 0000000..7876a9b
--- /dev/null
+++ b/.gh-pullrequests/00216_560057439.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560057439",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/216#issuecomment-560057439",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/216",
+    "id": 560057439,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDA1NzQzOQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T05:16:47Z",
+    "updated_at": "2019-12-01T05:16:47Z",
+    "author_association": "MEMBER",
+    "body": "@meowsbits @YazzyYaz @realcodywburns Please could one of you review?  Thanks!",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560057439/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00218.json b/.gh-pullrequests/00218.json
new file mode 100644
index 0000000..9ad3d67
--- /dev/null
+++ b/.gh-pullrequests/00218.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/218",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/218/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/218/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/218/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/218",
+    "id": 530468515,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3MTQ0MzY2",
+    "number": 218,
+    "title": "Reject ECIP-1072 which is a functional duplicate to ECIP-1061",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2019-11-29T19:25:59Z",
+    "updated_at": "2019-11-29T21:56:54Z",
+    "closed_at": "2019-11-29T21:56:54Z",
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/218",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/218",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/218.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/218.patch"
+    },
+    "body": "ECIP-1702 is now being used by Wei to push an \"Ethereum Classic Classic\" fork.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/218/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00218.patch b/.gh-pullrequests/00218.patch
new file mode 100644
index 0000000..eb75238
--- /dev/null
+++ b/.gh-pullrequests/00218.patch
@@ -0,0 +1,24 @@
+From 2a9e95ab38cff134eb37085dfb02232b369bd6ae Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Fri, 29 Nov 2019 11:25:23 -0800
+Subject: [PATCH] Reject ECIP-1072 which is a functional duplicate to
+ ECIP-1061. ECIP-1702 is now being used by Wei to push an "Ethereum Classic
+ Classic" fork.
+
+---
+ _specs/ecip-1072.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1072.md b/_specs/ecip-1072.md
+index 843176c..86a0087 100644
+--- a/_specs/ecip-1072.md
++++ b/_specs/ecip-1072.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1072
+ title: Aztlán EVM and Protocol Upgrades (Yingchun Edition)
+-status: Last Call
++status: Rejected
+ review-period-end: 2019-12-21
+ type: Meta
+ author: Wei Tang (@sorpaas), Talha Cross (@soc1c), Bob Summerwill (@bobsummerwill)
diff --git a/.gh-pullrequests/00218_559878110.json b/.gh-pullrequests/00218_559878110.json
new file mode 100644
index 0000000..9c0e8ca
--- /dev/null
+++ b/.gh-pullrequests/00218_559878110.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559878110",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/218#issuecomment-559878110",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/218",
+    "id": 559878110,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg3ODExMA==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-29T20:43:04Z",
+    "updated_at": "2019-11-29T20:43:04Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "@bobsummerwill \r\n\r\n> ECIP-1702 is now being used by Wei to push an \"Ethereum Classic Classic\" fork.\r\n\r\nI don't think this is true. And even if it were, this is allowed, and not a valid reason for rejection.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/559878110/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00219.json b/.gh-pullrequests/00219.json
new file mode 100644
index 0000000..2bea60d
--- /dev/null
+++ b/.gh-pullrequests/00219.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/219",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/219/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/219/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/219/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/219",
+    "id": 530482328,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3MTU1MDk1",
+    "number": 219,
+    "title": "Meta Meta Specification for Forking Meta ECIPs",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2019-11-29T20:37:32Z",
+    "updated_at": "2019-11-30T20:14:38Z",
+    "closed_at": "2019-11-30T20:14:38Z",
+    "author_association": "CONTRIBUTOR",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/219",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/219",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/219.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/219.patch"
+    },
+    "body": "",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/219/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00219.patch b/.gh-pullrequests/00219.patch
new file mode 100644
index 0000000..ee25570
--- /dev/null
+++ b/.gh-pullrequests/00219.patch
@@ -0,0 +1,269 @@
+From 4f2e902271b8d8d5abff34875f4d8b1da8c95285 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Fri, 29 Nov 2019 15:29:06 -0500
+Subject: [PATCH 1/7] Init Forking Meta Meta ECIP specification
+
+---
+ _specs/ecip-_.md | 63 ++++++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 63 insertions(+)
+ create mode 100644 _specs/ecip-_.md
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+new file mode 100644
+index 0000000..6af2169
+--- /dev/null
++++ b/_specs/ecip-_.md
+@@ -0,0 +1,63 @@
++---
++ecip: TBD
++title: The Meta Meta ECIP: Processes for Meta ECIPs
++author: Mr. Meows D. Bits
++discussions-to: TBD
++status: WIP
++type: Meta
++created: 2019-11-29T14:17:42-05:00
++resolution: TBD
++---
++
++### Abstract
++
++Forking Meta ECIPs (defined as Meta ECIPs specifying any Standards-Core track ECIP) should be complete and unique.
++
++### Motivation
++
++Incomplete proposals are inoperable; they are not ready for implementation.
++
++Definite proposals are inoperable; they are not ready for implementation.
++
++Unique proposals saves me time because I don't have to read the same thing twice.
++
++Related to and derivative of:
++
++- https://github.com/ethereumclassic/ECIPs/issues/217
++- https://github.com/ethereumclassic/ECIPs/issues/215
++- https://github.com/ethereumclassic/ECIPs/issues/175
++- https://github.com/ethereumclassic/ECIPs/issues/131
++- https://github.com/ethereumclassic/ECIPs/issues/177
++- https://github.com/ethereumclassic/ECIPs/issues/135
++- https://github.com/ethereumclassic/ECIPs/pull/218
++- https://github.com/ethereumclassic/ECIPs/pull/212
++- https://github.com/ethereumclassic/ECIPs/pull/207
++- https://github.com/ethereumclassic/ECIPs/pull/214
++- https://github.com/ethereumclassic/ECIPs/pull/199
++- https://github.com/ethereumclassic/ECIPs/pull/196
++
++### Specification
++
++A hard fork specification is documented as a Meta ECIP, and usually represents a collection of adjacent ECIPs. The sole purpose of a Forking Meta ECIP is to join a block number with this set of `n >= 1` ECIPs containing protocol-facing changes. The document says "_These_ features will activate at _this_ moment."
++
++This proposal specifies that all Forking Meta ECIPs should be COMPLETE and UNIQUE; essentially disallowing _Draft_ Forking Meta ECIPs and and/or meaningful revisions (set ECIPs, block number). A valid Forking Meta ECIP must contain a full and complete set of to-be included ECIPs, and a definitive block number. 
++
++_Complete_ is defined as being fully and totally definitive; not lacking anything.
++
++_Unique_ means not the same as another thing; in this case, not precisely duplicating any existing ECIP.
++
++### Rationale
++
++0. Forking Meta ECIPs are themselves ECIPs, and their job is to define, with certainty and clarity, technical specifications. Forking Meta ECIPs that essentially leave either field `Block number` and/or field `ECIP set` blank are functionally useless; they say only: "Will have some fork at some time." An analogue of blankness to non-Forking-Meta ECIPs would essentially say "TODO: put my next awesome feature specification here." Fill-in-the-blank ECIPs are not in good form.
++
++1. A Forking Meta ECIP may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simulateous inclusion. Demanding fully-formed Forking Meta ECIP proposals forces authors to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.
++
++2. Concrete ECIPs are easier to reason about. Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making.
++
++### Implementation
++
++A Forking Meta ECIP may not be in `Draft` status. It may not undergo any meaningful changes once receiving `Last Call` status (its next status beyond `WIP`).
++
++### Copyright/Licensing
++
++MIT.
+
+From 18ba1dd84b1199180ef74f7fee27d6660f88a76e Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Fri, 29 Nov 2019 15:31:12 -0500
+Subject: [PATCH 2/7] Improve language around status adjectives
+
+---
+ _specs/ecip-_.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index 6af2169..b6b6e55 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -40,7 +40,7 @@ Related to and derivative of:
+ 
+ A hard fork specification is documented as a Meta ECIP, and usually represents a collection of adjacent ECIPs. The sole purpose of a Forking Meta ECIP is to join a block number with this set of `n >= 1` ECIPs containing protocol-facing changes. The document says "_These_ features will activate at _this_ moment."
+ 
+-This proposal specifies that all Forking Meta ECIPs should be COMPLETE and UNIQUE; essentially disallowing _Draft_ Forking Meta ECIPs and and/or meaningful revisions (set ECIPs, block number). A valid Forking Meta ECIP must contain a full and complete set of to-be included ECIPs, and a definitive block number. 
++This proposal specifies that all Forking Meta ECIPs should be COMPLETE and UNIQUE; essentially disallowing `Draft` status Forking Meta ECIPs and and/or meaningful revisions (set ECIPs, block number). A valid Forking Meta ECIP must contain a full and complete set of to-be included ECIPs, and a definitive block number. 
+ 
+ _Complete_ is defined as being fully and totally definitive; not lacking anything.
+ 
+
+From abf98b0dd476767c2420dad259d5544c0d430927 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Fri, 29 Nov 2019 15:35:16 -0500
+Subject: [PATCH 3/7] Add rationale section specifically for block number spec
+
+---
+ _specs/ecip-_.md | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index b6b6e55..da4a181 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -52,7 +52,9 @@ _Unique_ means not the same as another thing; in this case, not precisely duplic
+ 
+ 1. A Forking Meta ECIP may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simulateous inclusion. Demanding fully-formed Forking Meta ECIP proposals forces authors to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.
+ 
+-2. Concrete ECIPs are easier to reason about. Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making.
++2. Forking Meta ECIPs without block numbers lack operability. Activation numbers _are specifications_ and should not be treated as a second class or at-convenience citizens. Implementation timelines are importantly related variables to their adjacent ECIP-sets (large set ostensibly require long timelines, hotfix sets require short ones.) We cannot reason about them in independence.
++
++3. Concrete ECIPs are easier to reason about. Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making.
+ 
+ ### Implementation
+ 
+
+From 76872bde3b069d03225da2de3af62bb5231fdcaf Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 07:33:29 -0500
+Subject: [PATCH 4/7] Fix typo (remove rough draft 'definitive' concept
+ vestige)
+
+---
+ _specs/ecip-_.md | 2 --
+ 1 file changed, 2 deletions(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index da4a181..8c1f891 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -17,8 +17,6 @@ Forking Meta ECIPs (defined as Meta ECIPs specifying any Standards-Core track EC
+ 
+ Incomplete proposals are inoperable; they are not ready for implementation.
+ 
+-Definite proposals are inoperable; they are not ready for implementation.
+-
+ Unique proposals saves me time because I don't have to read the same thing twice.
+ 
+ Related to and derivative of:
+
+From bbf1c2f1a8400c50e7f15127844122ab11e7ff76 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 07:38:41 -0500
+Subject: [PATCH 5/7] Fix typos
+
+---
+ _specs/ecip-_.md | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index 8c1f891..389ca1c 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -48,9 +48,9 @@ _Unique_ means not the same as another thing; in this case, not precisely duplic
+ 
+ 0. Forking Meta ECIPs are themselves ECIPs, and their job is to define, with certainty and clarity, technical specifications. Forking Meta ECIPs that essentially leave either field `Block number` and/or field `ECIP set` blank are functionally useless; they say only: "Will have some fork at some time." An analogue of blankness to non-Forking-Meta ECIPs would essentially say "TODO: put my next awesome feature specification here." Fill-in-the-blank ECIPs are not in good form.
+ 
+-1. A Forking Meta ECIP may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simulateous inclusion. Demanding fully-formed Forking Meta ECIP proposals forces authors to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.
++1. A Forking Meta ECIP may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simultaneous inclusion. Demanding fully-formed Forking Meta ECIP proposals forces authors to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.
+ 
+-2. Forking Meta ECIPs without block numbers lack operability. Activation numbers _are specifications_ and should not be treated as a second class or at-convenience citizens. Implementation timelines are importantly related variables to their adjacent ECIP-sets (large set ostensibly require long timelines, hotfix sets require short ones.) We cannot reason about them in independence.
++2. Forking Meta ECIPs without block numbers lack operability. Activation numbers _are specifications_ and should not be treated as a second class or at-convenience citizens. Implementation timelines are importantly related variables to their adjacent ECIP-sets (large set ostensibly require long timelines, hotfix sets require short ones.) We cannot reason about them in isolation.
+ 
+ 3. Concrete ECIPs are easier to reason about. Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making.
+ 
+
+From 164c68c513aa453a30de34a79d3e6c4a0f55b1ac Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 14:26:56 -0500
+Subject: [PATCH 6/7] Write a little more
+
+---
+ _specs/ecip-_.md | 24 +++++++++++++++---------
+ 1 file changed, 15 insertions(+), 9 deletions(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index 389ca1c..df8fbf7 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -15,9 +15,9 @@ Forking Meta ECIPs (defined as Meta ECIPs specifying any Standards-Core track EC
+ 
+ ### Motivation
+ 
+-Incomplete proposals are inoperable; they are not ready for implementation.
++Incomplete proposals are inoperable; they are not ready for review, discussion, nor implementation.
+ 
+-Unique proposals saves me time because I don't have to read the same thing twice.
++Unique proposals save time and redundant complexity.
+ 
+ Related to and derivative of:
+ 
+@@ -36,28 +36,34 @@ Related to and derivative of:
+ 
+ ### Specification
+ 
+-A hard fork specification is documented as a Meta ECIP, and usually represents a collection of adjacent ECIPs. The sole purpose of a Forking Meta ECIP is to join a block number with this set of `n >= 1` ECIPs containing protocol-facing changes. The document says "_These_ features will activate at _this_ moment."
+-
+-This proposal specifies that all Forking Meta ECIPs should be COMPLETE and UNIQUE; essentially disallowing `Draft` status Forking Meta ECIPs and and/or meaningful revisions (set ECIPs, block number). A valid Forking Meta ECIP must contain a full and complete set of to-be included ECIPs, and a definitive block number. 
++A Forking Meta ECIP is defined as a Meta ECIP specifying any (`n >= 1`) Standards-Core track ECIP or ECIP-set. A Forking Meta ECIP should be complete and unique.
+ 
+ _Complete_ is defined as being fully and totally definitive; not lacking anything.
+ 
+ _Unique_ means not the same as another thing; in this case, not precisely duplicating any existing ECIP.
+ 
++This proposal specifies that all Forking Meta ECIPs should be COMPLETE and UNIQUE; essentially disallowing `Draft` status Forking Meta ECIPs and and/or meaningful revisions (set ECIPs, block number).
++
++This implies that a valid Forking Meta ECIP must contain a full and complete set of to-be included ECIPs, and a definitive block number. 
++
+ ### Rationale
+ 
+-0. Forking Meta ECIPs are themselves ECIPs, and their job is to define, with certainty and clarity, technical specifications. Forking Meta ECIPs that essentially leave either field `Block number` and/or field `ECIP set` blank are functionally useless; they say only: "Will have some fork at some time." An analogue of blankness to non-Forking-Meta ECIPs would essentially say "TODO: put my next awesome feature specification here." Fill-in-the-blank ECIPs are not in good form.
++The sole purpose of a Forking Meta ECIP is to join a block number with a set of `n >= 1` ECIPs containing protocol-facing changes. The document says "_These_ features will activate at _this_ moment."
+ 
+-1. A Forking Meta ECIP may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simultaneous inclusion. Demanding fully-formed Forking Meta ECIP proposals forces authors to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.
++0. __Fill-in-the-blank ECIPs are not in good form.__ Forking Meta ECIPs are themselves ECIPs, and their job is to define, with certainty and clarity, technical specifications. Forking Meta ECIPs that essentially leave either field `Block number` and/or field `ECIP set` blank are functionally useless (inoperable); they say only: "(I/we) propose to have some fork at some time." An analogue of blankness to non-Forking-Meta ECIPs would essentially say "TODO: put my next awesome feature specification here." 
+ 
+-2. Forking Meta ECIPs without block numbers lack operability. Activation numbers _are specifications_ and should not be treated as a second class or at-convenience citizens. Implementation timelines are importantly related variables to their adjacent ECIP-sets (large set ostensibly require long timelines, hotfix sets require short ones.) We cannot reason about them in isolation.
++1. __Demanding fully-formed Forking Meta ECIP proposals forces authors, editors, and reviewers to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.__ A Forking Meta ECIP may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simultaneous inclusion. 
+ 
+-3. Concrete ECIPs are easier to reason about. Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making.
++2. __Forking Meta ECIPs without block numbers lack operability.__ Activation numbers _are specifications_ and should not be treated as a second class or at-convenience citizens. Implementation timelines are importantly related variables to their adjacent ECIP-sets (large set ostensibly require long timelines, hotfix sets require short ones.) We cannot reason about them in isolation.
++
++3. __Concrete ECIPs are easier to build language and reasoning around.__ Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making. "Competing" Forking Meta ECIP alternatives become explicit and standardized, yielding conceptual and communicable clarity in review processes and decision-making processes.
+ 
+ ### Implementation
+ 
+ A Forking Meta ECIP may not be in `Draft` status. It may not undergo any meaningful changes once receiving `Last Call` status (its next status beyond `WIP`).
+ 
++Procedurally, compared to the historical and traditional practice of opening an essentially empty Forking Meta ECIP and working to fill in blanks, this proposed procedure makes only marginal and changes, demanding only that what was taken as implication, subtext, or conteext before now be made explicit. Rather than reviewing actual-or-theoretical proposed change sets to an ECIP (which sadly, have historically usually been theoretical), this forces proposed Forking Meta ECIP alternative outcomes to assume a fully qualified and standardized formats before becoming eligible for consideration. 
++
+ ### Copyright/Licensing
+ 
+ MIT.
+
+From bfd3a9c8f876b59c80c82eab5435ab0e0cf60e87 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 14:33:21 -0500
+Subject: [PATCH 7/7] Fix Forking Meta ECIP spec to include must have
+ activation block number
+
+---
+ _specs/ecip-_.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index df8fbf7..c0466fa 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -11,7 +11,7 @@ resolution: TBD
+ 
+ ### Abstract
+ 
+-Forking Meta ECIPs (defined as Meta ECIPs specifying any Standards-Core track ECIP) should be complete and unique.
++Forking Meta ECIPs (defined as Meta ECIPs specifying any Standards-Core track ECIP and an activation block number) should be complete and unique.
+ 
+ ### Motivation
+ 
diff --git a/.gh-pullrequests/00219_560017380.json b/.gh-pullrequests/00219_560017380.json
new file mode 100644
index 0000000..3cde937
--- /dev/null
+++ b/.gh-pullrequests/00219_560017380.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560017380",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/219#issuecomment-560017380",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/219",
+    "id": 560017380,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAxNzM4MA==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T20:14:36Z",
+    "updated_at": "2019-11-30T20:14:36Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Closing in favor of #222, which duplicates this changeset, but on a local branch.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560017380/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220.json b/.gh-pullrequests/00220.json
new file mode 100644
index 0000000..531d61b
--- /dev/null
+++ b/.gh-pullrequests/00220.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220",
+    "id": 530606143,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3MjQyNTgz",
+    "number": 220,
+    "title": "ECIP-1000: Irregular Process Transitions",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 28,
+    "created_at": "2019-11-30T17:22:22Z",
+    "updated_at": "2019-12-02T14:41:22Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/220",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/220.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/220.patch"
+    },
+    "body": "As a decentralized community, it is important that for all governance actions, especially in ECIP, the established process is followed. In this section, we document irregular process transitions, and give special permissions to them, to state that they followed the process. Note that this is essentially similar to theDAO hard fork in Ethereum, and should only be added in extreme cases.\r\n\r\nOne irregular process transition is included in this PR:\r\n\r\n* In [PR#199](https://github.com/ethereumclassic/ECIPs/pull/199), Afri Schoedon merged a PR moving ECIP-1061 to \"Last Call\" status. At the time, Afri dismissed a review of clear objections from ECIP editor Wei Tang, without waiting for consultations of the community, or resolutions with the review submitter. We here declare that this particular action from Afri followed the ECIP process. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220.patch b/.gh-pullrequests/00220.patch
new file mode 100644
index 0000000..73dee78
--- /dev/null
+++ b/.gh-pullrequests/00220.patch
@@ -0,0 +1,26 @@
+From bf7aa5cc40f8207b777f68f0a1adf9eaba74a073 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Sat, 30 Nov 2019 18:22:05 +0100
+Subject: [PATCH] Update ecip-1000.md
+
+---
+ _specs/ecip-1000.md | 6 ++++++
+ 1 file changed, 6 insertions(+)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index b5b50dd..2544753 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -353,6 +353,12 @@ In addition, it is recommended that literal code included in the ECIP be dual-li
+ * Some ECIPs, especially consensus layer, may include literal code in the ECIP itself which may not be available under the exact license terms of the ECIP.
+ * Despite this, not all software licenses would be acceptable for content included in ECIPs.
+ 
++# Appendix: Irregular Process Transitions
++
++As a decentralized community, it is important that for all governance actions, especially in ECIP, the established process is followed. In this section, we document irregular process transitions, and give special permissions to them, to state that they followed the process. Note that this is essentially similar to theDAO hard fork in Ethereum, and should only be added in extreme cases.
++
++* In [PR#199](https://github.com/ethereumclassic/ECIPs/pull/199), Afri Schoedon merged a PR moving ECIP-1061 to "Last Call" status. At the time, Afri dismissed a review of clear objections from ECIP editor Wei Tang, without waiting for consultations of the community, or resolutions with the review submitter. We here declare that this particular action from Afri followed the ECIP process. 
++
+ # See Also
+ 
+ * [RFC 7282: On Consensus and Humming in the IETF](https://tools.ietf.org/html/rfc7282)
diff --git a/.gh-pullrequests/00220_560004992.json b/.gh-pullrequests/00220_560004992.json
new file mode 100644
index 0000000..64933ed
--- /dev/null
+++ b/.gh-pullrequests/00220_560004992.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560004992",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560004992",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560004992,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAwNDk5Mg==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T17:56:15Z",
+    "updated_at": "2019-12-02T12:49:05Z",
+    "author_association": "MEMBER",
+    "body": "![5f7](https://user-images.githubusercontent.com/47772477/69904120-f7b9cc80-13a2-11ea-87cd-e0a9d64c6295.jpeg)\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560004992/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560010768.json b/.gh-pullrequests/00220_560010768.json
new file mode 100644
index 0000000..83b6d55
--- /dev/null
+++ b/.gh-pullrequests/00220_560010768.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560010768",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560010768",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560010768,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAxMDc2OA==",
+    "user": {
+      "login": "shanejonas",
+      "id": 364566,
+      "node_id": "MDQ6VXNlcjM2NDU2Ng==",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/364566?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/shanejonas",
+      "html_url": "https://github.com/shanejonas",
+      "followers_url": "https://api.github.com/users/shanejonas/followers",
+      "following_url": "https://api.github.com/users/shanejonas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/shanejonas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/shanejonas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/shanejonas/subscriptions",
+      "organizations_url": "https://api.github.com/users/shanejonas/orgs",
+      "repos_url": "https://api.github.com/users/shanejonas/repos",
+      "events_url": "https://api.github.com/users/shanejonas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/shanejonas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T18:47:59Z",
+    "updated_at": "2019-11-30T18:47:59Z",
+    "author_association": "MEMBER",
+    "body": "maybe change this to propose only having one meta ecip per hard fork?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560010768/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560011165.json b/.gh-pullrequests/00220_560011165.json
new file mode 100644
index 0000000..f2baf93
--- /dev/null
+++ b/.gh-pullrequests/00220_560011165.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560011165",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560011165",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560011165,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAxMTE2NQ==",
+    "user": {
+      "login": "shanejonas",
+      "id": 364566,
+      "node_id": "MDQ6VXNlcjM2NDU2Ng==",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/364566?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/shanejonas",
+      "html_url": "https://github.com/shanejonas",
+      "followers_url": "https://api.github.com/users/shanejonas/followers",
+      "following_url": "https://api.github.com/users/shanejonas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/shanejonas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/shanejonas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/shanejonas/subscriptions",
+      "organizations_url": "https://api.github.com/users/shanejonas/orgs",
+      "repos_url": "https://api.github.com/users/shanejonas/repos",
+      "events_url": "https://api.github.com/users/shanejonas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/shanejonas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T18:52:11Z",
+    "updated_at": "2019-11-30T18:55:08Z",
+    "author_association": "MEMBER",
+    "body": "it actually is similar to the dao fork, but the other way around, why wouldn’t we change the original 1061, you are creating lots of tension and confusion in the community by creating 1072 and pushing it forward over 1061. why?\r\n\r\nAtlantis followed this same process of updating the original meta ECIP.\r\n\r\nWhat exactly is the problem? ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560011165/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560012662.json b/.gh-pullrequests/00220_560012662.json
new file mode 100644
index 0000000..b63e79a
--- /dev/null
+++ b/.gh-pullrequests/00220_560012662.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560012662",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560012662",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560012662,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAxMjY2Mg==",
+    "user": {
+      "login": "shanejonas",
+      "id": 364566,
+      "node_id": "MDQ6VXNlcjM2NDU2Ng==",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/364566?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/shanejonas",
+      "html_url": "https://github.com/shanejonas",
+      "followers_url": "https://api.github.com/users/shanejonas/followers",
+      "following_url": "https://api.github.com/users/shanejonas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/shanejonas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/shanejonas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/shanejonas/subscriptions",
+      "organizations_url": "https://api.github.com/users/shanejonas/orgs",
+      "repos_url": "https://api.github.com/users/shanejonas/repos",
+      "events_url": "https://api.github.com/users/shanejonas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/shanejonas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T19:07:44Z",
+    "updated_at": "2019-11-30T19:08:08Z",
+    "author_association": "MEMBER",
+    "body": "rel https://github.com/ethereumclassic/ECIPs/pull/221\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560012662/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560013262.json b/.gh-pullrequests/00220_560013262.json
new file mode 100644
index 0000000..e81835f
--- /dev/null
+++ b/.gh-pullrequests/00220_560013262.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560013262",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560013262",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560013262,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAxMzI2Mg==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T19:14:41Z",
+    "updated_at": "2019-11-30T19:15:25Z",
+    "author_association": "MEMBER",
+    "body": "@shanejonas We're talking about violations of the ECIP process in this PR. I don't think whether preferring one meta ECIP or multiple meta ECIP matters here at all, as long as you follow the process to discuss it. In fact, I do think we have many community members who would prefer having only one meta ECIP from now on, but there's indeed also an alternative proposal https://github.com/ethereumclassic/ECIPs/pull/219\r\n\r\nCurrently, both having one meta ECIP, and having multiple meta ECIPs align with the ECIP process.\r\n\r\nThe intention of this PR is rather to provide justification for all of our past ECIP process actions. So in contrary to @YazzyYaz's claim, this is certainly not a joke.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560013262/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560013643.json b/.gh-pullrequests/00220_560013643.json
new file mode 100644
index 0000000..6acb460
--- /dev/null
+++ b/.gh-pullrequests/00220_560013643.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560013643",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560013643",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560013643,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAxMzY0Mw==",
+    "user": {
+      "login": "shanejonas",
+      "id": 364566,
+      "node_id": "MDQ6VXNlcjM2NDU2Ng==",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/364566?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/shanejonas",
+      "html_url": "https://github.com/shanejonas",
+      "followers_url": "https://api.github.com/users/shanejonas/followers",
+      "following_url": "https://api.github.com/users/shanejonas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/shanejonas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/shanejonas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/shanejonas/subscriptions",
+      "organizations_url": "https://api.github.com/users/shanejonas/orgs",
+      "repos_url": "https://api.github.com/users/shanejonas/repos",
+      "events_url": "https://api.github.com/users/shanejonas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/shanejonas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T19:19:02Z",
+    "updated_at": "2019-11-30T19:19:02Z",
+    "author_association": "MEMBER",
+    "body": "I believe creating 1072 was a violation of the process.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560013643/reactions",
+      "total_count": 1,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 1,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560013803.json b/.gh-pullrequests/00220_560013803.json
new file mode 100644
index 0000000..9df6cf5
--- /dev/null
+++ b/.gh-pullrequests/00220_560013803.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560013803",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560013803",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560013803,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAxMzgwMw==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T19:20:59Z",
+    "updated_at": "2019-11-30T19:20:59Z",
+    "author_association": "MEMBER",
+    "body": "@shanejonas I'm happy to listen to you which point of creating ECIP-1072 violated the process. I'm also happy to know if I'm wrong, as long as you don't do void accusations but provide evidence and explanations.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560013803/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560014083.json b/.gh-pullrequests/00220_560014083.json
new file mode 100644
index 0000000..8cdf9cc
--- /dev/null
+++ b/.gh-pullrequests/00220_560014083.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560014083",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560014083",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560014083,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAxNDA4Mw==",
+    "user": {
+      "login": "shanejonas",
+      "id": 364566,
+      "node_id": "MDQ6VXNlcjM2NDU2Ng==",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/364566?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/shanejonas",
+      "html_url": "https://github.com/shanejonas",
+      "followers_url": "https://api.github.com/users/shanejonas/followers",
+      "following_url": "https://api.github.com/users/shanejonas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/shanejonas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/shanejonas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/shanejonas/subscriptions",
+      "organizations_url": "https://api.github.com/users/shanejonas/orgs",
+      "repos_url": "https://api.github.com/users/shanejonas/repos",
+      "events_url": "https://api.github.com/users/shanejonas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/shanejonas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T19:24:43Z",
+    "updated_at": "2019-11-30T19:24:43Z",
+    "author_association": "MEMBER",
+    "body": "> It is highly recommended that a single ECIP contain a single key proposal or new idea\r\n\r\n\r\n**single ECIP**",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560014083/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560014481.json b/.gh-pullrequests/00220_560014481.json
new file mode 100644
index 0000000..f44cfaa
--- /dev/null
+++ b/.gh-pullrequests/00220_560014481.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560014481",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560014481",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560014481,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAxNDQ4MQ==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T19:30:08Z",
+    "updated_at": "2019-11-30T19:30:54Z",
+    "author_association": "MEMBER",
+    "body": "@shanejonas That refers to constraints of a single ECIP. Multiple ECIPs, technically, can refer to different ways of implementing the same idea. A particular example of this is account versioning, we have at least three proposals all only about one single idea:\r\n\r\n* Account versioning idea, using RLP fields. (EIP-1702, ECIP-1040)\r\n* Account versioning idea, using code prefix. (EIP-1707)\r\n* Account versioning idea, using special contracts. (EIP-1898)\r\n\r\nOf course, we can update that text so that in the future we will only have one single meta ECIP for each hard fork. I actually don't object that, as long as we agree we don't merge things without community consensus.\r\n\r\nAlso, just curious, what's the actual point you're trying to make here? Now Aztlan exactly only has one single meta ECIP, as ECIP-1072 is withdrawn.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560014481/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560015224.json b/.gh-pullrequests/00220_560015224.json
new file mode 100644
index 0000000..a5f949b
--- /dev/null
+++ b/.gh-pullrequests/00220_560015224.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560015224",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560015224",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560015224,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAxNTIyNA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T19:41:18Z",
+    "updated_at": "2019-11-30T19:41:18Z",
+    "author_association": "MEMBER",
+    "body": "Put this here again as I have also said it on Discord -- this PR is actually a protection to Aztlan hard fork, because now no one can accuse ECIP-1061 does not follow the process and use that point to create contentious hard forks.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560015224/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560015672.json b/.gh-pullrequests/00220_560015672.json
new file mode 100644
index 0000000..1e15bad
--- /dev/null
+++ b/.gh-pullrequests/00220_560015672.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560015672",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560015672",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560015672,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAxNTY3Mg==",
+    "user": {
+      "login": "shanejonas",
+      "id": 364566,
+      "node_id": "MDQ6VXNlcjM2NDU2Ng==",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/364566?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/shanejonas",
+      "html_url": "https://github.com/shanejonas",
+      "followers_url": "https://api.github.com/users/shanejonas/followers",
+      "following_url": "https://api.github.com/users/shanejonas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/shanejonas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/shanejonas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/shanejonas/subscriptions",
+      "organizations_url": "https://api.github.com/users/shanejonas/orgs",
+      "repos_url": "https://api.github.com/users/shanejonas/repos",
+      "events_url": "https://api.github.com/users/shanejonas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/shanejonas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T19:48:45Z",
+    "updated_at": "2019-11-30T19:48:45Z",
+    "author_association": "MEMBER",
+    "body": "I believe 1061 follows the correct process as its getting updated to reflect changes, 1072 violated ECIP-1000 by creating more than a single ECIP for a given key proposal",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560015672/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560016117.json b/.gh-pullrequests/00220_560016117.json
new file mode 100644
index 0000000..802fcea
--- /dev/null
+++ b/.gh-pullrequests/00220_560016117.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560016117",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560016117",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560016117,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAxNjExNw==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T19:56:20Z",
+    "updated_at": "2019-11-30T19:56:20Z",
+    "author_association": "MEMBER",
+    "body": "@shanejonas As said above, having multiple specifications about the same \"key proposal\" is not a violation of the ECIP process. The primary example is account versioning. There are also many other examples such as miner signaling proposals. We don't have a special category currently for \"hard fork ECIPs\", so this currently applies to it.\r\n\r\nHowever, as I said above, I'm happy to explore ways with you, to restrict future \"hard fork ECIPs\" to \"single one only\". I don't have any problem with that.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560016117/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560016260.json b/.gh-pullrequests/00220_560016260.json
new file mode 100644
index 0000000..879ffe9
--- /dev/null
+++ b/.gh-pullrequests/00220_560016260.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560016260",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560016260",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560016260,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAxNjI2MA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T19:58:21Z",
+    "updated_at": "2019-11-30T19:59:00Z",
+    "author_association": "MEMBER",
+    "body": "> I believe 1061 follows the correct process as its getting updated to reflect changes\r\n\r\nYes! ECIP-1061 followed the correct process when we merge this PR. It provides a special cause to declare that the action to merge it to \"Last Call\" was valid:\r\n\r\n> In [PR#199](https://github.com/ethereumclassic/ECIPs/pull/199), Afri Schoedon merged a PR moving ECIP-1061 to \"Last Call\" status. At the time, Afri dismissed a review of clear objections from ECIP editor Wei Tang, without waiting for consultations of the community, or resolutions with the review submitter. We here declare that this particular action from Afri followed the ECIP process. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560016260/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560017107.json b/.gh-pullrequests/00220_560017107.json
new file mode 100644
index 0000000..4fcf23e
--- /dev/null
+++ b/.gh-pullrequests/00220_560017107.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560017107",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560017107",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560017107,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAxNzEwNw==",
+    "user": {
+      "login": "shanejonas",
+      "id": 364566,
+      "node_id": "MDQ6VXNlcjM2NDU2Ng==",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/364566?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/shanejonas",
+      "html_url": "https://github.com/shanejonas",
+      "followers_url": "https://api.github.com/users/shanejonas/followers",
+      "following_url": "https://api.github.com/users/shanejonas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/shanejonas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/shanejonas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/shanejonas/subscriptions",
+      "organizations_url": "https://api.github.com/users/shanejonas/orgs",
+      "repos_url": "https://api.github.com/users/shanejonas/repos",
+      "events_url": "https://api.github.com/users/shanejonas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/shanejonas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T20:11:19Z",
+    "updated_at": "2019-11-30T20:12:08Z",
+    "author_association": "MEMBER",
+    "body": "I disagree.\r\n\r\nEveryone agreed to not include 1884 for Aztlán. To me that means updating the existing 1061 **single ECIP for a given key proposal**. Just like the last 2 hard forks.\r\n\r\nThe call was about 1061 not 1072:\r\nhttps://github.com/ethereumclassic/ECIPs/issues/177\r\n\r\nand you keep referencing the same chat but keep leaving out the last line about 1061:\r\n\r\n```\r\nWei: Just to be clear? Are we using ECIP 1072? How long should \"last call\" last?\r\nAfri: Three weeks \"last call\" would be sufficient to evaluate Istanbul on EF network\r\nEveryone: Sounds good\r\nAfri: Any final comments?\r\nBob: Are we calling it Yingchun now?\r\nWei: No, let's stick with Aztlan\r\nYaz: We already communicated Aztlan\r\nAfri: Let's call it Yingchun flavored Aztlan (ECIP 1061)\r\n```",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560017107/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560018007.json b/.gh-pullrequests/00220_560018007.json
new file mode 100644
index 0000000..707d04a
--- /dev/null
+++ b/.gh-pullrequests/00220_560018007.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560018007",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560018007",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560018007,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAxODAwNw==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T20:22:20Z",
+    "updated_at": "2019-11-30T20:22:55Z",
+    "author_association": "MEMBER",
+    "body": "@shanejonas I don't believe the last sentence was a correct representation of the actual meeting recording. Multiple community members have pointed out this. But anyway, yes, it's true now that everyone agreed moving forward with ECIP-1061! It's just the agreement was not on the call.\r\n\r\nStill, I must emphasis, ECIP-1072 is technically not a violation of ECIP process, but I respect whatever the community has decided. That's why ECIP-1072 is moved to withdrawn status!\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560018007/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560063925.json b/.gh-pullrequests/00220_560063925.json
new file mode 100644
index 0000000..cafc075
--- /dev/null
+++ b/.gh-pullrequests/00220_560063925.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560063925",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560063925",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560063925,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDA2MzkyNQ==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T06:24:00Z",
+    "updated_at": "2019-12-01T06:24:00Z",
+    "author_association": "MEMBER",
+    "body": "@shanejonas Further explanation on the meeting notes point. https://github.com/ethereumclassic/ECIPs/issues/177#issuecomment-560057744\r\n\r\nAs said there, I'm pretty sure on that meeting what we have decided is ECIP-1072, otherwise:\r\n* It logically does not follow if we are talking about 1072 for the whole section, and then suddenly jumped back to 1061 just for the last sentence.\r\n* It contradicts to Bob's question in the meeting -- if we were indeed talking about 1061, Bob wouldn't have asked the question whether the hard fork will be named \"Yingchun\", because when the meeting happened, 1061 does not have that name at all.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560063925/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560100602.json b/.gh-pullrequests/00220_560100602.json
new file mode 100644
index 0000000..275f914
--- /dev/null
+++ b/.gh-pullrequests/00220_560100602.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560100602",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560100602",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560100602,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEwMDYwMg==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T12:17:28Z",
+    "updated_at": "2019-12-01T12:17:28Z",
+    "author_association": "MEMBER",
+    "body": "@soc1c Please don’t close PRs simply because you object it. That will be a clear violation of the ECIP process.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560100602/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560102394.json b/.gh-pullrequests/00220_560102394.json
new file mode 100644
index 0000000..09a6fa6
--- /dev/null
+++ b/.gh-pullrequests/00220_560102394.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560102394",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560102394",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560102394,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEwMjM5NA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T12:32:52Z",
+    "updated_at": "2019-12-01T12:32:52Z",
+    "author_association": "MEMBER",
+    "body": "> One editor didn't understand how the process works and there were two other approvals superseding the blocking review.\r\n\r\nI'm the author of ECIP-1000 -- the currently accepted ECIP process. I failed to find any substance of what you're saying in that \"the author of the process does not understand the process\".\r\n\r\nThe two other approvals you got even  had an agreement with the objection https://github.com/ethereumclassic/ECIPs/pull/199#issuecomment-559185183. One of the approvals was also not from an ECIP editor. If you're suggesting you can get 3 people to form a dictatorship of Ethereum Classic and bypass any governance process, I'm happy to say you're wrong. :)",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560102394/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560103503.json b/.gh-pullrequests/00220_560103503.json
new file mode 100644
index 0000000..37b4c9a
--- /dev/null
+++ b/.gh-pullrequests/00220_560103503.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560103503",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560103503",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560103503,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEwMzUwMw==",
+    "user": {
+      "login": "soc1c",
+      "id": 47772477,
+      "node_id": "MDQ6VXNlcjQ3NzcyNDc3",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/47772477?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/soc1c",
+      "html_url": "https://github.com/soc1c",
+      "followers_url": "https://api.github.com/users/soc1c/followers",
+      "following_url": "https://api.github.com/users/soc1c/following{/other_user}",
+      "gists_url": "https://api.github.com/users/soc1c/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/soc1c/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/soc1c/subscriptions",
+      "organizations_url": "https://api.github.com/users/soc1c/orgs",
+      "repos_url": "https://api.github.com/users/soc1c/repos",
+      "events_url": "https://api.github.com/users/soc1c/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/soc1c/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T12:43:55Z",
+    "updated_at": "2019-12-01T12:43:55Z",
+    "author_association": "MEMBER",
+    "body": "Cry me a river. Remove my name and we can speak.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560103503/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560124812.json b/.gh-pullrequests/00220_560124812.json
new file mode 100644
index 0000000..b7ff960
--- /dev/null
+++ b/.gh-pullrequests/00220_560124812.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560124812",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560124812",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560124812,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEyNDgxMg==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T16:01:27Z",
+    "updated_at": "2019-12-01T16:01:27Z",
+    "author_association": "MEMBER",
+    "body": "This is extremely asinine, @sorpaas.\r\n\r\n\"Please don’t close PRs simply because you object it. That will be a clear violation of the ECIP process.\"\r\n\r\n^^ This is EXACTLY what *you* have repeatedly done to my issue suggesting that we have another call to verify that we have consensus on 1061.   Because YOU state that you think the meeting would be pointless.   Despite saying that you would not attend yourself.\r\n\r\nhttps://github.com/ethereumclassic/ECIPs/issues/215\r\n\r\nYour behaviour the last few days is absolutely and utterly unacceptable, Wei.    You are not acting in good faith.   You are not allowing time for consensus to form.   You are just playing \"whack-a-mole\" sitting at your computer.   Please step away and chill out.    You are destroying your reputation here.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560124812/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560125293.json b/.gh-pullrequests/00220_560125293.json
new file mode 100644
index 0000000..a4fc91b
--- /dev/null
+++ b/.gh-pullrequests/00220_560125293.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560125293",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560125293",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560125293,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEyNTI5Mw==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T16:06:04Z",
+    "updated_at": "2019-12-01T16:06:04Z",
+    "author_association": "MEMBER",
+    "body": "@bobsummerwill I'll ignore your personal attack part, because I cannot justify how that's ever acceptable.\r\n\r\nClosing issues and closing PRs are two totally different things. The reason for closing your issue is rather that there's suspicions that you're spamming the ECIP repo. If you disagree, I apologize. If you still think there's substance for your issue, I'm happy to keep it open!",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560125293/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560141304.json b/.gh-pullrequests/00220_560141304.json
new file mode 100644
index 0000000..683f9e5
--- /dev/null
+++ b/.gh-pullrequests/00220_560141304.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560141304",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560141304",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560141304,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0MTMwNA==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T18:33:31Z",
+    "updated_at": "2019-12-01T18:33:31Z",
+    "author_association": "MEMBER",
+    "body": "\"The reason for closing your issue is rather that there's suspicions that you're spamming the ECIP repo. If you disagree, I apologize. If you still think there's substance for your issue, I'm happy to keep it open!\"\r\n\r\nI do disagree that I am \"spamming\".\r\n\r\nWe have had a huge cloud of confusion over 1061 and 1072 and I think it would be incredibly helpful to have a quick call this week to re-confirm that there is consensus in progressing with 1061 *in its current state*, which now includes you as an author, Apache 2.0 licensing and the edit which updated the scope to remove 1884.\r\n\r\nYou have withdrawn 1072 yourself, so there is no need to talk about that.\r\n\r\nBut yes, having a call to say \"We're cool with 1061, right?\" would be very helpful.    With audio recorded, and with multiple people transcribing notes, so there is ZERO space for misinterpretation.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560141304/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560142780.json b/.gh-pullrequests/00220_560142780.json
new file mode 100644
index 0000000..feed920
--- /dev/null
+++ b/.gh-pullrequests/00220_560142780.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560142780",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560142780",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560142780,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0Mjc4MA==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T18:42:27Z",
+    "updated_at": "2019-12-01T18:42:27Z",
+    "author_association": "MEMBER",
+    "body": "@bobsummerwill It's rather \"we agree to switch consensus from last meeting, which was ECIP-1072, to the new one, ECIP-1061\". If I will be joining the meeting, that will be the statement from me. However, I'm not sure whether I will have time to join.\r\n\r\nFor further comments regarding 1072 vs 1061, please move to https://github.com/ethereumclassic/ECIPs/issues/177 as it is not the main substance of this PR.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560142780/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560417451.json b/.gh-pullrequests/00220_560417451.json
new file mode 100644
index 0000000..62171ff
--- /dev/null
+++ b/.gh-pullrequests/00220_560417451.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560417451",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560417451",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560417451,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDQxNzQ1MQ==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-02T14:23:49Z",
+    "updated_at": "2019-12-02T14:27:55Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "I am copying my review from https://github.com/ethereumclassic/ECIPs/pull/220#discussion_r352615121 because I hope and expect the line it cites to be resolved, which would result in its \"collapse\" on Github UI; I want the review's content to be visible nonetheless. \r\n\r\n---\r\n\r\nMost importantly, @sorpaas, __you need to remove these and all mentions of personal names__ which may or may not actually be associated with, but are intended to be associated with, @soc1c, at his request (see link below). Having done so and continuing to do so represents not only poor taste, but also a very plausible case of slander, and cannot be tolerated in any context. \r\n\r\nIf we are to establish Irregular Process Transitions, I think we should make the following effort:\r\n- Step back and consider if we actually do, understanding that the core concept is paradoxical, ie. _Did not follow process but followed process._\r\n- Establish beyond reasonable doubt that an event (which must be clearly defined) indeed qualifies as such, with something like a \"rough consensus.\" Hum....?\r\n- Establish (somehow, miraculously) an as-near-to-objective-as-possible and as-near-to-comprehensive-as-possible account of the bespoke un-/impossible process.\r\n\r\nIn the case that these hypothetical procedures and qualifications (as I've roughly outlined) for an Appendix and its contents can be met, then we might have something worth permanently and canonically documenting.\r\n\r\nIn the case these are not or cannot be met, then we run a very great risk of seeing this potential content and it's like used unilaterally as an unconstructive tool to allege grudges under ambiguous and/or subjective circumstances.\r\n\r\nAs it stands, I see the proposed content sadly as the latter case, where __conditions and content are insufficient to qualify as an objective representation of affairs__ (which stands to reason, considering it's provenance from an alleged aggrieved party in the case cited).\r\n\r\n- https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560103503\r\n",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560417451/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560420766.json b/.gh-pullrequests/00220_560420766.json
new file mode 100644
index 0000000..b165f98
--- /dev/null
+++ b/.gh-pullrequests/00220_560420766.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560420766",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560420766",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560420766,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDQyMDc2Ng==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-02T14:31:48Z",
+    "updated_at": "2019-12-02T14:31:48Z",
+    "author_association": "MEMBER",
+    "body": "@meowsbits Hmm I'll let you decide which duplicate you will want to delete. But anyway, the issue with irregular process transition is not that whether we want it, but that it has already happened. This PR is to provide justifications in ECIP-1000 for what has happened in the past.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560420766/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560421927.json b/.gh-pullrequests/00220_560421927.json
new file mode 100644
index 0000000..aaec200
--- /dev/null
+++ b/.gh-pullrequests/00220_560421927.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560421927",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560421927",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560421927,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDQyMTkyNw==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-02T14:34:25Z",
+    "updated_at": "2019-12-02T14:34:25Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "I have edited my review comment to reference the associated Pull Request comment. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560421927/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560422663.json b/.gh-pullrequests/00220_560422663.json
new file mode 100644
index 0000000..5877bb1
--- /dev/null
+++ b/.gh-pullrequests/00220_560422663.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560422663",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560422663",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560422663,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDQyMjY2Mw==",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-02T14:35:56Z",
+    "updated_at": "2019-12-02T14:38:28Z",
+    "author_association": "MEMBER",
+    "body": "@meowsbits I created https://github.com/ethereumclassic/ECIPs/pull/234 to address your concern that @soc1c wants to remain pesedo-anonymous. Once that's merged, I'll change mention of names in this PR to just the handle @soc1c.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560422663/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00220_560425017.json b/.gh-pullrequests/00220_560425017.json
new file mode 100644
index 0000000..1e5e1a7
--- /dev/null
+++ b/.gh-pullrequests/00220_560425017.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560425017",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/220#issuecomment-560425017",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/220",
+    "id": 560425017,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDQyNTAxNw==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-02T14:41:22Z",
+    "updated_at": "2019-12-02T14:41:22Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "> But anyway, the issue with irregular process transition is not that whether we want it, but that it has already happened.\r\n\r\nThis PR proposes an addition of an [`Appendix: Irregular Process Transitions`](https://github.com/ethereumclassic/ECIPs/pull/220/files#diff-db096127a5d72fa17bed19fc86636d80R356) which did not exist before, as well as a first entry in this presumed section describing a subject view of events which (thankfully, and hopefully every-quickenly) are indeed becoming historical. \r\n\r\nAs I see it, this PR's content must necessarily be broken into two pieces:\r\n\r\n- Add a section `### Appendix: Irregular Process Transitions`, drafting it's procedures and specifications. \r\n- __Once and if that is accepted__, allow entries to be proposed for inclusion.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560425017/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00221.json b/.gh-pullrequests/00221.json
new file mode 100644
index 0000000..dbfc4c9
--- /dev/null
+++ b/.gh-pullrequests/00221.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/221",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/221/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/221/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/221/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/221",
+    "id": 530618254,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3MjUxMTcx",
+    "number": 221,
+    "title": "feat: propose only one meta ecip per hard fork",
+    "user": {
+      "login": "shanejonas",
+      "id": 364566,
+      "node_id": "MDQ6VXNlcjM2NDU2Ng==",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/364566?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/shanejonas",
+      "html_url": "https://github.com/shanejonas",
+      "followers_url": "https://api.github.com/users/shanejonas/followers",
+      "following_url": "https://api.github.com/users/shanejonas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/shanejonas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/shanejonas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/shanejonas/subscriptions",
+      "organizations_url": "https://api.github.com/users/shanejonas/orgs",
+      "repos_url": "https://api.github.com/users/shanejonas/repos",
+      "events_url": "https://api.github.com/users/shanejonas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/shanejonas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 3,
+    "created_at": "2019-11-30T19:06:59Z",
+    "updated_at": "2019-12-01T16:08:35Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/221",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/221",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/221.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/221.patch"
+    },
+    "body": "These changes propose only updating 1 ecip per hard fork as it is very confusing for the community to follow `n` many identical documents.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/221/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00221.patch b/.gh-pullrequests/00221.patch
new file mode 100644
index 0000000..b5f0d09
--- /dev/null
+++ b/.gh-pullrequests/00221.patch
@@ -0,0 +1,98 @@
+From 372086c98e9769ab658d79c1c9b58403d3f2b05d Mon Sep 17 00:00:00 2001
+From: Shane <jonas.shane@gmail.com>
+Date: Sat, 30 Nov 2019 11:06:25 -0800
+Subject: [PATCH 1/4] feat: propose only one meta ecip per hard fork
+
+---
+ _specs/ecip-1000.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index b5b50dd..75e5ee5 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -171,7 +171,7 @@ There are three types of ECIP:
+   - **Networking** - improvements to networking protocol specifications.
+   - **Interface** - improvements around client [API/RPC] specifications and standards, and also certain language-level standards like method names  and contract ABIs.
+   - **ECBP (Ethereum Classic Best Practice)** - application-level standards and conventions, including contract standards such as token standards, name registries, URI schemes, library/package formats, and wallet formats.
+-- A **Meta ECIP** describes a **process** surrounding Ethereum Classic or proposes a change to (or an event in) a process. Process ECIPs are like Standard Track ECIPs, but apply to areas other than the Ethereum Classic protocol itself. They may propose an implementation, but not to Ethereum Classic's codebase; they often require community consensus; unlike Informational ECIPs, they are more than recommendations, and users are typically not free to ignore them. Examples include procedures, guidelines, changes to the decision-making process (e.g. this ECIP-1000 process document), and changes to the tools or environment used in Ethereum Classic development. *Any meta-ECIP is also considered a Process ECIP.*
++- A **Meta ECIP** describes a **process** surrounding Ethereum Classic or proposes a change to a process (or an event like the next hard fork). Process ECIPs are like Standard Track ECIPs, but apply to areas other than the Ethereum Classic protocol itself. They may propose an implementation, but not to Ethereum Classic's codebase; they often require community consensus; unlike Informational ECIPs, they are more than recommendations, and users are typically not free to ignore them. Examples include procedures, guidelines, changes to the decision-making process (e.g. this ECIP-1000 process document), and changes to the tools or environment used in Ethereum Classic development. If a Meta ECIP is for a hard fork, changes are to be updated with PRs to existing Meta ECIPs. *Any meta-ECIP is also considered a Process ECIP.*
+ - An **Informational ECIP** describes an Ethereum Classic design issue, or provides general guidelines or information to the Ethereum Classic community, but does not propose a new feature. Informational ECIPs do not necessarily represent Ethereum Classic community consensus or a recommendation, so users and implementors are free to ignore Informational ECIPs or follow their advice.
+ 
+ It is highly recommended that a single ECIP contain a single key proposal or new idea. The more focused the ECIP, the more successful it tends to be. A change to one client doesn't require an ECIP; a change that affects multiple clients, or defines a standard for multiple apps to use, does.
+
+From b582d25fab827af7a49449ef3e734105203bdd73 Mon Sep 17 00:00:00 2001
+From: Shane <jonas.shane@gmail.com>
+Date: Sat, 30 Nov 2019 11:29:15 -0800
+Subject: [PATCH 2/4] fix: add note about checking for existing
+
+---
+ _specs/ecip-1000.md | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index 75e5ee5..c587c81 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -19,6 +19,7 @@ We intend ECIPs to be the primary mechanism for proposing new features, for coll
+ Because the ECIPs are maintained as text files in a versioned repository, their revision history is the historical record of the feature proposal.
+ 
+ # Copyright
++It is highly recommended that a single ECIP contain a single key proposal or new idea
+ 
+ This ECIP is licensed Apache-2, originally by [Luke Dashjr](https://github.com/luke-jr) under BSD 2-clause license.
+ 
+@@ -48,7 +49,7 @@ It also helps to make sure the idea is applicable to the entire community and no
+ 
+ ECIP authors **are responsible for collecting community feedback** on both the initial idea and the ECIP before submitting it for review. However, wherever possible, long open-ended discussions on public groups or mailing lists should be avoided. Strategies to keep the discussions efficient include: setting up a separate SIG mailing list for the topic, having the ECIP author accept private comments in the early design phases, setting up a wiki page or git repository, etc. ECIP authors should use their discretion here.
+ 
+-It is highly recommended that **a single ECIP contain a single key proposal or new idea**. The more focused the ECIP, the more successful it tends to be. If in doubt, split your ECIP into several well-focused ones.
++It is highly recommended that **a single ECIP contain a single key proposal or new idea**. The more focused the ECIP, the more successful it tends to be. If in doubt, split your ECIP into several well-focused ones. Please check out the ECIPsin this repository and search for similar ones that have already been created.
+ 
+ **3:** When the ECIP draft is complete, an ECIP editor will assign the ECIP a number, label it as Standards Track, Informational, or Process, and merge the pull request to the ECIPs git repository.
+ 
+
+From 9ef747a8e5fc4f9b0f0a5ab3cad202cfb06a37f6 Mon Sep 17 00:00:00 2001
+From: Shane <jonas.shane@gmail.com>
+Date: Sat, 30 Nov 2019 11:29:38 -0800
+Subject: [PATCH 3/4] Update _specs/ecip-1000.md
+
+---
+ _specs/ecip-1000.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index c587c81..7535c71 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -49,7 +49,7 @@ It also helps to make sure the idea is applicable to the entire community and no
+ 
+ ECIP authors **are responsible for collecting community feedback** on both the initial idea and the ECIP before submitting it for review. However, wherever possible, long open-ended discussions on public groups or mailing lists should be avoided. Strategies to keep the discussions efficient include: setting up a separate SIG mailing list for the topic, having the ECIP author accept private comments in the early design phases, setting up a wiki page or git repository, etc. ECIP authors should use their discretion here.
+ 
+-It is highly recommended that **a single ECIP contain a single key proposal or new idea**. The more focused the ECIP, the more successful it tends to be. If in doubt, split your ECIP into several well-focused ones. Please check out the ECIPsin this repository and search for similar ones that have already been created.
++It is highly recommended that **a single ECIP contain a single key proposal or new idea**. The more focused the ECIP, the more successful it tends to be. If in doubt, split your ECIP into several well-focused ones. Please check out the ECIPs in this repository and search for similar ones that have already been created.
+ 
+ **3:** When the ECIP draft is complete, an ECIP editor will assign the ECIP a number, label it as Standards Track, Informational, or Process, and merge the pull request to the ECIPs git repository.
+ 
+
+From 550cec7e8dd0bb27b53bf3f9b0daf7cdc3633a3a Mon Sep 17 00:00:00 2001
+From: Shane <jonas.shane@gmail.com>
+Date: Sat, 30 Nov 2019 12:38:42 -0800
+Subject: [PATCH 4/4] Update _specs/ecip-1000.md
+
+---
+ _specs/ecip-1000.md | 1 -
+ 1 file changed, 1 deletion(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index 7535c71..2287b2a 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -19,7 +19,6 @@ We intend ECIPs to be the primary mechanism for proposing new features, for coll
+ Because the ECIPs are maintained as text files in a versioned repository, their revision history is the historical record of the feature proposal.
+ 
+ # Copyright
+-It is highly recommended that a single ECIP contain a single key proposal or new idea
+ 
+ This ECIP is licensed Apache-2, originally by [Luke Dashjr](https://github.com/luke-jr) under BSD 2-clause license.
+ 
diff --git a/.gh-pullrequests/00221_560012667.json b/.gh-pullrequests/00221_560012667.json
new file mode 100644
index 0000000..23e72b9
--- /dev/null
+++ b/.gh-pullrequests/00221_560012667.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560012667",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/221#issuecomment-560012667",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/221",
+    "id": 560012667,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAxMjY2Nw==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T19:07:45Z",
+    "updated_at": "2019-11-30T19:07:45Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Compare with #219 ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560012667/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00221_560013317.json b/.gh-pullrequests/00221_560013317.json
new file mode 100644
index 0000000..8107195
--- /dev/null
+++ b/.gh-pullrequests/00221_560013317.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560013317",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/221#issuecomment-560013317",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/221",
+    "id": 560013317,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAxMzMxNw==",
+    "user": {
+      "login": "shanejonas",
+      "id": 364566,
+      "node_id": "MDQ6VXNlcjM2NDU2Ng==",
+      "avatar_url": "https://avatars2.githubusercontent.com/u/364566?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/shanejonas",
+      "html_url": "https://github.com/shanejonas",
+      "followers_url": "https://api.github.com/users/shanejonas/followers",
+      "following_url": "https://api.github.com/users/shanejonas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/shanejonas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/shanejonas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/shanejonas/subscriptions",
+      "organizations_url": "https://api.github.com/users/shanejonas/orgs",
+      "repos_url": "https://api.github.com/users/shanejonas/repos",
+      "events_url": "https://api.github.com/users/shanejonas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/shanejonas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T19:15:11Z",
+    "updated_at": "2019-11-30T19:17:33Z",
+    "author_association": "MEMBER",
+    "body": "Im proposing this because in Atlantis, its process was smooth (even with disagreements over block numbers) and not confusing to update 1 document, 1 ECIP number over many months and gives the community 1 place to look for updates, talk about on multiple calls, etc. ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560013317/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00221_560125553.json b/.gh-pullrequests/00221_560125553.json
new file mode 100644
index 0000000..51fe736
--- /dev/null
+++ b/.gh-pullrequests/00221_560125553.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560125553",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/221#issuecomment-560125553",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/221",
+    "id": 560125553,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEyNTU1Mw==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T16:08:35Z",
+    "updated_at": "2019-12-01T16:08:35Z",
+    "author_association": "MEMBER",
+    "body": "This is a very simple \"tweak\" to ECIP-1000 which I don't object to very much.\r\n\r\nI agree that in retrospect it would have been better for the variants of Aztlan to be captured as PRs against 1061.   Having extra ECIPs for the other \"Editions\" would have been fine too, as long as they were just Withdrawn after we had the meeting, because they were then obsolete.\r\n\r\nI would even have been fine for us to \"switch horse\" from 1061 to 1072 as that point, in recognition of \"Wei's plan\" having \"won\", but honestly had no preference at all.    Updating 1061 at the stage, plus adding Wei as an author was marginally better.   Keep the same EIP (same URL), etc.   All cool.\r\n\r\nAnd then @sorpaas went bonkers.\r\n\r\nWe should not NEED the language you suggest here, but I don't object to it.   Probably best to force all the discussion around a pending HF into a single issue, yes, to force that resolution and avoid this kind of \"rival HF definitions\" situation again.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560125553/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00222.json b/.gh-pullrequests/00222.json
new file mode 100644
index 0000000..1e59618
--- /dev/null
+++ b/.gh-pullrequests/00222.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/222",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/222/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/222/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/222/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/222",
+    "id": 530625144,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3MjU2MTc2",
+    "number": 222,
+    "title": "Meta Meta Specification for Forking Meta ECIPs (Use ECIPs version)",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2019-11-30T20:14:09Z",
+    "updated_at": "2019-12-01T13:29:09Z",
+    "closed_at": "2019-12-01T13:29:09Z",
+    "author_association": "CONTRIBUTOR",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/222",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/222",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/222.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/222.patch"
+    },
+    "body": "Replacing #219, because I want to be able to clearly PR against the contained proposed document (in #223).",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/222/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00222.patch b/.gh-pullrequests/00222.patch
new file mode 100644
index 0000000..ee25570
--- /dev/null
+++ b/.gh-pullrequests/00222.patch
@@ -0,0 +1,269 @@
+From 4f2e902271b8d8d5abff34875f4d8b1da8c95285 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Fri, 29 Nov 2019 15:29:06 -0500
+Subject: [PATCH 1/7] Init Forking Meta Meta ECIP specification
+
+---
+ _specs/ecip-_.md | 63 ++++++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 63 insertions(+)
+ create mode 100644 _specs/ecip-_.md
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+new file mode 100644
+index 0000000..6af2169
+--- /dev/null
++++ b/_specs/ecip-_.md
+@@ -0,0 +1,63 @@
++---
++ecip: TBD
++title: The Meta Meta ECIP: Processes for Meta ECIPs
++author: Mr. Meows D. Bits
++discussions-to: TBD
++status: WIP
++type: Meta
++created: 2019-11-29T14:17:42-05:00
++resolution: TBD
++---
++
++### Abstract
++
++Forking Meta ECIPs (defined as Meta ECIPs specifying any Standards-Core track ECIP) should be complete and unique.
++
++### Motivation
++
++Incomplete proposals are inoperable; they are not ready for implementation.
++
++Definite proposals are inoperable; they are not ready for implementation.
++
++Unique proposals saves me time because I don't have to read the same thing twice.
++
++Related to and derivative of:
++
++- https://github.com/ethereumclassic/ECIPs/issues/217
++- https://github.com/ethereumclassic/ECIPs/issues/215
++- https://github.com/ethereumclassic/ECIPs/issues/175
++- https://github.com/ethereumclassic/ECIPs/issues/131
++- https://github.com/ethereumclassic/ECIPs/issues/177
++- https://github.com/ethereumclassic/ECIPs/issues/135
++- https://github.com/ethereumclassic/ECIPs/pull/218
++- https://github.com/ethereumclassic/ECIPs/pull/212
++- https://github.com/ethereumclassic/ECIPs/pull/207
++- https://github.com/ethereumclassic/ECIPs/pull/214
++- https://github.com/ethereumclassic/ECIPs/pull/199
++- https://github.com/ethereumclassic/ECIPs/pull/196
++
++### Specification
++
++A hard fork specification is documented as a Meta ECIP, and usually represents a collection of adjacent ECIPs. The sole purpose of a Forking Meta ECIP is to join a block number with this set of `n >= 1` ECIPs containing protocol-facing changes. The document says "_These_ features will activate at _this_ moment."
++
++This proposal specifies that all Forking Meta ECIPs should be COMPLETE and UNIQUE; essentially disallowing _Draft_ Forking Meta ECIPs and and/or meaningful revisions (set ECIPs, block number). A valid Forking Meta ECIP must contain a full and complete set of to-be included ECIPs, and a definitive block number. 
++
++_Complete_ is defined as being fully and totally definitive; not lacking anything.
++
++_Unique_ means not the same as another thing; in this case, not precisely duplicating any existing ECIP.
++
++### Rationale
++
++0. Forking Meta ECIPs are themselves ECIPs, and their job is to define, with certainty and clarity, technical specifications. Forking Meta ECIPs that essentially leave either field `Block number` and/or field `ECIP set` blank are functionally useless; they say only: "Will have some fork at some time." An analogue of blankness to non-Forking-Meta ECIPs would essentially say "TODO: put my next awesome feature specification here." Fill-in-the-blank ECIPs are not in good form.
++
++1. A Forking Meta ECIP may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simulateous inclusion. Demanding fully-formed Forking Meta ECIP proposals forces authors to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.
++
++2. Concrete ECIPs are easier to reason about. Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making.
++
++### Implementation
++
++A Forking Meta ECIP may not be in `Draft` status. It may not undergo any meaningful changes once receiving `Last Call` status (its next status beyond `WIP`).
++
++### Copyright/Licensing
++
++MIT.
+
+From 18ba1dd84b1199180ef74f7fee27d6660f88a76e Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Fri, 29 Nov 2019 15:31:12 -0500
+Subject: [PATCH 2/7] Improve language around status adjectives
+
+---
+ _specs/ecip-_.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index 6af2169..b6b6e55 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -40,7 +40,7 @@ Related to and derivative of:
+ 
+ A hard fork specification is documented as a Meta ECIP, and usually represents a collection of adjacent ECIPs. The sole purpose of a Forking Meta ECIP is to join a block number with this set of `n >= 1` ECIPs containing protocol-facing changes. The document says "_These_ features will activate at _this_ moment."
+ 
+-This proposal specifies that all Forking Meta ECIPs should be COMPLETE and UNIQUE; essentially disallowing _Draft_ Forking Meta ECIPs and and/or meaningful revisions (set ECIPs, block number). A valid Forking Meta ECIP must contain a full and complete set of to-be included ECIPs, and a definitive block number. 
++This proposal specifies that all Forking Meta ECIPs should be COMPLETE and UNIQUE; essentially disallowing `Draft` status Forking Meta ECIPs and and/or meaningful revisions (set ECIPs, block number). A valid Forking Meta ECIP must contain a full and complete set of to-be included ECIPs, and a definitive block number. 
+ 
+ _Complete_ is defined as being fully and totally definitive; not lacking anything.
+ 
+
+From abf98b0dd476767c2420dad259d5544c0d430927 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Fri, 29 Nov 2019 15:35:16 -0500
+Subject: [PATCH 3/7] Add rationale section specifically for block number spec
+
+---
+ _specs/ecip-_.md | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index b6b6e55..da4a181 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -52,7 +52,9 @@ _Unique_ means not the same as another thing; in this case, not precisely duplic
+ 
+ 1. A Forking Meta ECIP may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simulateous inclusion. Demanding fully-formed Forking Meta ECIP proposals forces authors to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.
+ 
+-2. Concrete ECIPs are easier to reason about. Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making.
++2. Forking Meta ECIPs without block numbers lack operability. Activation numbers _are specifications_ and should not be treated as a second class or at-convenience citizens. Implementation timelines are importantly related variables to their adjacent ECIP-sets (large set ostensibly require long timelines, hotfix sets require short ones.) We cannot reason about them in independence.
++
++3. Concrete ECIPs are easier to reason about. Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making.
+ 
+ ### Implementation
+ 
+
+From 76872bde3b069d03225da2de3af62bb5231fdcaf Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 07:33:29 -0500
+Subject: [PATCH 4/7] Fix typo (remove rough draft 'definitive' concept
+ vestige)
+
+---
+ _specs/ecip-_.md | 2 --
+ 1 file changed, 2 deletions(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index da4a181..8c1f891 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -17,8 +17,6 @@ Forking Meta ECIPs (defined as Meta ECIPs specifying any Standards-Core track EC
+ 
+ Incomplete proposals are inoperable; they are not ready for implementation.
+ 
+-Definite proposals are inoperable; they are not ready for implementation.
+-
+ Unique proposals saves me time because I don't have to read the same thing twice.
+ 
+ Related to and derivative of:
+
+From bbf1c2f1a8400c50e7f15127844122ab11e7ff76 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 07:38:41 -0500
+Subject: [PATCH 5/7] Fix typos
+
+---
+ _specs/ecip-_.md | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index 8c1f891..389ca1c 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -48,9 +48,9 @@ _Unique_ means not the same as another thing; in this case, not precisely duplic
+ 
+ 0. Forking Meta ECIPs are themselves ECIPs, and their job is to define, with certainty and clarity, technical specifications. Forking Meta ECIPs that essentially leave either field `Block number` and/or field `ECIP set` blank are functionally useless; they say only: "Will have some fork at some time." An analogue of blankness to non-Forking-Meta ECIPs would essentially say "TODO: put my next awesome feature specification here." Fill-in-the-blank ECIPs are not in good form.
+ 
+-1. A Forking Meta ECIP may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simulateous inclusion. Demanding fully-formed Forking Meta ECIP proposals forces authors to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.
++1. A Forking Meta ECIP may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simultaneous inclusion. Demanding fully-formed Forking Meta ECIP proposals forces authors to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.
+ 
+-2. Forking Meta ECIPs without block numbers lack operability. Activation numbers _are specifications_ and should not be treated as a second class or at-convenience citizens. Implementation timelines are importantly related variables to their adjacent ECIP-sets (large set ostensibly require long timelines, hotfix sets require short ones.) We cannot reason about them in independence.
++2. Forking Meta ECIPs without block numbers lack operability. Activation numbers _are specifications_ and should not be treated as a second class or at-convenience citizens. Implementation timelines are importantly related variables to their adjacent ECIP-sets (large set ostensibly require long timelines, hotfix sets require short ones.) We cannot reason about them in isolation.
+ 
+ 3. Concrete ECIPs are easier to reason about. Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making.
+ 
+
+From 164c68c513aa453a30de34a79d3e6c4a0f55b1ac Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 14:26:56 -0500
+Subject: [PATCH 6/7] Write a little more
+
+---
+ _specs/ecip-_.md | 24 +++++++++++++++---------
+ 1 file changed, 15 insertions(+), 9 deletions(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index 389ca1c..df8fbf7 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -15,9 +15,9 @@ Forking Meta ECIPs (defined as Meta ECIPs specifying any Standards-Core track EC
+ 
+ ### Motivation
+ 
+-Incomplete proposals are inoperable; they are not ready for implementation.
++Incomplete proposals are inoperable; they are not ready for review, discussion, nor implementation.
+ 
+-Unique proposals saves me time because I don't have to read the same thing twice.
++Unique proposals save time and redundant complexity.
+ 
+ Related to and derivative of:
+ 
+@@ -36,28 +36,34 @@ Related to and derivative of:
+ 
+ ### Specification
+ 
+-A hard fork specification is documented as a Meta ECIP, and usually represents a collection of adjacent ECIPs. The sole purpose of a Forking Meta ECIP is to join a block number with this set of `n >= 1` ECIPs containing protocol-facing changes. The document says "_These_ features will activate at _this_ moment."
+-
+-This proposal specifies that all Forking Meta ECIPs should be COMPLETE and UNIQUE; essentially disallowing `Draft` status Forking Meta ECIPs and and/or meaningful revisions (set ECIPs, block number). A valid Forking Meta ECIP must contain a full and complete set of to-be included ECIPs, and a definitive block number. 
++A Forking Meta ECIP is defined as a Meta ECIP specifying any (`n >= 1`) Standards-Core track ECIP or ECIP-set. A Forking Meta ECIP should be complete and unique.
+ 
+ _Complete_ is defined as being fully and totally definitive; not lacking anything.
+ 
+ _Unique_ means not the same as another thing; in this case, not precisely duplicating any existing ECIP.
+ 
++This proposal specifies that all Forking Meta ECIPs should be COMPLETE and UNIQUE; essentially disallowing `Draft` status Forking Meta ECIPs and and/or meaningful revisions (set ECIPs, block number).
++
++This implies that a valid Forking Meta ECIP must contain a full and complete set of to-be included ECIPs, and a definitive block number. 
++
+ ### Rationale
+ 
+-0. Forking Meta ECIPs are themselves ECIPs, and their job is to define, with certainty and clarity, technical specifications. Forking Meta ECIPs that essentially leave either field `Block number` and/or field `ECIP set` blank are functionally useless; they say only: "Will have some fork at some time." An analogue of blankness to non-Forking-Meta ECIPs would essentially say "TODO: put my next awesome feature specification here." Fill-in-the-blank ECIPs are not in good form.
++The sole purpose of a Forking Meta ECIP is to join a block number with a set of `n >= 1` ECIPs containing protocol-facing changes. The document says "_These_ features will activate at _this_ moment."
+ 
+-1. A Forking Meta ECIP may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simultaneous inclusion. Demanding fully-formed Forking Meta ECIP proposals forces authors to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.
++0. __Fill-in-the-blank ECIPs are not in good form.__ Forking Meta ECIPs are themselves ECIPs, and their job is to define, with certainty and clarity, technical specifications. Forking Meta ECIPs that essentially leave either field `Block number` and/or field `ECIP set` blank are functionally useless (inoperable); they say only: "(I/we) propose to have some fork at some time." An analogue of blankness to non-Forking-Meta ECIPs would essentially say "TODO: put my next awesome feature specification here." 
+ 
+-2. Forking Meta ECIPs without block numbers lack operability. Activation numbers _are specifications_ and should not be treated as a second class or at-convenience citizens. Implementation timelines are importantly related variables to their adjacent ECIP-sets (large set ostensibly require long timelines, hotfix sets require short ones.) We cannot reason about them in isolation.
++1. __Demanding fully-formed Forking Meta ECIP proposals forces authors, editors, and reviewers to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.__ A Forking Meta ECIP may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simultaneous inclusion. 
+ 
+-3. Concrete ECIPs are easier to reason about. Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making.
++2. __Forking Meta ECIPs without block numbers lack operability.__ Activation numbers _are specifications_ and should not be treated as a second class or at-convenience citizens. Implementation timelines are importantly related variables to their adjacent ECIP-sets (large set ostensibly require long timelines, hotfix sets require short ones.) We cannot reason about them in isolation.
++
++3. __Concrete ECIPs are easier to build language and reasoning around.__ Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making. "Competing" Forking Meta ECIP alternatives become explicit and standardized, yielding conceptual and communicable clarity in review processes and decision-making processes.
+ 
+ ### Implementation
+ 
+ A Forking Meta ECIP may not be in `Draft` status. It may not undergo any meaningful changes once receiving `Last Call` status (its next status beyond `WIP`).
+ 
++Procedurally, compared to the historical and traditional practice of opening an essentially empty Forking Meta ECIP and working to fill in blanks, this proposed procedure makes only marginal and changes, demanding only that what was taken as implication, subtext, or conteext before now be made explicit. Rather than reviewing actual-or-theoretical proposed change sets to an ECIP (which sadly, have historically usually been theoretical), this forces proposed Forking Meta ECIP alternative outcomes to assume a fully qualified and standardized formats before becoming eligible for consideration. 
++
+ ### Copyright/Licensing
+ 
+ MIT.
+
+From bfd3a9c8f876b59c80c82eab5435ab0e0cf60e87 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 14:33:21 -0500
+Subject: [PATCH 7/7] Fix Forking Meta ECIP spec to include must have
+ activation block number
+
+---
+ _specs/ecip-_.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index df8fbf7..c0466fa 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -11,7 +11,7 @@ resolution: TBD
+ 
+ ### Abstract
+ 
+-Forking Meta ECIPs (defined as Meta ECIPs specifying any Standards-Core track ECIP) should be complete and unique.
++Forking Meta ECIPs (defined as Meta ECIPs specifying any Standards-Core track ECIP and an activation block number) should be complete and unique.
+ 
+ ### Motivation
+ 
diff --git a/.gh-pullrequests/00222_560108449.json b/.gh-pullrequests/00222_560108449.json
new file mode 100644
index 0000000..08617e8
--- /dev/null
+++ b/.gh-pullrequests/00222_560108449.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560108449",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/222#issuecomment-560108449",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/222",
+    "id": 560108449,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEwODQ0OQ==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T13:29:09Z",
+    "updated_at": "2019-12-01T13:29:09Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Closing because I prefer #224.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560108449/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00223.json b/.gh-pullrequests/00223.json
new file mode 100644
index 0000000..36a3ef1
--- /dev/null
+++ b/.gh-pullrequests/00223.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/223",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/223/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/223/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/223/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/223",
+    "id": 530625432,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3MjU2NDA4",
+    "number": 223,
+    "title": "Meta Meta Specification for Forking Meta ECIPs (Use Pull Requests version)",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "closed",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 2,
+    "created_at": "2019-11-30T20:16:24Z",
+    "updated_at": "2019-12-01T13:29:35Z",
+    "closed_at": "2019-12-01T13:29:34Z",
+    "author_association": "CONTRIBUTOR",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/223",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/223",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/223.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/223.patch"
+    },
+    "body": "Alternative to #222, here proposing using Changesets (eg Pull Requests) against a shell Forking Meta ECIP as a procedural pattern, as opposed to using distinct ECIP documents.\r\n\r\nBuilds on, conceptually includes, and is intended to supersede #221.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/223/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00223.patch b/.gh-pullrequests/00223.patch
new file mode 100644
index 0000000..9a38a6a
--- /dev/null
+++ b/.gh-pullrequests/00223.patch
@@ -0,0 +1,179 @@
+From 4ef35f941384942ead39e6bff52a4cce0e1d0e3e Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 15:11:39 -0500
+Subject: [PATCH 1/6] Introduce alternative approach; use PRs
+
+---
+ _specs/ecip-_.md | 34 ++++++++++++++++++++++------------
+ 1 file changed, 22 insertions(+), 12 deletions(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index c0466fa..a456429 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -11,11 +11,23 @@ resolution: TBD
+ 
+ ### Abstract
+ 
+-Forking Meta ECIPs (defined as Meta ECIPs specifying any Standards-Core track ECIP and an activation block number) should be complete and unique.
++Forking Meta ECIPs (defined as Meta ECIPs _intended_ to specify any Standards-Core track ECIP and an activation block number) should contain only placeholder information
++for ECIP-sets and block activation numbers. Placeholders for ECIP-sets and block numbers should be filled via distinct change sets before moving from `Draft` to `Last Call` status.
++
++Changesets (eg Pull Requests) editing placeholder ECIP-set and block number information should do so with neither in isolation; PRs modifying only ECIP-set, or only block number,
++are disallowed.
+ 
+ ### Motivation
+ 
+-Incomplete proposals are inoperable; they are not ready for review, discussion, nor implementation.
++Allowing fully-formed alternative and "competing" ECIPs is logistically and practically difficult to use. Currently, our most prominently used collaboration tool, Github, does
++not provide an accessible UI for comparing arbitrary documents or review separate arbitrary documents as a conceptual set.
++
++Github does, however, provide an accessible user interface for Pull Requests (propsed change sets) against a single document.
++
++Forking Meta ECIPs represent a single idea: The next hardfork. This is a pragramtic and common sense approach to managing blockchain protocol maintenance and upgrades. Thus, it makes
++sense to use accessible and conceptually-unifying procedures for this challenge.
++
++Incomplete proposals (changesets) are inoperable; they are not ready for review, discussion, nor implementation.
+ 
+ Unique proposals save time and redundant complexity.
+ 
+@@ -36,33 +48,31 @@ Related to and derivative of:
+ 
+ ### Specification
+ 
+-A Forking Meta ECIP is defined as a Meta ECIP specifying any (`n >= 1`) Standards-Core track ECIP or ECIP-set. A Forking Meta ECIP should be complete and unique.
++A Forking Meta ECIP is defined as a Meta ECIP specifying any (`n >= 1`) Standards-Core track ECIP or ECIP-set. A Forking Meta ECIP should be conceptally complete and unique (_next hardfork_ suffices for uniqueness, since there can only be one).
+ 
+ _Complete_ is defined as being fully and totally definitive; not lacking anything.
+ 
+ _Unique_ means not the same as another thing; in this case, not precisely duplicating any existing ECIP.
+ 
+-This proposal specifies that all Forking Meta ECIPs should be COMPLETE and UNIQUE; essentially disallowing `Draft` status Forking Meta ECIPs and and/or meaningful revisions (set ECIPs, block number).
+-
+-This implies that a valid Forking Meta ECIP must contain a full and complete set of to-be included ECIPs, and a definitive block number. 
++This proposal specifies that all Forking Meta ECIPs in `Draft` state or earlier should contain NO information about ECIP-sets or block activation numbers (all `TBD`). Proposed specifications to fill these placeholders should be made in the form of distinct and separate propsed change sets (eg Github Pull Requests) to the Forking Meta ECIP document. The changesets are required to be UNIQUE and COMPLETE.
+ 
+ ### Rationale
+ 
+ The sole purpose of a Forking Meta ECIP is to join a block number with a set of `n >= 1` ECIPs containing protocol-facing changes. The document says "_These_ features will activate at _this_ moment."
+ 
+-0. __Fill-in-the-blank ECIPs are not in good form.__ Forking Meta ECIPs are themselves ECIPs, and their job is to define, with certainty and clarity, technical specifications. Forking Meta ECIPs that essentially leave either field `Block number` and/or field `ECIP set` blank are functionally useless (inoperable); they say only: "(I/we) propose to have some fork at some time." An analogue of blankness to non-Forking-Meta ECIPs would essentially say "TODO: put my next awesome feature specification here." 
++0. "Shell" format Forking Meta ECIPs represent a clear, albeit abstract, idea: The blockchain's next hard fork.
+ 
+-1. __Demanding fully-formed Forking Meta ECIP proposals forces authors, editors, and reviewers to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.__ A Forking Meta ECIP may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simultaneous inclusion. 
++1. __Demanding fully-formed Forking Meta ECIP Changeset proposal forces authors, editors, and reviewers to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.__ A Forking Meta ECIP Changeset may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simultaneous inclusion. 
+ 
+-2. __Forking Meta ECIPs without block numbers lack operability.__ Activation numbers _are specifications_ and should not be treated as a second class or at-convenience citizens. Implementation timelines are importantly related variables to their adjacent ECIP-sets (large set ostensibly require long timelines, hotfix sets require short ones.) We cannot reason about them in isolation.
++2. __Forking Meta ECIP Changesets without block numbers lack operability.__ Activation numbers _are specifications_ and should not be treated as a second class or at-convenience citizens. Implementation timelines are importantly related variables to their adjacent ECIP-sets (large set ostensibly require long timelines, hotfix sets require short ones.) We cannot reason about them in isolation.
+ 
+-3. __Concrete ECIPs are easier to build language and reasoning around.__ Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making. "Competing" Forking Meta ECIP alternatives become explicit and standardized, yielding conceptual and communicable clarity in review processes and decision-making processes.
++3. __Concrete things are easier to build language and reasoning around.__ Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making. "Competing" Forking Meta ECIP Changeset alternatives become explicit and standardized, yielding conceptual and communicable clarity in review processes and decision-making processes.
+ 
+ ### Implementation
+ 
+-A Forking Meta ECIP may not be in `Draft` status. It may not undergo any meaningful changes once receiving `Last Call` status (its next status beyond `WIP`).
++A Forking Meta ECIP may only achieve `Last Call` status once a Changeset has been accepted and all other alternative marked as `Deferred`, `Withdrawn`, or `Rejected`.
+ 
+-Procedurally, compared to the historical and traditional practice of opening an essentially empty Forking Meta ECIP and working to fill in blanks, this proposed procedure makes only marginal and changes, demanding only that what was taken as implication, subtext, or conteext before now be made explicit. Rather than reviewing actual-or-theoretical proposed change sets to an ECIP (which sadly, have historically usually been theoretical), this forces proposed Forking Meta ECIP alternative outcomes to assume a fully qualified and standardized formats before becoming eligible for consideration. 
++This proposed procedure makes only marginal and changes, demanding only that what was taken as implication, subtext, or conteext before now be made explicit. Rather than reviewing actual-or-theoretical proposed changesets to an ECIP (which sadly, have historically usually been theoretical), this forces proposed Forking Meta ECIP alternative outcomes to assume a fully qualified and standardized formats before becoming eligible for consideration. 
+ 
+ ### Copyright/Licensing
+ 
+
+From cf85164c0c34f785b03badc78ab2d72ce4fd323e Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 16:19:10 -0500
+Subject: [PATCH 2/6] Fix typo
+
+---
+ _specs/ecip-_.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index a456429..fa978bb 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -72,7 +72,7 @@ The sole purpose of a Forking Meta ECIP is to join a block number with a set of
+ 
+ A Forking Meta ECIP may only achieve `Last Call` status once a Changeset has been accepted and all other alternative marked as `Deferred`, `Withdrawn`, or `Rejected`.
+ 
+-This proposed procedure makes only marginal and changes, demanding only that what was taken as implication, subtext, or conteext before now be made explicit. Rather than reviewing actual-or-theoretical proposed changesets to an ECIP (which sadly, have historically usually been theoretical), this forces proposed Forking Meta ECIP alternative outcomes to assume a fully qualified and standardized formats before becoming eligible for consideration. 
++This proposed procedure makes only marginal and changes, demanding only that what was taken as implication, subtext, or context before now be made explicit. Rather than reviewing actual-or-theoretical proposed changesets to an ECIP (which sadly, have historically usually been theoretical), this forces proposed Forking Meta ECIP alternative outcomes to assume a fully qualified and standardized formats before becoming eligible for consideration. 
+ 
+ ### Copyright/Licensing
+ 
+
+From 184551556a4721bad1bcd95aa4ee6f25d90c3847 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 17:24:40 -0500
+Subject: [PATCH 3/6] Use assigned ECIP number 1077
+
+---
+ _specs/ecip-_.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index fa978bb..1d092a9 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -1,5 +1,5 @@
+ ---
+-ecip: TBD
++ecip: 1077
+ title: The Meta Meta ECIP: Processes for Meta ECIPs
+ author: Mr. Meows D. Bits
+ discussions-to: TBD
+
+From e8c68d8fb25abb0cba9ac7d8026683e9f61bce02 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 17:25:27 -0500
+Subject: [PATCH 4/6] Rename ECIP file to reflect assigned number (1077)
+
+---
+ _specs/{ecip-_.md => ecip-1077.md} | 0
+ 1 file changed, 0 insertions(+), 0 deletions(-)
+ rename _specs/{ecip-_.md => ecip-1077.md} (100%)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-1077.md
+similarity index 100%
+rename from _specs/ecip-_.md
+rename to _specs/ecip-1077.md
+
+From ec70aa2190446d2a73c7e6f50faa6f1bd7255643 Mon Sep 17 00:00:00 2001
+From: ia <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 17:26:21 -0500
+Subject: [PATCH 5/6] Revert "Rename ECIP file to reflect assigned number
+ (1077)"
+
+This reverts commit e8c68d8fb25abb0cba9ac7d8026683e9f61bce02.
+---
+ _specs/{ecip-1077.md => ecip-_.md} | 0
+ 1 file changed, 0 insertions(+), 0 deletions(-)
+ rename _specs/{ecip-1077.md => ecip-_.md} (100%)
+
+diff --git a/_specs/ecip-1077.md b/_specs/ecip-_.md
+similarity index 100%
+rename from _specs/ecip-1077.md
+rename to _specs/ecip-_.md
+
+From a81b724c7beacd43a226df78bfe3d8ca45aacf27 Mon Sep 17 00:00:00 2001
+From: ia <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 17:26:32 -0500
+Subject: [PATCH 6/6] Revert "Use assigned ECIP number 1077"
+
+This reverts commit 184551556a4721bad1bcd95aa4ee6f25d90c3847.
+---
+ _specs/ecip-_.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index 1d092a9..fa978bb 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -1,5 +1,5 @@
+ ---
+-ecip: 1077
++ecip: TBD
+ title: The Meta Meta ECIP: Processes for Meta ECIPs
+ author: Mr. Meows D. Bits
+ discussions-to: TBD
diff --git a/.gh-pullrequests/00223_560026465.json b/.gh-pullrequests/00223_560026465.json
new file mode 100644
index 0000000..e8a3bd7
--- /dev/null
+++ b/.gh-pullrequests/00223_560026465.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560026465",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/223#issuecomment-560026465",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/223",
+    "id": 560026465,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDAyNjQ2NQ==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-11-30T22:29:53Z",
+    "updated_at": "2019-11-30T22:29:53Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Last 4 commits were mess-ups. Wrong branch. Ooops.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560026465/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00223_560108484.json b/.gh-pullrequests/00223_560108484.json
new file mode 100644
index 0000000..02936f3
--- /dev/null
+++ b/.gh-pullrequests/00223_560108484.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560108484",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/223#issuecomment-560108484",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/223",
+    "id": 560108484,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEwODQ4NA==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T13:29:34Z",
+    "updated_at": "2019-12-01T13:29:34Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Closing because I prefer #224.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560108484/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00224.json b/.gh-pullrequests/00224.json
new file mode 100644
index 0000000..5372d5f
--- /dev/null
+++ b/.gh-pullrequests/00224.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/224",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/224/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/224/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/224/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/224",
+    "id": 530637110,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3MjY0NzYw",
+    "number": 224,
+    "title": "ECIP-1077: Meta Specification Establishing Fork ECIPs (Using Pull Request development pattern)",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 4,
+    "created_at": "2019-11-30T22:21:30Z",
+    "updated_at": "2019-12-01T18:40:31Z",
+    "closed_at": null,
+    "author_association": "CONTRIBUTOR",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/224",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/224",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/224.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/224.patch"
+    },
+    "body": "### TL;DR\r\n\r\nMake ECIPs with `Type` _Fork_ a thing, where _Fork_ ECIPs should follow this process:\r\n- A \"shell\" Fork ECIP is opened, fitting the [template provided](TODO). This ECIP __does not initially include `Activation Block Number` or `Features` specifications__.\r\n- While in `WIP` or `Draft` status, one or more change sets are proposed against this document (eg. via Github Pull Requests) __modifying BOTH `Activation Block Number` and `Features` specifications__.\r\n- ... Stuff happens; there are comments, emails, meetings, bribes, blogs, bragging, trolling, haranguing, arguing, debating, pondering, editing, compromising, constructive critique, etc...\r\n- One change set is merged to modify the Fork ECIP, yielding a COMPLETE and UNIQUE hard fork specification document, and status is moved to `Last Call`. By virtue of the process specification provided, a Fork ECIP achieving `Last Call` may not see `Draft` nor `WIP` status again (because doing so would require a merging a change set holding INCOMPLETE specification variables). \r\n\r\n---\r\n\r\nRelated to and building from #223 , #222 , #221, #219 .\r\n\r\n---\r\n\r\n#### Discussion preamble from the author\r\n\r\nThis specification requires that Fork _Features_ and _Activation_ numbers are handled inextricably, and that once merged a Fork specification ECIP becomes finalized.\r\n\r\nThere are some important cases and implications to consider for this:\r\n- If, say, a Fork ECIP specification is finalized (having been fully specified with Activation Block Number and Feature Set via a merged change set)... BUT subsequently a bug is found during testing causing a loss of confidence in sucessfully achieving the fork at the specified block number, then the Fork ECIP would want to be `Deferred` or `Withdrawn` or `Rejected`, and then eventually replaced with a new UNIQUE ECIP containing a revised Activation Block Number and possibly also Feature Set parameters. \r\n\r\n- Change sets (here, Pull Requests) are expected to take on a more considerable role for Fork specification development; proposed Feature Set + Activation schedule should be documented explicitly and then discussed relatively. Sensible use of Github's linking tools (Issue/PR references) should be used liberally, and it would probably be good establish a practical naming scheme for proposed Fork ECIP modifications (eg. `FORK-ECIP-9999 Spec: <My features> @ <My block>`) ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/224/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00224.patch b/.gh-pullrequests/00224.patch
new file mode 100644
index 0000000..1760e38
--- /dev/null
+++ b/.gh-pullrequests/00224.patch
@@ -0,0 +1,886 @@
+From 4f2e902271b8d8d5abff34875f4d8b1da8c95285 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Fri, 29 Nov 2019 15:29:06 -0500
+Subject: [PATCH 01/22] Init Forking Meta Meta ECIP specification
+
+---
+ _specs/ecip-_.md | 63 ++++++++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 63 insertions(+)
+ create mode 100644 _specs/ecip-_.md
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+new file mode 100644
+index 0000000..6af2169
+--- /dev/null
++++ b/_specs/ecip-_.md
+@@ -0,0 +1,63 @@
++---
++ecip: TBD
++title: The Meta Meta ECIP: Processes for Meta ECIPs
++author: Mr. Meows D. Bits
++discussions-to: TBD
++status: WIP
++type: Meta
++created: 2019-11-29T14:17:42-05:00
++resolution: TBD
++---
++
++### Abstract
++
++Forking Meta ECIPs (defined as Meta ECIPs specifying any Standards-Core track ECIP) should be complete and unique.
++
++### Motivation
++
++Incomplete proposals are inoperable; they are not ready for implementation.
++
++Definite proposals are inoperable; they are not ready for implementation.
++
++Unique proposals saves me time because I don't have to read the same thing twice.
++
++Related to and derivative of:
++
++- https://github.com/ethereumclassic/ECIPs/issues/217
++- https://github.com/ethereumclassic/ECIPs/issues/215
++- https://github.com/ethereumclassic/ECIPs/issues/175
++- https://github.com/ethereumclassic/ECIPs/issues/131
++- https://github.com/ethereumclassic/ECIPs/issues/177
++- https://github.com/ethereumclassic/ECIPs/issues/135
++- https://github.com/ethereumclassic/ECIPs/pull/218
++- https://github.com/ethereumclassic/ECIPs/pull/212
++- https://github.com/ethereumclassic/ECIPs/pull/207
++- https://github.com/ethereumclassic/ECIPs/pull/214
++- https://github.com/ethereumclassic/ECIPs/pull/199
++- https://github.com/ethereumclassic/ECIPs/pull/196
++
++### Specification
++
++A hard fork specification is documented as a Meta ECIP, and usually represents a collection of adjacent ECIPs. The sole purpose of a Forking Meta ECIP is to join a block number with this set of `n >= 1` ECIPs containing protocol-facing changes. The document says "_These_ features will activate at _this_ moment."
++
++This proposal specifies that all Forking Meta ECIPs should be COMPLETE and UNIQUE; essentially disallowing _Draft_ Forking Meta ECIPs and and/or meaningful revisions (set ECIPs, block number). A valid Forking Meta ECIP must contain a full and complete set of to-be included ECIPs, and a definitive block number. 
++
++_Complete_ is defined as being fully and totally definitive; not lacking anything.
++
++_Unique_ means not the same as another thing; in this case, not precisely duplicating any existing ECIP.
++
++### Rationale
++
++0. Forking Meta ECIPs are themselves ECIPs, and their job is to define, with certainty and clarity, technical specifications. Forking Meta ECIPs that essentially leave either field `Block number` and/or field `ECIP set` blank are functionally useless; they say only: "Will have some fork at some time." An analogue of blankness to non-Forking-Meta ECIPs would essentially say "TODO: put my next awesome feature specification here." Fill-in-the-blank ECIPs are not in good form.
++
++1. A Forking Meta ECIP may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simulateous inclusion. Demanding fully-formed Forking Meta ECIP proposals forces authors to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.
++
++2. Concrete ECIPs are easier to reason about. Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making.
++
++### Implementation
++
++A Forking Meta ECIP may not be in `Draft` status. It may not undergo any meaningful changes once receiving `Last Call` status (its next status beyond `WIP`).
++
++### Copyright/Licensing
++
++MIT.
+
+From 18ba1dd84b1199180ef74f7fee27d6660f88a76e Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Fri, 29 Nov 2019 15:31:12 -0500
+Subject: [PATCH 02/22] Improve language around status adjectives
+
+---
+ _specs/ecip-_.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index 6af2169..b6b6e55 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -40,7 +40,7 @@ Related to and derivative of:
+ 
+ A hard fork specification is documented as a Meta ECIP, and usually represents a collection of adjacent ECIPs. The sole purpose of a Forking Meta ECIP is to join a block number with this set of `n >= 1` ECIPs containing protocol-facing changes. The document says "_These_ features will activate at _this_ moment."
+ 
+-This proposal specifies that all Forking Meta ECIPs should be COMPLETE and UNIQUE; essentially disallowing _Draft_ Forking Meta ECIPs and and/or meaningful revisions (set ECIPs, block number). A valid Forking Meta ECIP must contain a full and complete set of to-be included ECIPs, and a definitive block number. 
++This proposal specifies that all Forking Meta ECIPs should be COMPLETE and UNIQUE; essentially disallowing `Draft` status Forking Meta ECIPs and and/or meaningful revisions (set ECIPs, block number). A valid Forking Meta ECIP must contain a full and complete set of to-be included ECIPs, and a definitive block number. 
+ 
+ _Complete_ is defined as being fully and totally definitive; not lacking anything.
+ 
+
+From abf98b0dd476767c2420dad259d5544c0d430927 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Fri, 29 Nov 2019 15:35:16 -0500
+Subject: [PATCH 03/22] Add rationale section specifically for block number
+ spec
+
+---
+ _specs/ecip-_.md | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index b6b6e55..da4a181 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -52,7 +52,9 @@ _Unique_ means not the same as another thing; in this case, not precisely duplic
+ 
+ 1. A Forking Meta ECIP may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simulateous inclusion. Demanding fully-formed Forking Meta ECIP proposals forces authors to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.
+ 
+-2. Concrete ECIPs are easier to reason about. Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making.
++2. Forking Meta ECIPs without block numbers lack operability. Activation numbers _are specifications_ and should not be treated as a second class or at-convenience citizens. Implementation timelines are importantly related variables to their adjacent ECIP-sets (large set ostensibly require long timelines, hotfix sets require short ones.) We cannot reason about them in independence.
++
++3. Concrete ECIPs are easier to reason about. Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making.
+ 
+ ### Implementation
+ 
+
+From 76872bde3b069d03225da2de3af62bb5231fdcaf Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 07:33:29 -0500
+Subject: [PATCH 04/22] Fix typo (remove rough draft 'definitive' concept
+ vestige)
+
+---
+ _specs/ecip-_.md | 2 --
+ 1 file changed, 2 deletions(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index da4a181..8c1f891 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -17,8 +17,6 @@ Forking Meta ECIPs (defined as Meta ECIPs specifying any Standards-Core track EC
+ 
+ Incomplete proposals are inoperable; they are not ready for implementation.
+ 
+-Definite proposals are inoperable; they are not ready for implementation.
+-
+ Unique proposals saves me time because I don't have to read the same thing twice.
+ 
+ Related to and derivative of:
+
+From bbf1c2f1a8400c50e7f15127844122ab11e7ff76 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 07:38:41 -0500
+Subject: [PATCH 05/22] Fix typos
+
+---
+ _specs/ecip-_.md | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index 8c1f891..389ca1c 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -48,9 +48,9 @@ _Unique_ means not the same as another thing; in this case, not precisely duplic
+ 
+ 0. Forking Meta ECIPs are themselves ECIPs, and their job is to define, with certainty and clarity, technical specifications. Forking Meta ECIPs that essentially leave either field `Block number` and/or field `ECIP set` blank are functionally useless; they say only: "Will have some fork at some time." An analogue of blankness to non-Forking-Meta ECIPs would essentially say "TODO: put my next awesome feature specification here." Fill-in-the-blank ECIPs are not in good form.
+ 
+-1. A Forking Meta ECIP may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simulateous inclusion. Demanding fully-formed Forking Meta ECIP proposals forces authors to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.
++1. A Forking Meta ECIP may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simultaneous inclusion. Demanding fully-formed Forking Meta ECIP proposals forces authors to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.
+ 
+-2. Forking Meta ECIPs without block numbers lack operability. Activation numbers _are specifications_ and should not be treated as a second class or at-convenience citizens. Implementation timelines are importantly related variables to their adjacent ECIP-sets (large set ostensibly require long timelines, hotfix sets require short ones.) We cannot reason about them in independence.
++2. Forking Meta ECIPs without block numbers lack operability. Activation numbers _are specifications_ and should not be treated as a second class or at-convenience citizens. Implementation timelines are importantly related variables to their adjacent ECIP-sets (large set ostensibly require long timelines, hotfix sets require short ones.) We cannot reason about them in isolation.
+ 
+ 3. Concrete ECIPs are easier to reason about. Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making.
+ 
+
+From 164c68c513aa453a30de34a79d3e6c4a0f55b1ac Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 14:26:56 -0500
+Subject: [PATCH 06/22] Write a little more
+
+---
+ _specs/ecip-_.md | 24 +++++++++++++++---------
+ 1 file changed, 15 insertions(+), 9 deletions(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index 389ca1c..df8fbf7 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -15,9 +15,9 @@ Forking Meta ECIPs (defined as Meta ECIPs specifying any Standards-Core track EC
+ 
+ ### Motivation
+ 
+-Incomplete proposals are inoperable; they are not ready for implementation.
++Incomplete proposals are inoperable; they are not ready for review, discussion, nor implementation.
+ 
+-Unique proposals saves me time because I don't have to read the same thing twice.
++Unique proposals save time and redundant complexity.
+ 
+ Related to and derivative of:
+ 
+@@ -36,28 +36,34 @@ Related to and derivative of:
+ 
+ ### Specification
+ 
+-A hard fork specification is documented as a Meta ECIP, and usually represents a collection of adjacent ECIPs. The sole purpose of a Forking Meta ECIP is to join a block number with this set of `n >= 1` ECIPs containing protocol-facing changes. The document says "_These_ features will activate at _this_ moment."
+-
+-This proposal specifies that all Forking Meta ECIPs should be COMPLETE and UNIQUE; essentially disallowing `Draft` status Forking Meta ECIPs and and/or meaningful revisions (set ECIPs, block number). A valid Forking Meta ECIP must contain a full and complete set of to-be included ECIPs, and a definitive block number. 
++A Forking Meta ECIP is defined as a Meta ECIP specifying any (`n >= 1`) Standards-Core track ECIP or ECIP-set. A Forking Meta ECIP should be complete and unique.
+ 
+ _Complete_ is defined as being fully and totally definitive; not lacking anything.
+ 
+ _Unique_ means not the same as another thing; in this case, not precisely duplicating any existing ECIP.
+ 
++This proposal specifies that all Forking Meta ECIPs should be COMPLETE and UNIQUE; essentially disallowing `Draft` status Forking Meta ECIPs and and/or meaningful revisions (set ECIPs, block number).
++
++This implies that a valid Forking Meta ECIP must contain a full and complete set of to-be included ECIPs, and a definitive block number. 
++
+ ### Rationale
+ 
+-0. Forking Meta ECIPs are themselves ECIPs, and their job is to define, with certainty and clarity, technical specifications. Forking Meta ECIPs that essentially leave either field `Block number` and/or field `ECIP set` blank are functionally useless; they say only: "Will have some fork at some time." An analogue of blankness to non-Forking-Meta ECIPs would essentially say "TODO: put my next awesome feature specification here." Fill-in-the-blank ECIPs are not in good form.
++The sole purpose of a Forking Meta ECIP is to join a block number with a set of `n >= 1` ECIPs containing protocol-facing changes. The document says "_These_ features will activate at _this_ moment."
+ 
+-1. A Forking Meta ECIP may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simultaneous inclusion. Demanding fully-formed Forking Meta ECIP proposals forces authors to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.
++0. __Fill-in-the-blank ECIPs are not in good form.__ Forking Meta ECIPs are themselves ECIPs, and their job is to define, with certainty and clarity, technical specifications. Forking Meta ECIPs that essentially leave either field `Block number` and/or field `ECIP set` blank are functionally useless (inoperable); they say only: "(I/we) propose to have some fork at some time." An analogue of blankness to non-Forking-Meta ECIPs would essentially say "TODO: put my next awesome feature specification here." 
+ 
+-2. Forking Meta ECIPs without block numbers lack operability. Activation numbers _are specifications_ and should not be treated as a second class or at-convenience citizens. Implementation timelines are importantly related variables to their adjacent ECIP-sets (large set ostensibly require long timelines, hotfix sets require short ones.) We cannot reason about them in isolation.
++1. __Demanding fully-formed Forking Meta ECIP proposals forces authors, editors, and reviewers to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.__ A Forking Meta ECIP may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simultaneous inclusion. 
+ 
+-3. Concrete ECIPs are easier to reason about. Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making.
++2. __Forking Meta ECIPs without block numbers lack operability.__ Activation numbers _are specifications_ and should not be treated as a second class or at-convenience citizens. Implementation timelines are importantly related variables to their adjacent ECIP-sets (large set ostensibly require long timelines, hotfix sets require short ones.) We cannot reason about them in isolation.
++
++3. __Concrete ECIPs are easier to build language and reasoning around.__ Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making. "Competing" Forking Meta ECIP alternatives become explicit and standardized, yielding conceptual and communicable clarity in review processes and decision-making processes.
+ 
+ ### Implementation
+ 
+ A Forking Meta ECIP may not be in `Draft` status. It may not undergo any meaningful changes once receiving `Last Call` status (its next status beyond `WIP`).
+ 
++Procedurally, compared to the historical and traditional practice of opening an essentially empty Forking Meta ECIP and working to fill in blanks, this proposed procedure makes only marginal and changes, demanding only that what was taken as implication, subtext, or conteext before now be made explicit. Rather than reviewing actual-or-theoretical proposed change sets to an ECIP (which sadly, have historically usually been theoretical), this forces proposed Forking Meta ECIP alternative outcomes to assume a fully qualified and standardized formats before becoming eligible for consideration. 
++
+ ### Copyright/Licensing
+ 
+ MIT.
+
+From bfd3a9c8f876b59c80c82eab5435ab0e0cf60e87 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 14:33:21 -0500
+Subject: [PATCH 07/22] Fix Forking Meta ECIP spec to include must have
+ activation block number
+
+---
+ _specs/ecip-_.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index df8fbf7..c0466fa 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -11,7 +11,7 @@ resolution: TBD
+ 
+ ### Abstract
+ 
+-Forking Meta ECIPs (defined as Meta ECIPs specifying any Standards-Core track ECIP) should be complete and unique.
++Forking Meta ECIPs (defined as Meta ECIPs specifying any Standards-Core track ECIP and an activation block number) should be complete and unique.
+ 
+ ### Motivation
+ 
+
+From 4ef35f941384942ead39e6bff52a4cce0e1d0e3e Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 15:11:39 -0500
+Subject: [PATCH 08/22] Introduce alternative approach; use PRs
+
+---
+ _specs/ecip-_.md | 34 ++++++++++++++++++++++------------
+ 1 file changed, 22 insertions(+), 12 deletions(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index c0466fa..a456429 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -11,11 +11,23 @@ resolution: TBD
+ 
+ ### Abstract
+ 
+-Forking Meta ECIPs (defined as Meta ECIPs specifying any Standards-Core track ECIP and an activation block number) should be complete and unique.
++Forking Meta ECIPs (defined as Meta ECIPs _intended_ to specify any Standards-Core track ECIP and an activation block number) should contain only placeholder information
++for ECIP-sets and block activation numbers. Placeholders for ECIP-sets and block numbers should be filled via distinct change sets before moving from `Draft` to `Last Call` status.
++
++Changesets (eg Pull Requests) editing placeholder ECIP-set and block number information should do so with neither in isolation; PRs modifying only ECIP-set, or only block number,
++are disallowed.
+ 
+ ### Motivation
+ 
+-Incomplete proposals are inoperable; they are not ready for review, discussion, nor implementation.
++Allowing fully-formed alternative and "competing" ECIPs is logistically and practically difficult to use. Currently, our most prominently used collaboration tool, Github, does
++not provide an accessible UI for comparing arbitrary documents or review separate arbitrary documents as a conceptual set.
++
++Github does, however, provide an accessible user interface for Pull Requests (propsed change sets) against a single document.
++
++Forking Meta ECIPs represent a single idea: The next hardfork. This is a pragramtic and common sense approach to managing blockchain protocol maintenance and upgrades. Thus, it makes
++sense to use accessible and conceptually-unifying procedures for this challenge.
++
++Incomplete proposals (changesets) are inoperable; they are not ready for review, discussion, nor implementation.
+ 
+ Unique proposals save time and redundant complexity.
+ 
+@@ -36,33 +48,31 @@ Related to and derivative of:
+ 
+ ### Specification
+ 
+-A Forking Meta ECIP is defined as a Meta ECIP specifying any (`n >= 1`) Standards-Core track ECIP or ECIP-set. A Forking Meta ECIP should be complete and unique.
++A Forking Meta ECIP is defined as a Meta ECIP specifying any (`n >= 1`) Standards-Core track ECIP or ECIP-set. A Forking Meta ECIP should be conceptally complete and unique (_next hardfork_ suffices for uniqueness, since there can only be one).
+ 
+ _Complete_ is defined as being fully and totally definitive; not lacking anything.
+ 
+ _Unique_ means not the same as another thing; in this case, not precisely duplicating any existing ECIP.
+ 
+-This proposal specifies that all Forking Meta ECIPs should be COMPLETE and UNIQUE; essentially disallowing `Draft` status Forking Meta ECIPs and and/or meaningful revisions (set ECIPs, block number).
+-
+-This implies that a valid Forking Meta ECIP must contain a full and complete set of to-be included ECIPs, and a definitive block number. 
++This proposal specifies that all Forking Meta ECIPs in `Draft` state or earlier should contain NO information about ECIP-sets or block activation numbers (all `TBD`). Proposed specifications to fill these placeholders should be made in the form of distinct and separate propsed change sets (eg Github Pull Requests) to the Forking Meta ECIP document. The changesets are required to be UNIQUE and COMPLETE.
+ 
+ ### Rationale
+ 
+ The sole purpose of a Forking Meta ECIP is to join a block number with a set of `n >= 1` ECIPs containing protocol-facing changes. The document says "_These_ features will activate at _this_ moment."
+ 
+-0. __Fill-in-the-blank ECIPs are not in good form.__ Forking Meta ECIPs are themselves ECIPs, and their job is to define, with certainty and clarity, technical specifications. Forking Meta ECIPs that essentially leave either field `Block number` and/or field `ECIP set` blank are functionally useless (inoperable); they say only: "(I/we) propose to have some fork at some time." An analogue of blankness to non-Forking-Meta ECIPs would essentially say "TODO: put my next awesome feature specification here." 
++0. "Shell" format Forking Meta ECIPs represent a clear, albeit abstract, idea: The blockchain's next hard fork.
+ 
+-1. __Demanding fully-formed Forking Meta ECIP proposals forces authors, editors, and reviewers to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.__ A Forking Meta ECIP may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simultaneous inclusion. 
++1. __Demanding fully-formed Forking Meta ECIP Changeset proposal forces authors, editors, and reviewers to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.__ A Forking Meta ECIP Changeset may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simultaneous inclusion. 
+ 
+-2. __Forking Meta ECIPs without block numbers lack operability.__ Activation numbers _are specifications_ and should not be treated as a second class or at-convenience citizens. Implementation timelines are importantly related variables to their adjacent ECIP-sets (large set ostensibly require long timelines, hotfix sets require short ones.) We cannot reason about them in isolation.
++2. __Forking Meta ECIP Changesets without block numbers lack operability.__ Activation numbers _are specifications_ and should not be treated as a second class or at-convenience citizens. Implementation timelines are importantly related variables to their adjacent ECIP-sets (large set ostensibly require long timelines, hotfix sets require short ones.) We cannot reason about them in isolation.
+ 
+-3. __Concrete ECIPs are easier to build language and reasoning around.__ Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making. "Competing" Forking Meta ECIP alternatives become explicit and standardized, yielding conceptual and communicable clarity in review processes and decision-making processes.
++3. __Concrete things are easier to build language and reasoning around.__ Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making. "Competing" Forking Meta ECIP Changeset alternatives become explicit and standardized, yielding conceptual and communicable clarity in review processes and decision-making processes.
+ 
+ ### Implementation
+ 
+-A Forking Meta ECIP may not be in `Draft` status. It may not undergo any meaningful changes once receiving `Last Call` status (its next status beyond `WIP`).
++A Forking Meta ECIP may only achieve `Last Call` status once a Changeset has been accepted and all other alternative marked as `Deferred`, `Withdrawn`, or `Rejected`.
+ 
+-Procedurally, compared to the historical and traditional practice of opening an essentially empty Forking Meta ECIP and working to fill in blanks, this proposed procedure makes only marginal and changes, demanding only that what was taken as implication, subtext, or conteext before now be made explicit. Rather than reviewing actual-or-theoretical proposed change sets to an ECIP (which sadly, have historically usually been theoretical), this forces proposed Forking Meta ECIP alternative outcomes to assume a fully qualified and standardized formats before becoming eligible for consideration. 
++This proposed procedure makes only marginal and changes, demanding only that what was taken as implication, subtext, or conteext before now be made explicit. Rather than reviewing actual-or-theoretical proposed changesets to an ECIP (which sadly, have historically usually been theoretical), this forces proposed Forking Meta ECIP alternative outcomes to assume a fully qualified and standardized formats before becoming eligible for consideration. 
+ 
+ ### Copyright/Licensing
+ 
+
+From cf85164c0c34f785b03badc78ab2d72ce4fd323e Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 16:19:10 -0500
+Subject: [PATCH 09/22] Fix typo
+
+---
+ _specs/ecip-_.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index a456429..fa978bb 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -72,7 +72,7 @@ The sole purpose of a Forking Meta ECIP is to join a block number with a set of
+ 
+ A Forking Meta ECIP may only achieve `Last Call` status once a Changeset has been accepted and all other alternative marked as `Deferred`, `Withdrawn`, or `Rejected`.
+ 
+-This proposed procedure makes only marginal and changes, demanding only that what was taken as implication, subtext, or conteext before now be made explicit. Rather than reviewing actual-or-theoretical proposed changesets to an ECIP (which sadly, have historically usually been theoretical), this forces proposed Forking Meta ECIP alternative outcomes to assume a fully qualified and standardized formats before becoming eligible for consideration. 
++This proposed procedure makes only marginal and changes, demanding only that what was taken as implication, subtext, or context before now be made explicit. Rather than reviewing actual-or-theoretical proposed changesets to an ECIP (which sadly, have historically usually been theoretical), this forces proposed Forking Meta ECIP alternative outcomes to assume a fully qualified and standardized formats before becoming eligible for consideration. 
+ 
+ ### Copyright/Licensing
+ 
+
+From 93895296e4c969f07f99b304db1569a573268892 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 17:15:13 -0500
+Subject: [PATCH 10/22] Establish specification and process standards for Fork
+ type ECIPs
+
+---
+ _specs/ecip-1000.md |  5 ++--
+ _specs/ecip-_.md    | 66 ++++++++++++++++++++++++++++++---------------
+ 2 files changed, 48 insertions(+), 23 deletions(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index b5b50dd..97bb218 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -131,7 +131,7 @@ Each ECIP must begin with an RFC 822 style header preamble. The headers must app
+ - **Comments-Summary:** (summary tone)
+ - **Comments-URI:** (links to wiki page for comments)
+ - **Status:** (Draft | Last Call | Accepted | Final | Deferred | Replaced | Rejected | Withdrawn)
+-- **Type:** (Standards Track | Informational | Process)
++- **Type:** (Standards Track | Informational | Meta | Fork)
+ - **Created:** (date created on, in ISO 8601 (yyyy-mm-dd) format)
+ - **License:** (abbreviation for approved license(s))
+ - **License-Code:** (abbreviation for code under different approved license(s))
+@@ -150,7 +150,7 @@ If there are multiple authors, each should be on a separate line following RFC 2
+ 
+ While an ECIP is in private discussions (usually during the initial Draft phase), a`Discussions-To` header will indicate the mailing list or URL where the ECIP is being discussed. No `Discussions-To` header is necessary if the ECIP is being discussed privately with the author.
+ 
+-The `Type` header specifies the type of ECIP: Standards Track, Informational, or Process.
++The `Type` header specifies the type of ECIP: Standards Track, Informational, Meta, Fork.
+ 
+ The `Created` header records the date that the ECIP was assigned a number.
+ 
+@@ -172,6 +172,7 @@ There are three types of ECIP:
+   - **Interface** - improvements around client [API/RPC] specifications and standards, and also certain language-level standards like method names  and contract ABIs.
+   - **ECBP (Ethereum Classic Best Practice)** - application-level standards and conventions, including contract standards such as token standards, name registries, URI schemes, library/package formats, and wallet formats.
+ - A **Meta ECIP** describes a **process** surrounding Ethereum Classic or proposes a change to (or an event in) a process. Process ECIPs are like Standard Track ECIPs, but apply to areas other than the Ethereum Classic protocol itself. They may propose an implementation, but not to Ethereum Classic's codebase; they often require community consensus; unlike Informational ECIPs, they are more than recommendations, and users are typically not free to ignore them. Examples include procedures, guidelines, changes to the decision-making process (e.g. this ECIP-1000 process document), and changes to the tools or environment used in Ethereum Classic development. *Any meta-ECIP is also considered a Process ECIP.*
++- A **Fork ECIP** describes a feature set and a block activation number for those features to become active on one or more blockchains.
+ - An **Informational ECIP** describes an Ethereum Classic design issue, or provides general guidelines or information to the Ethereum Classic community, but does not propose a new feature. Informational ECIPs do not necessarily represent Ethereum Classic community consensus or a recommendation, so users and implementors are free to ignore Informational ECIPs or follow their advice.
+ 
+ It is highly recommended that a single ECIP contain a single key proposal or new idea. The more focused the ECIP, the more successful it tends to be. A change to one client doesn't require an ECIP; a change that affects multiple clients, or defines a standard for multiple apps to use, does.
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index fa978bb..8a3a7e8 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -1,6 +1,6 @@
+ ---
+ ecip: TBD
+-title: The Meta Meta ECIP: Processes for Meta ECIPs
++title: The Meta Fork ECIP: Establishing _Fork_ type ECIPs and their specifications and processes
+ author: Mr. Meows D. Bits
+ discussions-to: TBD
+ status: WIP
+@@ -11,25 +11,42 @@ resolution: TBD
+ 
+ ### Abstract
+ 
+-Forking Meta ECIPs (defined as Meta ECIPs _intended_ to specify any Standards-Core track ECIP and an activation block number) should contain only placeholder information
+-for ECIP-sets and block activation numbers. Placeholders for ECIP-sets and block numbers should be filled via distinct change sets before moving from `Draft` to `Last Call` status.
++Establishing _Fork_ type ECIPs, and their standards and processes.
+ 
+-Changesets (eg Pull Requests) editing placeholder ECIP-set and block number information should do so with neither in isolation; PRs modifying only ECIP-set, or only block number,
+-are disallowed.
++#### TL;DR
++
++Make ECIPs with `Type` _Fork_ a thing. _Fork_ ECIPs should follow this process:
++- A "shell" Fork ECIP is opened, fitting the [template provided](TODO). This ECIP __does not initially include `Activation Block Number` or `Features` specifications__.
++- While in `WIP` or `Draft` status, one or more change sets are proposed against this document (eg. via Github Pull Requests) __modifying BOTH `Activation Block Number` and `Features` specifications__.
++- ... Stuff happens; there are comments, emails, meetings, bribes, blogs, bragging, trolling, haranguing, arguing, debating, pondering, editing, compromising, constructive criticiziing, etc...
++- One change set is merged to modify the Fork ECIP, yielding a COMPLETE and UNIQUE hard fork specification document.
++
++### Definition
++
++Fork ECIPs are defined as ECIPs specifying PROTOCOL ACTIVATION of any one or more Standards-Core track ECIP(s) at a specified activation block number.
++
++#### Standards
++
++Fork ECIPs should contain only placeholder information for ECIP-sets and block activation numbers while in `WIP` or `Draft` status. 
++
++Modification to any of `Last Call`, `Accepted`, `Final`, or `Active` statuses should be accompanied by the introduction (merge) of a single change set containing COMPLETE and UNIQUE definitions of the placeholder values.
++
++Change sets (eg Pull Requests) editing placeholder ECIP-set and block number information should do so with neither value in isolation; change sets modifying only ECIP-set values, or only block number values, are disallowed.
+ 
+ ### Motivation
+ 
+-Allowing fully-formed alternative and "competing" ECIPs is logistically and practically difficult to use. Currently, our most prominently used collaboration tool, Github, does
+-not provide an accessible UI for comparing arbitrary documents or review separate arbitrary documents as a conceptual set.
++Fork ECIPs represent a single idea: The next hardfork the blockchain is expected to undergo. This is a pragmatic and common approach to managing blockchain protocol maintenance and upgrades. 
++Thus, it makes sense to use accessible and conceptually-unifying procedures for this challenge.
++
++- __Accessibility__: Github provides an accessible user interface for viewing a Pull Request (proposed change set) against a single document.
+ 
+-Github does, however, provide an accessible user interface for Pull Requests (propsed change sets) against a single document.
++- __Legible and Communicable Reasoning__: Requiring UNIQUE and COMPLETE change sets against against a Fork type ECIP demand presentation and consideration of proposed specifications as a whole.
+ 
+-Forking Meta ECIPs represent a single idea: The next hardfork. This is a pragramtic and common sense approach to managing blockchain protocol maintenance and upgrades. Thus, it makes
+-sense to use accessible and conceptually-unifying procedures for this challenge.
++- __Sufficient specification__: It is the job of Fork ECIPs to eventually provide precise and operable implementation specifications. Incomplete proposals (changesets) are inoperable; they are not ready for review, discussion, nor implementation. Any Fork ECIP lacking a COMPLETE feature set or block number is considered incomplete.
+ 
+-Incomplete proposals (changesets) are inoperable; they are not ready for review, discussion, nor implementation.
++- __Efficiency__: Unique proposals save time and energy.
+ 
+-Unique proposals save time and redundant complexity.
++#### Historical motivations
+ 
+ Related to and derivative of:
+ 
+@@ -48,31 +65,38 @@ Related to and derivative of:
+ 
+ ### Specification
+ 
+-A Forking Meta ECIP is defined as a Meta ECIP specifying any (`n >= 1`) Standards-Core track ECIP or ECIP-set. A Forking Meta ECIP should be conceptally complete and unique (_next hardfork_ suffices for uniqueness, since there can only be one).
++A Fork ECIP is defined as an ECIP specifying any (`n >= 1`) Standards-Core track ECIP or ECIP-set and a block activation number for this set. A Fork ECIP should be conceptually complete and unique (note that _Next hardfork_ suffices for the existing preference for ECIP uniqueness, since it is intended that there only be one at a time -- hopefully!).
+ 
+ _Complete_ is defined as being fully and totally definitive; not lacking anything.
+ 
+ _Unique_ means not the same as another thing; in this case, not precisely duplicating any existing ECIP.
+ 
+-This proposal specifies that all Forking Meta ECIPs in `Draft` state or earlier should contain NO information about ECIP-sets or block activation numbers (all `TBD`). Proposed specifications to fill these placeholders should be made in the form of distinct and separate propsed change sets (eg Github Pull Requests) to the Forking Meta ECIP document. The changesets are required to be UNIQUE and COMPLETE.
++This proposal specifies that all Fork ECIPs in `Draft` state or earlier should contain NO information about ECIP-sets or block activation numbers (all `TBD`). Proposed specifications to fill these placeholders should be made in the form of distinct and separate propsed change sets (eg Github Pull Requests) to the Fork ECIP document. The changesets are required to be UNIQUE and COMPLETE.
+ 
+ ### Rationale
+ 
+-The sole purpose of a Forking Meta ECIP is to join a block number with a set of `n >= 1` ECIPs containing protocol-facing changes. The document says "_These_ features will activate at _this_ moment."
++The sole purpose of a Fork ECIP is to join a block number (activation block) with a set of `n >= 1` Standards-Core type ECIPs containing protocol-facing changes. The document says "_These_ features will activate at _this_ moment."
++
++0. "Shell" format Fork ECIPs represent a clear, albeit abstract, idea: The blockchain's next hard fork.
++
++1. __Demanding fully-formed Fork ECIP Changeset proposal forces authors, editors, and reviewers to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.__ A Fork ECIP Changeset may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simultaneous inclusion. The intention of this specification is make these logical steps as explicit and document and accessible as possible, in order that good decisions can be made with a process of open and constructive collaboration, enabled by named and concrete options.
++
++2. __Fork ECIP Changesets without block numbers lack operability.__ Activation numbers _are specifications_ and should not be treated as a second class or at-convenience citizens. Implementation timelines are importantly related variables to their adjacent ECIP-sets (large set ostensibly require long timelines, hotfix sets require short ones.) We cannot reason about them in isolation.
+ 
+-0. "Shell" format Forking Meta ECIPs represent a clear, albeit abstract, idea: The blockchain's next hard fork.
++3. __Concrete things are easier to build language and reasoning around.__ Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making. "Competing" Fork ECIP Changeset alternatives become explicit and standardized, yielding conceptual and communicable clarity in review processes and decision-making processes.
+ 
+-1. __Demanding fully-formed Forking Meta ECIP Changeset proposal forces authors, editors, and reviewers to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.__ A Forking Meta ECIP Changeset may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simultaneous inclusion. 
++#### Alternatives considered
+ 
+-2. __Forking Meta ECIP Changesets without block numbers lack operability.__ Activation numbers _are specifications_ and should not be treated as a second class or at-convenience citizens. Implementation timelines are importantly related variables to their adjacent ECIP-sets (large set ostensibly require long timelines, hotfix sets require short ones.) We cannot reason about them in isolation.
++Use distinct UNIQUE and COMPLETE ECIPs to describe fork specification options.
+ 
+-3. __Concrete things are easier to build language and reasoning around.__ Nuances of interoperations are documented and included in concrete proposals, leaving less theoretical abstract reasoning to manage, which is relevant in the context of group _and_ individual decision making. "Competing" Forking Meta ECIP Changeset alternatives become explicit and standardized, yielding conceptual and communicable clarity in review processes and decision-making processes.
++However, allowing fully-formed alternative and "competing" ECIPs is logistically and practically difficult to use. 
++Currently, our most prominently used collaboration tool, Github, does not provide an accessible UI for comparing arbitrary documents or review separate arbitrary documents as a conceptual set.
+ 
+ ### Implementation
+ 
+-A Forking Meta ECIP may only achieve `Last Call` status once a Changeset has been accepted and all other alternative marked as `Deferred`, `Withdrawn`, or `Rejected`.
++A Fork ECIP should achieve `Last Call` as a change set has been successfully merged. Conversely, a Fork ECIP with non-empty specifications may not see `Draft` or `WIP` status; it may only otherwise `Active`, `Withdrawn`, or `Rejected`.
+ 
+-This proposed procedure makes only marginal and changes, demanding only that what was taken as implication, subtext, or context before now be made explicit. Rather than reviewing actual-or-theoretical proposed changesets to an ECIP (which sadly, have historically usually been theoretical), this forces proposed Forking Meta ECIP alternative outcomes to assume a fully qualified and standardized formats before becoming eligible for consideration. 
++This proposed procedure makes only marginal conceptual changes to existing practices, demanding only that what was taken as implication, subtext, or context before now be made explicit. Rather than reviewing actual-or-theoretical proposed changesets to an ECIP (which sadly, have historically usually been theoretical), this forces proposed Fork ECIP specification outcomes to assume fully qualified and standardized formats before becoming eligible for consideration. 
+ 
+ ### Copyright/Licensing
+ 
+
+From 6e9b361c2af084af9fcee9089cbad538b21e41d8 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 17:24:40 -0500
+Subject: [PATCH 11/22] Use assigned ECIP number 1077
+
+Resolved conflicts:
+
+Conflicts:
+	_specs/ecip-_.md
+---
+ _specs/ecip-_.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-_.md
+index 8a3a7e8..10db9e9 100644
+--- a/_specs/ecip-_.md
++++ b/_specs/ecip-_.md
+@@ -1,5 +1,5 @@
+ ---
+-ecip: TBD
++ecip: 1077
+ title: The Meta Fork ECIP: Establishing _Fork_ type ECIPs and their specifications and processes
+ author: Mr. Meows D. Bits
+ discussions-to: TBD
+
+From 2b576ccd751b7bfdd2606df153d68361e9186df7 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 17:25:27 -0500
+Subject: [PATCH 12/22] Rename ECIP file to reflect assigned number (1077)
+
+---
+ _specs/{ecip-_.md => ecip-1077.md} | 0
+ 1 file changed, 0 insertions(+), 0 deletions(-)
+ rename _specs/{ecip-_.md => ecip-1077.md} (100%)
+
+diff --git a/_specs/ecip-_.md b/_specs/ecip-1077.md
+similarity index 100%
+rename from _specs/ecip-_.md
+rename to _specs/ecip-1077.md
+
+From b9478e610fdf1ae082ec32c0d9d4408ff5ced481 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 17:32:47 -0500
+Subject: [PATCH 13/22] Add link to Fork-type specification ECIP
+
+Resolves https://github.com/ethereumclassic/ECIPs/pull/224#discussion_r352307638
+---
+ _specs/ecip-1000.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index 97bb218..57d8ca7 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -172,7 +172,7 @@ There are three types of ECIP:
+   - **Interface** - improvements around client [API/RPC] specifications and standards, and also certain language-level standards like method names  and contract ABIs.
+   - **ECBP (Ethereum Classic Best Practice)** - application-level standards and conventions, including contract standards such as token standards, name registries, URI schemes, library/package formats, and wallet formats.
+ - A **Meta ECIP** describes a **process** surrounding Ethereum Classic or proposes a change to (or an event in) a process. Process ECIPs are like Standard Track ECIPs, but apply to areas other than the Ethereum Classic protocol itself. They may propose an implementation, but not to Ethereum Classic's codebase; they often require community consensus; unlike Informational ECIPs, they are more than recommendations, and users are typically not free to ignore them. Examples include procedures, guidelines, changes to the decision-making process (e.g. this ECIP-1000 process document), and changes to the tools or environment used in Ethereum Classic development. *Any meta-ECIP is also considered a Process ECIP.*
+-- A **Fork ECIP** describes a feature set and a block activation number for those features to become active on one or more blockchains.
++- A **Fork ECIP** describes a feature set and a block activation number for those features to become active on one or more blockchains. For specification and process standards, see [ECIP 1077](./_specs/ecip-1077.md).
+ - An **Informational ECIP** describes an Ethereum Classic design issue, or provides general guidelines or information to the Ethereum Classic community, but does not propose a new feature. Informational ECIPs do not necessarily represent Ethereum Classic community consensus or a recommendation, so users and implementors are free to ignore Informational ECIPs or follow their advice.
+ 
+ It is highly recommended that a single ECIP contain a single key proposal or new idea. The more focused the ECIP, the more successful it tends to be. A change to one client doesn't require an ECIP; a change that affects multiple clients, or defines a standard for multiple apps to use, does.
+
+From 2c40819dc9f480632a74f267e9bb828dd47657aa Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 17:34:13 -0500
+Subject: [PATCH 14/22] Set date metadata to day granularity
+
+---
+ _specs/ecip-1077.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1077.md b/_specs/ecip-1077.md
+index 10db9e9..b31ba97 100644
+--- a/_specs/ecip-1077.md
++++ b/_specs/ecip-1077.md
+@@ -5,7 +5,7 @@ author: Mr. Meows D. Bits
+ discussions-to: TBD
+ status: WIP
+ type: Meta
+-created: 2019-11-29T14:17:42-05:00
++created: 2019-11-29
+ resolution: TBD
+ ---
+ 
+
+From aaf75959895341c82e900081f35611886d055fe9 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 17:35:09 -0500
+Subject: [PATCH 15/22] Remove metadata field Resolution
+
+It was vestigial from ECIP template. Not sure what it's for.
+Seem irrelevant here.
+---
+ _specs/ecip-1077.md | 1 -
+ 1 file changed, 1 deletion(-)
+
+diff --git a/_specs/ecip-1077.md b/_specs/ecip-1077.md
+index b31ba97..7415ad8 100644
+--- a/_specs/ecip-1077.md
++++ b/_specs/ecip-1077.md
+@@ -6,7 +6,6 @@ discussions-to: TBD
+ status: WIP
+ type: Meta
+ created: 2019-11-29
+-resolution: TBD
+ ---
+ 
+ ### Abstract
+
+From b00bdcacc07bae5436a1444f2c781c8f49508fce Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sat, 30 Nov 2019 17:37:34 -0500
+Subject: [PATCH 16/22] Remove allowance for Active status for Fork type ECIPs
+
+Once Accepted, Fork specifications should never change.
+The status Final is sufficient to describe this state.
+
+Resolves https://github.com/ethereumclassic/ECIPs/pull/224#discussion_r352307777
+---
+ _specs/ecip-1077.md | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/_specs/ecip-1077.md b/_specs/ecip-1077.md
+index 7415ad8..9068f16 100644
+--- a/_specs/ecip-1077.md
++++ b/_specs/ecip-1077.md
+@@ -28,7 +28,7 @@ Fork ECIPs are defined as ECIPs specifying PROTOCOL ACTIVATION of any one or mor
+ 
+ Fork ECIPs should contain only placeholder information for ECIP-sets and block activation numbers while in `WIP` or `Draft` status. 
+ 
+-Modification to any of `Last Call`, `Accepted`, `Final`, or `Active` statuses should be accompanied by the introduction (merge) of a single change set containing COMPLETE and UNIQUE definitions of the placeholder values.
++Modification to any of `Last Call`, `Accepted`, or `Final` statuses should be accompanied by the introduction (merge) of a single change set containing COMPLETE and UNIQUE definitions of the placeholder values.
+ 
+ Change sets (eg Pull Requests) editing placeholder ECIP-set and block number information should do so with neither value in isolation; change sets modifying only ECIP-set values, or only block number values, are disallowed.
+ 
+@@ -93,7 +93,7 @@ Currently, our most prominently used collaboration tool, Github, does not provid
+ 
+ ### Implementation
+ 
+-A Fork ECIP should achieve `Last Call` as a change set has been successfully merged. Conversely, a Fork ECIP with non-empty specifications may not see `Draft` or `WIP` status; it may only otherwise `Active`, `Withdrawn`, or `Rejected`.
++A Fork ECIP should achieve `Last Call` as a change set has been successfully merged. Conversely, a Fork ECIP with non-empty specifications may not see `Draft` or `WIP` status; it may only otherwise be `Final`, `Withdrawn`, or `Rejected`.
+ 
+ This proposed procedure makes only marginal conceptual changes to existing practices, demanding only that what was taken as implication, subtext, or context before now be made explicit. Rather than reviewing actual-or-theoretical proposed changesets to an ECIP (which sadly, have historically usually been theoretical), this forces proposed Fork ECIP specification outcomes to assume fully qualified and standardized formats before becoming eligible for consideration. 
+ 
+
+From 33a7c56f818617b7d083a8e29fba4d144adfb717 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sun, 1 Dec 2019 07:52:36 -0500
+Subject: [PATCH 17/22] Update TLDR section
+
+---
+ _specs/ecip-1077.md | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/_specs/ecip-1077.md b/_specs/ecip-1077.md
+index 9068f16..20355fb 100644
+--- a/_specs/ecip-1077.md
++++ b/_specs/ecip-1077.md
+@@ -14,11 +14,11 @@ Establishing _Fork_ type ECIPs, and their standards and processes.
+ 
+ #### TL;DR
+ 
+-Make ECIPs with `Type` _Fork_ a thing. _Fork_ ECIPs should follow this process:
++Make ECIPs with `Type` _Fork_ a thing, where _Fork_ ECIPs should follow this process:
+ - A "shell" Fork ECIP is opened, fitting the [template provided](TODO). This ECIP __does not initially include `Activation Block Number` or `Features` specifications__.
+ - While in `WIP` or `Draft` status, one or more change sets are proposed against this document (eg. via Github Pull Requests) __modifying BOTH `Activation Block Number` and `Features` specifications__.
+ - ... Stuff happens; there are comments, emails, meetings, bribes, blogs, bragging, trolling, haranguing, arguing, debating, pondering, editing, compromising, constructive criticiziing, etc...
+-- One change set is merged to modify the Fork ECIP, yielding a COMPLETE and UNIQUE hard fork specification document.
++- One change set is merged to modify the Fork ECIP, yielding a COMPLETE and UNIQUE hard fork specification document, and status is moved to `Last Call`. By virtue of the process specification provided, a Fork ECIP achieving `Last Call` may not see `Draft` nor `WIP` status again (because doing so would require a merging a change set holding INCOMPLETE specification variables). 
+ 
+ ### Definition
+ 
+
+From a5fcfa924bdd70d83dfb8d1129b58a65a2ecc67d Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sun, 1 Dec 2019 07:53:28 -0500
+Subject: [PATCH 18/22] Fix typo
+
+---
+ _specs/ecip-1077.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1077.md b/_specs/ecip-1077.md
+index 20355fb..6258b42 100644
+--- a/_specs/ecip-1077.md
++++ b/_specs/ecip-1077.md
+@@ -17,7 +17,7 @@ Establishing _Fork_ type ECIPs, and their standards and processes.
+ Make ECIPs with `Type` _Fork_ a thing, where _Fork_ ECIPs should follow this process:
+ - A "shell" Fork ECIP is opened, fitting the [template provided](TODO). This ECIP __does not initially include `Activation Block Number` or `Features` specifications__.
+ - While in `WIP` or `Draft` status, one or more change sets are proposed against this document (eg. via Github Pull Requests) __modifying BOTH `Activation Block Number` and `Features` specifications__.
+-- ... Stuff happens; there are comments, emails, meetings, bribes, blogs, bragging, trolling, haranguing, arguing, debating, pondering, editing, compromising, constructive criticiziing, etc...
++- ... Stuff happens; there are comments, emails, meetings, bribes, blogs, bragging, trolling, haranguing, arguing, debating, pondering, editing, compromising, constructive critique, etc...
+ - One change set is merged to modify the Fork ECIP, yielding a COMPLETE and UNIQUE hard fork specification document, and status is moved to `Last Call`. By virtue of the process specification provided, a Fork ECIP achieving `Last Call` may not see `Draft` nor `WIP` status again (because doing so would require a merging a change set holding INCOMPLETE specification variables). 
+ 
+ ### Definition
+
+From 68b82f40a52c68cac20c71319193635a4e385f6b Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sun, 1 Dec 2019 08:47:46 -0500
+Subject: [PATCH 19/22] Add Fork type ECIP template
+
+---
+ _specs/ecip-1077.md |  2 +-
+ ecip-X-FORK.md      | 36 ++++++++++++++++++++++++++++++++++++
+ 2 files changed, 37 insertions(+), 1 deletion(-)
+ create mode 100644 ecip-X-FORK.md
+
+diff --git a/_specs/ecip-1077.md b/_specs/ecip-1077.md
+index 6258b42..fd8903d 100644
+--- a/_specs/ecip-1077.md
++++ b/_specs/ecip-1077.md
+@@ -15,7 +15,7 @@ Establishing _Fork_ type ECIPs, and their standards and processes.
+ #### TL;DR
+ 
+ Make ECIPs with `Type` _Fork_ a thing, where _Fork_ ECIPs should follow this process:
+-- A "shell" Fork ECIP is opened, fitting the [template provided](TODO). This ECIP __does not initially include `Activation Block Number` or `Features` specifications__.
++- A "shell" Fork ECIP is opened, fitting the [template provided named `ecip-X-FORK.md`](ecip-X-FORK.md) (available in the repository root directory). This ECIP __does not initially include `Activation Block Number` or `Features` specifications__.
+ - While in `WIP` or `Draft` status, one or more change sets are proposed against this document (eg. via Github Pull Requests) __modifying BOTH `Activation Block Number` and `Features` specifications__.
+ - ... Stuff happens; there are comments, emails, meetings, bribes, blogs, bragging, trolling, haranguing, arguing, debating, pondering, editing, compromising, constructive critique, etc...
+ - One change set is merged to modify the Fork ECIP, yielding a COMPLETE and UNIQUE hard fork specification document, and status is moved to `Last Call`. By virtue of the process specification provided, a Fork ECIP achieving `Last Call` may not see `Draft` nor `WIP` status again (because doing so would require a merging a change set holding INCOMPLETE specification variables). 
+diff --git a/ecip-X-FORK.md b/ecip-X-FORK.md
+new file mode 100644
+index 0000000..86cc33b
+--- /dev/null
++++ b/ecip-X-FORK.md
+@@ -0,0 +1,36 @@
++---
++ecip: <ECIP number>
++title: <ECIP title>
++author: <list of authors' real names and optionally, email addrs>
++discussions-to: <email address>
++status: <WIP | Draft>
++type: Fork
++created: <date created on, in ISO 8601 (yyyy-mm-dd) format>
++replaces: <ECIP number>
++superseded-by: <ECIP number>
++resolution: <url>
++---
++
++### Abstract
++
++Specifying a next hardfork for the following networks:
++
++- <Network Name or Identifier>
++- <Network Name or Identifier>
++
++### Motivation
++
++### Specification
++
++- __Block Activation Number(s)__: 
++  + <Network Name or Identifier>: `TBD`
++  + <Network Name or Identifier>: `TBD`
++
++- __Feature specification(s)__:
++  + TBD
++
++### Rationale
++
++### Implementation
++
++### Copyright/Licensing
+
+From e2ba04426e27d487eaf3f6a7f58cdf8b8b98f97f Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sun, 1 Dec 2019 08:48:44 -0500
+Subject: [PATCH 20/22] Fix template link
+
+---
+ _specs/ecip-1077.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1077.md b/_specs/ecip-1077.md
+index fd8903d..14b7072 100644
+--- a/_specs/ecip-1077.md
++++ b/_specs/ecip-1077.md
+@@ -15,7 +15,7 @@ Establishing _Fork_ type ECIPs, and their standards and processes.
+ #### TL;DR
+ 
+ Make ECIPs with `Type` _Fork_ a thing, where _Fork_ ECIPs should follow this process:
+-- A "shell" Fork ECIP is opened, fitting the [template provided named `ecip-X-FORK.md`](ecip-X-FORK.md) (available in the repository root directory). This ECIP __does not initially include `Activation Block Number` or `Features` specifications__.
++- A "shell" Fork ECIP is opened, fitting the [template provided named `ecip-X-FORK.md`](../ecip-X-FORK.md) (available in the repository root directory). This ECIP __does not initially include `Activation Block Number` or `Features` specifications__.
+ - While in `WIP` or `Draft` status, one or more change sets are proposed against this document (eg. via Github Pull Requests) __modifying BOTH `Activation Block Number` and `Features` specifications__.
+ - ... Stuff happens; there are comments, emails, meetings, bribes, blogs, bragging, trolling, haranguing, arguing, debating, pondering, editing, compromising, constructive critique, etc...
+ - One change set is merged to modify the Fork ECIP, yielding a COMPLETE and UNIQUE hard fork specification document, and status is moved to `Last Call`. By virtue of the process specification provided, a Fork ECIP achieving `Last Call` may not see `Draft` nor `WIP` status again (because doing so would require a merging a change set holding INCOMPLETE specification variables). 
+
+From 1b3641be848aa878877e9f0263ffdb67af936b80 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sun, 1 Dec 2019 08:52:46 -0500
+Subject: [PATCH 21/22] Use 'IP' instead of 'ECIP'
+
+This allows protocol upgrade specifications to be derived and/or defined
+in any IP (Improvement Proposal) context, include ECIP, EIP, BIP, etc.
+---
+ _specs/ecip-1077.md | 6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
+
+diff --git a/_specs/ecip-1077.md b/_specs/ecip-1077.md
+index 14b7072..d526bd7 100644
+--- a/_specs/ecip-1077.md
++++ b/_specs/ecip-1077.md
+@@ -22,7 +22,7 @@ Make ECIPs with `Type` _Fork_ a thing, where _Fork_ ECIPs should follow this pro
+ 
+ ### Definition
+ 
+-Fork ECIPs are defined as ECIPs specifying PROTOCOL ACTIVATION of any one or more Standards-Core track ECIP(s) at a specified activation block number.
++Fork ECIPs are defined as ECIPs specifying PROTOCOL ACTIVATION of any one or more Standards-Core track IP(s) at a specified activation block number.
+ 
+ #### Standards
+ 
+@@ -64,7 +64,7 @@ Related to and derivative of:
+ 
+ ### Specification
+ 
+-A Fork ECIP is defined as an ECIP specifying any (`n >= 1`) Standards-Core track ECIP or ECIP-set and a block activation number for this set. A Fork ECIP should be conceptually complete and unique (note that _Next hardfork_ suffices for the existing preference for ECIP uniqueness, since it is intended that there only be one at a time -- hopefully!).
++A Fork ECIP is defined as an ECIP specifying any (`n >= 1`) Standards-Core track IP or IP-set and a block activation number for this set. A Fork ECIP should be conceptually complete and unique (note that _Next hardfork_ suffices for the existing preference for ECIP uniqueness, since it is intended that there only be one at a time -- hopefully!).
+ 
+ _Complete_ is defined as being fully and totally definitive; not lacking anything.
+ 
+@@ -74,7 +74,7 @@ This proposal specifies that all Fork ECIPs in `Draft` state or earlier should c
+ 
+ ### Rationale
+ 
+-The sole purpose of a Fork ECIP is to join a block number (activation block) with a set of `n >= 1` Standards-Core type ECIPs containing protocol-facing changes. The document says "_These_ features will activate at _this_ moment."
++The sole purpose of a Fork ECIP is to join a block number (activation block) with a set of `n >= 1` Standards-Core type IPs containing protocol-facing changes. The document says "_These_ features will activate at _this_ moment."
+ 
+ 0. "Shell" format Fork ECIPs represent a clear, albeit abstract, idea: The blockchain's next hard fork.
+ 
+
+From a4c7dd1ec7a87705ba9af9ee0153b252c0e89e72 Mon Sep 17 00:00:00 2001
+From: meows <b5c6@protonmail.com>
+Date: Sun, 1 Dec 2019 08:54:35 -0500
+Subject: [PATCH 22/22] Note that Fork ECIPs can specify upgrades for multiple
+ chains
+
+---
+ _specs/ecip-1077.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1077.md b/_specs/ecip-1077.md
+index d526bd7..949dafa 100644
+--- a/_specs/ecip-1077.md
++++ b/_specs/ecip-1077.md
+@@ -76,7 +76,7 @@ This proposal specifies that all Fork ECIPs in `Draft` state or earlier should c
+ 
+ The sole purpose of a Fork ECIP is to join a block number (activation block) with a set of `n >= 1` Standards-Core type IPs containing protocol-facing changes. The document says "_These_ features will activate at _this_ moment."
+ 
+-0. "Shell" format Fork ECIPs represent a clear, albeit abstract, idea: The blockchain's next hard fork.
++0. "Shell" format Fork ECIPs represent a clear, albeit abstract, idea: One or many blockchains' next hard fork (eg. chains Ethereum Classic, Morden, Kotti).
+ 
+ 1. __Demanding fully-formed Fork ECIP Changeset proposal forces authors, editors, and reviewers to evaluate and document ECIP-set behavior and enables concrete discussion of feature sets as complete wholes.__ A Fork ECIP Changeset may represent a plurality of features, and so in order to be an _operable_ specification it should not represent an ambiguous set. Sets of ECIPs can have interoperative dependencies and outcomes; this causes a conceptual permutation and combination challenge when attempting to design a set of ECIPs for simultaneous inclusion. The intention of this specification is make these logical steps as explicit and document and accessible as possible, in order that good decisions can be made with a process of open and constructive collaboration, enabled by named and concrete options.
+ 
diff --git a/.gh-pullrequests/00224_560095572.json b/.gh-pullrequests/00224_560095572.json
new file mode 100644
index 0000000..9bded83
--- /dev/null
+++ b/.gh-pullrequests/00224_560095572.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560095572",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/224#issuecomment-560095572",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/224",
+    "id": 560095572,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDA5NTU3Mg==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T11:29:23Z",
+    "updated_at": "2019-12-01T11:29:23Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "> If, say, a Fork ECIP specification is finalized (having been fully specified with Activation Block Number and Feature Set via a merged change set)... BUT subsequently a bug is found during testing causing a loss of confidence in sucessfully achieving the fork at the specified block number, then the Fork ECIP would want to be Deferred or Withdrawn or Rejected, and then eventually replaced with a new UNIQUE ECIP containing a revised Activation Block Number and possibly also Feature Set parameters.\r\n\r\nThis implies that as discussion and review and popularization of proposed specification change sets show narrowing in apparent probable outcomes (in the minds of developers and protocol-managing project owners) that material implementations should be underway and enduring analysis and testing so that adequate and informed block numbers and any specification parameter details can be shaped and inform the developing proposals. \r\n\r\nIn my mind this is a healthy approach: It encourages active and specification-participating research and design, prototype implementations, team coordination, and stakeholder outreach as a necessary part of the process of developing acceptable Fork ECIPs. This might work to facilitate and foster collaboration between teams and professional contexts and advocates and critics alike, while also hopefully continuing to build and prove rubrics for analysis and evaluation of proposals.\r\n\r\n[Rough consensus (wikipedia)](https://en.wikipedia.org/wiki/Rough_consensus) is [used](https://github.com/ethereumclassic/ECIPs/search?q=rough+consensus&unscoped_q=rough+consensus) in ECIP Meta specifications. From the Wikipedia article:\r\n\r\n> The phrase is often extended into the saying \"rough consensus and running code\"\r\n\r\nIn my mind, this proposal encourages a nudge in this direction, which I think has positive and constructive potential for framing our Fork ECIP processes.  ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560095572/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00224_560126046.json b/.gh-pullrequests/00224_560126046.json
new file mode 100644
index 0000000..2229d4c
--- /dev/null
+++ b/.gh-pullrequests/00224_560126046.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560126046",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/224#issuecomment-560126046",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/224",
+    "id": 560126046,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEyNjA0Ng==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T16:12:25Z",
+    "updated_at": "2019-12-01T16:12:25Z",
+    "author_association": "MEMBER",
+    "body": "I don't strongly oppose this, @meowsbits.\r\nWonder if we need to be this explicit?\r\n\r\nI like @shanejonas's suggestion here too, and think it might be enough:\r\nhttps://github.com/ethereumclassic/ECIPs/pull/221\r\n\r\nI am just a little wary of OVER constraint in reaction to a series of silly events which, were they to happen again, could just be headed off socially.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560126046/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00224_560129335.json b/.gh-pullrequests/00224_560129335.json
new file mode 100644
index 0000000..871780e
--- /dev/null
+++ b/.gh-pullrequests/00224_560129335.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560129335",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/224#issuecomment-560129335",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/224",
+    "id": 560129335,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEyOTMzNQ==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T16:41:39Z",
+    "updated_at": "2019-12-01T16:59:06Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "@bobsummerwill I understand your concern.\r\n\r\nHere's why I think being explicit is important:\r\n- One of the opposing argument sets that came up in this latest flurry is \"This is the way we've always done it\" vs. \"This is what the procedure should technically be\". __This attempts to _clarify_, not constrain__, a hopefully healthy and accessible pattern for collaboration. \r\n- All creative and especially collaborative constructive projects need constraints in order to structure and direct growth. This intends to serve that purpose, __offering a concrete structural framework within which _any_ specification proposals can fit__.\r\n  + With this, it __makes the process more accessible__ to newcomers/forgetful people/anyone, who won't have to be \"taught the wisdom of yore\" in ethereal Discord chats, and can instead find participation guidelines documented concretely. \r\n- `could just be headed off socially`. I agree that this is an optimistic and ideal scenario. But this ideal depends on good and available leadership and mutual collaborative attitudes, which can not be taken for granted in an intentionally decentralized an decentralizing community. __Relying on the availability of certain social dynamics and/or certain personalities in this space is a not a robust a system__. Do you imagine it would be _your_ job to guarantee elimination of \"silly\" social behavior? To squelch every potential conflict before it grows horns? \r\n- `a series of silly events `. This may be. But aside from \"silly\" bickering __we are now looking at a maybe-seriously-silly Fork specification__ (either 1061 or 1072) which potentially gives rise to [an important security flaw](https://github.com/ethereumclassic/ECIPs/issues/217#issuecomment-560102235), which arguably is, at least in part, __caused by a failure to consider the proposed set of included ECIPs as a whole__.\r\n\r\nIf we can accept this proposed collaboration pattern, what would the cost be of adopting it, versus continuing with tacit traditions? ",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560129335/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00224_560142429.json b/.gh-pullrequests/00224_560142429.json
new file mode 100644
index 0000000..67cc5d1
--- /dev/null
+++ b/.gh-pullrequests/00224_560142429.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560142429",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/224#issuecomment-560142429",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/224",
+    "id": 560142429,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0MjQyOQ==",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T18:40:31Z",
+    "updated_at": "2019-12-01T18:40:31Z",
+    "author_association": "MEMBER",
+    "body": "Great arguments, @meowsbits.\r\nMakes sense to me to clarify in this way.\r\nLet's do it.\r\nThanks for the extra thought process.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560142429/reactions",
+      "total_count": 1,
+      "+1": 1,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00228.json b/.gh-pullrequests/00228.json
new file mode 100644
index 0000000..3a26c10
--- /dev/null
+++ b/.gh-pullrequests/00228.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/228",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/228/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/228/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/228/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/228",
+    "id": 530767384,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3MzUyNjI2",
+    "number": 228,
+    "title": "Fix Dexaran email in ECIP-1052 so web view is clean",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2019-12-01T17:45:33Z",
+    "updated_at": "2019-12-02T11:39:24Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/228",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/228",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/228.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/228.patch"
+    },
+    "body": "",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/228/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00228.patch b/.gh-pullrequests/00228.patch
new file mode 100644
index 0000000..c4373e1
--- /dev/null
+++ b/.gh-pullrequests/00228.patch
@@ -0,0 +1,22 @@
+From 955319c96bcb0614963c179422ba5936fa5deecc Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Sun, 1 Dec 2019 09:44:57 -0800
+Subject: [PATCH] Fix Dexaran email in ECIP-1052 so web view is clean.
+
+---
+ _specs/ecip-1052.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1052.md b/_specs/ecip-1052.md
+index 6bc89bc..7d942c7 100644
+--- a/_specs/ecip-1052.md
++++ b/_specs/ecip-1052.md
+@@ -4,7 +4,7 @@ ecip: 1052
+ title: Smart-contract Security Auditing core
+ status: Draft
+ type: Meta
+-author: Dexaran, dexaran@ethereumclassic.org
++Author: Dexaran (@dexaran)
+ created: 2018-12-31
+ ---
+ 
diff --git a/.gh-pullrequests/00228_560359844.json b/.gh-pullrequests/00228_560359844.json
new file mode 100644
index 0000000..fe6460d
--- /dev/null
+++ b/.gh-pullrequests/00228_560359844.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560359844",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/228#issuecomment-560359844",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/228",
+    "id": 560359844,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDM1OTg0NA==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-02T11:39:24Z",
+    "updated_at": "2019-12-02T11:39:24Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Also, nitpicky, but I feel worth mentioning that modifying specification content to make \"web views clean\" (ie \"pretty\") is not a sufficient reason; better: Fix deprecated or invalid metadata.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560359844/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00229.json b/.gh-pullrequests/00229.json
new file mode 100644
index 0000000..8c2b1b7
--- /dev/null
+++ b/.gh-pullrequests/00229.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/229",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/229/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/229/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/229/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/229",
+    "id": 530769967,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3MzU0MzE5",
+    "number": 229,
+    "title": "Reject ECIP-1051 \"Ethereum Classic Treasury system\"",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2019-12-01T18:06:24Z",
+    "updated_at": "2019-12-02T11:42:15Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/229",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/229",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/229.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/229.patch"
+    },
+    "body": "There has been no work on this proposal (or the earlier IOHK treasury proposal).\r\nThere is broad consensus that changing the block rewards to add treasury model is unacceptable.\r\nThe Monetary Policy (ECIP-1017) defines the ETC system and gives multi-decade certainty to all ETC ecosystem participants.\r\n\r\nIf we need to have a discussion of this on ETC Core Developers call then we should.\r\nAnd then Reject it.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/229/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00229.patch b/.gh-pullrequests/00229.patch
new file mode 100644
index 0000000..d1ed01d
--- /dev/null
+++ b/.gh-pullrequests/00229.patch
@@ -0,0 +1,28 @@
+From 40b06dbb1e26911a8d32fcc5af0813da3d52bbfa Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Sun, 1 Dec 2019 10:05:20 -0800
+Subject: [PATCH] Reject ECIP-1051 "Ethereum Classic Treasury system".
+
+There has been no work on this proposal (or the earlier IOHK treasury proposal).
+There is broad consensus that changing the block rewards to add treasury model is unacceptable.
+The Monetary Policy (ECIP-1017) defines the ETC system and gives multi-decade certainty to all ETC ecosystem participants.
+
+If we need to have a discussion of this on ETC Core Developers call then we should.
+And then Reject it.
+---
+ _specs/ecip-1051.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1051.md b/_specs/ecip-1051.md
+index 1a64aaf..d14889b 100644
+--- a/_specs/ecip-1051.md
++++ b/_specs/ecip-1051.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1051
+ title: Ethereum Classic Treasury system
+-status: Draft
++status: Rejected
+ type: Standards Track
+ category: Core
+ author: Dexaran (@dexaran)
diff --git a/.gh-pullrequests/00229_560360690.json b/.gh-pullrequests/00229_560360690.json
new file mode 100644
index 0000000..5145936
--- /dev/null
+++ b/.gh-pullrequests/00229_560360690.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560360690",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/229#issuecomment-560360690",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/229",
+    "id": 560360690,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDM2MDY5MA==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-02T11:42:14Z",
+    "updated_at": "2019-12-02T11:42:14Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "I would like to Reject it as well. Do not feel it is worth discussing in any meeting.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560360690/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00230.json b/.gh-pullrequests/00230.json
new file mode 100644
index 0000000..5f79963
--- /dev/null
+++ b/.gh-pullrequests/00230.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/230",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/230/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/230/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/230/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/230",
+    "id": 530770851,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3MzU0ODk5",
+    "number": 230,
+    "title": "Reject ECIP-1057 \"Cold Staking\"",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2019-12-01T18:13:07Z",
+    "updated_at": "2019-12-02T11:52:58Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/230",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/230",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/230.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/230.patch"
+    },
+    "body": "Other than Dexaran himself, there is no support for this proposal with the ETC ecosystem.\r\nProposals of this kind (like PoolTogether on ETH - https://www.pooltogether.com/) can happen just fine with no need for consensus across the ecosystem.\r\n\r\nI propose we Reject this proposal.   It could be passed as Informational, I suppose, but there is really no need for there to be an ECIP for this application level proposal.\r\n\r\nEven at application level, you would not need/want an ECIP for this until there were multiple implementations and this was become an architectural best practice.\r\n\r\nBest, I think, to reject.    A new ECBP could be written which generalized the pattern and that might be accepted.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/230/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00230.patch b/.gh-pullrequests/00230.patch
new file mode 100644
index 0000000..aed3eaa
--- /dev/null
+++ b/.gh-pullrequests/00230.patch
@@ -0,0 +1,30 @@
+From a12b0eeb881a60946f4d4ee23309926af0eecc9b Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Sun, 1 Dec 2019 10:12:44 -0800
+Subject: [PATCH] Reject ECIP-1057 "Cold Staking"
+
+Other than Dexaran himself, there is no support for this proposal with the ETC ecosystem.
+Proposals of this kind (like PoolTogether on ETH - https://www.pooltogether.com/) can happen just fine with no need for consensus across the ecosystem.
+
+I propose we Reject this proposal.   It could be passed as Informational, I suppose, but there is really no need for there to be an ECIP for this application level proposal.
+
+Even at application level, you would not need/want an ECIP for this until there were multiple implementations and this was become an architectural best practice.
+
+Best, I think, to reject.    A new ECBP could be written which generalized the pattern and that might be accepted.
+---
+ _specs/ecip-1057.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1057.md b/_specs/ecip-1057.md
+index 51b5b9f..a05e0c9 100644
+--- a/_specs/ecip-1057.md
++++ b/_specs/ecip-1057.md
+@@ -4,7 +4,7 @@ ecip: 1057
+ title: Cold Staking
+ Author: Dexaran (@dexaran)
+ discussions-To: https://github.com/ethereumclassic/ECIPs/issues/65
+-status: Draft
++status: Rejected
+ type: Standards Track
+ category: Core
+ created: 2019-03-31
diff --git a/.gh-pullrequests/00230_560363971.json b/.gh-pullrequests/00230_560363971.json
new file mode 100644
index 0000000..cbcd4dc
--- /dev/null
+++ b/.gh-pullrequests/00230_560363971.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560363971",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/230#issuecomment-560363971",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/230",
+    "id": 560363971,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDM2Mzk3MQ==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-02T11:52:58Z",
+    "updated_at": "2019-12-02T11:52:58Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "I am OK Rejecting on grounds of insufficient (inoperable) specification and lacking acceptable reasoning, eg. \r\n\r\n> This numbers are empirically proven to be essential. \r\n> https://github.com/ethereumclassic/ECIPs/blob/master/_specs/ecip-1057.md#specification\r\n\r\n(Claiming that something has been empirically proven is insufficient; steps for reproduction must be provided, and best with respective reference data).",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560363971/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00231.json b/.gh-pullrequests/00231.json
new file mode 100644
index 0000000..ded837f
--- /dev/null
+++ b/.gh-pullrequests/00231.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/231",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/231/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/231/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/231/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/231",
+    "id": 530771739,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3MzU1NTMx",
+    "number": 231,
+    "title": "Reject ECIP-1052 \"Smart-contract Security Auditing core\"",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 1,
+    "created_at": "2019-12-01T18:18:52Z",
+    "updated_at": "2019-12-02T11:59:22Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/231",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/231",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/231.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/231.patch"
+    },
+    "body": "This requires the Treasury.\r\nBoth the Treasury and this Auditing proposal on top run counter to ECIP-1017 monetary policy.\r\n\r\nAuditing is a good idea, but should not be centralized into the block rewards.\r\n\r\nThis runs counter to ETC philosophy and principles and should be rejected.\r\n\r\nPerhaps this is raised in an ETC Core Developers call, and formally rejected?",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/231/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00231.patch b/.gh-pullrequests/00231.patch
new file mode 100644
index 0000000..54f4d18
--- /dev/null
+++ b/.gh-pullrequests/00231.patch
@@ -0,0 +1,30 @@
+From 94e14442581886c3652bca31a2ddb3ec75c75a27 Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Sun, 1 Dec 2019 10:16:11 -0800
+Subject: [PATCH] Reject ECIP-1052 "Smart-contract Security Auditing core"
+
+This requires the Treasury.
+Both the Treasury and this Auditing proposal on top run counter to ECIP-1017 monetary policy.
+
+Auditing is a good idea, but should not be centralized into the block rewards.
+
+This runs counter to ETC philosophy and principles and should be rejected.
+
+Perhaps this is raised in an ETC Core Developers call, and formally rejected?
+---
+ _specs/ecip-1052.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1052.md b/_specs/ecip-1052.md
+index 6bc89bc..b279c53 100644
+--- a/_specs/ecip-1052.md
++++ b/_specs/ecip-1052.md
+@@ -2,7 +2,7 @@
+ lang: en
+ ecip: 1052
+ title: Smart-contract Security Auditing core
+-status: Draft
++status: Rejected
+ type: Meta
+ author: Dexaran, dexaran@ethereumclassic.org
+ created: 2018-12-31
diff --git a/.gh-pullrequests/00231_560365591.json b/.gh-pullrequests/00231_560365591.json
new file mode 100644
index 0000000..049d73b
--- /dev/null
+++ b/.gh-pullrequests/00231_560365591.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560365591",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/231#issuecomment-560365591",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/231",
+    "id": 560365591,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDM2NTU5MQ==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-02T11:58:10Z",
+    "updated_at": "2019-12-02T11:59:22Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Agree to Reject on grounds of centralized system services. Don't want to spend any time on it at any meeting.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560365591/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00232.json b/.gh-pullrequests/00232.json
new file mode 100644
index 0000000..7b02e23
--- /dev/null
+++ b/.gh-pullrequests/00232.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/232",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/232/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/232/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/232/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/232",
+    "id": 530771823,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3MzU1NTk0",
+    "number": 232,
+    "title": "Move ERC-223 token standard to Last Call, on its path to Accepted and then Final.",
+    "user": {
+      "login": "bobsummerwill",
+      "id": 3788156,
+      "node_id": "MDQ6VXNlcjM3ODgxNTY=",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/3788156?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/bobsummerwill",
+      "html_url": "https://github.com/bobsummerwill",
+      "followers_url": "https://api.github.com/users/bobsummerwill/followers",
+      "following_url": "https://api.github.com/users/bobsummerwill/following{/other_user}",
+      "gists_url": "https://api.github.com/users/bobsummerwill/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/bobsummerwill/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/bobsummerwill/subscriptions",
+      "organizations_url": "https://api.github.com/users/bobsummerwill/orgs",
+      "repos_url": "https://api.github.com/users/bobsummerwill/repos",
+      "events_url": "https://api.github.com/users/bobsummerwill/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/bobsummerwill/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 2,
+    "created_at": "2019-12-01T18:19:18Z",
+    "updated_at": "2019-12-02T12:06:32Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/232",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/232",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/232.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/232.patch"
+    },
+    "body": "This token standard is being used in the real world.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/232/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00232.patch b/.gh-pullrequests/00232.patch
new file mode 100644
index 0000000..317a842
--- /dev/null
+++ b/.gh-pullrequests/00232.patch
@@ -0,0 +1,26 @@
+From 33298b3b18e5b77211aa690c7e3b6da16d549fe0 Mon Sep 17 00:00:00 2001
+From: Bob Summerwill <bob@summerwill.net>
+Date: Sun, 1 Dec 2019 10:18:22 -0800
+Subject: [PATCH] Move ERC-223 token standard to Last Call, on its path to
+ Accepted and then Final. This token standard is being used in the real world.
+
+---
+ _specs/ecip-1021.md | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/_specs/ecip-1021.md b/_specs/ecip-1021.md
+index 3c94514..0a2a734 100644
+--- a/_specs/ecip-1021.md
++++ b/_specs/ecip-1021.md
+@@ -1,9 +1,9 @@
+ ---
+ lang: en
+ ecip: 1021
+-title: Token standard
++title: ERC-223 Token standard
+ Author: Dexaran (@dexaran)
+-status: Draft
++status: Last Call
+ type: Standards Track
+ category: ECBP
+ created: 2017-03-07
diff --git a/.gh-pullrequests/00232_560147680.json b/.gh-pullrequests/00232_560147680.json
new file mode 100644
index 0000000..0d01f7f
--- /dev/null
+++ b/.gh-pullrequests/00232_560147680.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560147680",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/232#issuecomment-560147680",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/232",
+    "id": 560147680,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE0NzY4MA==",
+    "user": {
+      "login": "TheEnthusiasticAs",
+      "id": 48069525,
+      "node_id": "MDQ6VXNlcjQ4MDY5NTI1",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/48069525?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/TheEnthusiasticAs",
+      "html_url": "https://github.com/TheEnthusiasticAs",
+      "followers_url": "https://api.github.com/users/TheEnthusiasticAs/followers",
+      "following_url": "https://api.github.com/users/TheEnthusiasticAs/following{/other_user}",
+      "gists_url": "https://api.github.com/users/TheEnthusiasticAs/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/TheEnthusiasticAs/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/TheEnthusiasticAs/subscriptions",
+      "organizations_url": "https://api.github.com/users/TheEnthusiasticAs/orgs",
+      "repos_url": "https://api.github.com/users/TheEnthusiasticAs/repos",
+      "events_url": "https://api.github.com/users/TheEnthusiasticAs/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/TheEnthusiasticAs/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-01T19:19:59Z",
+    "updated_at": "2019-12-01T19:19:59Z",
+    "author_association": "MEMBER",
+    "body": "I agree with it",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560147680/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00232_560368429.json b/.gh-pullrequests/00232_560368429.json
new file mode 100644
index 0000000..8547fd1
--- /dev/null
+++ b/.gh-pullrequests/00232_560368429.json
@@ -0,0 +1,43 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560368429",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/232#issuecomment-560368429",
+    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/232",
+    "id": 560368429,
+    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDM2ODQyOQ==",
+    "user": {
+      "login": "meowsbits",
+      "id": 45600330,
+      "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
+      "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/meowsbits",
+      "html_url": "https://github.com/meowsbits",
+      "followers_url": "https://api.github.com/users/meowsbits/followers",
+      "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
+      "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
+      "organizations_url": "https://api.github.com/users/meowsbits/orgs",
+      "repos_url": "https://api.github.com/users/meowsbits/repos",
+      "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/meowsbits/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "created_at": "2019-12-02T12:06:32Z",
+    "updated_at": "2019-12-02T12:06:32Z",
+    "author_association": "CONTRIBUTOR",
+    "body": "Rel https://github.com/ethereum/EIPs/issues/223",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/560368429/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00234.json b/.gh-pullrequests/00234.json
new file mode 100644
index 0000000..ee53f2f
--- /dev/null
+++ b/.gh-pullrequests/00234.json
@@ -0,0 +1,66 @@
+{
+    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/234",
+    "repository_url": "https://api.github.com/repos/ethereumclassic/ECIPs",
+    "labels_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/234/labels{/name}",
+    "comments_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/234/comments",
+    "events_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/234/events",
+    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/234",
+    "id": 531168084,
+    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3NjU2Mzgx",
+    "number": 234,
+    "title": "ECIP-1000: Clarify that @soc1c is a pesedo-anonymous ECIP editor",
+    "user": {
+      "login": "sorpaas",
+      "id": 6277322,
+      "node_id": "MDQ6VXNlcjYyNzczMjI=",
+      "avatar_url": "https://avatars3.githubusercontent.com/u/6277322?v=4",
+      "gravatar_id": "",
+      "url": "https://api.github.com/users/sorpaas",
+      "html_url": "https://github.com/sorpaas",
+      "followers_url": "https://api.github.com/users/sorpaas/followers",
+      "following_url": "https://api.github.com/users/sorpaas/following{/other_user}",
+      "gists_url": "https://api.github.com/users/sorpaas/gists{/gist_id}",
+      "starred_url": "https://api.github.com/users/sorpaas/starred{/owner}{/repo}",
+      "subscriptions_url": "https://api.github.com/users/sorpaas/subscriptions",
+      "organizations_url": "https://api.github.com/users/sorpaas/orgs",
+      "repos_url": "https://api.github.com/users/sorpaas/repos",
+      "events_url": "https://api.github.com/users/sorpaas/events{/privacy}",
+      "received_events_url": "https://api.github.com/users/sorpaas/received_events",
+      "type": "User",
+      "site_admin": false
+    },
+    "labels": [
+
+    ],
+    "state": "open",
+    "locked": false,
+    "assignee": null,
+    "assignees": [
+
+    ],
+    "milestone": null,
+    "comments": 0,
+    "created_at": "2019-12-02T14:35:07Z",
+    "updated_at": "2019-12-02T14:37:57Z",
+    "closed_at": null,
+    "author_association": "MEMBER",
+    "pull_request": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/234",
+      "html_url": "https://github.com/ethereumclassic/ECIPs/pull/234",
+      "diff_url": "https://github.com/ethereumclassic/ECIPs/pull/234.diff",
+      "patch_url": "https://github.com/ethereumclassic/ECIPs/pull/234.patch"
+    },
+    "body": "@soc1c has expressed that he does not intend that handle to be associated with his real name. This is to clarify in the ECIP that it's a pesedo-anonymous ECIP editor.",
+    "reactions": {
+      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/234/reactions",
+      "total_count": 0,
+      "+1": 0,
+      "-1": 0,
+      "laugh": 0,
+      "hooray": 0,
+      "confused": 0,
+      "heart": 0,
+      "rocket": 0,
+      "eyes": 0
+    }
+  }
\ No newline at end of file
diff --git a/.gh-pullrequests/00234.patch b/.gh-pullrequests/00234.patch
new file mode 100644
index 0000000..e85c30f
--- /dev/null
+++ b/.gh-pullrequests/00234.patch
@@ -0,0 +1,50 @@
+From 06ded04651d9ee7a8d4e3fac3c897d8b900f682c Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Mon, 2 Dec 2019 15:34:09 +0100
+Subject: [PATCH 1/2] Clarify that @soc1c is a pesedo-anonymous ECIP editor
+
+---
+ _specs/ecip-1000.md | 5 ++++-
+ 1 file changed, 4 insertions(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index b5b50dd..0309b6a 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -75,9 +75,12 @@ The current ECIP editors are:
+ * Wei Tang (@sorpaas)
+ * Isaac Ardis (@meowsbits)
+ * Cody Burns (@realcodywburns)
+-* Afri Schoedon (@soc1c)
+ * Yaz Khoury (@YazzyYaz)
+ 
++The following ECIP editors have decided to remain pesedo-anonymous, and we will only be refer to them using Github handles:
++
++* @soc1c
++
+ ## ECIP Editor Responsibilities & Workflow
+ 
+ ### Introduction
+
+From c8af042126a8eb8197210829a042cad014ba2434 Mon Sep 17 00:00:00 2001
+From: Wei Tang <hi@that.world>
+Date: Mon, 2 Dec 2019 15:37:56 +0100
+Subject: [PATCH 2/2] Update ecip-1000.md
+
+---
+ _specs/ecip-1000.md | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/_specs/ecip-1000.md b/_specs/ecip-1000.md
+index 0309b6a..a0b61fa 100644
+--- a/_specs/ecip-1000.md
++++ b/_specs/ecip-1000.md
+@@ -77,7 +77,7 @@ The current ECIP editors are:
+ * Cody Burns (@realcodywburns)
+ * Yaz Khoury (@YazzyYaz)
+ 
+-The following ECIP editors have decided to remain pesedo-anonymous, and we will only be refer to them using Github handles:
++The following ECIP editors have decided to remain pesedo-anonymous, and we will only be referring to them using Github handles:
+ 
+ * @soc1c
+ 
