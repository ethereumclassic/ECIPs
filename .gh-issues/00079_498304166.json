{
    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/498304166",
    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/79#issuecomment-498304166",
    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/79",
    "id": 498304166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODMwNDE2Ng==",
    "user": {
      "login": "phyro",
      "id": 157733,
      "node_id": "MDQ6VXNlcjE1NzczMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/157733?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phyro",
      "html_url": "https://github.com/phyro",
      "followers_url": "https://api.github.com/users/phyro/followers",
      "following_url": "https://api.github.com/users/phyro/following{/other_user}",
      "gists_url": "https://api.github.com/users/phyro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phyro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phyro/subscriptions",
      "organizations_url": "https://api.github.com/users/phyro/orgs",
      "repos_url": "https://api.github.com/users/phyro/repos",
      "events_url": "https://api.github.com/users/phyro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phyro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-03T15:25:06Z",
    "updated_at": "2019-06-03T19:49:09Z",
    "author_association": "MEMBER",
    "body": "I'm copying over the answer from @pyskell :\r\n\r\n> My opposition is the following:\r\n\r\n> 1. These rules can simply be applied to transaction validation rather than block validation, making it a soft fork rather than a hard fork.\r\n\r\n> 2. In practical terms this will make no difference, miners will download one of the clients that has these types of transactions excluded by default and future blocks will not contain any such transactions.\r\n> 3. It's vitally important to stick to pre-agreed rules when they're defined. In this case gas limit is a rule that governs computational size of transactions and there was no bound on physical data/contract size.\r\n> 4. There's precedent for these types of things in other cryptocurrencies, example: https://github.com/bitcoin/bitcoin/commit/6a4c196dd64da2fd33dc7ae77a8cdd3e4cf0eff1\r\n> 5. Whether this is a contract creation call or an internal contract call shouldn't matter, both types of transactions can simply be rejected from inclusion in a block if their `data` is greater than `maxCodeSize` (per geth's implementation). As per point 2 I believe most clients will update and enforce the soft fork.\r\n\r\n> Regardless I don't want to delay the Atlantis hard fork and apologize for the late comment.\r\n\r\nWhat are your thoughts regarding this?\r\nAs I mentioned in the previous thread, I'm still slightly more in favor for a hard cap, but we could try the soft fork solution to see if it catches on and we could do a hard cap later on if needed. Assuming @pyskell  solution has no attack vectors and that the miners do adopt it, how much harder does this make it for devs?\r\n\r\ncc: @tzdybal @meowsbits @shanejonas @BelfordZ ,...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/498304166/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    }
  }